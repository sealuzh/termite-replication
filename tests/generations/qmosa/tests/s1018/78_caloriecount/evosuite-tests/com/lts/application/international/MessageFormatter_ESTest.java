/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 18:33:07 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.FilterInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "-8Cjc$";
      Object object0 = new Object();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.temp();
      Object object5 = new Object();
      String string1 = "RV";
      StringReader stringReader0 = new StringReader("Q60)>D");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("i~^f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.069026915173973
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      StringReader stringReader0 = new StringReader("LnJ*)1");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.temp();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "resources.messages.standard";
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "com.lts.application.prompt.startup.errorLoadingProperties", objectArray0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "LnJ*)1", propertyResourceBundle0, objectArray0[0], stringReader0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "com.lts.application.prompt.startup.errorLoadingProperties");
      applicationException2.getCause();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", applicationException2);
      messageFormatter0.getMessage("LnJ*)1", (Object) "LnJ*)1", (Object) messageFormatter_LoadBundleError0);
      propertyResourceBundle0.getLocale();
      Object object1 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[0] = (Object) (byte) (-101);
      objectArray1[1] = (Object) stringReader0;
      Object object2 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'M45ZidyTBu@]");
      messageFormatter0.formatMessage("LnJ*)1", objectArray1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", objectArray0[0], object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte byte0 = (byte)58;
      StringReader stringReader0 = new StringReader("LnJ*)1");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      propertyResourceBundle0.getString("LnJ*)1");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = "'x45ZidyTBu]]";
      Object[] objectArray0 = new Object[9];
      objectArray0[3] = (Object) stringReader0;
      Object object2 = new Object();
      objectArray0[2] = object2;
      objectArray0[3] = object0;
      messageFormatter0.getMessage("LnJ*)1");
      objectArray0[5] = object0;
      objectArray0[7] = (Object) stringReader0;
      try { 
        messageFormatter0.formatMessage("'x45ZidyTBu]]", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("9k");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      messageFormatter0.addBundle((ResourceBundle) null);
      MockThrowable mockThrowable0 = new MockThrowable("critical.com.lts.aplication.errors.resourceBundle.load", applicationException0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", applicationException0);
      linkedList0.add(messageFormatter_LoadBundleError0);
      messageFormatter0.createLoadException(linkedList0);
      String string0 = "com.lts.application.international.MessageFormatter$LoadBundleError";
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("com.lts.application.international.MessageFormatter$LoadBundleError");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-101);
      byteArray0[2] = (byte)49;
      String string0 = "LnJ*)1";
      StringReader stringReader0 = new StringReader("LnJ*)1");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.temp();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) propertyResourceBundle0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) stringReader0;
      messageFormatter0.getMessage("LnJ*)1", objectArray0);
      Object object1 = new Object();
      Object object2 = new Object();
      String string1 = "'x5ZcdyTBu]]";
      Object[] objectArray1 = new Object[8];
      objectArray1[0] = (Object) (byte)0;
      objectArray1[1] = (Object) stringReader0;
      Object object3 = new Object();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'x5ZcdyTBu]]");
      objectArray1[2] = object3;
      objectArray1[2] = object1;
      objectArray1[4] = (Object) (byte)49;
      objectArray1[5] = object1;
      objectArray1[6] = (Object) (byte)0;
      // Undeclared exception!
      try { 
        stringReader0.mark((byte) (-101));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "ci";
      messageFormatter0.addBundle((ResourceBundle) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("ci", (Object) "ci", object0, (Object) "ci");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.062711125700289
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-101);
      byteArray0[2] = (byte)49;
      StringReader stringReader0 = new StringReader("LnJ*)1");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.temp();
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      Object object1 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) (byte)0;
      objectArray0[1] = (Object) stringReader0;
      Object object2 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'x5ZcdyTBu]]");
      objectArray0[2] = object2;
      objectArray0[2] = object0;
      objectArray0[4] = (Object) (byte)49;
      objectArray0[5] = object0;
      objectArray0[6] = (Object) (byte)0;
      objectArray0[7] = (Object) stringReader0;
      messageFormatter0.getMessage("LnJ*)1", (Object) null, objectArray0[0], objectArray0[6]);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("'x5ZcdyTBu]]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "-8Cjc$";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = classLoader0.getParent();
      messageFormatter0.listResources("-8Cjc$", classLoader1);
      messageFormatter0.addBundle((ResourceBundle) null);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      messageFormatter0.listResources("-8Cjc$", classLoader2);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      Object[] objectArray0 = new Object[2];
      classLoader3.getParent();
      objectArray0[0] = (Object) classLoader3;
      objectArray0[1] = object3;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("-8Cjc$", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.temp();
      Object object5 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      Object object6 = new Object();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "i~^f";
      objectArray0[1] = object2;
      objectArray0[2] = (Object) "-8Cjc$";
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) "i~^f";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("`u", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "-8Cjc$";
      Object object0 = new Object();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.temp();
      Object object5 = new Object();
      String string1 = "RV";
      String string2 = "Q60)>D";
      StringReader stringReader0 = new StringReader("Q60)>D");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      propertyResourceBundle0.getBaseBundleName();
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "-8Cjc$", "RV", (Object) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("RV", (Object) propertyResourceBundle0, (Object) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-101);
      StringReader stringReader0 = new StringReader("LnJ*)1");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      Object object1 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) stringReader0;
      Object object2 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'M45ZidyTBu@]");
      messageFormatter0.formatMessage("LnJ*)1", objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("com.lts.application.prompt.startup.continueDespiteCommandLineError");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader1.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader1.clearAssertionStatus();
      classLoader1.setPackageAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader1.setDefaultAssertionStatus(false);
      classLoader1.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2096353088));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      pipedOutputStream1.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      pipedOutputStream2.close();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      pipedOutputStream5.flush();
      pipedOutputStream0.close();
      pipedOutputStream5.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      pipedInputStream0.mark((-1642));
      pipedOutputStream5.connect(pipedInputStream0);
      pipedOutputStream0.close();
      Object[] objectArray0 = new Object[0];
      List list0 = MessageFormatter.buildList(objectArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      pipedOutputStream5.close();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream7 = new PipedOutputStream();
      pipedOutputStream7.flush();
      pipedOutputStream1.close();
      pipedOutputStream2.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream7, 8);
      pipedInputStream1.markSupported();
      PipedInputStream pipedInputStream2 = new PipedInputStream(2093);
      PipedInputStream pipedInputStream3 = new PipedInputStream(pipedOutputStream6);
      pipedInputStream2.close();
      PipedInputStream pipedInputStream4 = new PipedInputStream(pipedOutputStream1);
      pipedInputStream4.mark((-638));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("x:w}e4dTS(#rY", false);
      classLoader0.setPackageAssertionStatus(" )xem/}", true);
      classLoader0.setClassAssertionStatus("+Ncx4iGAI:q", true);
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.pollLast();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer((-198));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-198));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((-198));
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-198));
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(6);
      integerArray0[6] = integer6;
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList1.add((String) null);
      linkedList0.add((String) null);
      linkedList1.add((String) null);
      linkedList0.add((String) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = new Locale(";C$$jpc?PK", "KvmoQb.?.78");
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter1.initializeResourceBundle((List<String>) linkedList0, (List<String>) linkedList1, locale0, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.pollLast();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer((-198));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-198));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1147);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((-198));
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(1147);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(6);
      integerArray0[6] = integer6;
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList1.add((String) null);
      linkedList0.add((String) null);
      linkedList1.add((String) null);
      linkedList0.add((String) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = new Locale(";C$$jpc?PK", "KvmoQb.?.78");
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter1.initializeResourceBundle((List<String>) linkedList0, (List<String>) linkedList1, locale0, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.pollLast();
      linkedList0.add((String) null);
      linkedList1.parallelStream();
      linkedList1.add("&");
      linkedList1.spliterator();
      linkedList1.add("com.lts.util.deepcopy.DeepCopyException");
      linkedList1.add("&");
      linkedList0.add("YC]d7");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "java.properties", "java.properties", "java.properties");
      messageFormatter0.myLastException = (Throwable) applicationException0;
      applicationException0.fillInStackTrace();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.lts.util.CollectionUtils$2");
      messageFormatter0.getLastException();
      applicationException0.initialize("pg}dNVbJ)[;;nbQSAE", messageFormatter0.DEFAULT_BUNDLE_PATH);
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      messageFormatter0.listToString(list0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("critcal.error.unknown", "v{|=l[yo(yw1jfG'ny");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      pipedOutputStream1.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 11);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-2096353076));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      Predicate<String> predicate3 = predicate0.negate();
      Predicate<String> predicate4 = predicate1.negate();
      Predicate<String> predicate5 = predicate0.and(predicate2);
      Predicate<String> predicate6 = predicate0.and(predicate3);
      Predicate<String> predicate7 = predicate6.or(predicate2);
      Predicate<String> predicate8 = predicate7.and(predicate2);
      predicate2.test(predicate7);
      Predicate<String> predicate9 = predicate8.negate();
      Predicate<String> predicate10 = predicate5.negate();
      Predicate<String> predicate11 = predicate1.negate();
      Predicate<String> predicate12 = predicate11.negate();
      Predicate<String> predicate13 = predicate1.negate();
      Predicate<String> predicate14 = predicate6.and(predicate13);
      Predicate<String> predicate15 = predicate3.and(predicate2);
      Predicate<String> predicate16 = predicate12.negate();
      Predicate<String> predicate17 = predicate1.negate();
      predicate8.negate();
      Predicate<String> predicate18 = predicate14.and(predicate16);
      Predicate<String> predicate19 = predicate15.and(predicate10);
      Predicate<String> predicate20 = predicate4.or(predicate8);
      Predicate<String> predicate21 = predicate1.or(predicate6);
      predicate10.test("+!PA]G");
      Predicate<String> predicate22 = predicate18.or(predicate0);
      predicate20.or(predicate19);
      predicate18.negate();
      predicate21.negate();
      predicate15.and(predicate22);
      predicate2.negate();
      predicate19.and(predicate9);
      predicate17.negate();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("lBak44X]H", false);
      classLoader1.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader1.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader1.setPackageAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader1.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader1.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader1.getParent();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("app.fi4es.lastDirectory", true);
      classLoader0.getParent();
      classLoader1.setClassAssertionStatus("58PGLg<OqC", false);
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer((-2096353080));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      Predicate<String> predicate3 = predicate0.negate();
      Predicate<String> predicate4 = predicate0.and(predicate2);
      Predicate<String> predicate5 = predicate3.and(predicate4);
      Predicate<String> predicate6 = predicate0.and(predicate3);
      Predicate<String> predicate7 = predicate6.or(predicate2);
      Predicate<String> predicate8 = predicate7.and(predicate2);
      predicate2.test(predicate7);
      Predicate<String> predicate9 = predicate1.or(predicate6);
      Predicate<String> predicate10 = predicate9.or(predicate6);
      predicate1.negate();
      Predicate<String> predicate11 = predicate1.negate();
      predicate10.and(predicate8);
      Predicate<String> predicate12 = predicate3.and(predicate10);
      Predicate.isEqual((Object) predicate2);
      Predicate<String> predicate13 = predicate12.or(predicate11);
      predicate13.or(predicate8);
      Predicate<String> predicate14 = predicate11.or(predicate6);
      predicate1.or(predicate9);
      Predicate<Object> predicate15 = predicate2.negate();
      predicate14.or(predicate12);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) predicate5;
      objectArray0[1] = (Object) predicate7;
      objectArray0[2] = (Object) predicate15;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) predicate1;
      Object object1 = new Object();
      objectArray0[5] = object1;
      StringReader stringReader0 = new StringReader("i");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("com.lts.application.errors.RemovingTempFiles", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list0);
      resourceBundle_Control0.getFormats("resources.messages.standard");
      Locale locale0 = Locale.CANADA;
      Object[] objectArray0 = null;
      String string0 = "}@k}LMgYz0CrEfW;";
      StringReader stringReader0 = new StringReader("}@k}LMgYz0CrEfW;");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("}@k}LMgYz0CrEfW;", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      stringReader0.ready();
      ApplicationException applicationException0 = new ApplicationException("java.properties", locale0, ", ");
      stringReader0.close();
      String string1 = "pO8OM}B1zpQ";
      // Undeclared exception!
      try { 
        ResourceBundle.getBundle("java.properties", locale0, resourceBundle_Control0);
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name java.properties, locale en_CA
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("4d", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = object1;
      objectArray1[1] = object1;
      Object object6 = new Object();
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = object6;
      objectArray1[8] = object5;
      objectArray2[2] = object3;
      Object object7 = new Object();
      objectArray2[3] = object7;
      objectArray0[1] = object0;
      objectArray2[5] = object3;
      Object[] objectArray3 = new Object[8];
      objectArray3[0] = object0;
      objectArray3[1] = object1;
      Object object8 = new Object();
      objectArray3[2] = object8;
      objectArray3[3] = object2;
      objectArray3[4] = object3;
      objectArray3[5] = object1;
      objectArray3[6] = object5;
      objectArray3[7] = object6;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("b|zg/:Jz6E*H_P?H])", objectArray1, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setClassAssertionStatus("Error", false);
      classLoader0.setPackageAssertionStatus(".", true);
      classLoader1.clearAssertionStatus();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.clearAssertionStatus();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader3 = classLoader2.getParent();
      classLoader3.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader2.getParent();
      Locale locale0 = Locale.GERMAN;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("Error", (Object) classLoader3, (Object) ".", (Object) ".*@_.vd1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      ApplicationException applicationException0 = new ApplicationException("TkPG:6[rQz2<h", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      linkedList0.add(applicationException0);
      LinkedList<ApplicationException> linkedList1 = new LinkedList<ApplicationException>(linkedList0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList1, (List) linkedList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.lts.application.ApplicationException cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "resources.messages.standard");
      StringReader stringReader0 = new StringReader("critical.com.lts.application.errors.resourceBundle.load");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, "resources.messages.standard", applicationException0, propertyResourceBundle0, "java.class");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("java.class", applicationException1);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "7U", messageFormatter_LoadBundleError0);
      messageFormatter0.myLastException = (Throwable) applicationException2;
      ApplicationException applicationException3 = new ApplicationException("error processing file ", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      applicationException3.getSuppressed();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedOutputStream1.close();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream2.close();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      pipedOutputStream5.flush();
      pipedOutputStream0.close();
      pipedOutputStream5.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      pipedInputStream0.mark((-1642));
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      pipedOutputStream6.connect(pipedInputStream0);
      pipedOutputStream4.close();
      pipedOutputStream1.close();
      PipedOutputStream pipedOutputStream7 = new PipedOutputStream();
      pipedOutputStream7.flush();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("Lookup failed for key = ", (Object) null, (Object) pipedOutputStream6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer((-2096353080));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      predicate2.and(predicate2);
      Predicate<String> predicate3 = predicate0.negate();
      Predicate<String> predicate4 = predicate0.or(predicate2);
      Predicate<String> predicate5 = predicate0.and(predicate2);
      Predicate<String> predicate6 = predicate0.and(predicate3);
      Predicate<String> predicate7 = predicate6.or(predicate2);
      Predicate<String> predicate8 = predicate5.negate();
      predicate2.test(predicate7);
      Predicate<String> predicate9 = predicate8.negate();
      Predicate<String> predicate10 = predicate6.negate();
      predicate1.negate();
      Predicate<String> predicate11 = predicate4.negate();
      Predicate<String> predicate12 = predicate6.and(predicate9);
      Predicate<String> predicate13 = predicate3.and(predicate2);
      Predicate<String> predicate14 = predicate0.negate();
      Predicate<String> predicate15 = predicate11.and(predicate3);
      Predicate<String> predicate16 = predicate1.negate();
      Predicate<String> predicate17 = predicate12.and(predicate15);
      Predicate<String> predicate18 = predicate10.and(predicate16);
      predicate15.test("Y!&v+F=]GDB+4Ipg");
      Predicate<String> predicate19 = predicate14.and(predicate10);
      Predicate<String> predicate20 = predicate18.negate();
      Predicate<String> predicate21 = predicate1.or(predicate6);
      Predicate<String> predicate22 = predicate17.or(predicate0);
      predicate20.or(predicate19);
      predicate21.negate();
      predicate13.and(predicate22);
      predicate2.negate();
      predicate6.and(predicate19);
      predicate18.and(predicate9);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer((-2096353085));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      Predicate<String> predicate3 = predicate0.negate();
      predicate0.or(predicate2);
      predicate0.and(predicate2);
      Predicate<String> predicate4 = predicate0.negate();
      Predicate<String> predicate5 = predicate3.and(predicate4);
      Predicate<String> predicate6 = predicate5.or(predicate2);
      Predicate<String> predicate7 = predicate6.and(predicate2);
      predicate2.test(predicate6);
      Predicate<String> predicate8 = predicate7.negate();
      Predicate<String> predicate9 = predicate0.negate();
      Predicate<String> predicate10 = predicate1.negate();
      Predicate<String> predicate11 = predicate10.negate();
      Predicate<String> predicate12 = predicate7.negate();
      Predicate<String> predicate13 = predicate5.and(predicate12);
      Predicate<String> predicate14 = predicate3.and(predicate2);
      Predicate<String> predicate15 = predicate11.negate();
      Predicate<String> predicate16 = predicate1.negate();
      Predicate<String> predicate17 = predicate13.and(predicate15);
      Predicate<String> predicate18 = predicate14.and(predicate9);
      Predicate<String> predicate19 = predicate1.or(predicate5);
      predicate9.test("I#(");
      Predicate<String> predicate20 = predicate17.or(predicate0);
      predicate6.or(predicate18);
      predicate19.negate();
      predicate14.and(predicate20);
      predicate2.negate();
      predicate2.and(predicate2);
      predicate14.or(predicate1);
      predicate2.negate();
      predicate16.and(predicate8);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("5");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 5
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<FilterInputStream> linkedList0 = new LinkedList<FilterInputStream>();
      byte[] byteArray0 = new byte[3];
      linkedList0.clear();
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)14;
      messageFormatter0.getLastException();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader1.setClassAssertionStatus((String) null, true);
      classLoader1.setPackageAssertionStatus((String) null, true);
      ClassLoader classLoader3 = classLoader0.getParent();
      ClassLoader classLoader4 = classLoader0.getParent();
      classLoader4.setDefaultAssertionStatus(true);
      classLoader3.setPackageAssertionStatus((String) null, true);
      classLoader3.setDefaultAssertionStatus(false);
      classLoader4.getParent();
      classLoader3.getParent();
      classLoader3.setClassAssertionStatus("Kw", false);
      classLoader0.getParent();
      classLoader3.setClassAssertionStatus((String) null, false);
      classLoader3.setDefaultAssertionStatus(false);
      classLoader1.getParent();
      classLoader0.clearAssertionStatus();
      ClassLoader classLoader5 = classLoader0.getParent();
      classLoader1.clearAssertionStatus();
      classLoader2.clearAssertionStatus();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader6 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader7 = classLoader0.getParent();
      classLoader7.getParent();
      classLoader6.setClassAssertionStatus((String) null, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      classLoader6.setClassAssertionStatus((String) null, true);
      classLoader5.getParent();
      classLoader5.getParent();
      ClassLoader.getSystemClassLoader();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      messageFormatter0.listToString(list0);
      Locale locale0 = Locale.GERMAN;
      assertEquals("de", locale0.getLanguage());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer((-2096353080));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      Predicate<String> predicate3 = predicate0.negate();
      Predicate<String> predicate4 = predicate0.or(predicate2);
      Predicate<String> predicate5 = predicate0.and(predicate3);
      Predicate<String> predicate6 = predicate5.or(predicate2);
      Predicate<String> predicate7 = predicate6.and(predicate2);
      predicate2.test(predicate6);
      Predicate<String> predicate8 = predicate7.negate();
      Predicate<String> predicate9 = predicate3.negate();
      Predicate<String> predicate10 = predicate1.negate();
      Predicate<String> predicate11 = predicate5.and(predicate8);
      predicate11.and(predicate6);
      Predicate<String> predicate12 = predicate3.and(predicate2);
      Predicate<String> predicate13 = predicate4.negate();
      Predicate<String> predicate14 = predicate10.and(predicate3);
      Predicate<String> predicate15 = predicate7.negate();
      Predicate<String> predicate16 = predicate11.and(predicate14);
      Predicate<String> predicate17 = predicate13.and(predicate9);
      Predicate<String> predicate18 = predicate13.or(predicate7);
      Predicate<String> predicate19 = predicate1.or(predicate5);
      Predicate<String> predicate20 = predicate16.or(predicate0);
      predicate10.negate();
      Predicate<String> predicate21 = predicate18.or(predicate17);
      predicate19.negate();
      predicate12.and(predicate20);
      predicate2.negate();
      predicate13.negate();
      Predicate<Object> predicate22 = predicate2.and(predicate2);
      predicate21.negate();
      predicate22.negate();
      predicate15.and(predicate8);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString(linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer((-2096353080));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      Predicate<String> predicate3 = predicate0.negate();
      Predicate<String> predicate4 = predicate0.or(predicate2);
      Predicate<String> predicate5 = predicate0.and(predicate3);
      Predicate<String> predicate6 = predicate5.or(predicate2);
      predicate1.or(predicate4);
      Predicate<String> predicate7 = predicate6.and(predicate2);
      predicate2.test(predicate6);
      Predicate<String> predicate8 = predicate7.negate();
      Predicate<String> predicate9 = predicate3.negate();
      Predicate<String> predicate10 = predicate1.negate();
      Predicate<String> predicate11 = predicate5.and(predicate8);
      predicate11.and(predicate6);
      Predicate<String> predicate12 = predicate3.and(predicate2);
      Predicate<String> predicate13 = predicate4.negate();
      Predicate<String> predicate14 = predicate10.and(predicate3);
      Predicate<String> predicate15 = predicate7.negate();
      Predicate<String> predicate16 = predicate11.and(predicate14);
      Predicate<String> predicate17 = predicate13.and(predicate9);
      Predicate<String> predicate18 = predicate13.or(predicate7);
      Predicate<String> predicate19 = predicate1.or(predicate5);
      Predicate<String> predicate20 = predicate16.or(predicate0);
      predicate10.negate();
      predicate18.or(predicate17);
      predicate19.negate();
      predicate12.and(predicate20);
      predicate2.negate();
      predicate13.negate();
      Predicate<Object> predicate21 = predicate2.and(predicate2);
      predicate19.negate();
      predicate21.negate();
      predicate15.and(predicate8);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString(linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setClassAssertionStatus("4>.QVEUX!bqhEI?", true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setClassAssertionStatus("4>.QVEUX!bqhEI?", true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Integer integer0 = new Integer((-2096353080));
      Predicate<String> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<String> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate2.test(predicate0);
      Predicate<String> predicate3 = predicate0.negate();
      Predicate<String> predicate4 = predicate0.or(predicate2);
      Predicate<String> predicate5 = predicate0.and(predicate2);
      Predicate<String> predicate6 = predicate0.and(predicate3);
      Predicate<String> predicate7 = predicate6.or(predicate2);
      Predicate<String> predicate8 = predicate7.and(predicate2);
      predicate2.test(predicate7);
      Predicate<String> predicate9 = predicate8.negate();
      Predicate<String> predicate10 = predicate5.negate();
      predicate1.negate();
      Predicate<String> predicate11 = predicate1.negate();
      Predicate<String> predicate12 = predicate6.and(predicate9);
      Predicate<String> predicate13 = predicate3.and(predicate2);
      Predicate<String> predicate14 = predicate11.and(predicate3);
      Predicate<String> predicate15 = predicate1.negate();
      Predicate<String> predicate16 = predicate12.and(predicate14);
      Predicate<String> predicate17 = predicate13.and(predicate10);
      Predicate<String> predicate18 = predicate4.or(predicate8);
      Predicate<String> predicate19 = predicate1.or(predicate6);
      Predicate<String> predicate20 = predicate16.or(predicate0);
      predicate18.or(predicate17);
      predicate19.negate();
      predicate13.and(predicate20);
      predicate2.negate();
      predicate2.and(predicate2);
      predicate13.or(predicate1);
      predicate2.negate();
      predicate15.and(predicate9);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("5");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 5
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8742830984023096
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader1.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("lBak44X]H", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader1.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader1.setPackageAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader1.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader1.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader1.setClassAssertionStatus((String) null, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      classLoader1.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("lBak44X]H", false);
      classLoader0.setClassAssertionStatus("4>.QVEUX!bqhEI?", true);
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Locale locale0 = new Locale("4>.QVEUX!bqhEI?");
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRANCE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      List<String> list1 = ResourceBundle.Control.FORMAT_DEFAULT;
      List<String> list2 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list2, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list3 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      linkedList1.addAll((Collection<? extends String>) linkedList0);
      linkedList0.parallelStream();
      linkedList0.add("gBsfjh$kQpcM");
      linkedList1.add((String) null);
      linkedList1.add("DfA=XxA5^{*w|]");
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.pollLast();
      linkedList0.add("YC]d7");
      linkedList0.add((String) null);
      linkedList1.parallelStream();
      linkedList1.add("&");
      linkedList1.spliterator();
      linkedList1.add("com.lts.util.deepcopy.DeepCopyException");
      linkedList1.add("&");
      linkedList0.add("YC]d7");
      LinkedList<String> linkedList2 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.pollLast();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer((-198));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-198));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1147);
      integerArray0[2] = integer1;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((-198));
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(1147);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(6);
      integerArray0[6] = integer6;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedList1.parallelStream();
      linkedList1.add("");
      linkedList1.add("");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "}e&y~kF/zoM>g~#5i_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-l8Cjc$y");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-l8Cjc$y");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("W^j]c QeEj`0tD", "x 2T<&l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1, 2474);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "yyyy-MM-dd@HH:mm:ss";
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) "yyyy-MM-dd@HH:mm:ss";
      objectArray0[4] = (Object) messageFormatter0;
      objectArray0[5] = (Object) messageFormatter0;
      try { 
        messageFormatter0.getMessage("yyyy-MM-dd@HH:mm:ss", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setClassAssertionStatus("4>.QVEUX!bq,EIw", true);
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      List list1 = MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      assertEquals(1, list1.size());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus("lBaka4X]H", false);
      classLoader0.setClassAssertionStatus("4>.QVEUX!bq,EIw", true);
      List list0 = MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("9k");
      MockThrowable mockThrowable0 = new MockThrowable("critical.com.lts.application.errors.resourceBundle.load", applicationException0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
