/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 16:07:25 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.event.ContainerListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.AffineTransform;
import java.beans.PropertyChangeListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.ArrayList;
import java.util.EventListener;
import java.util.LinkedList;
import java.util.List;
import javax.swing.Box;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.JSplitPane;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.AncestorListener;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.LabelView;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaDetailProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoUpdateListener;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.date.SerialDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, (TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+q$OuYA5KDev>OY`6[q");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "((/d;vgN5(d?%`S");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G391[/O5T#$sttL]Y");
      System.setCurrentTimeMillis(708L);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 37);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K,y'c%Mz~T?t");
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setProcedure(1780);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(". Skipping FK constraint", "nextval ('", " tableName = ", "v:}f-]92", 1780, "random", 1780, (-1685), 14, (-63), "K,y'c%Mz~T?t", "random", 0, 2, "uR959^:Xm8");
      sQLAliasSchemaDetailProperties0.setSchemaName("INCREMENT");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("knAgS_^eJ$>]hhYK", " tableName = ", " tableName = ", ">/^}0;jEO2umN", (-4), "nextval ('", 1, (-4), (-3), 1111, "\" has no closing brace. Opening brace at position ", (String) null, (-4), 11, (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[7];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties1.setProcedure(2);
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(". Skipping FK constraint", "Hs=Q&D36@>3yd#D8", "random", "Cr{:WP.K!A+y", (-3), "Cr{:WP.K!A+y", 46, 14, 1, 59, "~E^H(;_qV-5muVVs", "Cr{:WP.K!A+y", 1, 0, ". Skipping FK constraint");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.parallelStream();
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "%0", "V.@Fb", ":LD0ZJG3fqk");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K,y'c%Mz~T?t");
      Box.createVerticalBox();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1968526675));
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "K,y'c%Mz~T?t", "Drop procedure mode_decode");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.fw.dialects.SybaseDialectExt", "net.sourceforge.squirrel_sql.fw.dialects.IngresDialectExt");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = 32700;
      int int1 = 2;
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Arxs_)a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K,y'c%Mz~T?t");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-755));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(3);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "";
      DBUtil.fixCase((ISession) null, "");
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = (-2);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "", ">Vx$%F=L`N@D:4IhU", (String) null, (-2), "", (-2), (-2), (-2), 2000, "", ":_=<_vAx<`6WI2P#{eh", 2000, 1474, (String) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(1L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int1 = (-1223);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean";
      int int2 = 880;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean", 1474, (-2), 880);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(4551);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ATclQdpt1fvpa", "EZn_6sKoPi:zH$", "X`12N$h%T}y", "~>HL?dsrnmC|HPF", (-995), "ATclQdpt1fvpa", (-995), 0, 379, 3212, ") REFERENCES ", "~>HL?dsrnmC|HPF", 4551, (-995), "$GTZHJP5");
      DBUtil.isBinaryType(tableColumnInfo0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(26);
      SQLDriver sQLDriver0 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JColorChooser jColorChooser0 = new JColorChooser((Color) null);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getAccessibleChild(jColorChooser0, 52);
      metalSplitPaneUI0.setContinuousLayout(false);
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getDivider();
      MetalSplitPaneUI metalSplitPaneUI1 = new MetalSplitPaneUI();
      metalSplitPaneUI1.getInsets(jColorChooser0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NF,Xhy^n", "El5)m", "NF,Xhy^n", "NF,Xhy^n", 2604, "", (-7), 695, 695, (-5), "NF,Xhy^n", "El5)m", 2604, 4554, "8};>)~R9aP{");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(2996, tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(60000L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setView(0);
      sQLAliasSchemaDetailProperties0.setProcedure(2);
      sQLAliasSchemaDetailProperties0.setSchemaName("_g=/q");
      sQLAliasSchemaDetailProperties0.setProcedure(0);
      sQLAliasSchemaDetailProperties0.setSchemaName("OG9:H?Xddq?dt4*#");
      sQLAliasSchemaDetailProperties0.setTable(1151);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[7];
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailProperties0.setSchemaName("olK{?e$qc#{@uRU 5f");
      sQLAliasSchemaDetailProperties0.setProcedure(1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("You have tried to set a null error-handler.", "OG9:H?Xddq?dt4*#", " tableName=", "{PYVtcPz8", (-484), "olK{?e$qc#{@uRU 5f", 2003, 1, 1234, 1, "e%%YZM%o/", "Td", 1, 50000, "D!>kt1s1K");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "e%%YZM%o/", " tableName=");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("1d.|&?wi3%sM-l");
      SQLAlias sQLAlias0 = new SQLAlias();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getDivider();
      sQLAlias0.removePropertyChangeListener((PropertyChangeListener) null);
      sQLAlias0.setAutoLogon(false);
      SQLAlias sQLAlias1 = new SQLAlias();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(3322);
      sQLAlias1.setDriverIdentifier(uidIdentifier0);
      SQLAlias sQLAlias2 = new SQLAlias(integerIdentifier0);
      sQLAlias2.setSchemaProperties((SQLAliasSchemaProperties) null);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(3322);
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(true);
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(92);
      SQLAlias sQLAlias3 = new SQLAlias(integerIdentifier1);
      sQLAlias3.getDriverPropertiesClone();
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JRadioButton jRadioButton0 = new JRadioButton((Icon) null, true);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getAccessibleChild(jRadioButton0, 52);
      metalSplitPaneUI0.setContinuousLayout(true);
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      BasicSplitPaneUI basicSplitPaneUI1 = new BasicSplitPaneUI();
      basicSplitPaneUI1.getDivider();
      MetalSplitPaneUI metalSplitPaneUI1 = new MetalSplitPaneUI();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "gDt!", "gDt!");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "#)!Vm5(j1lISbG$O");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K,y'c%Mz~T?t");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "M~&f;%EjO3XH%WMvGai");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      linkedList0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t60.rWY2q,t1t", "", "t60.rWY2q,t1t", (String) null, (-2266), "uOAVF", 265, 57, 257, (-2266), "t60.rWY2q,t1t", ") has a particular foreign ", (-1407), 257, "");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      GridLayout gridLayout0 = new GridLayout(265, 257);
      gridLayout0.minimumLayoutSize(defaultTreeCellRenderer0);
      gridLayout0.setColumns((-2080374781));
      defaultTreeCellRenderer0.setLayout(gridLayout0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(2000, (-2156.05389022585), (double) 2000);
      defaultCaret0.getPathIterator(affineTransform0, (double) 257);
      defaultTreeCellRenderer0.addMouseListener(defaultCaret0);
      defaultTreeCellRenderer0.getLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.add((Component) defaultTreeCellRenderer0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "<FC", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[7];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties1.setProcedure(2);
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("D m`4a>\"T<HoATBNRz", "$GTZHJP5", "8a2c@`A~|J02VY", "D m`4a>\"T<HoATBNRz", 0, "$GTZHJP5", 1, 1, 0, 2, "net.sourceforge.squirrel_sql.fw.dialects.DialectType", "8a2c@`A~|J02VY", 0, 1, "net.sourceforge.squirrel_sql.fw.dialects.DialectType");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)96;
      byteArray0[5] = (byte)96;
      byteArray0[6] = (byte)96;
      byteArray0[7] = (byte)96;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.setDescription("D m`4a>\"T<HoATBNRz");
      DatabaseObjectType.createNewDatabaseObjectType("X3F,h", (Icon) imageIcon0);
      imageIcon0.toString();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("X3F,h", (Icon) imageIcon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAliasSchemaDetailProperties0.setView(4);
      sQLAliasSchemaDetailProperties1.setTable(62);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties2 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[8];
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[4] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[5] = sQLAliasSchemaDetailProperties2;
      sQLAliasSchemaDetailPropertiesArray0[6] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[7] = sQLAliasSchemaDetailProperties2;
      sQLAliasSchemaProperties2.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      sQLAliasSchemaProperties2.setGlobalState(3020);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties3 = new SQLAliasSchemaProperties();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "YS{@Ejul", "nRGj?:<N{NJ_<$D");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 4551);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.clear();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      String[] stringArray0 = new String[7];
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = stringArray0[0];
      stringArray0[6] = ")*9rz8(6";
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo((SQLAliasSchemaProperties) null);
      sQLAliasSchemaProperties0.getSchemaLoadInfos((SQLAliasSchemaProperties) null, stringArray0, stringArray0);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString("#KB\"|3 Ip");
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias0.setSchemaProperties((SQLAliasSchemaProperties) null);
      sQLAlias2.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String[] stringArray1 = new String[3];
      stringArray1[0] = "#KB\"|3 Ip";
      stringArray1[1] = "#KB\"|3 Ip";
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2004);
      sQLAlias0.setIdentifier(integerIdentifier0);
      stringArray1[2] = null;
      sQLAliasSchemaProperties1.getSchemaLoadInfos(sQLAliasSchemaProperties0, stringArray1, stringArray1);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, stringArray0[3], "generated by default as identity", stringArray0[3], 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("SDsOh", ">/^}0;jEO2umN", "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", (String) null, 167, "image", (-745), (-3249), (-430), 4551, (String) null, " COLUMN ", 128, 4551, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("image", " COLUMN ", "pointbase", "6U(puDi#&NNLmw73ZS", 1130, "0KLd3!+", 1971, 331, 128, 243, "t:a-TkzL\"", "BsNN", 1971, (-2784), "pointbase");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      tableColumnInfoArray0[0] = tableColumnInfo1;
      tableColumnInfoArray0[1] = tableColumnInfo1;
      tableColumnInfoArray0[2] = tableColumnInfo1;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setView(0);
      sQLAliasSchemaDetailProperties0.setProcedure(2);
      sQLAliasSchemaDetailProperties0.setProcedure(0);
      sQLAliasSchemaDetailProperties0.setSchemaName("OG9:H?Xddq?dt4*#");
      sQLAliasSchemaDetailProperties0.setTable(1151);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[7];
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailProperties0.setSchemaName("olK{?e$qc#{@uRU 5f");
      sQLAliasSchemaDetailProperties1.setView(2);
      sQLAliasSchemaDetailProperties1.setSchemaName("kQI=;$=8*UdV0");
      sQLAliasSchemaDetailProperties1.setProcedure(1);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties2.setProcedure(2);
      sQLAliasSchemaDetailProperties0.setProcedure((-3183));
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2006);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setView(0);
      sQLAliasSchemaDetailProperties0.setProcedure(2);
      sQLAliasSchemaDetailProperties1.setSchemaName("_g=/q");
      sQLAliasSchemaDetailProperties1.setSchemaName("VG9:H?Xddq?dt4*#");
      sQLAliasSchemaDetailProperties1.setTable(1151);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[7];
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties2;
      byte[] byteArray0 = new byte[8];
      sQLAliasSchemaDetailProperties0.setSchemaName("olK{?e$qc#{@uRU 5f");
      sQLAliasSchemaDetailProperties1.setProcedure((-953));
      sQLAliasSchemaDetailProperties2.setView(2);
      sQLAliasSchemaDetailProperties0.setSchemaName("VG9:H?Xddq?dt4*#");
      byteArray0[2] = (byte)23;
      byteArray0[6] = (byte)62;
      byteArray0[4] = (byte) (-11);
      byteArray0[5] = (byte)62;
      sQLAliasSchemaDetailProperties1.setProcedure(0);
      byteArray0[6] = (byte) (-18);
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[5] = sQLAliasSchemaDetailProperties2;
      sQLAliasSchemaDetailProperties0.setProcedure((-1901));
      sQLAliasSchemaDetailPropertiesArray0[4] = sQLAliasSchemaDetailProperties2;
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]FkUhS\"X#jAkz");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%n*)4+Z<2-v^LBe{ldu");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "wgXP`\"63Nw ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "wgXP`\"63Nw ");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("wgXP`\"63Nw ", "generated by defult as identity", "%E3Isfm", "in<<:vy", 2003, "ip:Dq&=\"%!g=tL6", 140, 140, 2003, 140, "image", "generated by defult as identity", 1855, (-1089), "]FkUhS\"X#jAkz");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2003, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setUseDriverProperties(false);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      sQLAliasSchemaProperties0.getSchemaLoadInfos(sQLAliasSchemaProperties1, stringArray0, stringArray0);
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties1);
      JInternalFrame jInternalFrame0 = new JInternalFrame(stringArray0[0], false, true, false, true);
      jInternalFrame0.moveToBack();
      jInternalFrame0.getFrameIcon();
      DatabaseObjectType.createNewDatabaseObjectType("t9|z,u~{J|x");
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("t9|z,u~{J|x", stringArray0[0], stringArray0[0]);
      linkedList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlconcat");
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K,y'c%Mz~T?t");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Arxs_)a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K,y'c%Mz~T?t");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "KOFW$M]BdZN?$Ix", "nRGj?:<N{NJ_<$D", "%r [%t] %p %c %x - %m%n", 3274, "!C~{{h+xk", (-961), 50000, 343, 5000, "2T Wu%?RjyJ3a>wEi?", "h'&i/)8ADK+s%", 3274, (-961), "\t2nEWfEh=.jsq$}");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JRadioButton jRadioButton0 = new JRadioButton((Icon) null, true);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getAccessibleChild(jRadioButton0, (-1217));
      metalSplitPaneUI0.setContinuousLayout(true);
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getDivider();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseObjectType) null).when(foreignKeyInfo0).getDatabaseObjectType();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(foreignKeyInfo0, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setView(0);
      sQLAliasSchemaDetailProperties0.setProcedure(2);
      sQLAliasSchemaDetailProperties0.setSchemaName("_g=/q");
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "informix has no offset";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = (-8);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "informix has no offset", (ITableInfo) null, (-8));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GridLayout gridLayout0 = new GridLayout((-1), 753);
      gridLayout0.setColumns(5);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      GridLayout gridLayout1 = new GridLayout((-1), 753);
      defaultTreeCellRenderer0.setLayout(gridLayout1);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(2080, (-1806.1332), (double) 5);
      defaultCaret0.getPathIterator(affineTransform0, 0.0);
      defaultTreeCellRenderer1.addMouseListener(defaultCaret0);
      defaultTreeCellRenderer0.getLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.add((Component) defaultTreeCellRenderer2);
      defaultTreeCellRenderer0.getTransferHandler();
      defaultTreeCellRenderer1.addAncestorListener((AncestorListener) null);
      defaultTreeCellRenderer2.isDoubleBuffered();
      defaultTreeCellRenderer2.getDefaultLeafIcon();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", "R", "R");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("R", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[1] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = ")*9rz8(T6";
      sQLAliasSchemaProperties0.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray0, stringArray0);
      sQLAliasSchemaProperties0.getSchemaLoadInfos((SQLAliasSchemaProperties) null, stringArray0, stringArray0);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      uidIdentifier0.setString("quater");
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias2.setAutoLogon(true);
      sQLAlias2.setDriverIdentifier(uidIdentifier0);
      sQLAlias2.setSchemaProperties((SQLAliasSchemaProperties) null);
      sQLAlias0.setSchemaProperties((SQLAliasSchemaProperties) null);
      sQLAlias2.getDriverPropertiesClone();
      sQLAlias0.setIdentifier(uidIdentifier1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(")*9rz8(T6", stringArray0[0], "&~%", stringArray0[3], 0, ")*9rz8(T6", 0, (-995), 0, (-3466), ")*9rz8(T6", ")*9rz8(T6", (-500), 2936, "&~%");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Jh", "Jh", (String) null, "up/!!jX@- SgGW<LA", (-1789569704), "anp,@a(v0eRx8n|1.", 1954, (-1789569704), (-676), (-835), "up/!!jX@- SgGW<LA", (String) null, 642, (-835), "fG*6pC*1i^[`fB+");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin1.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias((IIdentifier) null);
      sQLAlias0.getSchemaProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[7];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties1.setProcedure(2);
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties4.setView(0);
      sQLAliasSchemaDetailProperties0.setSchemaName("u9KA^(1Y9O<>");
      sQLAliasSchemaDetailProperties3.setSchemaName("");
      Object object0 = new Object();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setProcedure(2004);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2002);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "u9KA^(1Y9O<>", "");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("informix has no offset");
      uidIdentifier0.setString(": %wQ!^tJ$F$");
      uidIdentifier0.setString("1d.|&?wi3%sM-l");
      SQLAlias sQLAlias0 = new SQLAlias();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      JPopupMenu jPopupMenu0 = new JPopupMenu("1d.|&?wi3%sM-l");
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jPopupMenu0, (-2082408383), (-2082408383), (-2082408383), (-2082408383), (-2082408383), (-2105376123), 727, 427, false, (-2984), (-2712), (-2105376123));
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      jCheckBoxMenuItem0.processMouseEvent(mouseWheelEvent0, (MenuElement[]) null, menuSelectionManager0);
      styledEditorKit_ItalicAction0.putValue("1D15.|", "] should be System.out or System.err.");
      jPopupMenu0.add((JMenuItem) jCheckBoxMenuItem0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K|y'c%Mz~T?t");
      jInternalFrame0.getLocale();
      jInternalFrame0.enableInputMethods(false);
      JInternalFrame jInternalFrame1 = new JInternalFrame("d_yP", false, false, false);
      JInternalFrame jInternalFrame2 = new JInternalFrame("UeB'3zDF>P<toy6", true, false, false);
      Object object0 = new Object();
      JComponent.getDefaultLocale();
      jInternalFrame1.getComponentListeners();
      jInternalFrame1.getFrameIcon();
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "v1&UIe4e-e[rVS7;}", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K,y'c%Mz~T?t");
      jInternalFrame0.getLocale();
      jInternalFrame0.enableInputMethods(false);
      JInternalFrame jInternalFrame1 = new JInternalFrame("d_yP", false, false, false);
      JInternalFrame jInternalFrame2 = new JInternalFrame("UeB'3zDF>P<toy6", true, false, false);
      Object object0 = new Object();
      JComponent.getDefaultLocale();
      jInternalFrame1.getComponentListeners();
      jInternalFrame1.getFrameIcon();
      DatabaseObjectType.createNewDatabaseObjectType("UeB'3zDF>P<toy6");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, "F;K", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JRadioButton jRadioButton0 = new JRadioButton((Icon) null, true);
      jRadioButton0.getInputMethodListeners();
      JTree jTree0 = new JTree();
      jRadioButton0.getHierarchyListeners();
      basicTreeUI0.getPathForRow((JTree) null, (-998));
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getSplitPane();
      metalSplitPaneUI0.resetToPreferredSizes((JSplitPane) null);
      metalSplitPaneUI0.getAccessibleChild(jRadioButton0, (-1191));
      metalSplitPaneUI0.setContinuousLayout(true);
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getDivider();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Qo(6=N", "!W0D,E@pg[", "=XarZQ]6", "9?", (-998), "!W0D,E@pg[", (-1191), (-831), 2747, (-1), "=XarZQ]6", "+.2", 2747, (-196), "Qo(6=N");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "replaceDistinctDataType: Unexpected exception - ", "9?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GridLayout gridLayout0 = new GridLayout();
      gridLayout0.setVgap(733);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.setLayout(gridLayout0);
      defaultTreeCellRenderer0.getDefaultOpenIcon();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      defaultTreeCellRenderer0.addMouseWheelListener((MouseWheelListener) null);
      defaultTreeCellRenderer0.repaint(774, (-2082408383), (-1409), 4000);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "y,J", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, 6, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 774, 23514, (-1554), 2134, "Length function is null for dialect=", "}p:kQ~", 2134, (-3076), "}p:kQ~");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JColorChooser jColorChooser0 = new JColorChooser((Color) null);
      KeyStroke.getKeyStroke((-326), (-2920), true);
      Character.valueOf('r');
      Character.lowSurrogate((-7));
      Character character0 = Character.valueOf('J');
      Character.isIdeographic((-7));
      Character.isIdeographic((-2920));
      Character.isBmpCodePoint((-326));
      Character.isBmpCodePoint((-7));
      KeyStroke.getKeyStroke(character0, (-2920));
      System.setCurrentTimeMillis((-7));
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-2920));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener2);
      MouseWheelListener mouseWheelListener4 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener2);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener5 = AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener3);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener1);
      MouseWheelListener mouseWheelListener6 = AWTEventMulticaster.add(mouseWheelListener3, mouseWheelListener4);
      Class<XYDatasetTableModel> class0 = XYDatasetTableModel.class;
      AWTEventMulticaster.getListeners((EventListener) mouseWheelListener4, class0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MouseWheelListener mouseWheelListener7 = AWTEventMulticaster.remove(mouseWheelListener6, mouseWheelListener2);
      AWTEventMulticaster.add(mouseWheelListener7, mouseWheelListener5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "h3Ggs", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener2);
      AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener2);
      AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener3);
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)0;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.getIconWidth();
      DatabaseObjectType.createNewDatabaseObjectType("pxdEgI]Cd5v ]F|", (Icon) imageIcon0);
      imageIcon0.toString();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType(".QdPjk/C_=xisjme", icon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) null;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertEquals(3, list1.size());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("\"z>rxIIoT,Wj7gm>Z");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("\"z>rxIIoT,Wj7gm>Z");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF;
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K,y'c%Mz~T?t");
      jInternalFrame0.getLocale();
      jInternalFrame0.enableInputMethods(true);
      JInternalFrame jInternalFrame1 = new JInternalFrame("uR959^:Xm8", true, false, false);
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "uR959^:Xm8";
      objectArray0[2] = (Object) "uR959^:Xm8";
      JComponent.getDefaultLocale();
      jInternalFrame1.getComponentListeners();
      objectArray0[3] = (Object) jInternalFrame1;
      objectArray0[4] = (Object) jInternalFrame0;
      Object object1 = new Object();
      objectArray0[5] = object1;
      objectArray0[6] = (Object) jInternalFrame1;
      jInternalFrame1.getFrameIcon();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("LC|", "LC|", "LC|", "org.jfree.data.time.TimePeriodAnchor", 1562, "1MM=v:{", 1562, 1111, (-3008), 1111, "EC*hc{", "LC|", 1600, 1710, "select ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver1 = new SQLDriver();
      assertNull(sQLDriver1.getJarFileName());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]FkUhS\"X#jAkz");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String[] stringArray0 = new String[0];
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(linkedList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)25;
      byteArray0[6] = (byte)111;
      byteArray0[7] = (byte) (-67);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Color color0 = Color.pink;
      JColorChooser jColorChooser0 = new JColorChooser(color0);
      MouseEvent mouseEvent0 = new MouseEvent(jColorChooser0, 63, 63, 63, 63, (-418), 310, true);
      mouseEvent0.paramString();
      boolean boolean0 = DBUtil.typesAreEquivalent((-838), 63);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t%%NvuHibK^V&2GGJrl");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(6);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "max");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(4551);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CardLayout cardLayout0 = new CardLayout((-1073741822), 4551);
      defaultTreeCellRenderer0.setLayout(cardLayout0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-1073741822), 0.0, (double) (-1073741822));
      defaultCaret0.getPathIterator(affineTransform0, (-1.0));
      defaultTreeCellRenderer1.addMouseListener(defaultCaret0);
      defaultTreeCellRenderer1.getLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.add((Component) defaultTreeCellRenderer0);
      defaultTreeCellRenderer0.getTransferHandler();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      defaultTreeCellRenderer2.addAncestorListener(ancestorListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.setFocusTraversalPolicyProvider(false);
      defaultTreeCellRenderer3.isDoubleBuffered();
      defaultTreeCellRenderer3.getDefaultLeafIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t60.rWY2q,t1t", "", "t60.rWY2q,t1t", (String) null, (-2266), "uOAVF", 265, 57, 257, (-2266), "t60.rWY2q,t1t", ") has a particular foreign ", (-1407), 257, "");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      GridLayout gridLayout0 = new GridLayout(265, 257);
      gridLayout0.minimumLayoutSize(defaultTreeCellRenderer0);
      gridLayout0.setColumns((-2080374781));
      defaultTreeCellRenderer0.addKeyListener((KeyListener) null);
      defaultTreeCellRenderer0.setLayout(gridLayout0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(2000, (-2156.05389022585), 0.0);
      defaultCaret0.getPathIterator(affineTransform0, (double) 257);
      defaultTreeCellRenderer0.addMouseListener(defaultCaret0);
      defaultTreeCellRenderer0.getLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.add((Component) defaultTreeCellRenderer0);
      defaultTreeCellRenderer1.getTransferHandler();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      defaultTreeCellRenderer1.addAncestorListener(ancestorListener0);
      defaultTreeCellRenderer2.setFocusTraversalPolicyProvider(false);
      defaultTreeCellRenderer2.isDoubleBuffered();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]FkUhS\"X#jAkz");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%n*)4+Z<2-v^LBe{ldu");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "wgXP`\"63Nw ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "wgXP`\"63Nw ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "%n*)4+Z<2-v^LBe{ldu", ";L", "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", 140);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      String[] stringArray0 = new String[7];
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = stringArray0[0];
      stringArray0[3] = ")*9rz8(6";
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo((SQLAliasSchemaProperties) null);
      sQLAliasSchemaProperties0.getSchemaLoadInfos(sQLAliasSchemaProperties0, stringArray0, stringArray0);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString("#KB\"|3 Ip");
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias0.setSchemaProperties((SQLAliasSchemaProperties) null);
      sQLAlias2.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String[] stringArray1 = new String[3];
      stringArray1[0] = "#KB\"|3 Ip";
      uidIdentifier0.setString("&Ju");
      sQLAliasSchemaProperties1.setCacheSchemaIndependentMetaData(true);
      dBCopyPlugin0.setSourceDatabaseObjects((List<IDatabaseObjectInfo>) null);
      stringArray1[1] = "#KB\"|3 Ip";
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2004);
      sQLAlias0.setIdentifier(integerIdentifier0);
      stringArray1[2] = null;
      sQLAliasSchemaProperties1.getSchemaLoadInfos(sQLAliasSchemaProperties0, stringArray1, stringArray1);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, ")*9rz8(6", "generated by default as identity", ")*9rz8(6", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JColorChooser jColorChooser0 = new JColorChooser((Color) null);
      JColorChooser jColorChooser1 = new JColorChooser((Color) null);
      Character.valueOf('\'');
      Character.isBmpCodePoint((-472));
      Character.isBmpCodePoint((-1469));
      Character.isBmpCodePoint((-472));
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "Kzbm=IUXgJ)*x^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Element element0 = defaultStyledDocument0.getDefaultRootElement();
      defaultStyledDocument0.getStartPosition();
      LabelView labelView0 = new LabelView(element0);
      Color color0 = labelView0.getForeground();
      Color.getColor("f", (-386));
      JColorChooser jColorChooser0 = new JColorChooser(color0);
      KeyStroke.getKeyStroke((-3214), (-2929), true);
      Character.valueOf('l');
      Character.valueOf('\"');
      Character.highSurrogate((-230));
      Character.isIdeographic((-3214));
      Character.isIdeographic(3172);
      Character.isBmpCodePoint((-7));
      Character.isBmpCodePoint((-881));
      Character character0 = new Character('l');
      KeyStroke.getKeyStroke(character0, 4551);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "eC=mwWzm?z$(S'=Rk\"", "eC=mwWzm?z$(S'=Rk\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      DBUtil.setLastStatementValues("]lt");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      dBCopyPlugin1.getDestSession();
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Element element0 = defaultStyledDocument0.getDefaultRootElement();
      defaultStyledDocument0.getStartPosition();
      LabelView labelView0 = new LabelView(element0);
      Color color0 = labelView0.getForeground();
      Color.getColor("f", (-386));
      JColorChooser jColorChooser0 = new JColorChooser(color0);
      KeyStroke.getKeyStroke((-3214), (-2929), true);
      Character.valueOf('l');
      Character.valueOf('\"');
      Character.highSurrogate((-230));
      Character.isIdeographic((-3214));
      Character.isIdeographic(3172);
      Character.isBmpCodePoint((-7));
      Character.isBmpCodePoint((-881));
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "%0";
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "%0", "V.@Fb", "%0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JRadioButton jRadioButton0 = new JRadioButton((Icon) null, true);
      jRadioButton0.getInputMethodListeners();
      JTree jTree0 = new JTree();
      jRadioButton0.getHierarchyListeners();
      basicTreeUI0.getPathForRow(jTree0, (-998));
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getSplitPane();
      metalSplitPaneUI0.resetToPreferredSizes((JSplitPane) null);
      metalSplitPaneUI0.getAccessibleChild(jRadioButton0, (-1191));
      metalSplitPaneUI0.setContinuousLayout(true);
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getDivider();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("!W0D,E@pg[", "!W0D,E@pg[", "Qo(6=N", foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getDivider();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      String string0 = ":ih";
      dBCopyPreferenceBean0.setSelectFetchSize((-3467));
      dBCopyPreferenceBean0.setClientVersion(":ih");
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable(":ih", ":ih", "null", (ISession) null, true, (-3482));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t60.rWY2q,t1t", "", "select  'CREATE OR REPLACE VIEW ' || VIEW_NAME ||' AS ', TEXT ", (String) null, (-2266), "uOAVF", 347, 57, 244, (-2266), "select  'CREATE OR REPLACE VIEW ' || VIEW_NAME ||' AS ', TEXT ", ") has a particular foreign ", (-16), 244, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType.createNewDatabaseObjectType("obje8#ct");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("t60.rWY2q,t1t");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      GridLayout gridLayout0 = new GridLayout(27, 27);
      DBUtil dBUtil0 = new DBUtil();
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("t60.rWY2q,t1t", "v1&UIe4e-e[rVS7;}", "v1&UIe4e-e[rVS7;}", "t60.rWY2q,t1t", (-16), "You have tried to set a null level to root.", 317, 57, 237, 57, "YSlt", "OF|l$(7)_=IcwQOMNmU", 237, (-2266), "obje8#ct");
      defaultTreeCellRenderer0.putClientProperty(dBUtil0, tableColumnInfo1);
      DatabaseObjectType.createNewDatabaseObjectType("");
      defaultTreeCellRenderer0.setLayout(gridLayout0);
      Icon icon0 = defaultTreeCellRenderer0.getLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Rob Manni<ung", icon0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setFocusTraversalPolicyProvider(true);
      defaultTreeCellRenderer1.setFocusTraversalPolicyProvider(true);
      Icon icon1 = defaultTreeCellRenderer1.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, icon1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-2266), int0);
      
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K,y'c%Mz~T?t");
      Box box0 = Box.createVerticalBox();
      box0.getGraphics();
      jInternalFrame0.enableInputMethods(true);
      jInternalFrame0.repaint();
      JInternalFrame jInternalFrame1 = new JInternalFrame("uR959^:Xm8", true, false, false);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)96;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.getIconWidth();
      boolean boolean0 = DBUtil.typesAreEquivalent((byte)96, (-4));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JColorChooser jColorChooser0 = new JColorChooser((Color) null);
      Character.valueOf('r');
      Character.isBmpCodePoint((-326));
      Character.isBmpCodePoint((-7));
      boolean boolean0 = DBUtil.typesAreEquivalent((-326), (-326));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), (-7));
      // Undeclared exception!
      try { 
        SerialDate.getNearestDayOfWeek((-183), (SerialDate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid day-of-the-week code.
         //
         verifyException("org.jfree.date.SerialDate", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "8(Rc";
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "8(Rc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("K,y'c%Mz~T?t");
      Box box0 = Box.createVerticalBox();
      box0.getGraphics();
      jInternalFrame0.enableInputMethods(true);
      jInternalFrame0.repaint();
      JInternalFrame jInternalFrame1 = new JInternalFrame("uR959^:Xm8", true, false, false);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)96;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.getIconWidth();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, (String) null, "U))u.t{/=", "seFec curvalX'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "q}F32J^3/", "", "q}F32J^3/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("zshB6)MZ_rB");
      jInternalFrame0.getLocale();
      jInternalFrame0.enableInputMethods(true);
      JInternalFrame jInternalFrame1 = new JInternalFrame("uR959^:Xm8", true, false, false);
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "uR959^:Xm8";
      objectArray0[2] = (Object) "uR959^:Xm8";
      JComponent.getDefaultLocale();
      jInternalFrame1.getComponentListeners();
      objectArray0[3] = (Object) jInternalFrame1;
      objectArray0[4] = (Object) jInternalFrame0;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(1, (TableColumnInfo) null, (ISession) null);
      System.setCurrentTimeMillis(12L);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DBUtil.setLastStatement("kVPArhk.]m07\"");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "ch]N2]mrSyG", (String) null, " ", 0, "clob", (-52), 0, 0, (-52), ". Skipping FK constraint", "", 1376, 1376, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      DatabaseObjectType.createNewDatabaseObjectType("");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      ISession iSession0 = null;
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "d-e_ko*8Em ";
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo("(LF]IJLN2I]", (String) null, "P3;nzg%: 8bhFz9we]V", "", "\"z>rxIIoT,Wj7gm>Z", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginJarFilePath();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getApplication();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getSourceSession();
      DBUtil.replaceDistinctDataType((-2688), (TableColumnInfo) null, (ISession) null);
      System.setCurrentTimeMillis(2001);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      DatabaseObjectType.createNewDatabaseObjectType("\"z>rxIIoT,Wj7gm>Z");
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "\"z>rxIIoT,Wj7gm>Z", "random");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
