/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 17:37:14 GMT 2019
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "gQ}NYK76DHKmv";
      stringArray0[1] = "-7";
      stringArray0[2] = "-7";
      stringArray0[3] = "-7";
      stringArray0[4] = "ui{d";
      stringArray0[5] = "MDpZn>/Jt)|O:JVS";
      stringArray0[6] = "1";
      stringArray0[7] = "ui{d";
      stringArray0[8] = "-7";
      LagoonCLI.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "YX~UcW/";
      stringArray0[1] = "sgQVuS*yZoF";
      stringArray0[2] = "T?bhCG";
      stringArray0[3] = "build";
      stringArray0[4] = "f#JHX9t";
      stringArray0[5] = ".8jtemap";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "build";
      stringArray1[1] = "force";
      LagoonCLI.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "QA(Ih-Ph";
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      stringArray0[2] = "QA(Ih-Ph";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-K?,~^l.xml";
      LagoonCLI.main(stringArray1);
      assertEquals(1, stringArray1.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "1";
      stringArray0[1] = "1";
      stringArray0[2] = "BG76P:+= qe|@n";
      stringArray0[0] = ".sitemap.sitemap.sitemap";
      stringArray0[4] = "BG76P:+= qe|@n";
      stringArray0[5] = "BG76P:+= qe|@n";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "g@}NduKv";
      stringArray1[1] = "1";
      String[] stringArray2 = new String[5];
      stringArray2[0] = "^qZZuP'%V{wd";
      String[] stringArray3 = new String[7];
      stringArray3[0] = "BG76P:+= qe|@n";
      stringArray3[1] = "1";
      stringArray3[2] = "Tnld";
      stringArray3[3] = "1";
      stringArray3[4] = "^qZZuP'%V{wd";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.log.output.io.rotate.BaseFileNameFilter";
      stringArray0[1] = "build";
      stringArray0[2] = "";
      stringArray0[3] = "w-A5\"4g3r.N*-w$?g<9";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.log.output.io.rotate.BaseFileNameFilter");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "T.xml");
      stringArray0[4] = "Error while initializing Lagoon:";
      LagoonCLI.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[2] = "http://www.w3.org/XML/1998/namespace.sitemap";
      stringArray0[3] = "FYB#c'U_jvFb";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "4#-Qyd3#a|?jp&|o";
      LagoonCLI.main(stringArray1);
      assertEquals(1, stringArray1.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-Kl,~^.xsl";
      stringArray0[1] = "1";
      stringArray0[2] = "-Kl,~^.xsl";
      stringArray0[3] = "-Kl,~^.xsl";
      stringArray0[4] = "-Kl,~^.xsl";
      stringArray0[5] = "uild";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "1";
      stringArray1[1] = "1";
      stringArray1[2] = "zf$W";
      stringArray1[3] = "uild";
      stringArray1[4] = "uild";
      stringArray1[5] = "]Z'Xf<2`h?_&$L";
      LagoonCLI.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "a9,*d4k_:=X9W.1l\"";
      stringArray0[1] = "build";
      stringArray0[2] = "Password is required but not specified";
      stringArray0[3] = ">C<<*NLK;ROs+p^z~q";
      LagoonCLI.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JcpIkMI4R";
      stringArray0[1] = "bunld";
      stringArray0[2] = "BWI_|iNmJ,.xm";
      stringArray0[3] = "4#-Qyd3#a|?jp&|o";
      stringArray0[5] = "bunld";
      String[] stringArray1 = new String[0];
      LagoonCLI.main(stringArray1);
      assertEquals(0, stringArray1.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7156338174862886
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "#hrb";
      stringArray0[1] = "";
      stringArray0[2] = "nu.staldal.lagoon.core.AuthenticationMissingException";
      stringArray0[4] = "5";
      stringArray0[5] = "IkjQ";
      stringArray0[6] = "%.K.LT+`@Qn;";
      stringArray0[7] = "sLDoILU";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "zD`1c1";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[9];
      stringArray2[0] = "sLDoILU";
      stringArray2[1] = "#hrb";
      stringArray2[2] = "Error while initializing Lagoon:";
      stringArray2[3] = "?vi?";
      stringArray2[4] = "fI500m-B";
      stringArray2[5] = ",s$#}0lOGz(^'";
      stringArray2[6] = "M 3z.8H&wPgG=";
      stringArray2[7] = "M 3z.8H&wPgG=";
      stringArray2[8] = "nu.staldal.lagoon.core.LagoonException";
      LagoonCLI.main(stringArray2);
      assertNotSame(stringArray2, stringArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-K?,~^l.xml.xml";
      stringArray0[2] = "^|S6AD P`";
      stringArray0[3] = "b00.[.D~";
      stringArray0[4] = "o>r";
      stringArray0[5] = "*Y";
      stringArray0[6] = "Kmve";
      stringArray0[7] = "JcpIkMI4R";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
