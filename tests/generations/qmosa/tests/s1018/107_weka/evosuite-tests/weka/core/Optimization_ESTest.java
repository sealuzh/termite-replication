/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 15:49:16 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[7];
      Locale locale0 = Locale.ITALIAN;
      Locale locale1 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      locale1.getExtensionKeys();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      linkedList0.pollLast();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList2.add((Locale.LanguageRange) null);
      locale1.clone();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList4, locale_FilteringMode2);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0);
      locale1.getDisplayCountry(locale0);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      locale0.getDisplayName(locale1);
      locale1.getDisplayCountry(locale0);
      NumberFormat.getCurrencyInstance(locale1);
      Locale.setDefault(locale0);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, (double[]) null, true, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[1] = true;
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.pollLast();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList0.add((Locale.LanguageRange) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      weka.core.matrix.Matrix matrix1 = new weka.core.matrix.Matrix(3184, 3184);
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 235;
      doubleArray1[1] = (double) 3184;
      doubleArray1[2] = 1509.2021457894;
      doubleArray1[3] = (double) 235;
      double[] doubleArray2 = Optimization.solveTriangle(matrix1, doubleArray1, true, booleanArray0);
      Optimization.solveTriangle(matrix1, doubleArray2, false, booleanArray0);
      Random.setNextRandom(3184);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      decimalFormatSymbols0.setPerMill('H');
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      Locale locale0 = Locale.CANADA;
      NumberFormat.getInstance(locale0);
      matrix0.lu();
      decimalFormat0.format((-30.30417658021));
      Locale locale1 = new Locale("_>7%gln;@kZm{J^k-", "_>7%gln;@kZm{J^k-", "\t");
      locale1.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      Locale locale2 = Locale.KOREA;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      locale2.getDisplayLanguage(locale0);
      locale2.getDisplayScript(locale1);
      locale2.getDisplayName(locale1);
      Locale.forLanguageTag("\t");
      locale1.getDisplayScript(locale2);
      Locale locale3 = new Locale("_>7%gln;@kZm{J^k-", "_>7%gln;@kZm{J^k-", "\t");
      NumberFormat.getPercentInstance(locale3);
      matrix0.print((NumberFormat) decimalFormat0, 678);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      boolean[] booleanArray1 = new boolean[3];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = true;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray1);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      decimalFormatSymbols0.setPerMill('H');
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      decimalFormat0.format((-30.30417658021));
      Locale locale1 = new Locale("_>7%gln;@kZm{J^k-", "_>7%gln;@kZm{J^k-", "\t");
      locale1.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      Locale locale2 = Locale.KOREA;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      locale2.getDisplayLanguage(locale0);
      locale2.getDisplayScript(locale1);
      locale2.getDisplayName(locale1);
      Locale locale3 = Locale.forLanguageTag("\t");
      locale1.getDisplayScript(locale2);
      Locale locale4 = new Locale("_>7%gln;@kZm{J^k-", "_>7%gln;@kZm{J^k-", "\t");
      NumberFormat.getPercentInstance(locale3);
      matrix0.print(numberFormat0, 102);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray1, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.elementAt(0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      assertEquals(1, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      doubleArray0[1] = doubleArray0[0];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[1] = true;
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.pollLast();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      locale1.clone();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList4, locale_FilteringMode1);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList5);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      Locale locale2 = Locale.CANADA_FRENCH;
      locale2.getDisplayName(locale0);
      locale1.getDisplayCountry(locale0);
      locale2.getDisplayCountry(locale0);
      NumberFormat.getCurrencyInstance(locale2);
      Locale.setDefault(locale0);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0[1], false, booleanArray0);
      assertEquals(0, doubleArray1.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      decimalFormatSymbols0.setPerMill('H');
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      Locale locale0 = Locale.CANADA;
      NumberFormat.getInstance(locale0);
      decimalFormat0.format((-30.30417658021));
      Locale locale1 = new Locale("_>7%gln;@kZm{J^k-", "_>7%gln;@kZm{J^k-", "\t");
      locale1.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      Locale locale2 = Locale.KOREA;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      locale2.getDisplayLanguage(locale0);
      locale2.getDisplayScript(locale1);
      locale2.getDisplayName(locale1);
      Locale.forLanguageTag("\t");
      locale1.getDisplayScript(locale2);
      Locale locale3 = new Locale("_>7%gln;@kZm{J^k-", "_>7%gln;@kZm{J^k-", "\t");
      NumberFormat.getPercentInstance(locale3);
      matrix0.print((NumberFormat) decimalFormat0, 678);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      boolean[] booleanArray1 = new boolean[3];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = false;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray1);
      assertEquals(2, doubleArray2.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[2] = true;
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = Locale.ITALIAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      linkedList1.retainAll(linkedList0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList1.add(locale0);
      locale0.getDisplayName(locale1);
      linkedList1.add(locale0);
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("inglese");
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      locale1.getDisplayScript(locale0);
      Locale locale2 = Locale.KOREA;
      Locale locale3 = Locale.KOREA;
      locale3.getDisplayVariant();
      linkedList1.add(locale2);
      linkedList2.add(locale2);
      locale2.clone();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale4 = new Locale("inglese", "");
      locale4.getDisplayName(locale1);
      Locale locale5 = linkedList2.poll();
      locale0.getUnicodeLocaleAttributes();
      Locale locale6 = Locale.PRC;
      locale6.getDisplayCountry(locale4);
      NumberFormat.getPercentInstance(locale5);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      assertNotSame(doubleArray1, doubleArray2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[7];
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.pollLast();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList0.add((Locale.LanguageRange) null);
      Locale locale2 = (Locale)locale1.clone();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList4, locale_FilteringMode1);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList5);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      locale0.getDisplayName(locale0);
      locale1.getDisplayCountry(locale0);
      NumberFormat.getCurrencyInstance(locale2);
      Locale.setDefault(locale0);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0[1], false, booleanArray0);
      assertEquals(0, doubleArray1.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[4];
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollLast();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      locale0.getDisplayScript();
      locale0.clone();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList6, (Collection<String>) linkedList5, locale_FilteringMode1);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) linkedList5);
      linkedList4.add(locale1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale0.getDisplayName(locale1);
      locale0.getDisplayCountry(locale1);
      locale0.getDisplayCountry(locale1);
      Locale locale2 = Locale.CHINA;
      locale2.hasExtensions();
      NumberFormat.getCurrencyInstance(locale2);
      Locale.setDefault(locale0);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray2, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[10];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[2] = true;
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = Locale.ITALIAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      linkedList1.retainAll(linkedList0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.add(locale0);
      locale0.getDisplayName(locale1);
      linkedList1.add(locale0);
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("inglese");
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      locale1.getDisplayScript(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale locale2 = Locale.KOREA;
      locale2.getDisplayVariant();
      linkedList3.add(locale1);
      linkedList3.add(locale2);
      Locale locale3 = (Locale)locale0.clone();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      Locale locale4 = new Locale("inglese", "inglese");
      locale3.getDisplayName();
      locale1.getDisplayName(locale0);
      Locale locale5 = linkedList3.poll();
      Set<String> set0 = locale5.getUnicodeLocaleKeys();
      Locale.lookupTag(linkedList2, set0);
      locale0.getDisplayCountry(locale1);
      NumberFormat.getPercentInstance(locale3);
      NumberFormat.getCurrencyInstance(locale1);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 2.0;
      doubleArray1[1] = (-2769.65971455);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = 2.0;
      doubleArray2[1] = (-2769.65971455);
      doubleArray0[1] = doubleArray2;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      double[] doubleArray3 = Optimization.solveTriangle(matrix0, doubleArray1, true, (boolean[]) null);
      assertArrayEquals(new double[] {1.0, 1.0007221103695494}, doubleArray3, 0.01);
      assertArrayEquals(new double[] {2.0, (-2769.65971455)}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      assertEquals(1, optimization_DynamicIntArray0.size());
      
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.elementAt(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.elementAt(0);
      optimization_DynamicIntArray0.copy();
      assertEquals(0, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5012592323783793
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      optimization_DynamicIntArray0.addElement(7);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      optimization_DynamicIntArray0.addElement(2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(325);
      assertEquals(3, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      doubleArray0[1] = doubleArray0[0];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.ROOT;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      linkedList1.retainAll(linkedList0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.add(locale0);
      locale0.getDisplayName(locale1);
      linkedList1.add(locale0);
      linkedList2.pollLast();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale locale2 = Locale.ROOT;
      locale2.getUnicodeLocaleKeys();
      linkedList3.add(locale2);
      Locale locale3 = (Locale)locale0.clone();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      Locale locale4 = new Locale("Japanese", "Japanese");
      locale3.getDisplayName();
      locale1.getDisplayName(locale0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.lookupTag(linkedList2, set0);
      locale0.getDisplayCountry(locale1);
      locale0.getDisplayCountry(locale3);
      NumberFormat.getPercentInstance(locale3);
      NumberFormat.getCurrencyInstance(locale1);
      Optimization.solveTriangle(matrix0, doubleArray0[1], true, booleanArray0);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      assertEquals(0, optimization_DynamicIntArray0.size());
      
      optimization_DynamicIntArray0.addElement(0);
      assertEquals(1, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(527);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.size();
      optimization_DynamicIntArray0.addElement(0);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(365);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
