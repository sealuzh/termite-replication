/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 09:56:50 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.time.Instant;
import java.util.Date;
import java.util.Hashtable;
import javax.xml.namespace.QName;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.AxisEngine;
import org.apache.axis.Message;
import org.apache.axis.MessageContext;
import org.apache.axis.deployment.wsdd.WSDDDeployableItem;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration;
import org.apache.axis.deployment.wsdd.WSDDHandler;
import org.apache.axis.deployment.wsdd.WSDDJAXRPCHandlerInfoChain;
import org.apache.axis.deployment.wsdd.WSDDResponseFlow;
import org.apache.axis.message.MimeHeaders;
import org.apache.axis.message.SOAPBodyElement;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.schema.SchemaVersion;
import org.apache.axis.schema.SchemaVersion2001;
import org.apache.axis.soap.SOAP11Constants;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.axis.utils.LockableHashtable;
import org.apache.html.dom.HTMLBaseElementImpl;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLImageElementImpl;
import org.apache.html.dom.HTMLParamElementImpl;
import org.apache.html.dom.HTMLSelectElementImpl;
import org.apache.html.dom.HTMLTableColElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.util.SymbolTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.html.HTMLElement;
import org.w3c.dom.html.HTMLTableSectionElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "net.sf.xbus.protocol.records.ecordTypeMessage");
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      hTMLTableElementImpl0.addEventListener("", eventListener0, true);
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "net.sf.xbus.protocol.records.ecordTypeMessage");
      hTMLTableRowElementImpl0.hasAttributeNS("", "tB4K1Ak>rBSeR8)Lg`");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl1 = new HTMLTableRowElementImpl(hTMLDocumentImpl1, "");
      hTMLTableRowElementImpl1.setTitle("tB4K1Ak>rBSeR8)Lg`");
      hTMLTableElementImpl0.setWidth("tB4K1Ak>rBSeR8)Lg`");
      hTMLTableRowElementImpl0.toString();
      hTMLTableRowElementImpl0.setBgColor("*B=%bg/7S");
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "");
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl1 = new HTMLSelectElementImpl(hTMLDocumentImpl1, "jYXU");
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl1, "tB4K1Ak>rBSeR8)Lg`");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl0, (XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("', no mapping");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      mockPrintStream1.println((double) (-1002));
      mockPrintStream1.print('Z');
      mockPrintStream0.checkError();
      mockPrintStream0.flush();
      MockPrintStream mockPrintStream2 = new MockPrintStream("', no mapping");
      byte[] byteArray0 = new byte[8];
      mockPrintStream0.println((-3984.1687F));
      mockPrintStream0.println((-1002));
      byteArray0[7] = (byte)76;
      mockPrintStream0.print(false);
      mockPrintStream0.print('<');
      mockPrintStream1.print((float) (-1002));
      mockPrintStream1.print(false);
      mockPrintStream0.println((-1002));
      mockPrintStream1.print("', no mapping");
      mockPrintStream1.close();
      mockPrintStream0.print(Float.NaN);
      mockPrintStream1.println((float) (byte)0);
      mockPrintStream0.println();
      mockPrintStream1.println((-15));
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (-1));
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("', no mapping", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("b-mn17.6)!jtu,6vW84");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      mockPrintStream1.println((double) (-1005));
      mockPrintStream0.checkError();
      mockPrintStream0.flush();
      MockFile mockFile1 = new MockFile("org.apache.axis.utils.NetwrrkUtils", "k");
      mockPrintStream0.print('6');
      mockPrintStream1.print((float) (-573L));
      mockPrintStream1.print(false);
      mockPrintStream0.println((-1005));
      URI uRI0 = MockURI.aHttpURI;
      mockFile0.deleteOnExit();
      mockPrintStream1.println(Float.NaN);
      mockFile0.mkdirs();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      MockPrintStream mockPrintStream2 = new MockPrintStream("org.apache.axis.utils.NetwrrkUtils");
      mockPrintStream0.close();
      mockPrintStream1.println((-3L));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("b-mn17.6)!jtu,6vW84", (XBUSSystem) null, "_uNB4");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-102);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)55;
      byteArrayList2.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList2, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "wsdlFile");
      hTMLTableElementImpl0.setFrame("beanMapping");
      HTMLTableElementImpl hTMLTableElementImpl1 = new HTMLTableElementImpl(hTMLDocumentImpl0, "org.apache.axis.encoding.ser.ArraySerializerFactory");
      wSDDJAXRPCHandlerInfoChain0.getChildElements(hTMLTableElementImpl0, "soapAction");
      HTMLTableElementImpl hTMLTableElementImpl2 = new HTMLTableElementImpl(hTMLDocumentImpl0, "use");
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = (HTMLTableRowElementImpl)hTMLTableElementImpl2.insertRow(0);
      hTMLTableElementImpl2.getNodeValue();
      hTMLTableRowElementImpl0.getLang();
      hTMLTableElementImpl0.getLang();
      hTMLTableRowElementImpl0.getNextSibling();
      hTMLTableElementImpl2.isDerivedFrom("typeMapping", "soapAction", 0);
      HTMLTableRowElementImpl hTMLTableRowElementImpl1 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "serializer");
      hTMLTableRowElementImpl0.getSectionRowIndex();
      hTMLTableRowElementImpl1.getPreviousSibling();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain1 = new WSDDJAXRPCHandlerInfoChain();
      hTMLTableRowElementImpl0.compareTreePosition(hTMLTableElementImpl0);
      HTMLTableRowElementImpl hTMLTableRowElementImpl2 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "handlerInfoChain");
      hTMLTableElementImpl0.getClassName();
      Boolean.valueOf("http://xml.apache.org/axis/wsdd/providers/handler");
      HTMLTableRowElementImpl hTMLTableRowElementImpl3 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "handlerInfoChain");
      hTMLDocumentImpl0.compareTreePosition(hTMLTableRowElementImpl1);
      hTMLTableRowElementImpl2.hasAttributeNS("undeployment", "http://xml.apache.org/axis/wsdd/providers/com");
      hTMLTableRowElementImpl2.getVAlign();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "fault");
      hTMLTableElementImpl0.setWidth("transport");
      hTMLTableRowElementImpl2.toString();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "parameter");
      HTMLSelectElementImpl hTMLSelectElementImpl1 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "handlerInfoChain");
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "soapActorName");
      wSDDJAXRPCHandlerInfoChain1.getJavaClass();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("deserializer", (XBUSSystem) null, "service");
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl0, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("<jb");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      mockPrintStream1.println((float) (-1066));
      mockPrintStream1.print(false);
      mockPrintStream1.checkError();
      mockPrintStream1.println('\uFFFF');
      MockPrintStream mockPrintStream2 = new MockPrintStream("<jb");
      mockPrintStream2.print((double) (-1066));
      byte[] byteArray0 = new byte[1];
      mockPrintStream2.print((float) (-1066));
      mockPrintStream1.print((long) '\uFFFF');
      mockPrintStream0.checkError();
      mockPrintStream2.println((-2112.6394F));
      mockPrintStream0.write(byteArray0);
      mockPrintStream0.print('\uFFFF');
      mockPrintStream1.println();
      mockPrintStream1.print("<jb");
      mockPrintStream2.print('\uFFFF');
      mockPrintStream0.print((float) '\uFFFF');
      mockPrintStream0.print(false);
      mockPrintStream2.println((int) '\uFFFF');
      mockPrintStream1.print("<jb");
      mockPrintStream1.print('\uFFFF');
      mockPrintStream0.print('\uFFFF');
      mockPrintStream2.print("<jb");
      mockPrintStream1.print("<jb");
      mockPrintStream1.close();
      mockPrintStream2.flush();
      mockPrintStream2.print((float) '\uFFFF');
      mockPrintStream0.println();
      mockPrintStream0.println((-1066));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("<jb", (XBUSSystem) null, "<jb");
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("jd$9YPYo{/d", (XBUSSystem) null, "jd$9YPYo{/d");
      Object object0 = new Object();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage("jd$9YPYo{/d", (XBUSSystem) null, (String) null);
      RecordTypeMessage recordTypeMessage2 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      WSDDResponseFlow wSDDResponseFlow0 = new WSDDResponseFlow();
      Hashtable<Object, String> hashtable0 = new Hashtable<Object, String>();
      XBUSSystem xBUSSystem1 = null;
      try {
        xBUSSystem1 = new XBUSSystem((String) null, hashtable0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      WSDDHandler wSDDHandler0 = new WSDDHandler();
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement("role", "COM");
      hTMLDocumentImpl0.getIdentifiers();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "wsdlFile");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.getNodeValue();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl1 = new HTMLTableElementImpl(hTMLDocumentImpl1, "org.apache.axis.encoding.ser.ArrayDeserializerFactory");
      HTMLTableElementImpl hTMLTableElementImpl2 = new HTMLTableElementImpl(hTMLDocumentImpl0, "use");
      HTMLElement hTMLElement0 = hTMLTableElementImpl2.insertRow(1);
      hTMLTableElementImpl0.getLength();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl3, "serializer");
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      SOAP11Constants sOAP11Constants0 = SOAPConstants.SOAP11_CONSTANTS;
      sOAP11Constants0.getVerMismatchFaultCodeQName();
      hTMLDocumentImpl0.loadXML("responseFlow");
      HTMLTableRowElementImpl hTMLTableRowElementImpl1 = new HTMLTableRowElementImpl(hTMLDocumentImpl3, "soapAction");
      hTMLTableRowElementImpl1.hasAttributeNS("undeployment", "http://xml.apache.org/axis/wsdd/providers/com");
      hTMLTableRowElementImpl1.setTitle("*B=%bg/7S");
      hTMLElement0.getOwnerDocument();
      hTMLTableRowElementImpl1.toString();
      hTMLTableRowElementImpl1.setBgColor("http://xml.apache.org/axis/wsdd/providers/java");
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl4, "COM");
      wSDDJAXRPCHandlerInfoChain0.getChildElement(hTMLElement0, "documentation");
      wSDDHandler0.removeParameter("RPC");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WSDDHandler wSDDHandler0 = new WSDDHandler();
      wSDDHandler0.removeParameter("wsdlFile");
      Boolean boolean0 = new Boolean("locked");
      wSDDHandler0.setParameter("returnItemType", "returnItemType");
      Integer integer0 = new Integer(2);
      wSDDHandler0.setParameter("returnItemQName", "provider");
      wSDDHandler0.setParameter("use", "use");
      wSDDHandler0.removeParameter("itemQName");
      wSDDHandler0.QNAME_TRANSPORT.getNamespaceURI();
      wSDDHandler0.QNAME_REQFLOW.equals(integer0);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDDeployment0.undeployService(wSDDHandler0.QNAME_JAVAMSG_PROVIDER);
      wSDDHandler0.QNAME_SERVICE.getLocalPart();
      wSDDHandler0.deployToRegistry(wSDDDeployment0);
      wSDDDeployment0.getGlobalConfiguration();
      WSDDDeployableItem.scopeStrings = wSDDHandler0.scopeStrings;
      wSDDDeployment0.setGlobalConfiguration((WSDDGlobalConfiguration) null);
      wSDDHandler0.setQName(wSDDHandler0.QNAME_TYPEMAPPING);
      wSDDHandler0.getJavaClass();
      wSDDHandler0.getParametersTable();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("attachment", (XBUSSystem) null, "http://xml.apache.org/axis/wsdd/providers/java");
      QName qName0 = new QName("encodingStyle", "beanMapping");
      qName0.getNamespaceURI();
      wSDDHandler0.getJavaClass();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      try { 
        recordTypeMessage0.setResponseObject(integer0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      Instant instant0 = MockInstant.now();
      Instant instant1 = MockInstant.plusNanos(instant0, 0L);
      Instant instant2 = MockInstant.plusSeconds(instant1, 1000L);
      Instant instant3 = MockInstant.from(instant2);
      Date.from(instant3);
      deferredDocumentImpl0.createTextNode("RjpKVvl:I##wZ\"HB");
      deferredDocumentImpl0.hasAttributes();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byte[] byteArray0 = new byte[5];
      Boolean boolean0 = new Boolean(false);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)54;
      byteArray0[1] = (byte)54;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayList.createByteArrayList(byteArray0, (byte)50);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("Y*Vgl?|L-{mNJ\"nEr4", (XBUSSystem) null, (String) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      recordTypeMessage0.setErrortext((String) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "org.apache.axis.encoding.ser.BeanSerializerFactory");
      HTMLTableElementImpl hTMLTableElementImpl1 = new HTMLTableElementImpl(hTMLDocumentImpl0, "org.apache.axis.encoding.ser.ArraySerializerFactory");
      HTMLTableElementImpl hTMLTableElementImpl2 = new HTMLTableElementImpl(hTMLDocumentImpl0, "use");
      hTMLTableElementImpl2.getLang();
      hTMLTableElementImpl2.getReadOnly();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "handlerInfoChain");
      hTMLTableElementImpl2.getLength();
      hTMLTableElementImpl2.getLength();
      hTMLTableRowElementImpl0.getLang();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "globalConfiguration");
      HTMLTableRowElementImpl hTMLTableRowElementImpl1 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "RPC");
      hTMLTableRowElementImpl0.getSectionRowIndex();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "");
      hTMLTableRowElementImpl0.compareTreePosition(hTMLTableElementImpl0);
      HTMLTableRowElementImpl hTMLTableRowElementImpl2 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "handlerInfoChain");
      hTMLTableElementImpl1.getTFoot();
      hTMLTableRowElementImpl2.getCh();
      hTMLTableElementImpl0.setTFoot((HTMLTableSectionElement) null);
      hTMLTableElementImpl0.getClassName();
      HTMLTableRowElementImpl hTMLTableRowElementImpl3 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "handlerInfoChain");
      hTMLTableRowElementImpl2.setSectionRowIndex((-1303));
      hTMLTableRowElementImpl3.isSameNode(hTMLTableRowElementImpl0);
      hTMLTableRowElementImpl2.getPrefix();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "value");
      hTMLTableRowElementImpl2.getBaseURI();
      hTMLTableRowElementImpl2.getVAlign();
      hTMLTableRowElementImpl1.getPreviousSibling();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "fault");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("documentation", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("provider", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      wSDDJAXRPCHandlerInfoChain0.removeParameter("wsdlFile");
      Boolean boolean0 = new Boolean("locked");
      wSDDJAXRPCHandlerInfoChain0.setParameter("returnItemType", "returnItemType");
      SymbolTable symbolTable0 = new SymbolTable(0);
      symbolTable0.addSymbol("wsdlFile");
      symbolTable0.addSymbol("typeMapping");
      char[] charArray0 = new char[4];
      Integer integer0 = new Integer(2);
      wSDDJAXRPCHandlerInfoChain0.setParameter("wsdlFile", "provider");
      MessageContext.getCurrentContext();
      symbolTable0.addSymbol(charArray0, 2, 0);
      symbolTable0.containsSymbol("http://xml.apache.org/axis/wsdd/providers/handler");
      symbolTable0.addSymbol("http://xml.apache.org/axis/wsdd/");
      symbolTable0.containsSymbol("outHeader");
      wSDDJAXRPCHandlerInfoChain0.setParameter("use", "use");
      SymbolTable symbolTable1 = new SymbolTable(0);
      wSDDJAXRPCHandlerInfoChain0.removeParameter("itemQName");
      QName qName0 = new QName("globalConfiguration", "encodingStyle");
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDJAXRPCHandlerInfoChain0.deployToRegistry(wSDDDeployment0);
      wSDDJAXRPCHandlerInfoChain0.setQName(qName0);
      wSDDJAXRPCHandlerInfoChain0.getJavaClass();
      wSDDJAXRPCHandlerInfoChain0.getParametersTable();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("attachment", (XBUSSystem) null, "http://xml.apache.org/axis/wsdd/providers/java");
      QName qName1 = new QName("encodingStyle", "beanMapping");
      qName1.getNamespaceURI();
      qName1.getNamespaceURI();
      QName qName2 = new QName("soapActorName", "http://xml.apache.org/axis/wsdd/providers/java");
      wSDDJAXRPCHandlerInfoChain0.setQName(qName1);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[14];
      byteArrayList0.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("encodingStyle", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-116);
      byteArray0[5] = (byte) (-116);
      byteArray0[3] = (byte)86;
      byteArray0[5] = (byte)86;
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "=e)j]_l MfAyf/v0I";
      stringArray0[1] = "SBF]h]cO/X";
      stringArray0[2] = "120";
      stringArray0[3] = "120";
      stringArray0[4] = "x::ukn[lx2@m^Wfcy6";
      stringArray0[5] = "120";
      stringArray0[6] = "x::ukn[lx2@m^Wfcy6";
      stringArray0[7] = "120";
      mimeHeaders0.getNonMatchingHeaders(stringArray0);
      mimeHeaders0.addHeader("003", "003");
      mimeHeaders0.removeHeader("SBF]h]cO/X");
      mimeHeaders0.setHeader("=e)j]_l MfAyf/v0I", (String) null);
      Message message0 = new Message("x::ukn[lx2@m^Wfcy6", mimeHeaders0);
      byteArray0[6] = (byte)60;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList.createByteArrayList(byteArray0, (-5));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("x::ukn[lx2@m^Wfcy6", (XBUSSystem) null, "");
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)54;
      AxisEngine.getCurrentMessageContext();
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SchemaVersion2001 schemaVersion2001_0 = (SchemaVersion2001)SchemaVersion.SCHEMA_2001;
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope(sOAP12Constants0, schemaVersion2001_0);
      SOAP12Constants sOAP12Constants1 = SOAPConstants.SOAP12_CONSTANTS;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-116);
      byteArray0[5] = (byte)83;
      byteArray0[3] = (byte)83;
      byteArray0[5] = (byte)83;
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      mimeHeaders0.setHeader("=e)j]_l MfAyf/v0I", (String) null);
      Message message0 = new Message("x::ukn[lx2@m^Wfcy6", mimeHeaders0);
      byteArray0[6] = (byte)60;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList.createByteArrayList(byteArray0, 0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("x::ukn[lx2@m^Wfcy6", (XBUSSystem) null, "");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 215);
      try { 
        recordTypeMessage0.setRequestObject(pipedInputStream0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.io.PipedInputStream cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("enter HttpState.getProxyCredentials(AuthScope)", (XBUSSystem) null, "enter HttpState.getProxyCredentials(AuthScope)");
      recordTypeMessage0.setErrorcode(246);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[2] = (byte)15;
      byteArray0[1] = (byte)46;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayList0.addAll((ByteArrayList) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.iterator();
      byteArrayList0.add(byteArray0);
      byteArrayList0.add(byteArray0);
      byteArrayList1.add(byteArray0);
      byteArrayList1.addAll(byteArrayList0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      byteArrayList0.toByteArray();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[2] = (byte)15;
      byteArray0[1] = (byte)46;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayList0.addAll((ByteArrayList) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.iterator();
      byteArrayList0.add(byteArray0);
      byteArrayList0.add(byteArray0);
      byteArrayList1.add(byteArray0);
      byteArrayList1.addAll(byteArrayList0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      byteArrayList0.toByteArray();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WSDDResponseFlow wSDDResponseFlow0 = new WSDDResponseFlow();
      wSDDResponseFlow0.removeParameter("wsdlFile");
      Boolean boolean0 = new Boolean("http://xml.apache.org/axis/wsdd/");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      wSDDResponseFlow0.setParameter("li+ot", "returnItemType");
      SymbolTable symbolTable0 = new SymbolTable(2);
      symbolTable0.addSymbol("");
      symbolTable0.containsSymbol("http://xml.apache.org/axis/wsdd/providers/handler");
      symbolTable0.containsSymbol("outHeader");
      symbolTable0.containsSymbol("returnItemType");
      symbolTable0.addSymbol("k8$tWC");
      symbolTable0.addSymbol("arrayMapping");
      symbolTable0.addSymbol("Handler");
      wSDDResponseFlow0.setParameter("use", "use");
      SymbolTable symbolTable1 = new SymbolTable(0);
      wSDDResponseFlow0.removeParameter("service");
      wSDDResponseFlow0.getJavaClass();
      LockableHashtable lockableHashtable0 = wSDDResponseFlow0.getParametersTable();
      wSDDResponseFlow0.setOptionsHashtable(lockableHashtable0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("smSc3P", (XBUSSystem) null, "http://xml.apache.org/axis/wsdd/providers/java");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[0];
      byteArrayList0.add(byteArray0);
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("nlb8Sj t:k,YuSJ!'");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      mockPrintStream1.println((float) (-964));
      mockPrintStream1.print(true);
      MockPrintStream mockPrintStream2 = new MockPrintStream("nlb8Sj t:k,YuSJ!'");
      mockPrintStream1.checkError();
      mockPrintStream0.println('\u001A');
      mockPrintStream0.flush();
      MockPrintStream mockPrintStream3 = new MockPrintStream("nlb8Sj t:k,YuSJ!'");
      byte[] byteArray0 = new byte[4];
      mockPrintStream3.print((float) (-964));
      mockPrintStream0.checkError();
      mockPrintStream3.println((float) (-964));
      mockPrintStream0.write(byteArray0);
      mockPrintStream0.append((CharSequence) null);
      mockPrintStream0.print('\u0092');
      mockPrintStream0.print((float) '\u0092');
      mockPrintStream1.write(byteArray0);
      mockPrintStream3.println((int) '\u0092');
      mockPrintStream1.print("nlb8Sj t:k,YuSJ!'");
      mockPrintStream1.print('\u001A');
      mockPrintStream0.print('\u0092');
      mockPrintStream3.print("nlb8Sj t:k,YuSJ!'");
      mockPrintStream1.print("nlb8Sj t:k,YuSJ!'");
      mockPrintStream1.close();
      mockPrintStream3.flush();
      mockPrintStream0.print((float) (-964));
      mockPrintStream0.println();
      mockPrintStream0.println((-964));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("nlb8Sj t:k,YuSJ!'", (XBUSSystem) null, "1P`F|z?iAvs5f<rh");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)15;
      byteArray0[1] = (byte)46;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "I");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayList0.iterator();
      byteArrayList0.add(byteArray0);
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      byteArrayList0.toByteArray();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)54;
      AxisEngine.getCurrentMessageContext();
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SchemaVersion2001 schemaVersion2001_0 = (SchemaVersion2001)SchemaVersion.SCHEMA_2001;
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope(sOAP12Constants0, schemaVersion2001_0);
      SOAP12Constants sOAP12Constants1 = SOAPConstants.SOAP12_CONSTANTS;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }
}
