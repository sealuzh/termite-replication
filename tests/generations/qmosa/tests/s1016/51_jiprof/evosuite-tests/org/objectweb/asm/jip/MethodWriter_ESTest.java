/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 08:59:17 GMT 2020
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SyncFailedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4901062635730713
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      intArray0[5] = 959;
      int int0 = MethodWriter.ACC_CONSTRUCTOR;
      assertEquals(262144, int0);
      
      ClassWriter classWriter0 = new ClassWriter(262144);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      stringArray0[3] = "<init>";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      int int1 = MethodWriter.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;
      assertFalse(int1 == int0);
      assertEquals(247, int1);
      
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-2909), "<init>", "<init>", "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn(187, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-1891), "<init>", "<init>", "org.objectweb.asm.jip.Frame");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(66, int2);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn(162, "jk", ".JAR", "jk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6826263810860225
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      intArray0[5] = 959;
      int int0 = MethodWriter.ACC_CONSTRUCTOR;
      assertEquals(262144, int0);
      
      ClassWriter classWriter0 = new ClassWriter(262144);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.cr = null;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      stringArray0[3] = "<init>";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      int int1 = MethodWriter.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;
      assertFalse(int1 == int0);
      assertEquals(247, int1);
      
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("Ljava/lang/Synthetic;", "<init>", "<init>", label0, label0, 31);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-2909), "<init>", "<init>", "PCp6xD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn(187, 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-1891), "<init>", "<init>", "org.objectweb.asm.jip.Frame");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      int int2 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(102, int2);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn(162, "jk", ".JAR", "jk");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9185121523781374
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 952;
      intArray0[4] = (-606);
      intArray0[5] = 952;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 952, 0, (-606), 952, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "2RbN)e4I";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = new Item();
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "2RbN)e4I";
      stringArray0[5] = "2RbN)e4I";
      stringArray0[6] = "2RbN)e4I";
      stringArray0[7] = "2RbN)e4I";
      int int1 = classWriter0.newClass("2RbN)e4I");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(2, int1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "2RbN)e4I", "2RbN)e4I", "2RbN)e4I", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      int[] intArray1 = new int[0];
      assertFalse(intArray1.equals((Object)intArray0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray1, label0);
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertNotSame(intArray0, intArray1);
      assertNotSame(intArray1, intArray0);
      assertEquals(7, intArray0.length);
      assertEquals(0, intArray1.length);
      assertArrayEquals(new int[] {0, 0, 952, 0, (-606), 952, 0}, intArray0);
      assertArrayEquals(new int[] {}, intArray1);
      
      methodWriter0.visitInsn(20);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMaxs(0, (-738));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("2RbN)e4I", (-606));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-1135), "AnnotationDefault", "2RbN)e4I", "AnnotationDefault");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7436609014901232
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort((-71));
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("org/objectweb/asm/jip/MethodWriter");
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertNotNull(byteVector2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitFieldInsn(108, "getSize", "org.objectweb.asm.jip.MethodWriter", "]{Z`8^qxTL-v\"Rd");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(32, classReader0.getAccess());
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertSame(label0, label1);
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(32, classReader0.getAccess());
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertFalse(methodWriter2.equals((Object)methodWriter1));
      assertNotSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      int int1 = methodWriter2.getSize();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter2.equals((Object)methodWriter1));
      assertFalse(int1 == int0);
      assertNotSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(630, int1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(8, "RuntimeInvisibleParameterAnnotations", "org.objectweb.asm.jip.MethodWriter", "]{Z`8^qxTL-v\"Rd");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8666487726857606
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "3A{OYWA";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      classWriter0.typeTable = null;
      stringArray0[6] = "3A{OYWA";
      stringArray0[7] = "u9)PST!c?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)0, "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      int int0 = classWriter0.newField("Code", "'rar*ojyZl?QD{nG?", "RuntimeVisibleParameterAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(10, int0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int1 = classWriter0.newField("0'w1_C]:\"BR\u0007T^0n!B", "3A{OYWA", "3A{OYWA");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(14, int1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("3A{OYWA", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertEquals(8, stringArray0.length);
      
      Integer integer0 = new Integer((byte)0);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      int int2 = Integer.min(168, 1682);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(168, int2);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(integer0.equals((Object)int2));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn(1682, "3A{OYWA", "u9)PST!c?", "S:1L\"M`.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIincInsn(2, 3800);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1263), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.880779415263575
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 959;
      intArray0[3] = 168;
      intArray0[4] = (-606);
      intArray0[5] = 959;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 959, 168, (-606), 959, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "2RbN)e4I";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = new Item();
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "2RbN)e4I";
      stringArray0[5] = "2RbN)e4I";
      stringArray0[6] = "2RbN)e4I";
      stringArray0[7] = "2RbN)e4I";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-606), "2RbN)e4I", "2RbN)e4I", "2RbN)e4I", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMaxs(0, (-738));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame((-606), 168, stringArray0, (-606), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn((-2831), 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitVarInsn(168, (-606));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame((-606), (-738), stringArray0, 2337, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      Attribute attribute0 = new Attribute("YR<XC'QTvi~i;FK1o");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)61;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 168, (-606));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5383481358580045
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newUTF8("org.objectweb.asm.jip.ClassWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      String string0 = "LocalVariableTypeTable";
      int int1 = MethodWriter.APPEND_FRAME;
      assertFalse(int1 == int0);
      assertEquals(252, int1);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2882), "RuntimeInvisibleParameterAnnotations", "D4Ynx9Ca<_zx%ggI", "D,|v?;M\"67^]", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.exceptions = null;
      methodWriter0.visitIntInsn((byte)4, 6);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int int2 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(48, int2);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMethodInsn((-1999611873), "", "D,|v?;M\"67^]", "W_1VnU<8$YZ'");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((byte) (-47));
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = new ByteVector();
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertFalse(byteVector2.equals((Object)byteVector0));
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertNotSame(byteVector1, byteVector2);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector3 = byteVector1.putUTF8("LocalVariableTypeTable");
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertFalse(byteVector3.equals((Object)byteVector2));
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertNotSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertNotSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertNotNull(byteVector3);
      
      methodWriter0.visitFrame(6, (-187), stringArray0, 252, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertEquals(0, stringArray0.length);
      
      int int3 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertEquals(65, int3);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector4 = byteVector0.putUTF8("D,|v?;M\"67^]");
      assertFalse(byteVector4.equals((Object)byteVector2));
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertSame(byteVector4, byteVector1);
      assertNotSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertNotNull(byteVector4);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(65535, "LocalVariableTypeTable", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3834763714570184
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = MethodWriter.APPEND_FRAME;
      assertEquals(252, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2882), "RuntimeInvisibleParameterAnnotations", "D4Ynx9Ca<_zx%ggI", "D,|v?;M\"67^]", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.exceptions = null;
      methodWriter0.visitIntInsn((byte)4, 6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(48, int1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMethodInsn((-1999611873), "", "D,|v?;M\"67^]", "W_1VnU<8$YZ'");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((byte) (-47));
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = new ByteVector();
      assertFalse(byteVector2.equals((Object)byteVector0));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotSame(byteVector1, byteVector2);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector3 = byteVector1.putUTF8("LocalVariableTypeTable");
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertFalse(byteVector3.equals((Object)byteVector2));
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertNotSame(byteVector1, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertNotSame(byteVector3, byteVector2);
      assertNotNull(byteVector3);
      
      methodWriter0.visitFrame(6, (-187), stringArray0, 252, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector4 = byteVector0.putUTF8("D,|v?;M\"67^]");
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector4.equals((Object)byteVector2));
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector1);
      assertNotSame(byteVector4, byteVector2);
      assertNotNull(byteVector4);
      
      methodWriter0.visitMethodInsn(924, "8&L)c:U7,Y7", "LocalVariableTypeTable", "^i");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.put(byteVector3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertFalse(byteVector3.equals((Object)byteVector2));
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertNotSame(byteVector1, byteVector2);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertNotSame(byteVector3, byteVector2);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4027320506376482
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-44);
      String string0 = "3A{OYWA";
      ClassWriter classWriter0 = new ClassWriter((byte) (-44));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "3A{OYWA";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      stringArray0[6] = "3A{OYWA";
      stringArray0[7] = "3A{OYWA";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label0.info = (Object) "org.objectweb.asm.jip.ByteVector";
      label1.line = 470;
      methodWriter0.visitLocalVariable("0${P", "org.yasl.jars.JarFileFilter", "org.objectweb.asm.jip.ByteVector", label1, label1, (-1631501986));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(8, stringArray0.length);
      
      Label label2 = label1.next;
      assertNull(label2);
      
      String string1 = "Ljava/lang/Syntetic;";
      int int0 = 170;
      methodWriter0.visitLocalVariable("LineNum~erTablZ", "Ljava/lang/Syntetic;", "3A{OYWA", label1, label1, 170);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(8, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(196, (byte) (-44));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      String string0 = "u9)PST!c?";
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn((-1099), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.452461591529193
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      String[] stringArray1 = classReader0.getInterfaces();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertNotNull(stringArray1);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, stringArray1.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("org/objectweb/asm/jip/MethodWriter");
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector0, byteVector1);
      assertNotNull(byteVector1);
      
      methodWriter0.visitMultiANewArrayInsn("uu5S7i#?\"%7.5Cb", (-57));
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, classReader0.getAccess());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 16777220, stringArray0, 2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9809896824453154
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte byte0 = (byte) (-44);
      byteArray0[2] = (byte) (-44);
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      String string0 = "org.objectweb.asm.jip.MethodWriter";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int0 = 1048575;
      // Undeclared exception!
      try { 
        methodWriter1.visitInsn(1048575);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5281625992099137
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn((-752), 10);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector0, byteVector1);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector1.putLong((-380L));
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector2.putByte(24);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertNotNull(byteVector3);
      
      methodWriter0.put(byteVector3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(8859, "org.objectweb.asm.jip.MethodWriter", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8859
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5997401706918097
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = MethodWriter.APPEND_FRAME;
      assertEquals(252, int0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2882), "RuntimeInvisibleParameterAnnotations", "D4Ynx9Ca<_zx%ggI", "D,|v?;M\"67^]", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.exceptions = null;
      methodWriter0.visitIntInsn((byte)4, 6);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(48, int1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMethodInsn((-1999611873), "", "D,|v?;M\"67^]", "W_UU1VnU<8$YZ'");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((byte) (-47));
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = new ByteVector();
      assertFalse(byteVector2.equals((Object)byteVector0));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertNotSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("y>l", "RuntimeInvisibleParameterAnnotations", "&aa%!jx`VGzYV4", label0, label0, 252);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector3 = byteVector1.putUTF8("LocalVariableTypeTable");
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertFalse(byteVector3.equals((Object)byteVector2));
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertNotSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector3, byteVector0);
      assertNotSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertNotNull(byteVector3);
      
      ByteVector byteVector4 = classWriter0.pool;
      assertFalse(byteVector4.equals((Object)byteVector2));
      assertFalse(byteVector4.equals((Object)byteVector3));
      assertFalse(byteVector4.equals((Object)byteVector0));
      assertFalse(byteVector4.equals((Object)byteVector1));
      assertNotSame(byteVector4, byteVector2);
      assertNotSame(byteVector4, byteVector3);
      assertNotSame(byteVector4, byteVector0);
      assertNotSame(byteVector4, byteVector1);
      assertNotNull(byteVector4);
      
      methodWriter0.put(byteVector4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(byteVector4.equals((Object)byteVector2));
      assertFalse(byteVector4.equals((Object)byteVector3));
      assertFalse(byteVector4.equals((Object)byteVector0));
      assertFalse(byteVector4.equals((Object)byteVector1));
      assertNotSame(byteVector4, byteVector2);
      assertNotSame(byteVector4, byteVector3);
      assertNotSame(byteVector4, byteVector0);
      assertNotSame(byteVector4, byteVector1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitFrame(6, (-187), stringArray0, 252, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector5 = byteVector0.putUTF8("D,|v?;M\"67^]");
      assertFalse(byteVector5.equals((Object)byteVector2));
      assertFalse(byteVector5.equals((Object)byteVector4));
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector0.equals((Object)byteVector4));
      assertSame(byteVector5, byteVector1);
      assertSame(byteVector5, byteVector3);
      assertNotSame(byteVector5, byteVector2);
      assertSame(byteVector5, byteVector0);
      assertNotSame(byteVector5, byteVector4);
      assertSame(byteVector0, byteVector5);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertNotSame(byteVector0, byteVector4);
      assertNotNull(byteVector5);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(65535, "LocalVariableTypeTable", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8955161315495717
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(6, int0);
      
      methodWriter0.visitVarInsn(6, 6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "AnnotationDefault", "ILek2S.Q;)gj", "u9)PST!c?", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      assertEquals(0, stringArray0.length);
      
      classWriter0.visit(24117248, 1646, "u9)PST!c?", "org.objectweb.asm.jip.Item", "vPr='r-`^V@<#)X2Rcs", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitMultiANewArrayInsn("endFrame", 274);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitIincInsn(57, (-829));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitLdcInsn("u9)PST!c?");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 57;
      intArray0[1] = 2;
      int int1 = MethodWriter.getNewOffset(intArray0, intArray0, 24117248, 1646);
      assertFalse(int1 == int0);
      assertEquals((-24115602), int1);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {57, 2}, intArray0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleParameterAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3364250972172522
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int int0 = MethodWriter.ACC_CONSTRUCTOR;
      assertEquals(262144, int0);
      
      ClassWriter classWriter0 = new ClassWriter(187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "Heul6_TT2kPuAbQ{";
      int int1 = MethodWriter.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;
      assertFalse(int1 == int0);
      assertEquals(247, int1);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-720), "Heul6_TT2kPuAbQ{", "2RbN)e4I", "Synthetic", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-2), "Synthetic", "Synthetic", "PCp6xD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitIntInsn(247, 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn(103, "Hh_(%=u=2nf5", "Synthetic", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9175252317901692
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "RuntimeVisibleParameterAnnotations", "ILek2S.Q;)gj");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, int0);
      
      methodWriter0.visitVarInsn(7, 7);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "AnnotationDefault", "ILek2S.Q;)gj", "u9)PST!c?", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitTypeInsn((-2227), "6B|xUY<L:_:8A");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      classWriter0.visit(24117248, 1646, "u9)PST!c?", "org.objectweb.asm.jip.Item", "vPr='r-`^V@<#)X2Rcs", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitIincInsn(63, (-829));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitLdcInsn("u9)PST!c?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[2];
      intArray0[1] = 63;
      intArray0[1] = 2;
      int int1 = MethodWriter.getNewOffset(intArray0, intArray0, 24117248, 1646);
      assertFalse(int1 == int0);
      assertEquals((-24115602), int1);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {0, 2}, intArray0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleParameterAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-997));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = false;
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("org.yasl.jars.JarFileFilter", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AnnotationDefault");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Item item0 = classWriter0.newInteger((-997));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[6];
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.yasl.jars.JarFileFilter");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      stringArray0[0] = "gDUm+d7F6";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "AnnotationDefault";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "mi?t";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "mi?t", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(169);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.put12(167, 1317);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertNotNull(byteVector2);
      
      methodWriter0.classReaderOffset = (-997);
      ByteVector byteVector3 = byteVector0.putByte(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertNotNull(byteVector3);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5526460376828974
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, classReader0.getAccess());
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn((-752), 10);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(181, "", "]{Z`8^qxTL-v\"Rd", "]{Z`8^qxTL-v\"Rd");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(10, "getNewOffset", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9394293543338671
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-997));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("org.yasl.jars.JarFileFilter", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AnnotationDefault");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[iMY&/Q-|i";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "AnnotationDefault";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "mi?t";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "mi?t", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.exceptionCount = (-997);
      ByteVector byteVector1 = byteVector0.putByte(169);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.put12(167, 1317);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector0.putByte(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertNotNull(byteVector3);
      
      methodWriter0.put(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertEquals(6, stringArray0.length);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
      assertEquals(6, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(28, "Z0Fq< hv{x=|z9A3]-", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0877867272733917
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 46;
      intArray0[5] = 46;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 46, 0, 0, 46, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "3inb-S";
      stringArray0[2] = "2RbN)e4I";
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "3inb-S";
      stringArray0[5] = "3inb-S";
      stringArray0[6] = "3inb-S";
      stringArray0[7] = "3inb-S";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "2RbN)e4I", "2RbN)e4I", "3inb-S", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn(1, (-2392));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMethodInsn(64, "m<Y6q/U 74", "3inb-S", "C1pNR@<)aa5<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      int int1 = MethodWriter.getNewOffset(intArray0, intArray0, 0, (-3453));
      assertFalse(int1 == int0);
      assertEquals((-3453), int1);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 46, 0, 0, 46, 0}, intArray0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      labelArray0[8] = label0;
      methodWriter0.visitTableSwitchInsn(25165824, (-1194), label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(9, labelArray0.length);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "]Z;`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]Z;`8^qxTL-v\"Rd";
      stringArray0[5] = "LocalVariableTable";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Attribute attribute0 = new Attribute("&B/*xmV<f>`QcQ*");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      char[] charArray0 = new char[3];
      charArray0[0] = 'o';
      charArray0[1] = 'R';
      charArray0[2] = 'o';
      Attribute attribute1 = attribute0.read(classReader0, 1, 8, charArray0, 8, (Label[]) null);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertFalse(attribute1.equals((Object)attribute0));
      assertNotSame(attribute1, attribute0);
      assertNotSame(attribute0, attribute1);
      assertNotNull(attribute1);
      assertTrue(attribute1.isUnknown());
      assertFalse(attribute1.isCodeAttribute());
      assertEquals(32, classReader0.getAccess());
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(3, charArray0.length);
      assertArrayEquals(new char[] {'o', 'R', 'o'}, charArray0);
      
      short short0 = MethodWriter.readShort(classReader0.b, 4);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals((short)0, short0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("]Z;`8^qxTL-v\"Rd", false);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertEquals(32, classReader0.getAccess());
      
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
      
      short short1 = MethodWriter.readShort(classReader0.b, 4);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertTrue(short1 == short0);
      assertEquals(32, classReader0.getAccess());
      assertEquals((short)0, short1);
      
      int int0 = MethodWriter.readUnsignedShort(classReader0.b, 74);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(193, int0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6008916923492216
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Class not found");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "visitSwitchInsn";
      stringArray0[1] = "~lii";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1646, "~lii", "ILek2S.Q;)gj", "Signature", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitMaxs(2, (-738));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("Class not found", 1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitFrame(24117248, (-606), stringArray0, 24117248, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitFieldInsn(1, "java/lang/Throwable", "Code", "4RTigAI!");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q$m4VQ");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitIntInsn(1048575, 1048575);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitVarInsn(2924, 2924);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitFrame((-2845), (-1797779375), stringArray0, 4, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.83689271755236
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 959, 0, 0, 0, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn(1, (-2392));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(61, int1);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMethodInsn(2, "m<Y6q/U 74", "<init>", "C1pNR@<)aa5<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int2 = MethodWriter.getNewOffset(intArray0, intArray0, 0, (-3453));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-3453), int2);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 959, 0, 0, 0, 0}, intArray0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(285212682);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 285212682
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5768275835575647
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn((-752), 10);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(181, "", "]{Z`8^qxTL-v\"Rd", "]{Z`8^qxTL-v\"Rd");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitParameterAnnotation(2, "boolean", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(annotationVisitor0);
      
      methodWriter1.visitMultiANewArrayInsn("Mk'Fq'UJ8uz3Ps ", 169);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0335620542068176
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)33;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)69, (byte)58, (byte) (-8), (byte)3, (byte)33}, byteArray0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 1646;
      intArray0[1] = 127;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertEquals(2, intArray0.length);
      assertEquals(1, labelArray0.length);
      assertArrayEquals(new int[] {1646, 127}, intArray0);
      
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "u9)PST!c?";
      stringArray1[1] = "KEK1`%~tArR!lio:1";
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation(127, "Ljava/lang/Synthetic;", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertNotNull(annotationVisitor0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.923840705630872
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[2] = (byte) (-44);
      String string0 = "0'w1_C]:\"BR\\7T^0n!B";
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(39, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6830834337877527
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      String string0 = "RuntimeVisibleParameterAnnotations";
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "RuntimeVisibleParameterAnnotations", "ILek2S.Q;)gj");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, int0);
      
      methodWriter0.visitVarInsn(7, 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "RuntimeVisibleParameterAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(44, int1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitFrame(2, 24117248, stringArray0, 12, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(55, int2);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMaxs(24117248, 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitFieldInsn(24117248, "AnnotationDefault", "Uz+[", "Uz+[");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1204, (String) null, "AnnotationDefault", "u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      int int0 = (-2057);
      ClassWriter classWriter0 = new ClassWriter((-2057));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newLong(46);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Item item1 = classWriter0.newInteger(46);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      ClassWriter classWriter1 = new ClassWriter(57);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<init>";
      stringArray0[1] = "2RbN)e4I";
      stringArray0[2] = "2RbN)e4I";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter1, (-847), "<init>", "<init>", "2RbN)e4I", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4127431447570156
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-44);
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OwYW>";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OwYW>";
      stringArray0[3] = "3A{OwYW>";
      stringArray0[4] = "3A{OwYW>";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      Item item0 = classWriter0.newDouble((-707.113823669));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[5] = "3A{OwYW>";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Item item1 = classWriter0.newLong((byte) (-44));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(52, int0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame(2, 67, stringArray0, 67, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(int1 == int0);
      assertEquals(52, int1);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn(24117248, "{ulia$oK", "RuntimeInvisibleParameterAnnotations", "BJ??{}%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMethodInsn(24117248, "u", "3A{OwYW>", "0'w1_C]:\"BR\u0007T^0n!B");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-997));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = false;
      classWriter0.invalidFrames = true;
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("org.yasl.jars.JarFileFilter", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[iMY&/Q-|i";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "AnnotationDefault";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "int";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "int", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      byteVector1.length = 1317;
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1874157698436563
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      int[] intArray0 = new int[0];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 262144, 2);
      assertEquals((-262142), int0);
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
      
      ClassWriter classWriter1 = new ClassWriter((-262142));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      int int1 = 17;
      int int2 = (-1718);
      Item item0 = classWriter0.newInteger((-1718));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertNotNull(item0);
      
      int int3 = 612;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 612, "~[", "2RbN)e4I", "java/lang/String", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn("~[", (-262142));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0270413586205684
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-997));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[iMY:/Q-|i";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "int";
      stringArray0[3] = "AnnotationDefault";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "int";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "int", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitMultiANewArrayInsn("int", (-3960));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, stringArray0.length);
      
      int int0 = 16777221;
      methodWriter0.visitFrame(65535, 65535, stringArray0, 16777221, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector1 = byteVector0.putUTF8("AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(6, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(28, "Z0Fq< hv{x=|z9A3]-", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9851422457858205
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      intArray0[3] = 959;
      intArray0[4] = (-606);
      intArray0[5] = 959;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 959, 959, (-606), 959, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "2RbN)e4I";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = classWriter0.newInteger(63);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "2RbN)e4I";
      stringArray0[5] = "2RbN)e4I";
      stringArray0[6] = "2RbN)e4I";
      Item item1 = classWriter0.newClassItem("2RbN)e4I");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      stringArray0[7] = "2RbN)e4I";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 140, "2RbN)e4I", "2RbN)e4I", "2RbN)e4I", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMaxs(0, (-738));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("2RbN)e4I", 140);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame(140, 959, stringArray0, (-606), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn((-2818), 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(959, (-606));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 959
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9127768522596668
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-997));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "AnnotationDefault";
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("org.yasl.jars.JarFileFilter", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[iMY&/Q-|i";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "AnnotationDefault";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "mi?t";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "mi?t", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(169);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      int int0 = 167;
      ByteVector byteVector2 = byteVector0.put12(167, 1317);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector0.putByte(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertNotNull(byteVector3);
      
      methodWriter0.put(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertEquals(6, stringArray0.length);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
      assertEquals(6, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(28, "Z0Fq< hv{x=|z9A3]-", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6241224465877149
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int[] intArray0 = new int[13];
      intArray0[0] = (-71);
      ClassWriter classWriter0 = new ClassWriter((-71));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitIntInsn((-71), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray0.length);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(46, int0);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitMethodInsn(46, "!1qU~I>8H[9mM", "", "SKo*^v!_]/,Qbim_AYh");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray0.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(1L);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.put12(63, 46);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitLdcInsn("");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitInsn(6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitFieldInsn(6, "", "!1qU~I>8H[9mM", "visitInsn");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitFrame(355, 132, stringArray0, (-1746165515), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3054616844516953
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "vPr='r-`^V@<#)X2Rcs", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "u9)PST!c?";
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 2;
      label0.status = 2;
      methodWriter0.visitLocalVariable("u9)PST!c?", "AnnotationDefault", "; mGUuDu2^q}65Vsx~K", label0, label0, 3833);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitIntInsn(25, 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitVarInsn(25, 25);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitLocalVariable("u9)PST!c?", "m", (String) null, label0, label0, 1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1209744536186617
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 46;
      intArray0[5] = 46;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 46, 0, 0, 46, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn(1, (-2392));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(61, int1);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMethodInsn(256, "m<Y6q/U 74", "<init>", "C1pNR@<)aa5<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int2 = MethodWriter.getNewOffset(intArray0, intArray0, 0, (-3453));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((-3453), int2);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 46, 46, 0, 0, 46, 0}, intArray0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      labelArray0[8] = label0;
      methodWriter0.visitTableSwitchInsn(25165824, 32, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(9, labelArray0.length);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      ClassWriter classWriter0 = new ClassWriter(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1641, ".jar", "", "u9)PST!c?", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn(2, (String) null, "", "u9)PST!c?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.readShort((byte[]) null, 131072);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.8640743672698762
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-997));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = false;
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("org.yasl.jars.JarFileFilter", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[iMY&/Q-|i";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "AnnotationDefault";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "mi?t";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "mi?t", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(169);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.put12(167, 1317);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector0.putByte(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertNotNull(byteVector3);
      
      ByteVector byteVector4 = byteVector3.putUTF8("AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector1);
      assertNotNull(byteVector4);
      
      methodWriter0.put(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertEquals(6, stringArray0.length);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
      assertEquals(6, stringArray0.length);
      
      int int0 = 28;
      String string0 = "Z0Fq< hv{x=|z9A3]-";
      AnnotationVisitor annotationVisitor2 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor2.equals((Object)annotationVisitor1));
      assertFalse(annotationVisitor2.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor2, annotationVisitor1);
      assertNotSame(annotationVisitor2, annotationVisitor0);
      assertNotNull(annotationVisitor2);
      assertEquals(6, stringArray0.length);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-997), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[5] = "LocalVariableTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "]{Z`8^qxTL-v\"Rd", "LocalVariableTable", "]{Z`8^qxTL-v\"Rd", stringArray0, false, false);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      short short0 = MethodWriter.readShort(classReader0.b, 2);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals((short) (-17730), short0);
      
      int[] intArray0 = new int[1];
      Attribute attribute0 = new Attribute(")QIicxcW[}8f,*R9");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8859);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1646, ".jar", "", "9)PST!c?", (String[]) null, false, false);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(32, classReader0.getAccess());
      
      Attribute attribute0 = new Attribute("addSuccessor");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.268010275922721
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "u9)PST!c?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 54, "AnnotationDefault", "ILek2S.Q;)gj", "ILek2S.Q;)gj", (String[]) null, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(2, 2362);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn((-574), 1646);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.27676723505855
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte byte0 = (byte) (-44);
      byteArray0[2] = (byte) (-44);
      String string0 = "0'w1_C]:\"BR\\7T^0n!B";
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(8, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4324426819546385
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[2] = (byte) (-44);
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitLocalVariable("LineNumberTable", "3A{OYWA", "0'w1_C]:\"BR\u0007T^0n!B", label0, label0, 170);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMultiANewArrayInsn("jkFyi&P>0q", 262144);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = (int) (byte) (-44);
      intArray0[1] = 262144;
      intArray0[2] = 170;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.923840705630872
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      intArray0[3] = 46;
      intArray0[4] = (-606);
      ClassWriter classWriter0 = new ClassWriter(46);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = classWriter0.newInteger(959);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 144, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("2RbN)e4I", 144);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Label label2 = label1.next;
      assertNull(label2);
      
      Label[] labelArray0 = new Label[4];
      label0.info = (Object) label1;
      labelArray0[1] = label1;
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9809896824453154
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter((-966));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ILek2S.Q;)gj";
      stringArray0[1] = "Ljava/lang/Synthetic;";
      stringArray0[2] = "ILek2S.Q;)gj";
      stringArray0[3] = "AnnotationDefault";
      stringArray0[4] = "ILek2S.Q;)gj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 759, "AnnotationDefault", "ILek2S.Q;)gj", "AnnotationDefault", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(5, stringArray0.length);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(127, "n,kL&F<EV8Hr^gk{", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 127
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.9603152858620798
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 959;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      intArray0[3] = 168;
      intArray0[4] = (-606);
      intArray0[5] = 959;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      assertEquals(0, int0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 959, 168, (-606), 959, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "2RbN)e4I";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = new Item();
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "2RbN)e4I";
      stringArray0[5] = "2RbN)e4I";
      stringArray0[6] = "2RbN)e4I";
      stringArray0[7] = "2RbN)e4I";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 140, "2RbN)e4I", "2RbN)e4I", "2RbN)e4I", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMaxs(0, (-738));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("2RbN)e4I", 140);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame(140, 168, stringArray0, (-606), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitIntInsn((-2845), 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitVarInsn(168, (-606));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame((-606), (-738), stringArray0, 2337, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      Attribute attribute0 = new Attribute("YR<XC'QTvi~i;FK1o");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)61;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 168, (-606));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2568032738161419
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      intArray0[3] = 168;
      intArray0[4] = (-606);
      intArray0[5] = 959;
      int int0 = MethodWriter.RESERVED;
      assertEquals(128, int0);
      
      ClassWriter classWriter0 = new ClassWriter(128);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = classWriter0.newInteger(63);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("2RbN)e4I", 162);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int1 = (-2818);
      int int2 = 4;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(959, "Ljava/lang/Synthetic;", "java/lang/Class", "<init>");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.408789974384999
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2183), "vPr='r-`^V@<#)X2Rcs", "vPr='r-`^V@<#)X2Rcs", "vPr='r-`^V@<#)X2Rcs", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(2, 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(48, int0);
      
      methodWriter1.visitMethodInsn(292552704, "visitFieldInsn", "visitAttribute", "03EDGdP8XcPvmO33W");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5175847496708468
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-44);
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OwYW>";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OwYW>";
      stringArray0[3] = "3A{OwYW>";
      stringArray0[4] = "3A{OwYW>";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      Item item0 = classWriter0.newDouble((-707.113823669));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[5] = "3A{OwYW>";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Item item1 = classWriter0.newLong((byte) (-44));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(52, int0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFrame(2, 67, stringArray0, 67, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(int1 == int0);
      assertEquals(52, int1);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn(24117248, "{ulia$oK", "RuntimeInvisibleParameterAnnotations", "BJ??{}%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(24117248, "u", "3A{OwYW>", "0'w1_C]:\"BR\u0007T^0n!B");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.444455835255825
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 66);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(4, 417);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(2, "visitJumpInsn", "LocalVariableTable", "#*SqwF(dKr5$<(I*:v");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn((-2876), "LocalVariableTable", (String) null, "]{Z`8^qxTL-v\"Rd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.662637338477698
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, (-1068));
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(2, 8859);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string2 = null;
      String string3 = "t qhg5Em?eQ8ow<b)y]";
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(267386880, (String) null, "org/objectweb/asm/jip/MethodWriter", "t qhg5Em?eQ8ow<b)y]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7920662910666432
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "vPr='r-`^V@<#)X2Rcs";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "RuntimeVisibleParameterAnnotations", "ILek2S.Q;)gj");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, int0);
      
      methodWriter0.visitVarInsn(7, 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "AnnotationDefault", "ILek2S.Q;)gj", "u9)PST!c?", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      assertEquals(0, stringArray0.length);
      
      classWriter0.visit(24117248, 1646, "u9)PST!c?", "org.objectweb.asm.jip.Item", "vPr='r-`^V@<#)X2Rcs", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitIincInsn(57, (-829));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitLdcInsn("u9)PST!c?");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 57;
      intArray0[1] = 2;
      int int1 = MethodWriter.getNewOffset(intArray0, intArray0, 24117248, 1646);
      assertFalse(int1 == int0);
      assertEquals((-24115602), int1);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {57, 2}, intArray0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleParameterAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.27676723505855
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[2] = (byte) (-44);
      String string0 = "0'w1_C]:\"BR\\7T^0n!B";
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-44), "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(8, stringArray0.length);
      
      int int0 = (-855);
      // Undeclared exception!
      try { 
        methodWriter1.visitIincInsn((-456), (-855));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -456
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.47413931305783735
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-44);
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OwYW>";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OwYW>";
      stringArray0[3] = "3A{OwYW>";
      stringArray0[4] = "3A{OwYW>";
      Item item0 = classWriter0.newDouble((-707.113823669));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[5] = "3A{OwYW>";
      classWriter0.typeTable = null;
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      int int0 = classWriter0.addType("u-4?0");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "i-JWUi)ZB73", "`eNu4tMiMqrsE<J", "0'w1_C]:\"BR\u0007T^0n!B", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      methodWriter0.visitIntInsn(2321, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.9206749331358033
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-47);
      int int0 = MethodWriter.SAME_LOCALS_1_STACK_ITEM_FRAME;
      assertEquals(64, int0);
      
      ClassWriter classWriter0 = new ClassWriter((byte)17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int1 = classWriter0.addType("LocalVariableTypeTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2882), "RuntimeInvisibleParameterAnnotations", "D4Ynx9Ca<_zx%ggI", "D,|v?;M\"67^]", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.exceptions = null;
      methodWriter0.visitIntInsn((byte)4, 6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(48, int2);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2943, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[5] = "LocalVariableTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "]{Z`8^qxTL-v\"Rd", "LocalVariableTable", "]{Z`8^qxTL-v\"Rd", stringArray0, false, false);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      short short0 = MethodWriter.readShort(classReader0.b, 2);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(32, classReader0.getAccess());
      assertEquals((short) (-17730), short0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      label0.status = 8859;
      Label[] labelArray0 = new Label[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      int int0 = MethodWriter.readUnsignedShort(classReader0.b, 8859);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(32, classReader0.getAccess());
      assertEquals(32, int0);
      
      methodWriter0.visitCode();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1628);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNull(methodWriter0);
      
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "u9)PST!c?";
      stringArray1[1] = "KEK1`%~tArR!lio:1";
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)70;
      int int0 = MethodWriter.readInt(byteArray0, 1);
      assertEquals(0, int0);
      assertEquals(11, byteArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5025207636681173
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("resizeInstructions");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(2, 16777220, (Label) null, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.7214636866925115
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int[] intArray0 = new int[13];
      intArray0[0] = (-61);
      ClassWriter classWriter0 = new ClassWriter((-61));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(1, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label1.info = (Object) label0;
      labelArray0[8] = label1;
      methodWriter0.visitTableSwitchInsn(1, 32, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertEquals(1, stringArray0.length);
      assertEquals(9, labelArray0.length);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7235378001742219
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = "]Z;`8^qxTL-v\"Rd";
      stringArray0[2] = "]Z;`8^qxTL-v\"Rd";
      stringArray0[3] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[4] = "]Z;`8^qxTL-v\"Rd";
      stringArray0[5] = "org/objectweb/asm/jip/MethodWriter";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 75, "]Z;`8^qxTL-v\"Rd", "org/objectweb/asm/jip/MethodWriter", "]Z;`8^qxTL-v\"Rd", stringArray0, false, false);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      short short0 = MethodWriter.readShort(classReader0.b, 2);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(32, classReader0.getAccess());
      assertEquals((short) (-17730), short0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      label0.status = 8859;
      int int0 = MethodWriter.APPEND_FRAME;
      assertEquals(252, int0);
      
      methodWriter0.visitMaxs(2, 1);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      Label[] labelArray0 = new Label[23];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      Label label1 = label0.getFirst();
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertNotNull(label1);
      
      label0.next = label1;
      methodWriter0.visitFieldInsn(259, "org.objectweb.asm.jip.MethodWriter", "]Z;`8^qxTL-v\"Rd", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(63, int1);
      assertEquals(6, stringArray0.length);
      
      methodWriter0.visitMethodInsn(252, "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "E3FnclosiygMethod");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "E3FnclosiygMethod");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
      
      int int2 = MethodWriter.FULL_FRAME;
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(255, int2);
      
      methodWriter0.visitTypeInsn(2591, "Code");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5025207636681173
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn((-752), 10);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(181, "", "]{Z`8^qxTL-v\"Rd", "]{Z`8^qxTL-v\"Rd");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-914), "]{Z`8^qxTL-v\"Rd", "E?", "IusO/,_*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1048575);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ILek2S.Q;)gj";
      stringArray0[1] = "H";
      stringArray0[2] = "H";
      stringArray0[3] = "H";
      stringArray0[4] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[5] = "D,|v?;M\"67^]";
      stringArray0[6] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[7] = "H";
      stringArray0[8] = "D,|v?;M\"67^]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 25165824, "ILek2S.Q;)gj", "z/6Hl9fcbEJ?l-[P", "H", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(9, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3925), "ILek2S.Q;)gj", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)113;
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte) (-105);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      int[] intArray0 = new int[5];
      intArray0[4] = 0;
      intArray0[1] = (int) (byte)110;
      intArray0[2] = (int) (byte)110;
      intArray0[3] = (int) (byte) (-95);
      intArray0[4] = (int) (byte)54;
      int[] intArray1 = new int[2];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 0;
      intArray1[1] = (int) (byte)113;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray0, intArray1, 64, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.2394967485779316
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "AnnotationDefault";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "RuntimeVisibleParameterAnnotations", "ILek2S.Q;)gj");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, int0);
      
      methodWriter0.visitVarInsn(7, 7);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitIincInsn((-17730), (-2013));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitInsn(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5025207636681173
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn((-752), 10);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(181, "", "]{Z`8^qxTL-v\"Rd", "]{Z`8^qxTL-v\"Rd");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-914), "]{Z`8^qxTL-v\"Rd", "E?", "IusO/,_*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(74, "]{Z`8^qxTL-v\"Rd");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.923840705630872
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      intArray0[3] = 46;
      intArray0[4] = (-606);
      ClassWriter classWriter0 = new ClassWriter(46);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      Item item0 = classWriter0.newLong(144);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[2] = "2RbN)e4I";
      Item item1 = classWriter0.newInteger(959);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      stringArray0[7] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 144, "2RbN)e4I", "2RbN)e4I", "<init>", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitTypeInsn(752, "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Label label2 = label1.next;
      assertNull(label2);
      
      label1.status = 184;
      Label[] labelArray0 = new Label[4];
      label0.info = (Object) label1;
      labelArray0[1] = label1;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertNotNull(byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.2990863371591326
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-995));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[iMY:/Q-|i";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "int";
      stringArray0[3] = "AnnotationDefault";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "int";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1317, "<slPUA", "K(@Na6]F#5m}:K:e9Fo", "int", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(6, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitLdcInsn("[iMY:/Q-|i");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, stringArray0.length);
      
      methodWriter0.visitInsn(16777216);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, stringArray0.length);
      
      methodWriter0.visitFieldInsn((-2487), "K(@Na6]F#5m}:K:e9Fo", "int", "<slPUA");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, stringArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitFrame((-54), (-409), stringArray0, (-1746165515), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.478418226732574
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.addType("SWp5[;%L<RU|wC,");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "D,|v?IM\"6)^]", ")F)^eSy(H .O^", "org/objectweb/asm/jip/MethodWriter", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2700);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(36, int1);
      
      methodWriter0.visitMethodInsn(159, "org/objectweb/asm/jip/MethodWriter", "LocalVariableTypeTable", "writeFrameType");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(24117258);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putLong(159);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      
      methodWriter0.visitLdcInsn("LocalVariableTypeTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(70);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(70, "", "java/lang/Throwable", "SWp5[;%L<RU|wC,");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(77);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(77, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      
      methodWriter0.visitTypeInsn(119, "&HW#Z!fkqOEV5H");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.6786401565206677
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      String[] stringArray1 = classReader0.getInterfaces();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertNotNull(stringArray1);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, stringArray1.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      int int1 = (-1);
      methodWriter0.visitIntInsn(2, 8);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitLdcInsn("LocalVariableTable");
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(32, classReader0.getAccess());
      
      methodWriter1.visitMultiANewArrayInsn("2RbN)e4I", 2);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(32, classReader0.getAccess());
      
      methodWriter0.visitTypeInsn(752, "&aa%!jx`VGzYV4");
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(32, classReader0.getAccess());
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Label label2 = label0.next;
      assertNull(label2);
      
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(byteArrayInputStream0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(31546, byteArrayInputStream0.available());
      
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (-2818));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4239412710826442
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMaxs(68, 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitTypeInsn((-4474), "AnnotationDefault");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitVarInsn(391, (-1099));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Item item0 = classWriter0.newLong(523L);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn((-4474), "D,|v?;M\"67^]", "8E;", "Ywb.6QJVVeh\u0002s");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMethodInsn(101, "/ej^uplWc89<", "K(@Na6]F#5m}:K:e9Fo", "swq");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5768582645578115
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 959;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      intArray0[3] = 168;
      intArray0[4] = (-606);
      intArray0[5] = 959;
      ClassWriter classWriter0 = new ClassWriter((-606));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "2RbN)e4I";
      stringArray0[2] = "2RbN)e4I";
      Item item0 = new Item();
      assertNotNull(item0);
      
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "2RbN)e4I";
      stringArray0[5] = "2RbN)e4I";
      stringArray0[6] = "2RbN)e4I";
      stringArray0[7] = "2RbN)e4I";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "2RbN)e4I", "2RbN)e4I", "2RbN)e4I", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMaxs(959, (-738));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn("2RbN)e4I", (-606));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 168, stringArray0, (-606), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5902696011065307
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oj\"]~Vo&2");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(256, "ILek2S.Q;)gj", "visitTryCatchBlock", (String) null, "vPr='r-`^V@<#)X2Rcs");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(fieldVisitor0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "RuntimeVisibleParameterAnnotations", "AnnotationDefault", "<init>", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "ILek2S.Q;)gj", "vPr='r-`^V@<#)X2Rcs");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(9, int0);
      
      methodWriter0.visitVarInsn(9, 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("j=", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitInsn(9);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(3692);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(3692, (int)integer0);
      
      methodWriter0.visitLdcInsn("ILek2S.Q;)gj");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean3 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ILek2S.Q;)gj");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      methodWriter0.visitIntInsn(17, (-847));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-47);
      int int0 = MethodWriter.readInt(byteArray0, 0);
      assertEquals(4274961, int0);
      assertEquals(6, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)65, (byte)59, (byte)17, (byte)4, (byte) (-47)}, byteArray0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7361096026012421
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "3A{OYWA";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      classWriter0.typeTable = null;
      stringArray0[6] = "3A{OYWA";
      stringArray0[7] = "u9)PST!c?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)0, "u9)PST!c?", "u9)PST!c?", "u9)PST!c?", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(8, stringArray0.length);
      
      int int0 = classWriter0.newField("Code", "'rar*ojyZl?QD{nG?", "RuntimeVisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(10, int0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      int int1 = classWriter0.newField("0'w1_C]:\"BR\u0007T^0n!B", "org.objectweb.asm.ip.Label", "3A{OYWA");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(15, int1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("3A{OYWA", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertEquals(8, stringArray0.length);
      
      Integer integer0 = new Integer((byte)0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      int int2 = Integer.min(168, 1682);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(168, int2);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int2));
      assertEquals(8, stringArray0.length);
      
      methodWriter0.visitFieldInsn(1682, "3A{OYWA", "u9)PST!c?", "S:1L\"M`.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      Item item0 = classWriter0.newNameTypeItem("3A{OYWA", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter0.visitIincInsn(2, 3800);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7207657998988828
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = 1646;
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      Integer integer0 = new Integer(2);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      int int1 = Integer.max(2, 1339);
      assertFalse(int1 == int0);
      assertEquals(1339, int1);
      
      methodWriter0.visitVarInsn((int) integer0, (int) integer0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int2 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(35, int2);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitFrame(2, 24117248, stringArray0, 12, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int3 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals(46, int3);
      assertEquals(0, stringArray0.length);
      
      int int4 = 24117248;
      methodWriter0.visitMaxs(24117248, 24117248);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitFieldInsn(24117248, "AnnotationDefault", "Uz+[", "Uz+[");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitTypeInsn(2, "Uz+[");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      classWriter0.visitSource(".dG=(lh`[", "AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@557c78eb
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      ClassWriter classWriter0 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "visitMultiANewArrayInsn", "org.objectweb.asm.jip.MethodWriter", "char", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("6eTr!`6JjZw6,0?8'", (String) null, "org.objectweb.asm.jip.MethodWriter", label0, label0, 169);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.501327210229093
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oj\"]~Vo&2");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "RuntimeVisibleParameterAnnotations", "AnnotationDefault", "<init>", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newField("vPr='r-`^V@<#)X2Rcs", "ILek2S.Q;)gj", "vPr='r-`^V@<#)X2Rcs");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, int0);
      
      methodWriter0.visitVarInsn(7, 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("j=", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      Integer integer0 = new Integer(3692);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(3692, (int)integer0);
      
      methodWriter0.visitLdcInsn("ILek2S.Q;)gj");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ILek2S.Q;)gj");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      Item item0 = classWriter0.newNameTypeItem("RuntimeVisibleParameterAnnotations", "oj\"]~Vo&2");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitIincInsn(1, 1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4001386549282813
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getSuperName();
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("java/lang/Object", string1);
      
      Attribute[] attributeArray0 = new Attribute[4];
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.MethodWriter");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      char[] charArray0 = new char[3];
      charArray0[0] = '\u0015';
      Attribute attribute1 = new Attribute("org.objectweb.asm.jip.MethodWriter");
      assertFalse(attribute1.equals((Object)attribute0));
      assertNotNull(attribute1);
      assertTrue(attribute1.isUnknown());
      assertFalse(attribute1.isCodeAttribute());
      
      String string2 = classReader0.readClass(726, charArray0);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(32, classReader0.getAccess());
      assertEquals("strVal1", string2);
      assertEquals(3, charArray0.length);
      assertArrayEquals(new char[] {'\u0015', '\u0000', '\u0000'}, charArray0);
      
      attributeArray0[3] = attribute0;
      classWriter0.version = 2;
      assertEquals(32, classReader0.getAccess());
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[7];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      
      short short0 = MethodWriter.readShort(classReader0.b, 8);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals((short)735, short0);
      
      int int0 = MethodWriter.readUnsignedShort(classReader0.b, 28);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(32, classReader0.getAccess());
      assertEquals(2305, int0);
      
      int int1 = MethodWriter.getNewOffset(intArray0, intArray0, 12, (-1377));
      assertFalse(int1 == int0);
      assertEquals((-1389), int1);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "org/objectweb/asm/jip/MethodWriter";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "dOt";
      stringArray0[3] = "java/lang/Object";
      stringArray0[4] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[5] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[6] = "org/objectweb/asm/jip/MethodWriter";
      stringArray0[7] = "org/objectweb/asm/jip/MethodWriter";
      stringArray0[8] = "org.objectweb.asm.jip.MethodWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 28, "strVal1", "strVal1", "org.objectweb.asm.jip.Item", stringArray0, false, false);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(32, classReader0.getAccess());
      assertEquals(9, stringArray0.length);
      
      int[] intArray1 = new int[8];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 726;
      intArray1[1] = 8859;
      intArray1[2] = (int) '\u0015';
      intArray1[3] = 4;
      intArray1[4] = 2305;
      intArray1[5] = 28;
      intArray1[6] = (int) '\u0015';
      intArray1[7] = 12;
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      labelArray0[8] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray1, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "u9)PST!c?";
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("pUXU~@X\"?\"Oj^L~", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertNotNull(annotationVisitor0);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-4523), "u9)PST!c?", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "u9)PST!c?";
      stringArray0[1] = "3A{OYWA";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "0'w1_C]:\"BR\u0007T^0n!B";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)105;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-1886));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1886
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[2] = (byte) (-44);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3A{OYWA";
      stringArray0[1] = "0'w1_C]:\"BR\u0007T^0n!B";
      stringArray0[2] = "3A{OYWA";
      stringArray0[3] = "3A{OYWA";
      stringArray0[4] = "3A{OYWA";
      stringArray0[5] = "3A{OYWA";
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[7] = "0'w1_C]:\"BR\u0007T^0n!B";
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, (-1309), (byte) (-44));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.9110175397125628
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Label offset position h$s not b%en resolved yet";
      stringArray0[1] = "RuntimeVisibleAnnotations";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[2] = "RuntimeVisibleAnnotations";
      stringArray0[3] = "Label offset position h$s not b%en resolved yet";
      stringArray0[4] = "RuntimeVisibleAnnotations";
      byte byte0 = (byte)34;
      ClassWriter classWriter0 = new ClassWriter((byte)34);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 65535, "%llg`vQ<(VM]", "int", (String) null, (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(49, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn((String) null, 2870);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 1582;
      intArray0[1] = 0;
      intArray0[2] = 951;
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, (-1375));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Class not found");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "AnnotationDefault");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1646, "LocalVariableTable", "AnnotationDefault", "LocalVariableTable", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitLocalVariable("6eTr!`6JjZw6,0?8'", " [E*GJhQBVWjjk", "Class not found", label0, label0, 169);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.8981370031878679
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1646);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "vPr='r-`^V@<#)X2Rcs";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      stringArray1[0] = "u9)PST!c?";
      stringArray1[1] = "KEK1`%~tArR!lio:1";
      classWriter0.visit(1646, 1646, "AnnotationDefault", "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", stringArray1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertEquals(2, stringArray1.length);
      
      methodWriter0.visitIincInsn(127, 127);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitInsn((-1811346631));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotSame(stringArray0, stringArray1);
      assertEquals(0, stringArray0.length);
      
      String string1 = "N3v2^g";
      String string2 = "293V>";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.2340794427934227
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte byte0 = (byte) (-47);
      ClassWriter classWriter0 = new ClassWriter((byte)17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "RuntimeInvisibleParameterAnnotations";
      String string1 = "D4Ynx9Ca<_zx%ggI";
      String string2 = "LocalVariableTypeTable";
      int int0 = classWriter0.addType("LocalVariableTypeTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2882), "RuntimeInvisibleParameterAnnotations", "D4Ynx9Ca<_zx%ggI", "D,|v?;M\"67^]", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.exceptions = null;
      methodWriter0.visitIntInsn((byte)4, 6);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(48, int1);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMethodInsn(251, "", "D,|v?;M\"67^]", "W_1VnU<8$YZ'");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((byte) (-47));
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ClassWriter@5
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4292990781646808
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getSuperName();
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("java/lang/Object", string1);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      classWriter1.threshold = 8;
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 2, "org/objectweb/asm/jip/MethodWriter", "ox5 l", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(methodWriter0);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitInsn(4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitIincInsn(1, 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertEquals(1, stringArray0.length);
      
      methodWriter0.visitVarInsn(613, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertEquals(1, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-1182), "Code", "java/lang/Object", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.449608505324119
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      assertEquals(32, classReader0.getAccess());
      
      String string0 = classReader0.getClassName();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string0);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = MethodWriter.FULL_FRAME;
      assertEquals(255, int0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, classReader0.getAccess());
      
      String string1 = classReader0.getClassName();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(string1);
      assertEquals(32, classReader0.getAccess());
      assertEquals("org/objectweb/asm/jip/MethodWriter", string1);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      String[] stringArray1 = classReader0.getInterfaces();
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertNotNull(stringArray1);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, stringArray1.length);
      
      ClassWriter classWriter1 = new ClassWriter(classReader0, 24117248);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      assertEquals(32, classReader0.getAccess());
      
      classWriter0.visitSource("]{Z`8^qxTL-v\"Rd", "]{Z`8^qxTL-v\"Rd");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitLdcInsn("LocalVariableTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(24117248, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      Item item0 = classWriter1.newLong(8);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertNotNull(item0);
      assertEquals(32, classReader0.getAccess());
      
      methodWriter0.visitMethodInsn(2, "org/objectweb/asm/jip/MethodWriter", "%pIr &m", "org/objectweb/asm/jip/MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = methodWriter0.next;
      assertFalse(methodWriter2.equals((Object)methodWriter1));
      assertFalse(methodWriter2.equals((Object)methodWriter0));
      assertNotSame(methodWriter2, methodWriter1);
      assertNotSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      methodWriter2.visitMethodInsn(7, "org/objectweb/asm/jip/MethodWriter", "LocalVariableTable", "org/objectweb/asm/jip/MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter2.equals((Object)methodWriter1));
      assertFalse(methodWriter2.equals((Object)methodWriter0));
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter0.equals((Object)methodWriter2));
      assertNotSame(methodWriter2, methodWriter1);
      assertNotSame(methodWriter2, methodWriter0);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.502314703945548
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(119, 8859);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.8080599286573672
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(1646);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24117248, "vPr='r-`^V@<#)X2Rcs", "AnnotationDefault", "ILek2S.Q;)gj", stringArray0, false, false);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "u9)PST!c?";
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn(385, (String) null, "=d$~6,drKD", "RuntimeInvisibleParameterAnnotations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5086989655926173
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(8);
      String string0 = "LocalVariableTable";
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      classReader0.getClassName();
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1251, "", "XH!av+", "LocalVariableTable", stringArray0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 74, ";I:: w", "yxT$lfacr4", "Ljava/lang/Synthetic;", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-44);
      ClassWriter classWriter0 = new ClassWriter((byte) (-44));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "0'w1_C]:\"BR\u0007T^0n!B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "]{Z`8^qxTL-v\"Rd", "LineNumberTable", "", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitEnd();
      assertSame(methodWriter0, methodWriter1);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1646, ".jar", "", "u9)PST!c?", (String[]) null, false, false);
      Attribute attribute0 = new Attribute(".jar");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
      methodWriter0.visitIincInsn(8859, (-927));
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.542003431806778
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[1] = "LocalVariableTable";
      int int0 = MethodWriter.FULL_FRAME;
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      classReader0.accept((ClassVisitor) classWriter0, 1880);
      classReader0.getClassName();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute("resizeInstructions");
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "u9)PST!c?");
      int int1 = MethodWriter.FULL_FRAME;
      assertEquals(255, int1);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-44);
      byteArray0[0] = (byte) (-44);
      byte byte1 = (byte)74;
      byte byte2 = (byte) (-95);
      byte byte3 = (byte)113;
      byte byte4 = (byte) (-105);
      byte byte5 = (byte)0;
      int int0 = (-2447);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte)113, (byte) (-44));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 113
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-47);
      int int0 = MethodWriter.readInt(byteArray0, 0);
      assertEquals((-1723778287), int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[17];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 1241579778);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1241579778
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.8532361505557784
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.accept((ClassVisitor) classWriter0, Integer.MAX_VALUE);
      String string0 = "Code";
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      intArray0[0] = (-46);
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray0, intArray0, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(1646);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "u9)PST!c?";
      String string0 = "pUX\\U~@X\"?\"Oj^L~";
      int int0 = (-4523);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-4523), "xUDDN15w{QCtek", "double", "double", stringArray1, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-940));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "K$DRh`!iC$\"H7";
      stringArray0[1] = "qHcM1@!N-2L.";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "qHcM1@!N-2L.", "qHcM1@!N-2L.", "K$DRh`!iC$\"H7", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(924);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "u9)PST!c?";
      stringArray0[2] = ";G/";
      stringArray0[3] = "RuntimeInvisibleAnnotations";
      stringArray0[4] = "u9)PST!c?";
      stringArray0[5] = "RuntimeInvisibleAnnotations";
      stringArray0[6] = "u9)PST!c?";
      stringArray0[7] = "u9)PST!c?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 924, "!%yWWevhujA", "u9)PST!c?", "RuntimeInvisibleAnnotations", stringArray0, true, true);
      int int0 = (-359);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)12;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-1238), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int[] intArray0 = new int[7];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      intArray0[0] = 1582;
      intArray0[1] = 0;
      intArray0[2] = 951;
      intArray0[3] = 168;
      intArray0[4] = (-606);
      intArray0[5] = 33;
      intArray0[6] = 0;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 1582);
      assertEquals(4316, int0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "]{Z`8^qxTL-v\"Rd";
      stringArray0[5] = "LocalVariableTable";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[1];
      Attribute attribute0 = new Attribute(")QIicxcW[}8f,*R9");
      Attribute attribute1 = attribute0.next;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 1411);
      assertEquals(1411, int0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AnnotationDefault");
      String[] stringArray0 = new String[6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.yasl.jars.JarFileFilter");
      stringArray0[0] = "gDUm+d7F6";
      stringArray0[1] = "AnnotationDefault";
      stringArray0[2] = "AnnotationDefault";
      stringArray0[3] = "LocalVariableTable";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "mi?t";
      int[] intArray0 = new int[9];
      intArray0[0] = 1729;
      intArray0[1] = 167;
      intArray0[2] = 169;
      intArray0[3] = 167;
      intArray0[4] = 1317;
      intArray0[5] = (-997);
      intArray0[6] = 148;
      intArray0[7] = (-997);
      intArray0[8] = 169;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 147, 2000);
      assertEquals(5719, int0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 46;
      intArray0[2] = 959;
      intArray0[5] = 959;
      MethodWriter.getNewOffset(intArray0, intArray0, 187, 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2RbN)e4I";
      stringArray0[1] = "<init>";
      stringArray0[2] = "2RbN)e4I";
      stringArray0[3] = "2RbN)e4I";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      stringArray0[6] = "<init>";
      stringArray0[7] = "<init>";
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }
}
