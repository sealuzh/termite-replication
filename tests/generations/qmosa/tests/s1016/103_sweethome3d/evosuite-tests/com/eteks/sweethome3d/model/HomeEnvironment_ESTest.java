/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 11:35:21 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1160);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(1160);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoQuality(1160);
      homeEnvironment0.setPhotoAspectRatio((AspectRatio) null);
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio1 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundTexture();
      assertEquals(1160, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setLightColor(918);
      homeEnvironment0.clone();
      assertEquals(918, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ao{YO8");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1897));
      homeEnvironment0.setLightColor((-1561));
      homeEnvironment0.setVideoQuality((-1897));
      homeEnvironment0.clone();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("VIDEO_QUALITY", "VIDEO_QUALITY", 0, "", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_QUALITY", "VIDEO_QUALITY", temporaryURLContent0, 0, (-1897), "VIDEO_QUALITY", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-1561), homeEnvironment0.getLightColor());
      assertEquals((-1897), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setVideoQuality(825);
      homeEnvironment0.setVideoQuality(625);
      homeEnvironment0.setLightColor(2550);
      homeEnvironment0.setPhotoQuality(20);
      homeEnvironment1.getVideoQuality();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GROUND_TEXTURE");
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoWidth(825);
      homeEnvironment0.clone();
      assertEquals(20, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.4030604410669008
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      homeEnvironment0.setPhotoQuality(20);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setPhotoHeight(0);
      homeEnvironment2.setPhotoWidth(2550);
      homeEnvironment1.setGroundColor((-1979));
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment2.getPhotoWidth();
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.setPhotoHeight(20);
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getDrawingMode();
      homeEnvironment2.getPhotoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getDrawingMode();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray1 = HomeEnvironment.DrawingMode.values();
      assertNotSame(homeEnvironment_DrawingModeArray1, homeEnvironment_DrawingModeArray0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5530953379904706
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoQuality(20);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.getVideoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getVideoWidth();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.setPhotoHeight(320);
      homeEnvironment3.setPhotoWidth(0);
      homeEnvironment2.setGroundColor(0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment3.getPhotoWidth();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment2.getGroundTexture();
      homeEnvironment0.setPhotoHeight(20);
      homeEnvironment0.getDrawingMode();
      homeEnvironment3.getPhotoAspectRatio();
      HomeEnvironment.Property.valueOf("CEILING_LIGHT_COLOR");
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("4oXY3'33R}#o<R%Ks", "4oXY3'33R}#o<R%Ks", (Content) null, 0.0F, 0.0F, "4oXY3'33R}#o<R%Ks");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3971), homeTexture0, (-1616), homeTexture0, (-1616), (-3971));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-4480));
      homeEnvironment1.getVideoWidth();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals((-4480), homeEnvironment1.getVideoWidth());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("od7@<5;MMg_zx", "od7@<5;MMg_zx", uRLContent0, 0.0F, 0.0F, "od7@<5;MMg_zx", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("od7@<5;MMg_zx", "od7@<5;MMg_zx", content0, 2324.125F, 0.0F, "od7@<5;MMg_zx");
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3955), homeTexture1, (-766), homeTexture1, 8, 1141.0F);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2591, homeTexture0, 2591, (-3955), (-1.0F));
      homeEnvironment1.setPhotoHeight(2591);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getPhotoWidth();
      homeEnvironment2.getPhotoQuality();
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getVideoCameraPath();
      assertEquals(2591, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-801), (HomeTexture) null, (-801), (HomeTexture) null, (-801), (-801));
      homeEnvironment0.setSkyColor((-801));
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setCeillingLightColor(6);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha((-801));
      homeEnvironment0.setSubpartSizeUnderLight((-801));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getSkyTexture();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment.Property.valueOf("ALL_LEVELS_VISIBLE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-488528012));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoWidth(5);
      homeEnvironment0.setPhotoWidth((-488528012));
      homeEnvironment0.setSkyColor(5);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth(5);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(5);
      homeEnvironment0.getVideoAspectRatio();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, (-4241.488F), (-4241.488F), "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-506), homeTexture0, (-506), (-506), (-1.0F));
      homeEnvironment1.setPhotoQuality((-506));
      homeEnvironment1.getPhotoQuality();
      Random.setNextRandom((-506));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      resourceURLContent1.getJAREntryName();
      resourceURLContent1.getJAREntryURL();
      Random.setNextRandom((-946));
      Random.setNextRandom(13);
      Random.setNextRandom((-828));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(395, homeTexture0, (-3404), homeTexture0, 15, (-1509.6489F));
      homeEnvironment0.getSkyTexture();
      assertEquals(395, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-3404), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1509.6489F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(15, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Random.setNextRandom(2101792506);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("I", "UTC", temporaryURLContent0, 2101792506, 2101792506, "I");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2101792506, homeTexture0, 2101792506, homeTexture0, 13, 13);
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-3404.0F), (-2411.3F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2145393405), homeTexture0, 12, homeTexture0, 12, (-2145393405));
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 20, (-1790.0F));
      homeEnvironment0.setPhotoHeight(300);
      String string0 = "UnrupportedapecF ratio ";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UnrupportedapecF ratio ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*UsHoFUJ");
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "UnrupportedapecF ratio ", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource UnrupportedapecF ratio 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Xc*:vo|95v#2J#>rj", resourceURLContent0, 11, (-3667.5835F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11, homeTexture0, 11, 11, 11);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11, homeEnvironment0.getGroundColor());
      assertEquals(11, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11, homeEnvironment0.getLightColor());
      assertEquals(11.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotNull(homeTexture1);
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-114);
      byteArray0[4] = (byte) (-110);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-951));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1936.79F), (-793.8077F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      Random.setNextRandom(20);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-524), homeTexture0, (-524), 11, (-834.58F));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-524), homeEnvironment0.getGroundColor());
      assertNotNull(homeTexture1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-524), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-834.58F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "SK Y_COLOR");
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      resourceURLContent1.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, 1);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-3404), homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals((-3404), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.4727609475851167
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setPhotoQuality(181);
      homeEnvironment0.setVideoWidth(181);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "Gy!X=tK_/\"KZq", (Object) null, aspectRatio0);
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment1.setLightColor(400);
      homeEnvironment0.setVideoQuality(181);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment1.setSubpartSizeUnderLight(1611.1F);
      homeEnvironment1.getPhotoHeight();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(1611.1F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      Content content0 = homeTexture0.getImage();
      TemporaryURLContent.copyToTemporaryURLContent(content0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, (-3404));
      float float0 = homeEnvironment0.getWallsAlpha();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals((-3404), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3404), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-3404.0F), float0, 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9237738987163584
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoHeight((-849));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getSubpartSizeUnderLight();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor(2550);
      homeEnvironment0.setPhotoQuality(12);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment1.getVideoWidth();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment4 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(9);
      homeEnvironment3.setGroundColor(0);
      homeEnvironment3.getPhotoWidth();
      int int0 = homeEnvironment4.getPhotoQuality();
      assertEquals(2550, homeEnvironment0.getLightColor());
      assertEquals(12, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1898);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FDrN+B20&BN;C*\"", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, (-897.0F), (-1133.0F), (-1758), 0.0F, (-83.9805F), 3719L, camera_Lens0);
      camera0.setTime((-3525L));
      homeEnvironment0.setCeillingLightColor((-1758));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor((-1758));
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("FDrN+B20&BN;C*\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.FDrN+B20&BN;C*\"
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-43.5956F), (-1006.0F), 1.0F, (-1006.0F), (-1118.1F), 4106.849F, 1438L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "", camera_Lens0, "ALL_LEVELS_VISIBLE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "5F6v)w/BxUS8F')Np", propertyChangeListenerProxy0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(9);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      assertEquals(9, homeEnvironment0.getVideoQuality());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(1.0F, (-858.4302F), (-1189.0F), (-858.4302F), (-1509.6489F), (-523), 0L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera_Lens0, "ALL_LEVELS_VI1IBLE", "", "");
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("", "", camera0, object0);
      propertyChangeEvent1.setPropagationId(propertyChangeEvent0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "hA>+14dO%q", object1, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("qlqQ>Z6^CKf{pk87R^", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy(";<>Fqj;|Y@{zZ+", propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-734));
      homeEnvironment0.clone();
      assertEquals((-734), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "I]T");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2860));
      homeEnvironment0.clone();
      assertEquals((-2860), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(46);
      homeEnvironment0.setPhotoQuality((-2298));
      homeEnvironment0.clone();
      assertEquals(46, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("c)l4Li3=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.c)l4Li3=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoWidth();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoHeight(320);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(320, homeEnvironment0.getPhotoHeight());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.185190507023601
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2767, (HomeTexture) null, 0, 0, 0.0F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoWidth((-2739));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(1744);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2739), (HomeTexture) null, (-567), (HomeTexture) null, 9, 0);
      homeEnvironment1.getVideoWidth();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setPhotoHeight(1744);
      homeEnvironment1.isObserverCameraElevationAdjusted();
      assertEquals(1744, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2749676065654945
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoQuality((-4185));
      Camera camera0 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 1.5F, 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(1227133529);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setSkyColor(548);
      homeEnvironment1.setGroundColor((-1907));
      homeEnvironment1.setCeillingLightColor(300);
      homeEnvironment0.setVideoFrameRate(14);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-1882), 4.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N/");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1882), homeTexture0, (-1882), homeTexture0, (-1882), 4.0F);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-1882), int0);
      
      int int1 = homeEnvironment0.getPhotoWidth();
      assertEquals(4.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1882), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, int1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1882), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, (-4.520657F), (-4.520657F), "");
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, 4274.459F, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      texturesCategory0.compareTo(texturesCategory1);
      catalogTexture1.setCategory(texturesCategory0);
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 0);
      homeEnvironment0.clone();
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2856927441227812
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(18);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setGroundColor((-2400));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(13684944);
      homeEnvironment1.setPhotoWidth(18);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2400), homeEnvironment0.getGroundColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSubpartSizeUnderLight(4);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setWallsAlpha(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoHeight(7);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoFrameRate(8192);
      assertEquals(8192, homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.362042155790716
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setLightColor(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoQuality(726);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.getVideoAspectRatio();
      try { 
        MockURL.URL("VIDEO_WIDTH", "VIDEO_WIDTH", 0, "VIDEO_WIDTH");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: video_width
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.1698162924117237
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setPhotoQuality((-2513));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setGroundColor(16);
      homeEnvironment0.setPhotoWidth(18);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setVideoCameraPath(list0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(16, homeEnvironment0.getGroundColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-43.5956F), (-1006.0F), 1.0F, (-1006.0F), (-858.4302F), 4106.849F, 1438L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "", camera_Lens0, "ALL_LEVELS_VI1IBLE");
      Camera.convertTimeToTimeZone(1438L, "");
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "5F6v)w/BxUS8F')Np", propertyChangeListenerProxy0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1438L);
      homeEnvironment0.clone();
      assertEquals(1438.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(0, homeEnvironment0.getVideoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.224711144128322
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-6), (HomeTexture) null, (-1979), (HomeTexture) null, (-6), (-1979));
      homeEnvironment0.setLightColor((-6));
      homeEnvironment0.setPhotoQuality((-6));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-954));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment1.getSkyColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getGroundColor();
      homeEnvironment2.setSkyColor((-2146284605));
      homeEnvironment1.setVideoQuality(2251);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(2251, (HomeTexture) null, (-1979), (-6), 0);
      homeEnvironment3.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment3.setPhotoHeight(1161);
      assertEquals(1161, homeEnvironment3.getPhotoHeight());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", ">t_[", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      resourceURLContent1.getJAREntryURL();
      TexturesCategory texturesCategory0 = new TexturesCategory("GROUND_TEXTURE");
      TexturesCategory texturesCategory1 = new TexturesCategory("Content isn't a JAR entry");
      texturesCategory0.compareTo(texturesCategory1);
      catalogTexture1.setCategory(texturesCategory0);
      resourceURLContent1.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent1);
      catalogTexture1.compareTo(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 0, 0);
      homeEnvironment0.clone();
      Random.setNextRandom(400);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8773896007754103
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = (-3407);
      homeEnvironment0.setVideoQuality((-3407));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(204);
      int int1 = 0;
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      String string0 = null;
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "E(_IqbI`2mOJ}?;", propertyChangeListenerProxy0, (Object) null);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("c)l4Li3=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.c)l4Li3=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((-2408L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.0F);
      Random.setNextRandom((-2323));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SKY_COLOR");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xGqZa33");
      homeEnvironment0.setWallsAlpha((-1.0F));
      System.setCurrentTimeMillis(951L);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3454749304652576
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSubpartSizeUnderLight(1637.2405F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      Camera camera0 = new Camera((-774.2F), 1.0F, 0.0F, 1777.52F, 1777.52F, 0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment0.setVideoQuality((-1979));
      homeEnvironment0.setPhotoQuality(17);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.setGroundColor((-1979));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoFrameRate(3501);
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      Content content0 = homeTexture0.getImage();
      TemporaryURLContent.copyToTemporaryURLContent(content0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, 4284.0F);
      homeEnvironment0.setPhotoWidth(3519);
      homeEnvironment0.clone();
      assertEquals(3519, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(255);
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      assertEquals(255, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2856927441227817
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2767, (HomeTexture) null, 0, 0, 0.0F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(1744);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property.values();
      homeEnvironment0.setSubpartSizeUnderLight(1857.8059F);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setPhotoHeight((-2656));
      assertEquals(1857.8059F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SKY_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture("", temporaryURLContent0, 0L, (-1762.5195F), false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 14, homeTexture0, 14, (-3404));
      homeEnvironment0.setGroundTexture(homeTexture0);
      catalogTexture1.compareTo(catalogTexture0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(400, int0);
      
      CatalogTexture catalogTexture2 = new CatalogTexture("", temporaryURLContent0, (-1802.669F), (-712.9F), false);
      catalogTexture2.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(14, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1, homeEnvironment0.getGroundColor());
      assertEquals(14, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3404.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1126));
      homeEnvironment0.setPhotoWidth(393);
      homeEnvironment0.clone();
      assertEquals((-1126), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1897));
      homeEnvironment0.setLightColor((-1561));
      homeEnvironment0.setVideoQuality((-1897));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      String string0 = "Unsupported aspect ratio ";
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "Unsupported aspect ratio ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource Unsupported aspect ratio 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      resourceURLContent1.getJAREntryURL();
      TexturesCategory texturesCategory0 = new TexturesCategory("GROUND_TEXTURE");
      catalogTexture1.setCategory(texturesCategory0);
      resourceURLContent1.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent1);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, 1);
      homeEnvironment0.setVideoQuality((-1024));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-1));
      Random.setNextRandom(400);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.023907271562916
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 11053224, (HomeTexture) null, 0, 11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(3207.6978F, (-2229.0F), 1230.7F, 1.0F, 0, 1.0F, 0, camera_Lens0);
      linkedList0.offerFirst(camera0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setCeillingLightColor((-1));
      homeEnvironment0.setVideoFrameRate(1);
      homeEnvironment0.clone();
      assertEquals(1, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      URL uRL0 = resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "Z@j8MG", temporaryURLContent0, 4274.459F, (-1041.63F), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1633), homeTexture0, (-450), (-3404), 2033.622F);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-3404), homeEnvironment0.getLightColor());
      assertEquals(25, int0);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-450), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(2033.622F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1633), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 6, 50, 50);
      homeEnvironment0.setPhotoWidth((-1944));
      System.setCurrentTimeMillis(6);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      TexturesCategory texturesCategory0 = new TexturesCategory("?");
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      resourceURLContent1.getJAREntryURL();
      resourceURLContent1.getJAREntryName();
      resourceURLContent1.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent1);
      catalogTexture1.compareTo(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, 1);
      Random.setNextRandom(400);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals((-3404), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals((-3404), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(4357);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("c)l4Li3=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.c)l4Li3=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment.Property.values();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture(".d5#%9K&FGK", ".d5#%9K&FGK", uRLContent0, 1.7777778F, (-756.75F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(10, homeTexture0, 10, homeTexture0, 10, 1.7777778F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-43.5956F), (-1006.0F), 1.0F, (-1006.0F), (-1118.1F), 4106.849F, 1438L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "", camera_Lens0, "ALL_LEVELS_VISIBLE");
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "5F6v)w/BxUS8F')Np", propertyChangeListenerProxy0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListener0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Random.setNextRandom(2211);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("ymAw", "ymAw", (Content) null, (-1385.1139F), (-1385.1139F), "ymAw");
      TexturesCategory texturesCategory0 = new TexturesCategory("ymAw");
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setSkyColor(2211);
      Random.setNextRandom((-2135486531));
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(726);
      homeEnvironment0.setPhotoQuality(726);
      homeEnvironment0.clone();
      assertEquals(726, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 2854.9F, (-793.8077F), "Invalid URL base for JAR entry");
      CatalogTexture catalogTexture1 = new CatalogTexture("Invalid URL base for JAR entry", temporaryURLContent0, 4274.459F, 1418.975F);
      catalogTexture0.compareTo(catalogTexture1);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      TexturesCategory texturesCategory0 = new TexturesCategory("Invalid URL base for JAR entry");
      catalogTexture0.setCategory(texturesCategory0);
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent.copyToTemporaryURLContent(content0);
      catalogTexture1.compareTo(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-1), 400, 1418.975F);
      homeEnvironment0.clone();
      Random.setNextRandom(400);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoAspectRatio();
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoQuality();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Camera camera0 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 3207.6978F, 0);
      homeEnvironment0.setVideoQuality(0);
      int int0 = 0;
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getVideoCameraPath();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("VIDEO_FRAME_RATE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.VIDEO_FRAME_RATE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SKY_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), (-3404), (-1.0F));
      homeEnvironment0.setSkyColor((-3404));
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      Content content0 = homeTexture0.getImage();
      TemporaryURLContent.copyToTemporaryURLContent(content0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, 4284.0F);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3404), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals((-3404), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(4284.0F, float0, 0.01F);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Random.setNextRandom((-523));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("WG[oTd9k|4bX5m", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Random.setNextRandom((-523));
      Random.setNextRandom(11053224);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      float float0 = 1.5F;
      Camera camera0 = new Camera(1.5F, 0, 567.7606F, 0.0F, (-1.0F), (-1.0F), (-1182L), camera_Lens0);
      Camera camera1 = new Camera((-2048.0679F), 567.7606F, 567.7606F, 1.0F, 0.0F, (-1182L));
      camera1.setX(0);
      homeEnvironment0.setPhotoQuality(629);
      Random.setNextRandom(8);
      try { 
        MockURL.URL("", (String) null, (-1561), "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Random.setNextRandom((-523));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment0.getDrawingMode();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment2);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "A,('y:I");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      System.setCurrentTimeMillis(0L);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.1765113624056367
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1028));
      homeEnvironment0.setVideoQuality((-1028));
      homeEnvironment0.setVideoWidth((-851));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom(8192);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray1 = HomeEnvironment.DrawingMode.values();
      assertNotSame(homeEnvironment_DrawingModeArray1, homeEnvironment_DrawingModeArray0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6?&>8iJW");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(3370);
      assertEquals(3370, homeEnvironment0.getCeillingLightColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SK Y_COLOR", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2101792506);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("SK Y_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.SK Y_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1898);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FDrN+B20&BN;C*\"", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, (-923.2475F), (-1133.0F), (-1758), 565.59F, (-84.75631F), 3719L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FDrN+B20&BN;C*\"", camera0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor((-1758));
      assertEquals(1898, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.9237738987163575
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(3207.6978F, (-2229.0F), 1230.7F, 1.0F, 0, 1.0F, 0, camera_Lens0);
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 1.5F, 0);
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment0.setVideoFrameRate(1);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getLightColor();
      System.setCurrentTimeMillis(1);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoHeight(1160);
      homeEnvironment0.setPhotoHeight(1160);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoQuality(1160);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio1 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(1160, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[18];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture(">t_[", "SK Y_COLOR", temporaryURLContent0, (-3404), (-793.8077F), (String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture(">t_[", resourceURLContent0, 0L, 4274.459F);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      Content content0 = homeTexture0.getImage();
      TemporaryURLContent.copyToTemporaryURLContent(content0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3404), homeTexture0, (-3404), 1, 1);
      int int0 = homeEnvironment0.getVideoHeight();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-3404), homeEnvironment0.getSkyColor());
      assertEquals(240, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-3404), homeEnvironment0.getGroundColor());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.857186997743457
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(3155, 3155, 3155, 3155, (-463.0F), 3155, (-1415L), camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera((-1415L), (-463.0F), 2209.91F, (-1415L), 1950.0F, 1950.0F, 0L, camera_Lens1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "@Gcbi-Ed;?R*ekL#c]W", camera1, "@Gcbi-Ed;?R*ekL#c]W");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setVideoFrameRate(3155);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("/c>]'m9@!,", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("", "OBSERVER_CAMERA_ELEVATION_ADJUSTED", object0, "");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      homeEnvironment1.setVideoFrameRate(3155);
      Object object1 = new Object();
      propertyChangeEvent1.setPropagationId("OBSERVER_CAMERA_ELEVATION_ADJUSTED");
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, "", "/c>]'m9@!,", homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.setLightColor(3155);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setSkyColor(3155);
      homeEnvironment2.setGroundColor(13684944);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment1.setCeillingLightColor((-2146284605));
      homeEnvironment1.setVideoFrameRate((-951));
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals((-2146284605), int0);
  }
}
