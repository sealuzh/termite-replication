/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 09:55:54 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.event.ActionListener;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowStateListener;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Comparator;
import javax.swing.JApplet;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListAxioms;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSState;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7125076953272926
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "')<b`~*z^gkw%gb");
      StringReader stringReader0 = new StringReader(")");
      StringReader stringReader1 = new StringReader("/iV::");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer0.nval = 0.0;
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer2.lowerCaseMode(true);
      stringReader0.reset();
      streamTokenizer1.ordinaryChar((-4));
      stringReader0.markSupported();
      streamTokenizer2.wordChars((-1111544266), (-4));
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.parseNumbers();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      stringReader0.skip((-4));
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      streamTokenizer4.lowerCaseMode(true);
      System.setCurrentTimeMillis((-4));
      System.setCurrentTimeMillis((-2273L));
      JSPlanningProblem jSPlanningProblem0 = jSJshop0.prob();
      assertNull(jSPlanningProblem0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8686985429648904
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/2V:");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte) (-122);
      byteArray0[8] = (byte) (-38);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.equalT = (-2521);
      JSJshopVars.minus = 44;
      jSJshop0.parserFile("/2V:");
      jSJshop0.testParser();
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7273294867607687
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/iV::");
      StringReader stringReader0 = new StringReader("u{E]");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.parseNumbers();
      streamTokenizer2.lowerCaseMode(true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-112);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte) (-122);
      byteArray0[8] = (byte) (-38);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      streamTokenizer2.ordinaryChar(1335);
      streamTokenizer2.wordChars((-4), (-3));
      streamTokenizer2.sval = null;
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer3.pushBack();
      streamTokenizer3.ttype = (-2);
      streamTokenizer3.parseNumbers();
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer2.ttype = (-2);
      JSJshopVars.interrogation = (-4);
      jSJshop0.testParser();
      streamTokenizer3.lowerCaseMode(false);
      System.setCurrentTimeMillis((-4));
      System.setCurrentTimeMillis((-2));
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)43;
      byteArray0[7] = (byte)59;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-112);
      byteArray0[2] = (byte)3;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte) (-122);
      byteArray0[8] = (byte) (-38);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      JSJshopNode jSJshopNode0 = new JSJshopNode();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/iV::");
      StringReader stringReader0 = new StringReader("u{E]");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.parseNumbers();
      streamTokenizer2.lowerCaseMode(true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte) (-112);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte) (-122);
      byteArray0[8] = (byte) (-38);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      streamTokenizer2.ordinaryChar(1335);
      streamTokenizer2.wordChars((-4), (-3));
      streamTokenizer2.sval = null;
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer1.nextToken();
      streamTokenizer3.pushBack();
      streamTokenizer3.ttype = (-2);
      streamTokenizer2.slashStarComments(false);
      streamTokenizer3.parseNumbers();
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer2.ttype = (-2);
      JSJshopVars.interrogation = (-3);
      jSJshop0.testParser();
      streamTokenizer3.lowerCaseMode(false);
      System.setCurrentTimeMillis((-3));
      System.setCurrentTimeMillis((-2));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "I>D$*fc|#qih");
      StringReader stringReader0 = new StringReader(")");
      StringReader stringReader1 = new StringReader("/iV::");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer1.parseNumbers();
      streamTokenizer2.lowerCaseMode(true);
      streamTokenizer1.ordinaryChar(1335);
      streamTokenizer2.wordChars((-1111544266), 2492);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.parseNumbers();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      streamTokenizer4.lowerCaseMode(true);
      System.setCurrentTimeMillis((-2094L));
      System.setCurrentTimeMillis((-2273L));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The resulting state :");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("y/8?#/luYfYj|O{i", "=]c`hz");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)32;
      byteArray0[2] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "%AYYw}%O\\udcH_vm";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("y/8?#/luYfYj|O{i", string0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.536740984584222
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop("y/8?#/luYfYj|O{i", "y/8?#/luYfYj|O{i");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshopVars.leftPar = (int) (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jSJshop0.parserFile("y/8?#/luYfYj|O{i");
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.117456111453701
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop("y/8?#/luYfYj|O{i", "y/8?#/luYfYj|O{i");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = jSJshop0.parserFile("y/8?#/luYfYj|O{i");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "T,7~Ec\u0004Rz_dlti#YK";
      stringArray0[2] = "one";
      stringArray0[3] = "W%A";
      JSJshop.main(stringArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("~uj|6[pbr`l]m^", "~uj|6[pbr`l]m^");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("] /; ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "gOT<c]RR");
      String string0 = "; ";
      jSJshop0.getBufferedReader("] ", "; ", (JApplet) null);
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSState jSState0 = new JSState();
      JSListLogicalAtoms jSListLogicalAtoms0 = new JSListLogicalAtoms();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSListAxioms jSListAxioms0 = null;
      JSPlan jSPlan0 = new JSPlan();
      JSState jSState1 = jSState0.apply(jSPlan0);
      // Undeclared exception!
      try { 
        jSState1.satisfies(jSPlan0, jSSubstitution0, (JSListAxioms) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSState", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      PipedWriter pipedWriter0 = new PipedWriter();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("13!JhSO1&L!1<oA", (String) null, (JApplet) null);
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedWriter pipedWriter2 = new PipedWriter();
      PipedWriter pipedWriter3 = new PipedWriter();
      PipedWriter pipedWriter4 = new PipedWriter(pipedReader0);
      PipedReader pipedReader1 = null;
      try {
        pipedReader1 = new PipedReader(pipedWriter4);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ActionListener) aWTEventMulticaster2, (ActionListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster8, (MouseListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster11, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster15 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster9, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) null);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster7, (KeyListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster16 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) null, (KeyListener) aWTEventMulticaster15);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster17 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster14, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster17, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster17, (KeyListener) aWTEventMulticaster16);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster2, (KeyListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster14, (KeyListener) aWTEventMulticaster13);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster16, (KeyListener) aWTEventMulticaster10);
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Comparator<JSJshopNode> comparator0 = (Comparator<JSJshopNode>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis((-1021L));
      JSJshop jSJshop0 = new JSJshop();
      System.setCurrentTimeMillis((-16));
      JSJshopVars.greaterT = (-16);
      System.setCurrentTimeMillis((-806L));
      // Undeclared exception!
      try { 
        jSJshop0.setFile("Cj?iaU7<, hFoaG~", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.exclamation = 1;
      JSJshopVars.percent = 0;
      JSJshopVars.flagExit = false;
      String string0 = "~uj|6[pbr`l]m^";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~uj|6[pbr`l]m^";
      stringArray0[1] = "~uj|6[pbr`l]m^";
      JSJshop.main(stringArray0);
      JSTaskAtom jSTaskAtom0 = null;
      try {
        jSTaskAtom0 = new JSTaskAtom("~uj|6[pbr`l]m^");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "y/8?#/luYfYj|O{i");
      stringArray0[0] = "y/8?#/luYfYj|O{i";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)32;
      byteArray0[2] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop("y/8?#/luYfYj|O{i", "y/8?#/luYfYj|O{i");
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      JApplet jApplet0 = JSJshop.applet;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("; ", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("c");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "|RiV::");
      StringReader stringReader0 = new StringReader("|RiV::");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.lowerCaseMode(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener1, keyListener1);
      KeyListener keyListener3 = AWTEventMulticaster.remove(keyListener2, (KeyListener) null);
      KeyListener keyListener4 = AWTEventMulticaster.add(keyListener3, (KeyListener) null);
      KeyListener keyListener5 = AWTEventMulticaster.add(keyListener4, (KeyListener) null);
      KeyListener keyListener6 = AWTEventMulticaster.add((KeyListener) null, keyListener5);
      KeyListener keyListener7 = AWTEventMulticaster.add(keyListener6, keyListener1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      KeyListener keyListener8 = AWTEventMulticaster.add(keyListener7, keyListener1);
      KeyListener keyListener9 = AWTEventMulticaster.add(keyListener1, keyListener6);
      KeyListener keyListener10 = AWTEventMulticaster.add(keyListener1, keyListener1);
      KeyListener keyListener11 = AWTEventMulticaster.add(keyListener2, keyListener10);
      KeyListener keyListener12 = AWTEventMulticaster.add(keyListener11, keyListener11);
      KeyListener keyListener13 = AWTEventMulticaster.remove(keyListener5, keyListener12);
      KeyListener keyListener14 = AWTEventMulticaster.remove(keyListener13, keyListener11);
      AWTEventMulticaster.add(keyListener9, keyListener8);
      AWTEventMulticaster.remove(keyListener2, keyListener8);
      AWTEventMulticaster.remove(keyListener1, keyListener10);
      AWTEventMulticaster.add(keyListener8, keyListener10);
      AWTEventMulticaster.remove(keyListener11, keyListener13);
      KeyListener keyListener15 = AWTEventMulticaster.remove(keyListener11, keyListener14);
      KeyListener keyListener16 = AWTEventMulticaster.add((KeyListener) null, keyListener15);
      AWTEventMulticaster.remove(keyListener16, (KeyListener) null);
      JSOperator jSOperator0 = new JSOperator();
      jSOperator0.head();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("c", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.equalT = 42;
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedWriter pipedWriter1 = new PipedWriter();
      jSJshop0.getBufferedReader("X~]vn$m;oL5h", "; ", (JApplet) null);
      PipedWriter pipedWriter2 = new PipedWriter();
      PipedWriter pipedWriter3 = new PipedWriter();
      PipedWriter pipedWriter4 = new PipedWriter();
      assertFalse(pipedWriter4.equals((Object)pipedWriter3));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader("dcvp(ha\"84w?");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("dcvp(ha\"84w?");
      streamTokenizer0.nextToken();
      Integer integer0 = new Integer((-3));
      stringReader0.skip((long) integer0);
      SystemInUtil.addInputLine("dcvp(ha\"84w?");
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener0, keyListener1);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener2, keyListener2);
      KeyListener keyListener4 = AWTEventMulticaster.remove(keyListener2, keyListener3);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener4);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener4, keyListener4);
      AWTEventMulticaster.add(keyListener2, keyListener3);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener4);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener4, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster4, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener2, keyListener3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster7, (KeyListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener3, keyListener2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster9, (KeyListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster9, (WindowStateListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster11, (KeyListener) aWTEventMulticaster8);
      AWTEventMulticaster.add(keyListener2, (KeyListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster2, (KeyListener) aWTEventMulticaster0);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y/8?#/luYfYj|O{i");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)41;
      byteArray0[5] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop("y/8?#/luYfYj|O{i", "y/8?#/luYfYj|O{i");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader(")  ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader(")  ");
      streamTokenizer0.nextToken();
      Integer integer0 = new Integer(41);
      stringReader0.skip((long) integer0);
      SystemInUtil.addInputLine(")  ");
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener0, keyListener1);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener2, keyListener2);
      KeyListener keyListener4 = AWTEventMulticaster.remove(keyListener2, keyListener3);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener4);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener4, keyListener4);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener3);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener4);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener4, (KeyListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener2, keyListener3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, keyListener4);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster8, (KeyListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener3, keyListener2);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster11, (KeyListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster5, (AdjustmentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster11, (WindowStateListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster13, (KeyListener) aWTEventMulticaster9);
      AWTEventMulticaster.add(keyListener2, (KeyListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster3, (KeyListener) aWTEventMulticaster0);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove(mouseWheelListener0, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      System.setCurrentTimeMillis(2209L);
      JApplet jApplet0 = JSJshop.applet;
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedWriter pipedWriter2 = new PipedWriter();
      JSJshop jSJshop0 = new JSJshop();
      JSPlan jSPlan0 = jSJshop0.sol();
      assertNull(jSPlan0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove(mouseWheelListener0, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      System.setCurrentTimeMillis(2209L);
      JApplet jApplet0 = JSJshop.applet;
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "IDW";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "all";
      stringArray0[1] = "umd.cs.shop.JSvaskAtom";
      stringArray0[2] = "all";
      stringArray0[3] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader(")  ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("~c(ts'sL'5EW*o@!");
      streamTokenizer0.nextToken();
      Integer integer0 = new Integer(41);
      stringReader0.skip((long) integer0);
      SystemInUtil.addInputLine(")  ");
      PipedWriter pipedWriter0 = new PipedWriter();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener0, keyListener1);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener2, keyListener2);
      KeyListener keyListener4 = AWTEventMulticaster.remove(keyListener2, keyListener3);
      AWTEventMulticaster.add(keyListener2, keyListener4);
      KeyListener keyListener5 = AWTEventMulticaster.add(keyListener4, keyListener4);
      AWTEventMulticaster.add(keyListener2, keyListener3);
      KeyListener keyListener6 = AWTEventMulticaster.add(keyListener2, keyListener4);
      KeyListener keyListener7 = AWTEventMulticaster.add(keyListener4, keyListener6);
      KeyListener keyListener8 = AWTEventMulticaster.remove(keyListener5, keyListener7);
      AWTEventMulticaster.add(keyListener8, keyListener6);
      KeyListener keyListener9 = AWTEventMulticaster.remove(keyListener2, keyListener3);
      KeyListener keyListener10 = AWTEventMulticaster.add(keyListener9, (KeyListener) null);
      KeyListener keyListener11 = AWTEventMulticaster.add(keyListener2, keyListener4);
      KeyListener keyListener12 = AWTEventMulticaster.remove(keyListener11, keyListener10);
      KeyListener keyListener13 = AWTEventMulticaster.remove(keyListener3, keyListener2);
      AWTEventMulticaster.add(keyListener13, keyListener12);
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      JApplet jApplet0 = JSJshop.applet;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("4{", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte byte0 = (byte)32;
      String string0 = null;
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      String[] stringArray0 = new String[0];
      JSJshop.main(stringArray0);
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedWriter pipedWriter2 = new PipedWriter();
      PipedWriter pipedWriter3 = new PipedWriter();
      assertFalse(pipedWriter3.equals((Object)pipedWriter1));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[2] = "Ek^";
      stringArray0[2] = "Ek^";
      JSJshop.main(stringArray0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object[][] objectArray0 = new Object[6][7];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = object1;
      objectArray0[2] = objectArray1;
      objectArray0[3] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = (Object) "Ek^";
      objectArray2[2] = object0;
      objectArray2[3] = object1;
      objectArray2[4] = (Object) "Ek^";
      objectArray2[5] = object0;
      objectArray2[6] = (Object) "Ek^";
      objectArray2[7] = (Object) "Ek^";
      objectArray2[8] = (Object) "Ek^";
      objectArray0[5] = objectArray2;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      JSTaskAtom jSTaskAtom0 = null;
      try {
        jSTaskAtom0 = new JSTaskAtom((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.rightPar = 162;
      StringReader stringReader0 = new StringReader(")  ");
      StringReader stringReader1 = new StringReader("@n*9@k");
      SystemInUtil.addInputLine(")  ");
      PipedWriter pipedWriter0 = new PipedWriter();
      jSJshop0.getTree();
      PipedWriter pipedWriter1 = new PipedWriter();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener0, keyListener1);
      AWTEventMulticaster.remove(keyListener2, keyListener2);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      KeyListener keyListener3 = AWTEventMulticaster.add((KeyListener) null, keyListener2);
      KeyListener keyListener4 = AWTEventMulticaster.add(keyListener3, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove(keyListener4, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      KeyListener keyListener5 = AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      assertNull(keyListener5);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "R";
      stringArray0[1] = "al";
      stringArray0[2] = "all";
      stringArray0[3] = "tTd&";
      stringArray0[4] = "y/8?#/luyfyj|o{i";
      stringArray0[5] = "&,9ZvCqy>K5QA&";
      stringArray0[6] = "!zq";
      stringArray0[7] = "#@)-]SUo;eK|<";
      stringArray0[8] = "a(j~wR0ol>2";
      JSJshop.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }
}
