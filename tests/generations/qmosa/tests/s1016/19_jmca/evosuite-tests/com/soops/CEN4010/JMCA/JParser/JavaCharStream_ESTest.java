/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 10:04:39 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.001006523424514
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)1, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader3 = new StringReader("Invalid escape character at line ");
      javaCharStream0.bufsize = (int) (byte)1;
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 2269, (byte)1);
      javaCharStream1.readChar();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0453565797937734
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 959, (-956));
      StringReader stringReader1 = new StringReader("b9/{,sszL=s>=:}z}&");
      javaCharStream0.ReInit((Reader) stringReader1);
      sequenceInputStream0.mark(7);
      javaCharStream0.adjustBeginLineColumn(959, (-956));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte) (-2);
      byteArray0[1] = (byte)21;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup((byte)21);
      StringReader stringReader2 = new StringReader("nBwaY4{V~j0K(");
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      pipedInputStream0.connect(pipedOutputStream0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn((-956), (byte)21);
      javaCharStream0.ExpandBuff(false);
      assertEquals(21, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.160421411427461
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup((byte)1);
      StringReader stringReader1 = new StringReader("nBwaY4{V~j0K(");
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(88, 0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('d', char0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8662160235859526
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader1 = new StringReader("*B,<Fx)\b_>5NO");
      javaCharStream0.GetImage();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'E';
      charArray0[2] = 'x';
      charArray0[3] = 'q';
      charArray0[4] = 'W';
      charArray0[5] = '8';
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals(1825, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.066895025635099
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      stringReader0.ready();
      javaCharStream0.adjustBeginLineColumn((byte) (-1), (byte) (-1));
      javaCharStream0.ExpandBuff(true);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(6144, javaCharStream0.bufpos);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2924837393352857
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader1 = new StringReader("*B,<Fx)\b_>5NO");
      javaCharStream0.GetImage();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'E';
      javaCharStream0.ReInit((Reader) stringReader0, (-447), 1826, 0);
      charArray0[2] = 'x';
      StringReader stringReader2 = new StringReader("q KH<u)nr");
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-447), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup((byte)1);
      StringReader stringReader1 = new StringReader("nBwaY4{V~j0K(");
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('j', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (-2189));
      javaCharStream0.backup(65);
      StringReader stringReader1 = new StringReader("7");
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      assertEquals(64, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 4069;
      StringReader stringReader0 = new StringReader("<N");
      StringReader stringReader1 = new StringReader("dnWif");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader0.ready();
      javaCharStream0.Done();
      stringReader1.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.156905477713466
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      StringReader stringReader0 = new StringReader("D1~bt");
      stringReader0.ready();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (byte)0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1525), (-1525));
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1525), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7685753388953809
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)11;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-104);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayInputStream0.skip((byte) (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (-3164), (byte)11, (byte)1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s#Cr|e;7efbhsLP");
      javaCharStream0.backup((byte) (-104));
      StringReader stringReader1 = new StringReader("z %");
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-3164), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader1.reset();
      stringReader1.read();
      char[] charArray0 = new char[2];
      charArray0[0] = 'V';
      charArray0[1] = 'V';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 6);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)19;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-80), (-686));
      javaCharStream0.backup((-1538));
      javaCharStream0.Done();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9915093613566137
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = 1;
      stringReader0.ready();
      stringReader0.markSupported();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = (-1);
      stringReader0.ready();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0947290475276485
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0089';
      charArray0[1] = 'R';
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      StringReader stringReader0 = new StringReader("]e!#CuF2vo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4086, 3060);
      javaCharStream0.GetImage();
      javaCharStream0.ReadByte();
      javaCharStream0.backup((-426));
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(78, 0);
      javaCharStream0.ExpandBuff(true);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.164971389803808
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup((byte)1);
      StringReader stringReader1 = new StringReader("nBwaY4{V~j0K(");
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(88, 0);
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn((byte)1, 0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3190506332302365
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 959, (-956));
      StringReader stringReader1 = new StringReader("b9/{,sszL=s>=:}z}&");
      javaCharStream0.ReInit((Reader) stringReader1);
      sequenceInputStream0.mark(7);
      javaCharStream0.adjustBeginLineColumn(959, (-956));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-2);
      byteArray0[1] = (byte)1;
      javaCharStream0.prevCharIsLF = true;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup((byte)1);
      StringReader stringReader2 = new StringReader("b9/{,sszL=s>=:}z}&");
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      pipedInputStream0.connect(pipedOutputStream0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn((-956), (byte)1);
      javaCharStream0.ExpandBuff(false);
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8943120247335319
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader1 = new StringReader("*B,<Fx)\b_>5NO");
      javaCharStream0.GetImage();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'E';
      charArray0[2] = 'x';
      charArray0[3] = 'q';
      charArray0[4] = 'W';
      charArray0[5] = '8';
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(846, 1826);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader1 = new StringReader("*B,<Fx)\b_>5NO");
      javaCharStream0.GetImage();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'E';
      charArray0[2] = 'x';
      charArray0[3] = 'q';
      charArray0[4] = 'W';
      charArray0[5] = '8';
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0089';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), 4061);
      javaCharStream0.backup(1);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = '7';
      charArray0[3] = 'n';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5221513024111673
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream.hexval('3');
      CharBuffer.allocate(3);
      StringReader stringReader0 = new StringReader("irb)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-786), (-786));
      assertEquals((-786), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'V';
      charArray0[1] = 'V';
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0253262207700677
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-1);
      byteArray1[4] = (byte) (-1);
      byteArray1[5] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte) (-1), 78);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2377), 1);
      javaCharStream0.backup((byte) (-1));
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = (-1);
      stringReader0.ready();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      stringReader0.ready();
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = 'O';
      charArray0[3] = 'n';
      charArray0[4] = 'k';
      charArray0[5] = '.';
      charArray0[6] = '\"';
      charArray0[7] = '-';
      charArray0[8] = 'c';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2444), (-2407));
      javaCharStream0.ReInit((Reader) stringReader0, 1, 2947, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.read();
      stringReader0.reset();
      stringReader0.read();
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 12);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      stringReader0.read();
      JavaCharStream.hexval('7');
      CharBuffer charBuffer0 = CharBuffer.allocate(7);
      assertEquals(7, charBuffer0.length());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 256);
      pipedOutputStream0.write(256);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 256, 77, 7);
      javaCharStream0.bufpos = 3407;
      javaCharStream0.ReInit((Reader) null, 7, 7, 7);
      pipedOutputStream0.write(0);
      pipedOutputStream0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.114698279466819
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2907, (-1198));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(78, 455);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(455, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9332379122156058
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("T{\"lJs/.");
      JavaCharStream.hexval('F');
      JavaCharStream.hexval('6');
      StringReader stringReader1 = new StringReader(" column ");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)0, 0, 4050);
      javaCharStream0.ReadByte();
      stringReader2.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (byte)0, (-2466), 3631);
      javaCharStream1.readChar();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.18443872999759
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("`X/YL4[");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("ipF+j>TY");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1114), (-1114));
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)0, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 8);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CharBuffer.allocate(4069);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "80jz()odn{Ms[Pln");
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[5];
      char char0 = '\u0089';
      charArray0[0] = '\u0089';
      char char1 = 'E';
      CharBuffer.allocate(53);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.7111914425638796
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader1 = new StringReader("*B,<Fx)\b_>5NO");
      javaCharStream0.GetImage();
      JavaCharStream.hexval('b');
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'E';
      charArray0[2] = 'x';
      charArray0[3] = 'q';
      charArray0[4] = 'W';
      charArray0[5] = '8';
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("T{\"lJs/.");
      stringReader0.read();
      JavaCharStream.hexval('B');
      StringReader stringReader1 = new StringReader("");
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('4');
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      assertEquals(0, charBuffer0.arrayOffset());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      JavaCharStream.hexval('D');
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      assertEquals(0, charBuffer0.position());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1930551335421837
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '\u0089';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      StringReader stringReader0 = new StringReader("0C]H/Y[RYe\"f");
      stringReader0.markSupported();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), (byte)15);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2855), (byte) (-1));
      javaCharStream1.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte) (-1), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd21r+CcO!ssa-");
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      charArray0[3] = 'R';
      charArray0[4] = 'y';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("T{\"lJs/.");
      stringReader0.read();
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("");
      int int0 = 2563;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2563, (-408), 96);
      javaCharStream0.backup(2563);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd21r+CcO!ssa-");
      stringReader0.markSupported();
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      stringReader0.read();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 100);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("T{\"lJs/.");
      stringReader0.read();
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = 'h';
      charArray0[2] = '`';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = ':';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 1200);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0742042849387972
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      JavaCharStream.hexval('1');
      JavaCharStream.hexval('1');
      StringReader stringReader2 = new StringReader("z %");
      StringReader stringReader3 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1651, 0, 0);
      javaCharStream0.ReadByte();
      stringReader3.read();
      javaCharStream0.readChar();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('%', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("T{\"lJs/.");
      stringReader0.read();
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      StringReader stringReader1 = new StringReader("r}Tw");
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=m#Hoag#pM");
      stringReader1.read();
      StringReader stringReader2 = new StringReader("e5@OE5'UgY3aax");
      stringReader2.reset();
      stringReader0.read();
      char[] charArray0 = new char[8];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'l';
      charArray0[3] = 'y';
      charArray0[4] = 'V';
      charArray0[5] = 'y';
      charArray0[6] = 'y';
      charArray0[7] = '~';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 6, 6);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = '7';
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.897367567113771
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayInputStream0.skip((byte) (-104));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, (-14), 9);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z %");
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("z %");
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.010761683258147
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1066), (-1), 0);
      javaCharStream1.BeginToken();
      stringReader0.ready();
      javaCharStream0.adjustBeginLineColumn((-1037), 84);
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream(stringReader0, (-972), (-1066), (-972));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '\u0089';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1135), (byte)15);
      byteArrayInputStream0.skip((-1135));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 3067, 5604, (byte)15);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      javaCharStream0.backup(1937);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      assertEquals(2161, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0986122886681098
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)11;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.reset();
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)11;
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)11;
      byteArray1[5] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 347, (byte) (-1));
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((byte)1, (-3215));
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(2, javaCharStream0.getBeginLine());
      assertEquals((-3215), int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.255265733556093
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-58);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      StringReader stringReader0 = new StringReader("2`wW``LNC&Li");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.GetImage();
      javaCharStream1.readChar();
      javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
      
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (-889), (byte)0);
      javaCharStream2.AdjustBuffSize();
      assertEquals((-1), javaCharStream2.bufpos);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0880919427638154
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("nBwaY4{V~j0K(");
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '\u0089';
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      String string0 = "HT}@h#";
      StringReader stringReader0 = new StringReader("HT}@h#");
      stringReader0.ready();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.2362054222976715
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("IO(2xph!L&Q<|TeC");
      StringReader stringReader1 = new StringReader("IO(2xph!L&Q<|TeC");
      stringReader0.ready();
      stringReader0.skip((-1));
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader2 = new StringReader("VXvcQ");
      stringReader2.reset();
      javaCharStream0.ReInit((Reader) stringReader2);
      javaCharStream0.adjustBeginLineColumn(1, (-631));
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.adjustBeginLineColumn((-3141), 988);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 65, 65);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('6');
      try { 
        JavaCharStream.hexval('n');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8688627696075708
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("H@BEkc6yg/{,L-");
      stringReader0.ready();
      stringReader0.skip(1L);
      javaCharStream0.AdjustBuffSize();
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 11, 78);
      javaCharStream1.ReInit((Reader) stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = 11;
      intArray0[2] = 8;
      intArray0[3] = 78;
      javaCharStream1.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn(326, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.2501247721783552
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 959, (-956));
      StringReader stringReader1 = new StringReader("b9/{,sszL=s>=:}z}&");
      JavaCharStream.hexval('9');
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 96, 2563, 96);
      javaCharStream0.GetImage();
      int int0 = 2830;
      stringReader0.mark(2830);
      StringReader stringReader2 = new StringReader("p-=,u-");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaCharStream.hexval('F');
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      charArray0[4] = 'F';
      charArray0[5] = 'F';
      charArray0[6] = 'F';
      charArray0[7] = 'F';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.16924965202722864
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JavaCharStream.hexval('F');
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      StringReader stringReader0 = new StringReader("EGlQ>");
      stringReader0.read();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-822), 69);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      char char0 = 'Y';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q");
      StringReader stringReader1 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 96, 2563, 96);
      stringReader0.markSupported();
      String string0 = javaCharStream0.GetImage();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
      
      StringReader stringReader2 = new StringReader("2^d-");
      StringReader stringReader3 = new StringReader("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      javaCharStream0.ReInit((Reader) stringReader3, 96, 96, 96);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = '7';
      charArray0[3] = 'n';
      charArray0[4] = 'k';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("+4ffMZC4!8qy'3Z6Bu");
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      char char0 = 'K';
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 10, 10);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      stringReader1.read(charArray0);
      charArray0[2] = 'z';
      charArray0[3] = 'n';
      stringReader1.read();
      charArray0[4] = 'k';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("+4ffMZC4!8qy'3Z6Bu");
      stringReader1.skip((-2444));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 4090, 3);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      String string0 = "X?c_T7Xgu^;#='}9B";
      StringReader stringReader0 = new StringReader("X?c_T7Xgu^;#='}9B");
      stringReader0.mark(2993);
      StringReader stringReader1 = new StringReader("m}guXxcjzA");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("[G_qINiHlCR0l<*4IK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      CharBuffer.allocate(216);
      JavaCharStream.hexval('a');
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 87, (-553));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      StringReader stringReader2 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, '.', (-2407));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(2947, 26);
      javaCharStream0.adjustBeginLineColumn(2947, (-913));
      assertEquals((-913), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, (-228));
      pipedInputStream0.markSupported();
      javaCharStream0.nextCharInd = 1;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      javaCharStream0.maxNextCharInd = (-510);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, (-228));
      pipedInputStream0.markSupported();
      javaCharStream0.nextCharInd = 1;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      javaCharStream0.maxNextCharInd = (-510);
      byte byte0 = (byte)5;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("JD~+x/?+ iw4<:#AQ");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      JavaCharStream.hexval('C');
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[5];
      charArray0[0] = '{';
      charArray0[1] = 'R';
      charArray0[2] = 'S';
      charArray0[3] = 'E';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)28;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      int int0 = 11;
      int int1 = 1;
      javaCharStream0.backup(11);
      javaCharStream0.GetSuffix(11);
      javaCharStream0.FillBuff();
      javaCharStream0.GetSuffix(1);
      javaCharStream0.backup(254);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.available();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, 254, 63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2398370783897876
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)0);
      javaCharStream0.GetImage();
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream0.skip((-3422L));
      pipedInputStream1.skip(0L);
      javaCharStream0.adjustBeginLineColumn((byte)0, 1);
      javaCharStream0.GetSuffix(1);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer.allocate(4069);
      JavaCharStream.hexval('A');
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
      
      int int1 = JavaCharStream.hexval('f');
      assertEquals(15, int1);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("r}Tw");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d;G2H#gk%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 58, (-428));
      char char0 = javaCharStream0.ReadByte();
      assertEquals('d', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.7685753388953809
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)11;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.reset();
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-104);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte) (-104);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArrayInputStream1.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 1937, (byte) (-1), 2246);
      javaCharStream0.backup((byte) (-104));
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1937, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0089';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 4061, 78, 85);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3046193848206715
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd21r+CcO!ssa-");
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = 'y';
      charArray0[0] = 'y';
      charArray0[3] = 'y';
      stringReader0.read();
      charArray0[4] = 'y';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 5, (-514));
      byteArrayInputStream0.read();
      javaCharStream0.Done();
      int int0 = (-1085);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-1085), (-514));
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.7494938253936616
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CharBuffer.allocate(4069);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "80jz()odn{Ms[Pln");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2188), (byte)0, 76);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BE/$g)RmuJL~E");
      javaCharStream0.backup((byte) (-115));
      StringReader stringReader0 = new StringReader("80jz()odn{Ms[Pln");
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.660779861736039
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.GetImage();
      javaCharStream0.maxNextCharInd = 2501;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.2206367979772654
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.bufpos = 149;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((-1199), 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("D{VzAx-a)QGOO#yW9");
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.1787622167578315
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      stringReader0.read();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      boolean boolean0 = JavaCharStream.staticFlag;
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.BeginToken();
      javaCharStream1.adjustBeginLineColumn(959, 959);
      javaCharStream1.ExpandBuff(false);
      String string0 = javaCharStream0.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 96, 2563, 96);
      String string0 = javaCharStream0.GetImage();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
      
      stringReader0.mark(2830);
      StringReader stringReader2 = new StringReader("p-=,u-");
      javaCharStream0.ReInit((Reader) stringReader0, (-1659), (-1659), 1271);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)0;
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "";
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = 'O';
      charArray0[3] = 'n';
      charArray0[4] = 'k';
      charArray0[5] = '.';
      charArray0[6] = '\"';
      charArray0[7] = '-';
      charArray0[8] = 'c';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2444), (-2407));
      StringReader stringReader3 = new StringReader("f^Q!");
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      
      StringReader stringReader4 = new StringReader("z8P`M8");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader4, 12, 0, 12);
      char char0 = javaCharStream1.BeginToken();
      assertEquals('z', char0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)50);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" #9R`6");
      stringReader0.reset();
      stringReader0.markSupported();
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.120252216864457
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      boolean boolean0 = JavaCharStream.staticFlag;
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(11, 78);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(78, 6121);
      assertEquals(6144, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.1672568499868246
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0089';
      charArray0[1] = 'R';
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      StringReader stringReader0 = new StringReader("]e!#CuF2vo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 3060);
      javaCharStream0.GetImage();
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 3060, 0);
      javaCharStream0.adjustBeginLineColumn(78, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.297295830625819
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      stringReader0.read();
      stringReader0.ready();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('R');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5065950881316383
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 528, 248);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayInputStream0.read();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark(519);
      byteArrayInputStream0.mark(6);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-49), 2665, (byte)72);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.adjustBeginLineColumn(12, (-3339));
      assertEquals(13, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      char char0 = 'V';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1135), (byte)15);
      byteArrayInputStream0.skip((-1135));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 3067, 5604, (byte)15);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-104);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte) (-104);
      byteArray1[5] = (byte) (-104);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArrayInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1937, 3067, 2246);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 18, (byte)61, (byte)61);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 0, (byte) (-104));
      javaCharStream2.FillBuff();
      char char0 = javaCharStream2.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharBuffer.allocate(2053);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 6);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.bufsize = 6;
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.bufpos = 149;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader("!+-BX(%{NRNf");
      javaCharStream0.getColumn();
      assertEquals(149, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.822456686505235
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = '#';
      charArray0[1] = '%';
      charArray0[2] = '0';
      charArray0[3] = '2';
      charArray0[4] = '\"';
      charArray0[5] = 'K';
      charArray0[6] = 'q';
      charArray0[7] = 'c';
      charArray0[8] = 'D';
      stringReader0.read(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.3367226134671912
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U5ed");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 901;
      javaCharStream0.bufpos = 901;
      stringReader0.ready();
      stringReader0.skip(0L);
      javaCharStream0.AdjustBuffSize();
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.adjustBeginLineColumn(901, 901);
      javaCharStream0.nextCharInd = 901;
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetSuffix(902);
      javaCharStream0.getColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, 60, 60);
      javaCharStream0.adjustBeginLineColumn(1044, (-3520));
      assertEquals((-3520), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1206634001542417
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0089';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("q KH<u)nr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), 4061);
      javaCharStream0.backup(1);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(4061);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)11;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-104);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte) (-104);
      byteArray1[5] = (byte) (-104);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArrayInputStream0.skip(0L);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      sequenceInputStream0.mark(5389);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u000B', char0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.6290407622471204
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 96, 2563, 96);
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(' ', char0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharBuffer.allocate(4069);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "80jz()odn{Ms[Pln");
      char[] charArray0 = new char[4];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = '0';
      charArray0[3] = '$';
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 4069);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 8, 4074);
      javaCharStream0.maxNextCharInd = (int) '$';
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ai%*KqWJ'l(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.ready();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      stringReader0.read();
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      stringReader0.reset();
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      stringReader0.read();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 100);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('r', char0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      pipedInputStream0.skip((-1L));
      StringReader stringReader0 = new StringReader("Uvf[A");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4090, 4090);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-488), (-488), 0);
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.2174832262209563
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      stringReader0.read();
      boolean boolean0 = JavaCharStream.staticFlag;
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(11, 119);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      javaCharStream0.UpdateLineColumn('?');
      javaCharStream0.getBeginLine();
      javaCharStream0.GetSuffix(0);
      assertEquals(6144, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char char0 = 'E';
      JavaCharStream.hexval('E');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      stringReader0.read();
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      stringReader0.reset();
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      stringReader0.read();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 100);
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaCharStream.hexval('2');
      char[] charArray0 = new char[8];
      charArray0[0] = '%';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = 'C';
      charArray0[4] = '*';
      charArray0[5] = '2';
      charArray0[6] = '2';
      charArray0[7] = '2';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 2, (-3628));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.1998139591112977
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.ready();
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)1, 15);
      javaCharStream0.backup(1826);
      StringReader stringReader3 = new StringReader("Invalid escape character at line ");
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 2269, (byte)1);
      javaCharStream1.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      
      javaCharStream1.readChar();
      int int0 = javaCharStream1.getLine();
      assertEquals(2269, int0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.0253262207700677
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.bufpos = 149;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader("!+-BX(%{NRNf");
      javaCharStream0.ReInit((Reader) stringReader0, 14, 0, 149);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 74, 60, 101);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-82);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-56);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (-1325));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte) (-56));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-58);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      sequenceInputStream0.mark((-1810));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      dataInputStream0.skip((byte) (-58));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("JD~+x/?+5iwG<#AH");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      String string0 = javaCharStream0.GetImage();
      assertEquals("", string0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 73, 1422, (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-3716));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      char[] charArray1 = javaCharStream0.GetSuffix(83);
      assertEquals(83, charArray1.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = '7';
      charArray0[3] = 'n';
      charArray0[4] = 'k';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("+4ffMZC4!8qy'3Z6Bu");
      stringReader1.skip((-2444));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, (-2444));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-58);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      sequenceInputStream0.mark((-1810));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      dataInputStream0.skip((byte) (-58));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.1903530828264883
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d~jLd2r+Ossa-");
      stringReader0.read();
      boolean boolean0 = JavaCharStream.staticFlag;
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(11, 78);
      javaCharStream0.Done();
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ReInit((Reader) stringReader0, 1, 12);
      javaCharStream0.GetImage();
      int int0 = 15;
      // Undeclared exception!
      try { 
        stringReader0.mark((-2392));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.7147431158325055
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b9/{,sszL=s>=:}z}&");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 959, (-956));
      StringReader stringReader1 = new StringReader("b9/{,sszL=s>=:}z}&");
      javaCharStream0.ReInit((Reader) stringReader1);
      sequenceInputStream0.mark(7);
      javaCharStream0.adjustBeginLineColumn(959, (-956));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      javaCharStream0.adjustBeginLineColumn((byte)1, (-1003));
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("hb)");
      CharBuffer.allocate(96);
      stringReader0.read();
      stringReader0.read();
      char[] charArray0 = new char[8];
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = 'j';
      charArray0[4] = 'X';
      charArray0[5] = '7';
      charArray0[6] = '7';
      charArray0[7] = '|';
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("v&Uo%g");
      stringReader3.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, (-2444));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ReInit((Reader) stringReader2, 2048, (-1184), 4066);
      assertFalse(stringReader2.equals((Object)stringReader3));
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z %");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 89, 76, 4109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      javaCharStream0.backup(4109);
      javaCharStream0.backup((-1));
      StringReader stringReader1 = new StringReader("z %");
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.getEndLine();
      assertEquals(4085, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-4722), 117, 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11, 11);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = '7';
      charArray0[3] = 'n';
      charArray0[4] = 'k';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("");
      stringReader0.skip(3);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 96, (-1435));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, 2947, (-2407), (-1435));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("z %");
      CharBuffer.allocate(96);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '|';
      charArray0[2] = '7';
      charArray0[3] = 'n';
      stringReader1.read();
      charArray0[4] = 'k';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("+4ffMZC4!8qy'3Z6Bu");
      stringReader1.skip((-2444));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, (-2444));
      javaCharStream0.ReInit((Reader) stringReader1, 4074, (-1), 4073);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharBuffer.allocate(4069);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "80jz()odn{Ms[Pln");
      char[] charArray0 = new char[4];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = '0';
      charArray0[3] = '$';
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "80jz()odn{Ms[Pln");
      char[] charArray0 = new char[4];
      charArray0[1] = '\u0000';
      charArray0[2] = '0';
      charArray0[3] = '$';
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2679), (-2679));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream.hexval('f');
      int int0 = 3;
      InputStream inputStream0 = null;
      int int1 = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, (-2679));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("[G_qINiHlCR0l<*4IK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 671, 2684);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 2684, (-1), 2684);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BYxn~*s=pbYYc;R");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-31);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)50);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\uFFFD', char0);
  }
}
