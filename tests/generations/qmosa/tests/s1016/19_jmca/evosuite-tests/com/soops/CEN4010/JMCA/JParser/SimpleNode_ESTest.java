/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 12:25:55 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9032515195712008
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("~");
      simpleNode0.toString("~");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(63);
      SimpleNode simpleNode1 = new SimpleNode(63);
      simpleNode1.toString("~");
      simpleNode0.dump("~Literal : ~", stringWriter0);
      simpleNode1.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream2);
      int int0 = 1;
      PipedInputStream pipedInputStream2 = new PipedInputStream(1);
      pipedInputStream1.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream2, (-1933351063));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      String string0 = "~";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 71;
      SimpleNode simpleNode0 = new SimpleNode(71);
      String string0 = "~";
      simpleNode0.setIdentifier("~");
      simpleNode0.toString("~");
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8121790402101223
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "";
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.toString("CompilationUnit : ");
      int int0 = 1;
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.toString();
      simpleNode1.toString();
      simpleNode0.toString();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("TypeBound");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-933));
      SimpleNode simpleNode1 = new SimpleNode((-933));
      simpleNode0.id = (-933);
      simpleNode0.id = (-933);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtOpen();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(13);
      simpleNode0.setIdentifier(">=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.toString(">=");
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(16);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(16);
      StringWriter stringWriter1 = stringWriter0.append('o');
      StringWriter stringWriter2 = new StringWriter('o');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) ";");
      char[] charArray0 = new char[16];
      charArray0[0] = 'k';
      charArray0[1] = 'o';
      stringWriter2.write(charArray0);
      stringWriter3.write("1#", 0, 0);
      StringWriter stringWriter4 = new StringWriter('o');
      simpleNode0.dump("1#", stringWriter4);
      StringWriter stringWriter5 = new StringWriter('o');
      stringWriter1.append('o');
      // Undeclared exception!
      try { 
        stringWriter0.write("1#", 4040, 4287);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2072786321248754
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&&");
      SimpleNode simpleNode0 = new SimpleNode(11);
      simpleNode0.setIdentifier("&&");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("<=");
      SystemInUtil.addInputLine((String) null);
      simpleNode0.dump("gO@%u", stringWriter0);
      assertEquals("<TypeParameters>\n  <identifier>*amp</identifier>\n  <identifier>*le</identifier>\n</TypeParameters>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("D G");
      assertEquals("D GTypeParameters : && : <=", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-34);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte)79;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter((byte)70);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      simpleNode0.dump("L|j?OK", stringWriter0);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L|j?OK");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2675382430264022
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 71;
      SimpleNode simpleNode0 = new SimpleNode(71);
      simpleNode0.toString("~");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(71);
      simpleNode0.toString("~AssertStatement");
      SimpleNode simpleNode1 = new SimpleNode(71);
      simpleNode1.toString("~");
      simpleNode0.dump("~AssertStatement", stringWriter0);
      simpleNode1.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream2);
      PipedInputStream pipedInputStream2 = new PipedInputStream(1);
      pipedInputStream1.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      PipedInputStream pipedInputStream3 = null;
      try {
        pipedInputStream3 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0115053753997263
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(53);
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PreIncrementExpression");
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*OwtR_kJ=8XX", stringWriter0);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0H7S@PiFm6!");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&&");
      SimpleNode simpleNode0 = new SimpleNode(11);
      simpleNode0.setIdentifier("&&");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine((String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump("gO@%u", stringWriter0);
      assertEquals("<TypeParameters>\n  <identifier>*amp</identifier>\n</TypeParameters>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("D G");
      assertEquals("D GTypeParameters : &&", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
      
      simpleNode0.toString();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetChild(0);
      simpleNode1.jjtAddChild(simpleNode2, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
      
      String string0 = simpleNode2.toString("ySr( i9xctha:H");
      assertEquals("ySr( i9xctha:HCompilationUnit", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 47;
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g!1=iT");
      simpleNode0.setIdentifier(">>");
      simpleNode0.toString(">=");
      StringWriter stringWriter0 = new StringWriter(47);
      StringWriter stringWriter1 = new StringWriter(47);
      stringWriter1.close();
      char[] charArray0 = new char[1];
      stringWriter1.write(charArray0);
      stringWriter1.close();
      StringWriter stringWriter2 = new StringWriter(1);
      StringWriter stringWriter3 = stringWriter1.append('@');
      stringWriter3.write(47);
      stringWriter3.close();
      stringWriter3.write("+1");
      stringWriter1.flush();
      simpleNode0.dump("Block", stringWriter3);
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      StringWriter stringWriter8 = new StringWriter(47);
      StringWriter stringWriter9 = new StringWriter();
      StringWriter stringWriter10 = null;
      try {
        stringWriter10 = new StringWriter((-1075826758));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(70);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)68;
      byteArray0[7] = (byte) (-119);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)79;
      byteArray1[1] = (byte) (-34);
      byteArray1[2] = (byte)70;
      byteArray1[3] = (byte) (-48);
      byteArray1[4] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter((byte)79);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode0.dump("ACj :", stringWriter0);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3561623868707895
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParser javaParser0 = new JavaParser("}");
      simpleNode0.jjtOpen();
      simpleNode0.jjtAddChild(simpleNode0, 2048);
      stringReader0.mark(0);
      int int1 = 4874;
      StringWriter stringWriter0 = new StringWriter(4874);
      // Undeclared exception!
      simpleNode0.dump("Was expecting:", stringWriter0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      StringReader stringReader0 = new StringReader("}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser("}");
      simpleNode0.jjtOpen();
      simpleNode0.jjtAddChild(simpleNode0, 2048);
      simpleNode0.jjtOpen();
      stringReader0.mark(45);
      int int1 = 4874;
      StringWriter stringWriter0 = new StringWriter(4874);
      // Undeclared exception!
      try { 
        stringWriter0.write("}", 130, 117);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2449218399808493
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("E}");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.setIdentifier("se00=");
      simpleNode0.toString();
      simpleNode0.setIdentifier("se00=");
      StringWriter stringWriter0 = new StringWriter(0);
      String string0 = "5N*QB56/7oq#";
      simpleNode0.dump(string0, stringWriter0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 67;
      SimpleNode simpleNode0 = new SimpleNode(67);
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("");
      simpleNode0.dump("", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(67);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1214104753232883
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(16);
      StringWriter stringWriter0 = new StringWriter(16);
      stringWriter0.append('\u0080');
      StringWriter stringWriter1 = new StringWriter('\u0080');
      stringWriter1.write("n>");
      char[] charArray0 = new char[16];
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = new StringWriter(10);
      simpleNode0.dump("\"final\"", stringWriter2);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*rshft");
      SimpleNode simpleNode0 = new SimpleNode(1451);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(1451);
      // Undeclared exception!
      try { 
        simpleNode0.dump("Literal", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3880);
      SimpleNode simpleNode1 = new SimpleNode(3880);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.children = null;
      simpleNode1.id = 524;
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode2.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 524
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1106552649));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106552649
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1113785967));
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-3218));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*rshft");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-213), 0, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte) (-116);
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(512);
      SimpleNode simpleNode1 = new SimpleNode(512);
      simpleNode0.jjtAddChild(simpleNode1, 512);
      simpleNode0.jjtGetChild((byte)97);
      assertEquals(513, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.214140201680689
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("HYkCs`[fo3[mgz_vdf");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.toString("");
      int int0 = 10;
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.setIdentifier((String) null);
      simpleNode0.toString();
      simpleNode0.setIdentifier("1|");
      StringWriter stringWriter0 = new StringWriter(1);
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.dump("RSIGNEDSHIFT", stringWriter0);
      simpleNode1.toString();
      int int1 = (-1791);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-1791));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0386478569798259
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      String string0 = ">";
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.toString();
      simpleNode0.dump("CompilationUnit : ", stringWriter0);
      simpleNode1.toString();
      Node[] nodeArray0 = new Node[10];
      simpleNode0.children = nodeArray0;
      String string1 = "TypeBound";
      simpleNode1.toString();
      simpleNode0.toString();
      simpleNode0.dump("5n", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      int int1 = (-132227116);
      StringWriter stringWriter2 = new StringWriter(1);
      int int2 = (-2028457050);
      stringWriter1.write(0);
      StringWriter stringWriter3 = null;
      try {
        stringWriter3 = new StringWriter((-2028457050));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1052014795067349
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      String string0 = "en`%aO.p^HQG6Z";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      SimpleNode simpleNode0 = new SimpleNode(84);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("Invalid escape character at line ");
      simpleNode0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_B~LyE-`Tdi{LT(oo6k");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump(string0, stringWriter0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0682924484507355
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'I");
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("'I");
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "en`%aO.p^HQG6Z");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump("'I", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>'I</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "<";
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('_');
      StringWriter stringWriter2 = new StringWriter('_');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "<");
      StringWriter stringWriter4 = stringWriter3.append('_');
      stringWriter0.append('.');
      stringWriter4.append((CharSequence) "<");
      simpleNode0.dump("%gc'Q0~ZW$]fQL]Sb]l", stringWriter1);
      StringWriter stringWriter5 = new StringWriter();
      stringWriter5.append(';');
      char[] charArray0 = new char[2];
      charArray0[0] = ';';
      charArray0[1] = 'q';
      stringWriter4.write(charArray0, 0, 0);
      StringWriter stringWriter6 = null;
      try {
        stringWriter6 = new StringWriter((-1099978048));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)114;
      byteArray0[1] = (byte)10;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)76;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^`h+,!CN");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, (byte)76);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)76);
      simpleNode0.parser = javaParser0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      arrayList0.add((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("BreakStatement", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "abeledStatemnt");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("@z6p7Aln`Q[IEin|");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("'I", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>@z6p7Aln`Q[IEin|</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(nodeArray0[3], 10);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6947855529459757
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)95;
      byteArray0[7] = (byte)1;
      SimpleNode simpleNode0 = new SimpleNode((byte)95);
      simpleNode0.toString();
      StringReader stringReader0 = new StringReader("InstanceOfExpression");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (byte)1);
      javaParser0.InclusiveOrExpression();
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, (byte)95);
      simpleNode2.toString("Annotation");
      simpleNode1.toString();
      SimpleNode simpleNode3 = new SimpleNode(javaParser0, 1511);
      // Undeclared exception!
      try { 
        simpleNode3.toString("Annotation");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1511
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e&8cPY2O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-144), 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-933));
      SimpleNode simpleNode1 = new SimpleNode((-933));
      simpleNode0.id = (-933);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      int int0 = 0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1968899364));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1968899364
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SystemInUtil.addInputLine("%U'p{=VsFQ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2856);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 4);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser javaParser0 = new JavaParser("\"continue\"");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1106101594));
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1106101594));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1106101594));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(512);
      SimpleNode simpleNode1 = new SimpleNode(512);
      simpleNode0.jjtAddChild(simpleNode1, 512);
      simpleNode0.jjtAddChild(simpleNode1, 83);
      assertEquals(513, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("1v@:Hs``@4u{iw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.adjustBeginLineColumn(2, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaCharStream0.ReadByte();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 4245);
      StringBuffer stringBuffer0 = javaParserTokenManager0.image;
      javaParserTokenManager0.image = null;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
