/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 11:35:23 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.050042457945135
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("X");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("X");
      rawVariable0.setLabel("MX{fJo8{=");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("X");
      ontologyTerm0.setTerm("X");
      ontologyTerm0.setOntologyName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAlternativeVariable(derivedVariable1);
      rawVariable2.setCleaned(false);
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.976773486284831
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("X");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("zOvdu");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("zOvdu", ")/C3");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      supportingDocument1.setFileName("variable.columnStart.label");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      rawVariable1.setCleaned(true);
      user0.setAddressLine1("variable.columnStart.label");
      User user1 = new User("DUPLICATE_CLEANING_STATE", "3)f2I1.23T0*D:DJ");
      user0.setLastName("5j hagHIam");
      User user2 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("zOvdu", rawVariable0.getQuestionNumber());
      assertEquals(3, arrayList0.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.862885772479412
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("X");
      User user0 = new User("zOvdu", "X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("X");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("X");
      ontologyTerm0.setTerm("zOvdu");
      ontologyTerm0.setDescription("^MS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("^MS");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.offer(ontologyTerm1);
      linkedList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable2.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("zOvdu");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      // Undeclared exception!
      try { 
        linkedList0.set(112, ontologyTerm0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 112, Size: 2
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9348449284681055
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.name^label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("W:8Q/WNA:ZEi;7/$K", "Kc?FH}!Ohy}r=ied");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      supportingDocument0.setFileName("Kc?FH}!Ohy}r=ied");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      user0.setAddressLine1("Kc?FH}!Ohy}r=ied");
      User user1 = new User(".b.r*", "variable.name^label");
      user1.setLastName("UNABLE_TO_GET_CLEANING_STATE_NAME");
      User user2 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.725376189603749
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlias();
      derivedVariable0.isCoded();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      derivedVariable0.setCleaningStatus("");
      User user0 = new User("", "");
      user0.setPostCode("");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningStatus();
      derivedVariable0.getAlias();
      derivedVariable0.getDisplayName();
      rawVariable0.clone();
      User user1 = new User("0CW=", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable1.getAlternativeVariable();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1719);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      Object object0 = new Object();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.505443429095587
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1186314041734393
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("X");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("X");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("X");
      ontologyTerm0.setTerm("X");
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.offer(ontologyTerm0);
      linkedList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      arrayList0.add(ontologyTerm0);
      derivedVariable2.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm("variable.columnEnd.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ontologyTerm2.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable1.getLabel();
      assertEquals("X", rawVariable1.getLabel());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9454716320006415
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("z");
      User user0 = new User("zOvdu", "kGQ&\"");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      arrayList0.add((Variable) derivedVariable2);
      derivedVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable0.getName();
      Object object0 = new Object();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.7084216255763276
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIsNewRecord(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setValue((String) null);
      derivedVariable0.clone();
      valueLabel0.getDisplayName();
      valueLabel0.clone();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.removeValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.741738963172228
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      ontologyTerm3.setOntologyName("4OQZy");
      ontologyTerm3.setNewRecord(false);
      ontologyTerm2.setIdentifier(1737);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setTerm("<~R");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.setIdentifier(1737);
      rawVariable0.getCategory();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User("!O", "!O");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable2);
      assertEquals(1737, rawVariable0.getIdentifier());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.7829509080696924
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("Jf!_<6xSs");
      user1.setStatus("SC#D");
      user0.setAddressLine1("bwg$fWu-^d]k'");
      User user2 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      User user3 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      user0.setEmail("zOvdb");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getCategory();
      rawVariable0.clone();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable3 = new RawVariable();
      User user4 = new User();
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable3, rawVariable3);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable3.getSourceVariables();
      rawVariable2.getAlternativeVariable();
      RawVariable rawVariable5 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(rawVariable0);
      assertEquals("SC#D", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("");
      rawVariable0.setFilePath((String) null);
      rawVariable0.questionNumber = null;
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("\"F^9/L1");
      user0.setIdentifier((-2092419962));
      user0.setIdentifier((-2092419962));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      arrayList0.add(supportingDocument0);
      user0.setAffiliation("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE");
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      supportingDocument1.setFilePath("tH qtBU~5<ZEw9!er");
      user0.setAffiliation("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE");
      arrayList1.add(supportingDocument1);
      user0.setIdentifier(2586);
      // Undeclared exception!
      try { 
        arrayList0.addAll((-2092419962), (Collection<? extends SupportingDocument>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2092419962, Size: 3
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8425372575703896
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "N}hz8v";
      derivedVariable0.setColumnEnd("N}hz8v");
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User("l", "N}hz8v");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable1);
      assertEquals("N}hz8v", derivedVariable0.getCodeBookNumber());
      assertEquals("N}hz8v", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=4.022796456430315
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCleaningStatus("UNABLE_TO_FILTER_SUMMARIES");
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable1);
      derivedVariable0.getCategory();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.listIterator();
      arrayList0.add((ValueLabel) null);
      arrayList0.add((ValueLabel) null);
      rawVariable0.setValueLabels(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(871);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.isCoded();
      derivedVariable0.containsSourceVariable(rawVariable1);
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("UNABLE_TO_FILTER_SUMMARIES", rawVariable0.getCleaningStatus());
      
      derivedVariable0.clone();
      rawVariable1.isNewRecord();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7544112136011645
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("z");
      User user0 = new User("zOvdu", "");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.codeBookNumber = "zOvdu";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      derivedVariable0.notes = "";
      rawVariable0.createVariableSummary();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.694124545362909
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      ontologyTerm3.setOntologyName("4OQZy");
      ontologyTerm3.setNewRecord(false);
      ontologyTerm2.setIdentifier(1737);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription("4OQZy");
      ontologyTerm0.setTerm("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ontologyTerm2.clone();
      rawVariable0.getAlias();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = new ArrayList<MacawChangeEvent>();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.79886796444792
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm0.setOntologyName("4OQZy");
      ontologyTerm2.setNewRecord(false);
      ontologyTerm2.setIdentifier(1737);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setTerm("<~R");
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setIdentifier((-1366));
      rawVariable0.addOntologyTerm(ontologyTerm3);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.getDisplayName();
      derivedVariable0.getCategory();
      rawVariable0.createVariableSummary();
      assertEquals("-1366", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8942473918449845
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("Jf!_<6xSs");
      user1.setStatus("SC#D");
      user0.setAddressLine1("bwg$fWu-^d]k'");
      User user2 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      User user3 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      user0.setEmail("zOvdb");
      user0.setStatus("variable.alternativeVariable.label");
      User user4 = new User("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE", (String) null);
      rawVariable1.setCleaningStatus("general.error.blankField");
      user2.setCity("^MS");
      user4.setStatus("2 P},e");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable0);
      derivedVariable2.getSourceVariables();
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      assertEquals("SC#D", rawVariable0.getName());
      
      derivedVariable0.getName();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("aiPAO71");
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3221086830269158
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(1655);
      supportingDocument0.setDocumentCode("+t(!QR9YvROT@");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      Object object0 = new Object();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.726512106725144
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      User user0 = new User("zOvdu", "");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.notes = "y7Yzx,S";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      assertEquals("zOvdu", rawVariable0.getQuestionNumber());
      
      derivedVariable1.getSourceVariables();
      derivedVariable0.notes = "";
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable4);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.224343205153771
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("z");
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier((-3447));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User("4hXcl%v^`aW'4~^", "4hXcl%v^`aW'4~^");
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      derivedVariable0.getFilePath();
      derivedVariable0.getSourceVariables();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.960499091678734
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("1zOvdu");
      ontologyTerm0.setTerm("general.error.blankField");
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.offer(ontologyTerm0);
      linkedList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("SC#D");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable1.addOntologyTerms(arrayList0);
      assertEquals("SC#D", rawVariable1.getName());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.895009296606889
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      RawVariable rawVariable3 = new RawVariable();
      User user1 = new User("SC#D", "SC#D");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "EX";
      User user2 = new User();
      RawVariable.detectFieldChanges(user2, rawVariable3, rawVariable2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable3.getSourceVariables();
      derivedVariable1.hasSameDisplayName(rawVariable2);
      RawVariable rawVariable4 = new RawVariable();
      arrayList0.add((Variable) rawVariable4);
      derivedVariable1.hasSameDisplayName(rawVariable2);
      RawVariable rawVariable5 = new RawVariable();
      RawVariable rawVariable6 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable6, rawVariable5);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.getAlternativeVariable();
      assertEquals("EX", derivedVariable1.getCodeBookNumber());
      
      derivedVariable2.getName();
      rawVariable3.createVariableSummary();
      assertEquals("Unknown", rawVariable3.getCategory());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8603078070054093
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("z");
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.clone();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.columnEnd = "zOvdu";
      Variable.detectChangesInAlternativeVariable(user1, rawVariable3, derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable4 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9042524869316595
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("X");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("X");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("X");
      ontologyTerm0.setTerm("X");
      User user2 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable2.hasSameDisplayName(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      arrayList0.add((Variable) rawVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable2, rawVariable2);
      derivedVariable2.getName();
      rawVariable1.createVariableSummary();
      assertEquals("X", rawVariable1.getLabel());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2685742034326357
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm2);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("c~a{R");
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.setCoded(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.setIdentifier(2050);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getAlias();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4728278948924696
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getNotes();
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ontologyTerm0.setIdentifier(3096);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList1 = null;
      try {
        arrayList1 = new ArrayList<Variable>((-2200));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2200
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      linkedList0.offer(ontologyTerm0);
      linkedList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm3.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7759272881458092
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ontologyTerm2.setNameSpace("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ontologyTerm1.setDescription("pKazL");
      ontologyTerm1.setOntologyName("blank");
      ontologyTerm1.setDescription("1zOvdu");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(arrayList1);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("1zOvdu");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setNameSpace("variable.columnStart.label");
      arrayList2.add(ontologyTerm5);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      rawVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm7);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0678509096443327
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName(".b.r*");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setOntologyName(".b.r*");
      ontologyTerm2.setIdentifier((-2314));
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription(".b.r*");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setTerm("<~R");
      ontologyTerm4.setNameSpace("<~R");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(ontologyTerm1));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean1 = rawVariable0.isCoded();
      assertTrue(boolean1 == boolean0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getYear();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertNotSame(rawVariable0, variable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("");
      derivedVariable0.setColumnStart((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      
      String string0 = derivedVariable0.getColumnStart();
      assertNull(string0);
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.parallelStream();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5363303066836425
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("user.email.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("user.email.saveChanges");
      derivedVariable0.setCategory("+9~_>toqkK-d#Z");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.form = "user.email.saveChanges";
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("+9~_>toqkK-d#Z", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setYear("variable.columnEnd.label");
      derivedVariable0.clone();
      derivedVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1430514539245578
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1994091956));
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("c~a{R");
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.setIdentifier(2050);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      User user0 = new User();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm4, ontologyTerm4);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getAlias();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getLabel();
      assertEquals(2050, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.1430514539245578
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1994091956));
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("c~a{R");
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.setIdentifier(2050);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      User user0 = new User();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm4, ontologyTerm4);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getAlias();
      User user1 = new User();
      user1.setAddressLine1("qc");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getLabel();
      assertEquals("2050", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0678509096443327
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName(".b.r*");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      ontologyTerm3.setOntologyName(".b.r*");
      ontologyTerm2.setIdentifier(1737);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription(".b.r*");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setTerm("<~R");
      ontologyTerm4.setNameSpace("<~R");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.contains(ontologyTerm0));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7286875121524328
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("z");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addSupportingDocuments(arrayList0);
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable2.containsSupportingDocument(supportingDocument0);
      RawVariable.validateFields(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.02497903469871
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("+");
      User user0 = new User("zOvdu", "+");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      derivedVariable0.columnEnd = "zOvdu";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      arrayList0.add((Variable) rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(rawVariable1);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable3, derivedVariable0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9700712845710653
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("zOvdu", rawVariable0.getQuestionNumber());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.offer(ontologyTerm0);
      linkedList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      arrayList0.add(ontologyTerm0);
      derivedVariable2.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("variable.columnEnd.label");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable1.addOntologyTerms(arrayList1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8936329525208677
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SC#D");
      User user1 = new User("SC#D", "SC#D");
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      user0.setAddressLine2((String) null);
      User user3 = new User("variable.notes.label", "SC#D");
      user3.setStatus("nkj54rW7ARb");
      user0.setAddressLine1((String) null);
      User user4 = new User("SC#D", "UNABLE_TO_GET_SUPPORTING_DOCUMENT_IDENTIFIER");
      User user5 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user4.setEmail("Jf!_<6xSs");
      user3.setStatus("variable.alternativeVariable.label");
      User user6 = new User("8wV:\",}.G9hnb%_(5", (String) null);
      user2.setStatus("SC#D");
      Variable.detectChangesInAlternativeVariable(user5, derivedVariable0, rawVariable1);
      derivedVariable0.getSourceVariables();
      User user7 = new User();
      rawVariable0.setColumnEnd("Q%#28_^Q)uTK *");
      user7.setAddressLine1("variable.notes.label");
      RawVariable.detectFieldChanges(user7, rawVariable0, rawVariable0);
      assertEquals("Q%#28_^Q)uTK *", rawVariable0.getColumnEnd());
      
      derivedVariable0.getName();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("ZVKO-a|Y");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.notes = "ZVKO-a|Y";
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setYear("$U");
      derivedVariable0.setCleaningDescription("general.error.blankField");
      derivedVariable0.setFilePath("macaw.businessLayer.Variable");
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getLabel();
      derivedVariable0.getValueLabels();
      derivedVariable0.getYear();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("<?NKIMz%5Y8yFEG0");
      derivedVariable0.setForm("3d=a[#o*");
      derivedVariable0.getAlias();
      derivedVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("< ,Bv");
      ontologyTerm0.setTerm((String) null);
      ontologyTerm0.setNewRecord(true);
      // Undeclared exception!
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.785202730848145
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("t/ >AH-R1PBC~");
      derivedVariable0.setName("t/ >AH-R1PBC~");
      derivedVariable0.getFilePath();
      derivedVariable0.setLabel("t/ >AH-R1PBC~");
      derivedVariable0.getLabel();
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getName();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("t/ >AH-R1PBC~", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.977261352667712
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("y7Yzx,S", "y7Yzx,S");
      User user4 = new User("U~fL~,sr5tuY]^@K(.=", "UNABLE_TO_CHECK_USER_EXISTS");
      user4.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      User.detectFieldChanges(user0, user3, user4);
      user1.setCity((String) null);
      User user5 = new User("UNABLE_TO_CHECK_USER_EXISTS", "U~fL~,sr5tuY]^@K(.=");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("5j hagHIam");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user6 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user6, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable2);
      arrayList0.add((Variable) rawVariable1);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user5, derivedVariable1, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      User user4 = new User("\"1j>~CL}P5c} =f=", "\"1j>~CL}P5c} =f=");
      user2.setFirstName("\"1j>~CL}P5c} =f=");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user2, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("`-\"z-q");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("`-\"z-q");
      ontologyTerm2.setNameSpace("`-\"z-q");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ontologyTerm1.setOntologyName("pK1azL");
      ontologyTerm2.setTerm("");
      ontologyTerm1.setDescription("pK1azL");
      ontologyTerm1.setOntologyName("blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      linkedList0.offer(ontologyTerm2);
      linkedList0.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setTerm("z(=vJu");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm4.setNewRecord(true);
      ontologyTerm4.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList3);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("U~fL~,sr5tuY]^@K(.=", "U~fL~,sr5tuY]^@K(.=");
      User user4 = new User("U~fL~,sr5tuY]^@K(.=", "UNABLE_TO_CHECK_USER_EXISTS");
      user4.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      user1.setCity((String) null);
      User user5 = new User("UNABLE_TO_CHECK_USER_EXISTS", "U~fL~,sr5tuY]^@K(.=");
      user4.setAddressLine2("LEE1{Rk@H(q?n");
      user0.setStatus("U~fL~,sr5tuY]^@K(.=");
      user4.setFirstName("bwg$fWu-^d]k'");
      user4.setAddressLine1("mc0ml8");
      User user6 = new User("zOvdb", "zOvdb");
      User user7 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.createVariableSummary();
      arrayList0.add((SupportingDocument) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9599309069596984
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("4OQZy");
      ontologyTerm1.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setTerm("general.fieldValue.unknown");
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm1);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User("+t(!QR9YvROT@", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath("X!1@YI)Idkdb");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      assertEquals("X!1@YI)Idkdb", derivedVariable0.getFilePath());
      
      rawVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable2.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.87902640868881
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ontologyTerm2.setNameSpace("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      ontologyTerm1.setDescription("pKazL");
      ontologyTerm1.setOntologyName("blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      derivedVariable0.columnEnd = "+9~_>toqkK-d#Z";
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("1zOvdu");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("zOvdb", "zOvdb");
      User user1 = new User("UNABLE_TO_CHECK_USER_EXISTS", "*ijmuK95}_Y^I");
      User user2 = new User();
      user2.setAffiliation("*ijmuK95}_Y^I");
      user2.setAddressLine2("zOvdb");
      user2.setAddressLine1("variable.availability.label");
      String string0 = "kg6G?26XgxN?T?5J";
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.487556307437838
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("iyuEEb?CMaq|\"WH");
      ontologyTerm3.setNewRecord(false);
      ontologyTerm3.setOntologyName("4OQZy");
      ontologyTerm2.setIdentifier(1737);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber("<~R");
      ontologyTerm1.setTerm("<~R");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(ontologyTerm1));
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("+t(!QR9YvROT@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      ontologyTerm1.clone();
      rawVariable0.getAlias();
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.9548754124764436
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("Y.OJdl");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.setFilePath("UNABLE_TO_FILTER_SUMMARIES");
      supportingDocument0.setFilePath("_N:p0Bw");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setNotes("N.RtYSU['H(A,t||X^");
      rawVariable0.clone();
      rawVariable0.getLabel();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCategory();
      rawVariable0.getNotes();
      derivedVariable0.getSourceVariables();
      rawVariable0.getAlias();
      assertEquals("N.RtYSU['H(A,t||X^", rawVariable0.getNotes());
      
      System.setCurrentTimeMillis(0L);
      derivedVariable0.isNewRecord();
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.8569379564427138
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setNotes("(WoK6dhj`}dF]P");
      derivedVariable0.setColumnEnd("variable.isCleaned.saveChanges.changedToNotClean");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable1.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ontologyTerm0.setIdentifier(4712);
      ontologyTerm0.setNameSpace("(WoK6dhj`}dF]P");
      User user1 = new User("e", "7gwvDFQ[Qs[G_qINiHl");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(4712);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(4712, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.539665843289319
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList0.listIterator();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setName("Hg%");
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.clone();
      assertEquals("Hg%", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName(".b.r*");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      ontologyTerm3.setOntologyName("4OQZy");
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setTerm("<~R");
      ontologyTerm4.setNameSpace("<~R");
      derivedVariable0.setLabel("<~R");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(ontologyTerm1));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("v5");
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel1);
      assertEquals("v5", derivedVariable1.getAlias());
      
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.6865318160890235
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("U~fL~,sr5t'P]D@K(.=", "U~fL~,sr5t'P]D@K(.=");
      user1.setAddressLine1("9");
      User user4 = new User(".b.r*", ".b.r*");
      User user5 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("+");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      Variable.detectFieldChanges(user4, derivedVariable0, derivedVariable1);
      assertEquals("+", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8060799353500103
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      rawVariable0.setName("z");
      User user0 = new User("zOvdu", "kGQ&\"");
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear(":");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.listIterator((-213));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -213
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.setColumnStart("+9~_>toqkK-d#Z");
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      assertEquals("+9~_>toqkK-d#Z", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.977672170880653
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable4.getSourceVariables();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable5.hasSameDisplayName(rawVariable2);
      arrayList0.add((Variable) rawVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable3);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable5, rawVariable0);
      DerivedVariable derivedVariable6 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable5);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      User user0 = new User("N'0M#qQ.i", "M");
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      user0.setAffiliation("SC#D");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9590057536726886
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ontologyTerm2.setNameSpace("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ontologyTerm1.setOntologyName("+9~_>toqkK-d#Z");
      ontologyTerm1.setOntologyName("blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(rawVariable0);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.setYear("+9~_>toqkK-d#Z");
      ontologyTerm5.setTerm("1zOvdu");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm4.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getFilePath();
      assertEquals("+9~_>toqkK-d#Z", derivedVariable0.getYear());
      
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("c~a{R");
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.setIdentifier(2050);
      rawVariable0.getAlternativeVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      assertEquals(2050, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("CjO?eHtx\"");
      User user1 = new User("CjO?eHtx\"", ">`kFEk8}}HtE.");
      User user2 = new User(" Mn3`!", "user.phone.label");
      user1.setAffiliation("y7Yzx,S");
      User user3 = new User("zOvdb", "+[!fY7'VoNU)ERgfT");
      user3.setPassword(">`kFEk8}}HtE.");
      user3.setAddressLine1("y7Yzx,S");
      User user4 = new User("%zOQR,gqN,[;", "%zOQR,gqN,[;");
      User user5 = new User();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAvailability("CjO?eHtx\"");
      rawVariable1.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument3);
      RawVariable rawVariable2 = new RawVariable();
      Object object0 = new Object();
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ontologyTerm2.setNameSpace("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ontologyTerm1.setDescription("pKazL");
      ontologyTerm1.setOntologyName("blank");
      ontologyTerm1.setDescription("1zOvdu");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(arrayList1);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("1zOvdu");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setNameSpace("variable.columnStart.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      assertEquals(1, arrayList1.size());
      assertTrue(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      User user0 = new User("\"1j>~CL}YP5c} =f=", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.0894252005408034
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("z");
      derivedVariable0.setColumnStart("+t(!QR9YvROT@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.createVariableSummary();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("+t(!QR9YvROT@", derivedVariable0.getColumnStart());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setColumnEnd(")Tng%h`$qYs?;QeP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningStatus("^%P\"ACl#:=k|");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("^%P\"ACl#:=k|");
      derivedVariable0.getIdentifier();
      derivedVariable0.setForm(")Tng%h`$qYs?;QeP");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.setCleaningDescription("");
      User user0 = new User("", "");
      try { 
        User.checkValidEmail("macaw.businessLayer.OntologyTerm");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"macaw.businessLayer.OntologyTerm\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle(".b.r*");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("y7Yzx,S", "y7Yzx,S");
      User user4 = new User("U~fL~,sr5tuY]^@K(.=", "UNABLE_TO_CHECK_USER_EXISTS");
      user4.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      user1.setCity((String) null);
      User user5 = new User("UNABLE_TO_CHECK_USER_EXISTS", "U~fL~,sr5tuY]^@K(.=");
      user4.setAddressLine2("LEE1{Rk@H(q?n");
      User user6 = new User("variable.columnEnd.label", "LEE1{Rk@H(q?n");
      User user7 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user6.setEmail("8\"z-A8fo3");
      user4.setStatus((String) null);
      User user8 = new User("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", (String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningDescription("");
      Object object0 = new Object();
      boolean boolean1 = derivedVariable0.containsSourceVariable(rawVariable1);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.8502358925969746
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setCleaningDescription("b7prW,TB");
      ontologyTerm2.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      arrayList0.stream();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("WwXtWNFGhf}XX=8C");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm3.setTerm("Unknown");
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      ontologyTerm5.clone();
      rawVariable0.getAlias();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.removeOntologyTerm(ontologyTerm5);
      rawVariable0.getCategory();
      rawVariable0.clone();
      assertEquals("b7prW,TB", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("U~fL~,sr5t'P]D@K(.=", "U~fL~,sr5t'P]D@K(.=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("U~fL~,sr5t'P]D@K(.=");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setOntologyName("QlyIC53F<=e");
      ontologyTerm0.setDescription("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(arrayList1);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("!`RHJ>:Xr5'WI5");
      ontologyTerm1.setNameSpace(">-5`v");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(arrayList1.contains(ontologyTerm1));
      assertTrue(arrayList1.equals((Object)arrayList2));
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setIdentifier(0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+9~_>toqkK-d#Z");
      ontologyTerm2.setNameSpace("+9~_>toqkK-d#Z");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ontologyTerm1.setDescription("pKazL");
      ontologyTerm1.setOntologyName("blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("1zOvdu");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList3);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      ontologyTerm1.clone();
      derivedVariable0.setIdentifier((-1543));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("NVpJ$@D0");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Yg\"0n8*EE3C");
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("Yg\"0n8*EE3C", derivedVariable0.getCodeBookNumber());
      assertEquals((-1543), int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.177576601140217
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("c~a{R");
      derivedVariable0.questionNumber = "N}hz8v";
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getAlias();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("N}hz8v", derivedVariable0.getQuestionNumber());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("\"1j>~CL}YP5c} =f=", (String) null);
      User user2 = new User("DELETE", (String) null);
      User user3 = new User("general.fieldValue.blank", "q8mk%n}p'[");
      RawVariable rawVariable0 = new RawVariable();
      User user4 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user4, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "?cw&+`BxI#_;x";
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.getQuestionNumber();
      assertEquals("?cw&+`BxI#_;x", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.5782733412812884
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setNotes(":");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      Object object0 = new Object();
      rawVariable0.clone();
      assertEquals(":", rawVariable0.getNotes());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      ontologyTerm3.setOntologyName("4OQZy");
      ontologyTerm3.setNewRecord(false);
      ontologyTerm2.setIdentifier(1737);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("");
      ontologyTerm1.setDescription("variable.year.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      String string0 = "HxZ+x?v";
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm1.setOntologyName("");
      arrayList0.add(ontologyTerm2);
      ontologyTerm5.setOntologyName("J$.'>Ty1}{zHO+");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setDescription("Stk+q8A<i}pS{");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setTerm("J$.'>Ty1}{zHO+");
      ontologyTerm3.setNameSpace("h");
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName(".b.r*");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setCleaned(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.setDescription("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setTerm("<~R");
      ontologyTerm4.setNameSpace("<~R");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("U~fL~,sr5t'P]D@K(.=", "U~fL~,sr5t'P]D@K(.=");
      User user4 = new User("U~fL~,sr5t'P]D@K(.=", "9");
      user4.setCounty("U~fL~,sr5t'P]D@K(.=");
      user4.setAddressLine1("9");
      User user5 = new User("rKL<6x+)]i8O\"pUN", "9");
      User user6 = new User();
      User user7 = new User("U~fL~,sr5t'P]D@K(.=", "UNABLE_TO_CREATE_DERIVED_VARIABLE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.568413258053965
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.replaceAll(unaryOperator0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      rawVariable0.setCoded(true);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.890741580712396
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      arrayList1.add(valueLabel0);
      rawVariable0.clone();
      derivedVariable0.setValueLabels(arrayList1);
      supportingDocument0.setDocumentCode(".{(KY");
      rawVariable0.setForm(".{(KY");
      rawVariable0.columnStart = "";
      supportingDocument0.setDescription("Ai<ad615[T`>LV,I<");
      derivedVariable0.notes = ".{(KY";
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setForm("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.isCoded();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getCategory();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList2.add((Variable) derivedVariable1);
      arrayList2.add((Variable) derivedVariable0);
      arrayList2.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getName();
      rawVariable0.getForm();
      rawVariable0.getName();
      rawVariable0.getSupportingDocuments();
      assertEquals("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE", rawVariable0.getForm());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("UN&BLE_T_FILTER_SUMMARIS");
      assertEquals("UN&BLE_T_FILTER_SUMMARIS", derivedVariable1.getQuestionNumber());
      
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.5854094185656926
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm("scCrQFZD=");
      ontologyTerm3.setOntologyName("4OQZy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("4OQZy");
      derivedVariable0.clone();
      assertEquals("4OQZy", derivedVariable0.getColumnStart());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable1.getColumnStart();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("+[!fY7'VoNU)ERgfT", "+[!fY7'VoNU)ERgfT");
      User user4 = new User("U~fL~,sr5t'P]D@K(.=", "zOvdb");
      user4.setCity("&[VyT #g$#iT=/Wa");
      user4.setAddressLine2("-XQ(-'As'I]vi&~]e");
      user4.setAddressLine1("+[!fY7'VoNU)ERgfT");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("-XQ(-'As'I]vi&~]e");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("-XQ(-'As'I]vi&~]e", rawVariable0.getForm());
      
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerms(arrayList0);
      assertTrue(arrayList0.equals((Object)arrayList1));
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("N}hz8v");
      User user1 = new User();
      User user2 = new User("T2", "I7!dB0G<I5%}p");
      User user3 = new User("user.firstName.saveChanges", "c]hwBa:s5");
      User user4 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "T2";
      rawVariable0.notes = "I7!dB0G<I5%}p";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("T2", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.632073350304059
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User("z", "z");
      User user2 = new User("qjXiMqFI0", "qjXiMqFI0");
      User user3 = new User("z", "z");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setColumnStart("z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("z", rawVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.841682164395699
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SC#D");
      User user0 = new User("SC#D", "SC#D");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      user0.setAddressLine2("Jf!_<6xSs");
      user1.setStatus("SC#D");
      rawVariable0.columnEnd = ")./&=._INE9gB'Qe]83";
      user0.setAddressLine1("bwg$fWu-^d]k'");
      User user2 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      User user3 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setEmail("zOvdb");
      user0.setStatus("variable.alternativeVariable.label");
      User user4 = new User("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE", (String) null);
      user4.setCity("Nj|jfAfYQd(EDp)?");
      user2.setAddressLine2("SC#D");
      user4.setStatus("2 P},e");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.getSourceVariables();
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      assertEquals(")./&=._INE9gB'Qe]83", rawVariable0.getColumnEnd());
      
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      User user4 = new User("I7!dB0G<I5%}p", "U~fL~,sr5t'P]D@K(.=");
      User user5 = new User(" `Lf]5|O~Ce2d`", "QqYq>|J*&YN$}`ML");
      User user6 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user7 = new User("^MS", "zEY");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("YettayA2b6gEG2fK^");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setOntologyName("");
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setOntologyName("user.userID.saveChanges");
      ontologyTerm4.setDescription("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.setCleaningStatus("");
      ontologyTerm4.setTerm(".UHMQ4/{D");
      ontologyTerm3.setNameSpace("h");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.568413258053965
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("zOvdu");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      Object object0 = new Object();
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.8415821543946986
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User((String) null, "z");
      User user2 = new User((String) null, "z");
      user2.setFirstName("");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      User user3 = new User(";#+E{!+Dwff{c,bG", "z");
      User user4 = new User(";#+E{!+Dwff{c,bG", "z");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user4, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      rawVariable1.getQuestionNumber();
      derivedVariable1.getColumnEnd();
      rawVariable1.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("y7Yzx,S", "y7Yzx,S");
      User user4 = new User("U~fL~,sr5tuY]^@K(.=", "UNABLE_TO_CHECK_USER_EXISTS");
      user4.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      user1.setCity((String) null);
      User user5 = new User("UNABLE_TO_CHECK_USER_EXISTS", "U~fL~,sr5tuY]^@K(.=");
      User user6 = new User("t>wpxEZ*B2%Bm", "");
      User user7 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = ")R0fY 9<G?1G";
      User user8 = new User("LEE1{Rk@H(q?n", (String) null);
      User user9 = new User((String) null, " `Lf]5|O~Ce2d`");
      user1.setLastName("i");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(")R0fY 9<G?1G", rawVariable1.getQuestionNumber());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.5224672237082495
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, "a2q ");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "UY2_%u[H*p&YqBH";
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }
}
