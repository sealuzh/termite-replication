/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 10:17:58 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.ContainerComponent;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.rowio.RowOutputTextLog;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2338616644583413
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = new String[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = "VOe~kxPp0K]tilv";
      SQLUtil.join("Fx ?p", "Fx ?p", stringArray0, ">|v?U@82,@LO>", "DLETKE", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "into", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(">|v?U@82,@LO>", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "Fx ?p";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "alter materialized view", true, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"alter materialized view\" UNIQUE (Fx ?p)", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "VOe~kxPp0K]tilv";
      SQLUtil.removeComments("VOe~kxPp0K]tilv");
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.456872374135548
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = Integer.valueOf((-4136));
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("VOe~kxPp0K]tilv", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("9Fg;Oul@/bj_tS2Bae", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-4136), "VOe~kxPp0K]tilv");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Fx ?p", defaultDBTable0, dBDataType0, integer0, integer1);
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer integer3 = RawTransaction.LOCK_ESCALATE;
      defaultDBColumn0.setFractionDigits(integer3);
      defaultDBColumn0.setVersionColumn(true);
      Integer integer4 = new Integer((-1897));
      Integer integer5 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("8F d0md-", defaultDBTable0, dBDataType0, integer4, integer5);
      defaultDBColumn1.setOwner(dBSchema0);
      String string0 = defaultDBColumn1.toString();
      assertEquals("8F d0md- : VOE~KXPP0K]TILV(-1897,2)", string0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable0.getColumnNames();
      defaultDBTable1.getPrimaryKeyConstraint();
      boolean boolean0 = SQLUtil.isDML("s?T=w+'T");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      String string1 = SQLUtil.renderColumnNames(list0);
      assertEquals("Fx ?p, 8F d0md-", string1);
      
      boolean boolean1 = SQLUtil.isProcedureCall("8{j");
      boolean boolean2 = SQLUtil.isQuery("9Fg;Oul@/bj_tS2Bae");
      assertFalse(boolean2);
      
      boolean boolean3 = SQLUtil.isDDL("alter materialized view");
      assertFalse(boolean3 == boolean1);
      
      Boolean boolean4 = SQLUtil.mutatesStructure("   column_");
      assertTrue(boolean4.equals((Object)boolean0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1460759384073218
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "UBL2M#Lc@9PH4zy)G/";
      Integer.min(1713, 2501);
      DBDataType dBDataType0 = DBDataType.getInstance(111, " as ");
      Integer integer0 = new Integer(30);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("UBL2M#Lc@9PH4zy)G/", (DBTable) null, dBDataType0, integer0, integer0);
      defaultDBColumn0.setVersionColumn(true);
      defaultDBColumn0.setOwner((CompositeDBObject<?>) null);
      defaultDBColumn0.toString();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("EgSQ$u w*&&P");
      defaultDBTable1.setPrimaryKey((DBPrimaryKeyConstraint) null);
      String string0 = SQLUtil.normalize("UBL2M#Lc@9PH4zy)G/", true);
      assertEquals("UBL2M # Lc @ 9PH4zy) G /", string0);
      
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("UBL2M#Lc@9PH4zy)G/", defaultDBTable1, 2501, "UBL2M#Lc@9PH4zy)G/ :  AS (30,30)");
      assertEquals(30, (int)defaultDBColumn1.getFractionDigits());
      assertEquals(30, (int)defaultDBColumn1.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "select intomjqp<[oa7|y)yy";
      Boolean boolean0 = new Boolean(" REFERENCES ");
      SQLUtil.normalize("*/", true);
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "-i4[(dc";
      int int0 = (-608);
      Random.setNextRandom((-608));
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) "-i4[(dc");
      columnDescriptorList0.trimToSize();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3152670283015344
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("3AQ2=@D:)|@h?y");
      boolean boolean1 = SQLUtil.isDML("3AQ2=@D:)|@h?y");
      assertFalse(boolean1);
      
      SQLUtil.isDDL(" server running on ");
      jdbcClob jdbcClob0 = new jdbcClob("3AQ2=@D:)|@h?y");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      streamTokenizer1.wordChars((-4), 10890);
      streamTokenizer1.ordinaryChars((-4), (-4));
      streamTokenizer1.lowerCaseMode(false);
      streamTokenizer1.ordinaryChars(2712, (-4));
      streamTokenizer1.slashStarComments(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(reader0);
      reader0.ready();
      char[] charArray0 = new char[7];
      reader0.reset();
      charArray0[3] = '\u008B';
      streamTokenizer0.sval = "3AQ2=@D:)|@h?y";
      charArray0[1] = '\"';
      streamTokenizer2.wordChars((-4), (-4));
      streamTokenizer1.slashSlashComments(false);
      charArray0[4] = 'W';
      charArray0[5] = ' ';
      reader0.ready();
      streamTokenizer2.wordChars((-4), (-1413));
      streamTokenizer2.parseNumbers();
      reader0.read(charArray0);
      streamTokenizer2.nval = (double) ' ';
      String string0 = SQLUtil.renderNumber(streamTokenizer2);
      assertEquals("32", string0);
      
      Boolean boolean2 = SQLUtil.mutatesStructure("3AQ2=@D:)|@h?y");
      assertTrue(boolean2.equals((Object)boolean0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3152670283015344
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("3AQ2=@D:)|@h?y");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isDML("3AQ2=@D:)|@h?y");
      SQLUtil.isDDL(" server running on ");
      jdbcClob jdbcClob0 = new jdbcClob("3AQ2=@D:)|@h?y");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      streamTokenizer1.wordChars((-4), 10890);
      streamTokenizer1.ordinaryChars((-4), (-4));
      streamTokenizer1.lowerCaseMode(false);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(reader0);
      reader0.ready();
      char[] charArray0 = new char[7];
      streamTokenizer0.sval = "3AQ2=@D:)|@h?y";
      charArray0[1] = '\"';
      streamTokenizer2.wordChars((-4), (-4));
      streamTokenizer1.slashSlashComments(false);
      charArray0[4] = 'W';
      charArray0[5] = '\"';
      reader0.ready();
      streamTokenizer2.wordChars((-4), (-1413));
      streamTokenizer1.nval = (double) ')';
      reader0.read(charArray0);
      streamTokenizer2.nval = (double) (-4);
      String string0 = SQLUtil.renderNumber(streamTokenizer2);
      assertEquals("- 4", string0);
      
      Boolean boolean2 = SQLUtil.mutatesStructure("3AQ2=@D:)|@h?y");
      assertTrue(boolean2.equals((Object)boolean1));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.getLoginTimeout();
      pGConnectionPoolDataSource2.setServerName("1cu!k");
      pGConnectionPoolDataSource3.setSocketTimeout(0);
      pGConnectionPoolDataSource3.getLoginTimeout();
      pGConnectionPoolDataSource0.setServerName("1cu!k");
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource5 = new PGConnectionPoolDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indexselect3aq2=@d:)|rh?y");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "The array index is out of range: {0}";
      stringArray0[1] = "truncate";
      stringArray0[2] = "truncate";
      stringArray0[3] = "|k~pt&!![J1";
      TableContainer tableContainer0 = new TableContainer("1cu!k");
      tableContainer0.getTable("|k~pt&!![J1");
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("The array index is out of range: {0}", defaultDBTable0, 0, "H/>+^G)j9@Rw`(/{8)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"/{8\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1cu!k";
      stringArray0[1] = "UBL2n#Lc@vPH]zy)Gp/";
      stringArray0[2] = "1cu!k";
      stringArray0[3] = "rename2uiv6g*t";
      stringArray0[4] = "drop materialized view17(q5r";
      stringArray0[5] = "";
      stringArray0[1] = "DEYALT ";
      stringArray0[7] = "i&kp+i11&z$";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "rename2uiv6g*t";
      stringArray1[1] = "rename2uiv6g*t";
      stringArray1[2] = "?F'0fT2}+cMq.z<";
      stringArray1[3] = "";
      stringArray1[4] = "i&kp+i11&z$";
      stringArray1[5] = "1cu!k";
      stringArray1[6] = "-i4[(dc";
      SQLUtil.renderColumnListWithTableName("bchMVuLBv}<5U", stringArray1);
      Random.setNextRandom((-1467));
      SQLUtil.removeComments("getArray(String)");
      SQLUtil.substituteMarkers("", "ac,", "bchMVuLBv}<5U.rename2uiv6g*t, bchMVuLBv}<5U.rename2uiv6g*t, bchMVuLBv}<5U.?F'0fT2}+cMq.z<, bchMVuLBv}<5U., bchMVuLBv}<5U.i&kp+i11&z$, bchMVuLBv}<5U.1cu!k, bchMVuLBv}<5U.-i4[(dc");
      String string0 = "deletecreate unique indexorg.apache.derby.impl.store.access.conglome8ate.openconglomeratescratchspace";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider((-1467));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7581150953988849
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1cu!k";
      String string0 = "UBL2n#Lc@vPH]zy)Gp/";
      stringArray0[1] = "UBL2n#Lc@vPH]zy)Gp/";
      stringArray0[2] = "UBL2n#Lc@vPH]zy)Gp/";
      stringArray0[3] = "rename2uiv6g*t";
      stringArray0[4] = "executeyc5 u&o";
      stringArray0[1] = "oDQEFAUL57";
      String string1 = "42X30";
      stringArray0[7] = "42X30";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "rename2uiv6g*t";
      SQLUtil.renderWhereClause(stringArray1, stringArray1);
      String string2 = "/*";
      StringBuilder stringBuilder0 = new StringBuilder("/*");
      CharBuffer.allocate(2995);
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.851099400564608
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, (-2414), "select'initrans'");
      DBDataType dBDataType0 = DBDataType.getInstance(4184, "select'initrans'");
      Integer integer0 = new Integer(430);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = Integer.valueOf(430);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, dBDataType0, integer2, integer3);
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      defaultDBColumn1.setFractionDigits(integer4);
      defaultDBColumn1.setVersionColumn(false);
      defaultDBColumn0.setOwner(defaultDBTable0);
      defaultDBColumn0.toString();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getPrimaryKeyConstraint();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("s?T=w+'T", (DBSchema) null);
      SQLUtil.isDML("select'initrans'");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      SQLUtil.isProcedureCall(" as ");
      SQLUtil.isQuery("s?T=w+'T");
      SQLUtil.isDDL("QsP$62");
      SQLUtil.mutatesStructure("alter maerialized view");
      SQLUtil.isDDL("\n/* index sorted */");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setSsl(true);
      Random.setNextRandom(976);
      SQLUtil.isProcedureCall("exec");
      System.setCurrentTimeMillis(976);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("i&kp+i11&z$");
      mockPrintWriter0.write(976);
      mockPrintWriter0.println((long) 13);
      // Undeclared exception!
      try { 
        mockPrintWriter0.append((CharSequence) "?F'0fT2}+cMq.z<", (-2275), 4578);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4148394498578174
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SQLUtil.isDML("3AQ2=@D:)|Rh?y");
      boolean boolean0 = SQLUtil.isProcedureCall("YC5 U&o");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("3AQ2=@D:)|Rh?y", false);
      assertEquals("3AQ2 = @ D :) | Rh ? y", string0);
      
      SQLUtil.isQuery("y_H}+*rNPWDlVL >M|");
      SQLUtil.isDDL(" server running on ");
      jdbcClob jdbcClob0 = new jdbcClob("3AQ2=@D:)|Rh?y");
      jdbcClob jdbcClob1 = new jdbcClob("o ");
      Reader reader0 = jdbcClob1.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      streamTokenizer0.nval = (-1382.498175985);
      String string1 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 1382.498175985", string1);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure(" server running on ");
      assertNull(boolean1);
      
      streamTokenizer0.slashSlashComments(false);
      String[] stringArray0 = new String[24];
      stringArray0[0] = "3AQ2=@D:)|Rh?y";
      streamTokenizer1.slashStarComments(false);
      stringArray0[1] = null;
      stringArray0[2] = null;
      streamTokenizer0.ordinaryChar((-4));
      stringArray0[3] = "YC5 U&o";
      stringArray0[4] = "y_H}+*rNPWDlVL >M|";
      SQLUtil.isDDL("y_H}+*rNPWDlVL >M|");
      String string2 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("3AQ2=@D:)|Rh?y = '3AQ2=@D:)|Rh?y' AND null = null AND null = null AND YC5 U&o = 'YC5 U&o' AND y_H}+*rNPWDlVL >M| = 'y_H}+*rNPWDlVL >M|' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3152670283015344
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("3AQ2=@D:)|@h?y");
      boolean boolean1 = SQLUtil.isDML("3AQ2=@D:)|@h?y");
      assertFalse(boolean1);
      
      SQLUtil.isDDL(" server running on ");
      jdbcClob jdbcClob0 = new jdbcClob("3AQ2=@D:)|@h?y");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      streamTokenizer1.wordChars((-4), 10890);
      streamTokenizer1.ordinaryChars((-99), (-99));
      streamTokenizer1.lowerCaseMode(false);
      streamTokenizer1.slashStarComments(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(reader0);
      reader0.ready();
      char[] charArray0 = new char[7];
      reader0.reset();
      charArray0[3] = '\u008F';
      streamTokenizer0.sval = "3AQ2=@D:)|@h?y";
      charArray0[1] = '\"';
      streamTokenizer2.wordChars((-4), (-4));
      streamTokenizer1.slashSlashComments(false);
      charArray0[4] = 'W';
      charArray0[5] = ' ';
      reader0.ready();
      streamTokenizer2.wordChars((-4), (-1413));
      streamTokenizer1.nval = (double) ')';
      reader0.read(charArray0);
      streamTokenizer2.nval = 151.35473611869432;
      String string0 = SQLUtil.renderNumber(streamTokenizer2);
      assertEquals("151.35473611869432", string0);
      
      Boolean boolean2 = SQLUtil.mutatesStructure("3AQ2=@D:)|@h?y");
      assertTrue(boolean2.equals((Object)boolean0));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, ">8Exn:");
      String string0 = SQLUtil.normalize("*W%Ww<mH*", true);
      assertEquals("* W % Ww < mH *", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[2];
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte) (-68);
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)39;
      byteArray0[5] = (byte)127;
      byteArray0[6] = (byte) (-44);
      byteArray0[7] = (byte) (-7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\"O<#Gy0XD4Y");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, (-2414), "select'itrans'");
      defaultDBColumn0.toString();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("select'itrans'", defaultDBTable0, (-2414), "Cos of conglomerate ");
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      defaultDBColumn1.isIdentical(defaultDBColumn0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      defaultDBColumn1.isEquivalent(defaultDBColumn0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = Integer.getInteger("Cos of conglomerate ", integer0);
      defaultDBColumn1.setFractionDigits(integer1);
      defaultDBColumn1.setName("select'itrans'");
      defaultDBColumn1.toString();
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("g;0yWS%%I.v>~-", dBSchema0);
      int int0 = (-797);
      Integer integer0 = Integer.getInteger("O", (-797));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "O";
      stringArray0[1] = "O";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      int int1 = 2680;
      Integer integer1 = new Integer(2680);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, (DBDataType) null, integer0, integer1);
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.080026147728218
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BLOB", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(4);
      dBForeignKeyConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringBuilder1.append("BLOB");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("U-ID)i#p,&2O)J$Tv", false);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      String[] stringArray0 = new String[8];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "alter index");
      stringArray0[1] = "B";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("B", (DBTable) null, (-2414), "B");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\"O<#Gy0XD4Y");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, (-2414), "select'initrans'");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray1 = new String[4];
      stringArray1[0] = "select'initrans'";
      stringArray1[1] = " ADD ";
      stringArray1[2] = "\"O<#Gy0XD4Y";
      stringArray1[3] = "select'initrans'";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0);
      mockPrintWriter0.println(2223.0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("drop tablewd:!");
      DefaultDBTable defaultDBTable3 = new DefaultDBTable();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.setPosition((-1650));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(dynamicByteArrayOutputStream1);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter2);
      mockPrintWriter3.printf("alter session", (Object[]) stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable1, true, nameSpec0, mockPrintWriter2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.121867243522427
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, (-2414), "select'initrans'");
      defaultDBColumn0.toString();
      SQLUtil.isDML("alter materialized view : SELECT'INITRANS'");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      SQLUtil.mutatesDataOrStructure("org.antlr.runtime.BitSet");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("]sJTmga&SSWx{", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      defaultDBTable0.getColumn("alter materialized view");
      File file0 = FileUtil.canonicalFile("select");
      MockFile mockFile0 = new MockFile(file0, "zZ%/r,OVMevNH[|[");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.format("\"O<#Gy0XD4Y", (Object[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("drop indexcreate materialized qiew", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "UBL2M#Lc@9PH4zy)G/";
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("alter materialized view", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7646044487975185
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, (-2414), "select'initrans'");
      DBDataType dBDataType0 = DBDataType.getInstance((-2414), "select'initrans'");
      Integer integer0 = new Integer(430);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = Integer.valueOf(430);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, dBDataType0, integer2, integer3);
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      defaultDBColumn1.setFractionDigits(integer4);
      defaultDBColumn1.setVersionColumn(true);
      defaultDBColumn0.setOwner(defaultDBTable0);
      defaultDBColumn0.toString();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getColumnNames();
      defaultDBTable1.getPrimaryKeyConstraint();
      SQLUtil.isDML("select'initrans'");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      SQLUtil.isProcedureCall(" as ");
      SQLUtil.isQuery("s?T=w+'T");
      SQLUtil.isDDL("QsP$62");
      SQLUtil.mutatesStructure("alter maerialized view");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "alter maerialized view", defaultDBTable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "select";
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("select", stringBuilder0);
      int int0 = 4070;
      int int1 = (-163740010);
      int int2 = 9;
      DBDataType dBDataType0 = DBDataType.getInstance(4070, "select");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("hsqls://", (DBTable) null, dBDataType0, integer0, (Integer) null);
      stringBuilder1.append((Object) defaultDBColumn0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-163740010), (CharSequence) "select", 4070, 9);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset -163740010
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<lE`Ezu";
      stringArray0[1] = "info.c";
      stringArray0[2] = "BLOB";
      stringArray0[3] = "!BJl";
      stringArray0[4] = "info.c";
      SQLUtil.renderColumnListWithTableName("!BJl", stringArray0);
      TableContainer tableContainer0 = new TableContainer("<lE`Ezu");
      tableContainer0.getTable("mST.Q&N!1w[[/Y");
      DBDataType dBDataType0 = DBDataType.getInstance(34, "u X}+N!)3$cp=A");
      Integer integer0 = new Integer(34);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("4FoH#l9P3&/&lme", (DBTable) null, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "BLOB");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      StringBuilder stringBuilder2 = stringBuilder1.append((double) 34);
      StringBuilder stringBuilder3 = stringBuilder2.append((long) 34);
      stringBuilder2.append((float) 34);
      StringBuilder stringBuilder4 = stringBuilder3.append((-1.0F));
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder4);
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(rowOutputTextLog0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)73;
      byteArray1[2] = (byte) (-123);
      byteArray1[4] = (byte)117;
      byteArray1[5] = (byte)60;
      byteArray1[6] = (byte)17;
      byteArray1[7] = (byte)89;
      byteArray1[8] = (byte)18;
      // Undeclared exception!
      try { 
        filterOutputStream0.write(byteArray1, (int) (byte)18, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("QdG", (DBTable) null, 2732, "select");
      defaultDBColumn0.toString();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      defaultDBColumn0.toString();
      defaultDBColumn0.isIdentical((DBObject) null);
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      fBConnectionRequestInfo0.getArgumentAsString(61);
      System.setCurrentTimeMillis(61);
      Random.setNextRandom((-4728));
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize(dBColumnArray0[6], (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.642349799260187
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, (-2414), "select'initrans'");
      DBDataType dBDataType0 = DBDataType.getInstance(4184, "select'initrans'");
      Integer integer0 = new Integer(430);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = Integer.valueOf(430);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, dBDataType0, integer2, integer3);
      defaultDBTable0.getColumns();
      Integer.max((-4113), 4184);
      Integer.divideUnsigned(430, (byte) (-8));
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      defaultDBColumn1.setFractionDigits(integer4);
      defaultDBColumn1.setVersionColumn(false);
      defaultDBColumn0.setOwner(defaultDBTable0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("alter maerialized view : SELECT'INITRANS'", string0);
      
      defaultDBTable0.getPrimaryKeyConstraint();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("s?T=w+'T", (DBSchema) null);
      boolean boolean0 = SQLUtil.isDML("select'initrans'");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      String string1 = SQLUtil.renderColumnNames(list0);
      assertEquals("alter maerialized view", string1);
      
      boolean boolean1 = SQLUtil.isProcedureCall("alter maerialized view");
      boolean boolean2 = SQLUtil.isQuery("s?T=w+'T");
      assertTrue(boolean2 == boolean1);
      
      SQLUtil.isDDL("QsP$62");
      Boolean boolean3 = SQLUtil.mutatesDataOrStructure("select'initrans'");
      assertTrue(boolean3.equals((Object)boolean0));
      assertNotNull(boolean3);
      
      Boolean boolean4 = SQLUtil.mutatesStructure("7Silxtm");
      assertFalse(boolean4);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LinkedList<ContainerComponent> linkedList0 = new LinkedList<ContainerComponent>();
      TableContainer tableContainer0 = new TableContainer("truncate");
      TableContainer tableContainer1 = new TableContainer("truncate", tableContainer0);
      tableContainer1.getTable("RDER Y");
      TableContainer tableContainer2 = new TableContainer("GHY6G]00b--4Z]]O");
      tableContainer2.getTable("RDER Y");
      tableContainer2.toString();
      tableContainer2.getTables(false);
      TableContainer tableContainer3 = new TableContainer("");
      tableContainer3.getTables();
      tableContainer3.getSequences(false);
      tableContainer1.getTable((String) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, (DBTable) null, 41, "wKO}");
      SQLUtil.renderColumn(defaultDBColumn0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.987739820187409
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("U-ID)i#p,&2O)J$Tv", false);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLUtil.leftJoin("4|X81.U", stringArray0, "<Z7 G^t[19xY2", "create unique index", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h%ZF(}YHp1:q.51");
      String[] stringArray1 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray1);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      SQLUtil.constraintName(dBUniqueConstraint0);
      SQLUtil.innerJoin("org.apache.derby.impl.sql.execute.rts.RunTimeStatisticsImpl", stringArray0, "Flt%aYdnL#", "43Y60.U", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0202828965748285
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<ContainerComponent> linkedList0 = new LinkedList<ContainerComponent>();
      TableContainer tableContainer0 = new TableContainer("truncate");
      TableContainer tableContainer1 = new TableContainer("truncate", tableContainer0);
      tableContainer1.getTable("RnDER Y");
      TableContainer tableContainer2 = new TableContainer("GHY6G]00b--4Z]]O");
      tableContainer2.getTable("RnDER Y");
      tableContainer2.toString();
      tableContainer2.getTables(false);
      TableContainer tableContainer3 = new TableContainer("");
      tableContainer3.getTables();
      tableContainer0.equals("truncate");
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      boolean boolean0 = SQLUtil.isDML("truncate");
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      SQLUtil.isDDL("CF#I!M+f8odQ~");
      Boolean boolean1 = SQLUtil.mutatesStructure("truncate");
      assertFalse(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLoginTimeout();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource2.setPrepareThreshold(0);
      pGConnectionPoolDataSource0.getLoginTimeout();
      pGConnectionPoolDataSource0.setPrepareThreshold(0);
      pGConnectionPoolDataSource0.setServerName((String) null);
      pGConnectionPoolDataSource1.setSocketTimeout(0);
      pGConnectionPoolDataSource2.getLoginTimeout();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.setServerName((String) null);
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource5 = new PGConnectionPoolDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "drop indexselect3aq2=@d:)|rh?y";
      stringArray0[1] = "|k~pt&!![J1";
      stringArray0[2] = "The array {ndex is out oE range: {0}";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      SQLUtil.renderColumnListWithTableName("|k~pt&!![J1", stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "d";
      stringArray1[1] = "update";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("d", stringArray0, "<truTs~~6pmVHJ&3", "|k~pt&!![J1", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<ContainerComponent> linkedList0 = new LinkedList<ContainerComponent>();
      TableContainer tableContainer0 = new TableContainer("truncate");
      TableContainer tableContainer1 = new TableContainer("truncate", tableContainer0);
      tableContainer1.getTable("RDER Y");
      TableContainer tableContainer2 = new TableContainer("GHY6G]00b--4Z]]O");
      tableContainer2.getTable("RDER Y");
      tableContainer2.toString();
      tableContainer2.getTables(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "DLETKE";
      stringArray0[2] = "server run";
      stringArray0[3] = "truncate";
      stringArray0[4] = "GHY6G]00b--4Z]]O";
      String string0 = SQLUtil.join("", "GHY6G]00b--4Z]]O", stringArray0, "DLETKE", "3aq2", stringArray0);
      assertEquals("DLETKE as 3aq2 on GHY6G]00b--4Z]]O. = 3aq2. and GHY6G]00b--4Z]]O.DLETKE = 3aq2.DLETKE and GHY6G]00b--4Z]]O.server run = 3aq2.server run and GHY6G]00b--4Z]]O.truncate = 3aq2.truncate and GHY6G]00b--4Z]]O.GHY6G]00b--4Z]]O = 3aq2.GHY6G]00b--4Z]]O", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\"O<#Gy0XD4Y");
      defaultDBTable0.equals((Object) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, (-2414), "select'initrans'");
      SQLUtil.normalize("--s'lBJZ'9s>Df", false);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      TableContainer tableContainer0 = new TableContainer("alter materialized view", dBCatalog0);
      tableContainer0.isIdentical(dBCatalog0);
      DBSchema dBSchema0 = tableContainer0.getSchema();
      assertNull(dBSchema0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[5];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "SystemTransaction");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[2] = (byte)40;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      stringArray0[0] = "F;kRPrLxj-cjqA";
      stringArray0[1] = "XPcWs(WoK6dh";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("OQH,5S%P*Qxv&/");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      char[] charArray0 = new char[8];
      charArray0[0] = '8';
      charArray0[1] = 's';
      charArray0[2] = 'k';
      charArray0[3] = 'q';
      charArray0[4] = 'p';
      charArray0[5] = 'e';
      charArray0[6] = '6';
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("SystemTransaction");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XPcWs(WoK6dh", false, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT XPcWs(WoK6dh FOREIGN KEY (F;kRPrLxj-cjqA, XPcWs(WoK6dh, , , ) REFERENCES null(F;kRPrLxj-cjqA, XPcWs(WoK6dh, , , )", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = ">O^%(jO)Kuc *t";
      stringArray0[2] = "OJ)XD";
      stringArray0[3] = "r0Lb@edxEpNbDO";
      stringArray0[4] = "XJ093.S";
      stringArray0[1] = "86";
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0447969209589383
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "F;kRPrLxj-cjqA";
      stringArray0[1] = "XPcWs(WoK6dh";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray1 = new String[4];
      stringArray1[0] = "F;kRPrLxj-cjqA";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "F;kRPrLxj-cjqA", false, stringArray1);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("XPcWs(WoK6dh", false, dBPrimaryKeyConstraint0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("F;kRPrLxj-cjqA");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      mockPrintWriter1.print(0.0);
      mockPrintWriter1.printf("alter materialized view", (Object[]) stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertFalse(defaultDBTable0.equals((Object)defaultDBTable2));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("BLOB");
      String[] stringArray0 = new String[0];
      defaultDBTable1.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES BLOB()", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8934284047624408
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("U-ID)i#p,&2O)J$Tv", false);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      SQLUtil.typeAndName(dBCatalog0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "catalog null";
      stringArray0[1] = "B";
      stringArray0[0] = "Y1N0Tq'R$>CDm] y\"W|";
      stringArray0[2] = "yUI(uf6";
      stringArray0[4] = "B";
      stringArray0[5] = "B";
      DBSchema dBSchema0 = new DBSchema("+x ", dBCatalog0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("B", false, "+x ", "B");
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-594));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.169371224807919
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "F;kRPrLxj-cjqA";
      stringArray0[1] = "XPcWs(WoK6dh";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray1 = new String[4];
      stringArray1[0] = "F;kRPrLxj-cjqA";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "F;kRPrLxj-cjqA", false, stringArray1);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("XPcWs(WoK6dh", false, dBPrimaryKeyConstraint0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("F;kRPrLxj-cjqA");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("");
      String[] stringArray2 = new String[5];
      stringArray2[0] = "F;kRPrLxj-cjqA";
      stringArray2[1] = "F;kRPrLxj-cjqA";
      stringArray2[2] = "";
      stringArray2[3] = "F;kRPrLxj-cjqA";
      stringArray2[4] = "";
      defaultDBTable2.getUniqueConstraint(stringArray2);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT F;kRPrLxj-cjqA PRIMARY KEY (F;kRPrLxj-cjqA, , , )", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec1);
      assertEquals("", stringBuilder1.toString());
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.278560242355371
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("rename3aq2=@d:)|rh?y");
      StringReader stringReader0 = new StringReader(" on ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashStarComments(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      SQLUtil.normalize("Can''t use query methods that take a query string on a PreparedStatement.", false);
      SQLUtil.mutatesDataOrStructure(" on ");
      SQLUtil.normalize(">TH:F'PugF=8i|ggG", false);
      SQLUtil.mutatesDataOrStructure("@S");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Can '' t use query methods that take a query string on a PreparedStatement.";
      stringArray0[1] = null;
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      Character character0 = Character.valueOf('1');
      SQLUtil.renderValue(character0);
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint(" on ", true, "_x_BvX,~Q+&Cm ", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.antlr.runtime.ANTLRStringStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "5Z(|~!xqF");
      Character character0 = new Character('5');
      String string0 = SQLUtil.substituteMarkers("yM!!3rCR3Md8MTxi[&", "5Z(|~!xqF", character0);
      assertEquals("yM!!3rCR3Md8MTxi[&", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "s,jn[~+>0>W.&VYm=";
      stringArray0[2] = "exected!";
      TableContainer tableContainer0 = new TableContainer("s,jn[~+>0>W.&VYm=");
      tableContainer0.getTable("");
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0);
      mockPrintWriter0.println(0.0);
      mockPrintWriter0.format("exected!", (Object[]) stringArray0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      mockPrintWriter0.print(charArray0);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.reset();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte)88;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte)42;
      byteArray0[8] = (byte) (-58);
      dynamicByteArrayOutputStream0.write(byteArray0);
      mockPrintWriter0.printf("org.apache.derby.impl.sql.execute.rts.RealInsertResultSetStatistics", (Object[]) stringArray0);
      mockPrintWriter0.checkError();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("org.h2.command.ddl.PrepareProcedure");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s,jn[~+>0>W.&VYm=");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("s,jn[~+>0>W.&VYm=", defaultDBTable0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0204142811723194
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = null;
      String string0 = " NOT";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NOT", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(4);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      dBForeignKeyConstraint0.toString();
      int int0 = 1142;
      int int1 = (-1657);
      int int2 = 122;
      int int3 = 809;
      FKChangeRule fKChangeRule0 = FKChangeRule.SET_NULL;
      // Undeclared exception!
      try { 
        stringBuilder0.deleteCharAt(809);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 809
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setSsl(true);
      pGConnectionPoolDataSource0.setPortNumber(38);
      pGConnectionPoolDataSource0.getLoginTimeout();
      pGConnectionPoolDataSource0.setServerName("kw`j=");
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource1.setDatabaseName("CACHED");
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource2.setPrepareThreshold(244);
      pGConnectionPoolDataSource1.getReference();
      pGConnectionPoolDataSource0.getReference();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.setUser("a\"lPl|Ush3K+Nj^<aJ");
      pGConnectionPoolDataSource3.setPassword("getSavepointId");
      String string0 = SQLUtil.normalize("4|?Gm'\")", true);
      assertEquals("4 | ? Gm '\")'", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("V!Oe~kxPp0K]tilv", "V!Oe~kxPp0K]tilv", (String[]) null, ">|v?U@82,@LO>", ">|v?U@82,@LO>", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.825903367331673
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BLOB", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(4);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(4, (Object) dBForeignKeyConstraint0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Random.setNextRandom((-606));
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.trimToSize();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(430, "BLOB");
      Integer integer0 = new Integer(430);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer0, integer1);
      defaultDBColumn0.setName("s?T=w+'T");
      Integer.compare(4, 430);
      Integer.min(4, 2501);
      Integer.toUnsignedLong(430);
      Integer.toUnsignedLong(104);
      defaultDBColumn0.setDefaultValue("QeLOr tjpH");
      defaultDBColumn0.toString();
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "s?T=w+'T";
      stringArray0[1] = "s?T=w+'T";
      stringArray0[2] = "s?T=w+'T";
      stringArray0[3] = "s?T=w+'T";
      stringArray0[4] = "QeLOr tjpH";
      stringArray0[5] = "QeLOr tjpH";
      stringArray0[6] = "QeLOr tjpH";
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn(" ~wZl,Y 84'D;", defaultDBTable0, 0, "QeLOr tjpH");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("s?T=w+'T BLOB DEFAULT QeLOr tjpH NULL", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("QdG", (DBTable) null, 2732, "select");
      defaultDBColumn0.toString();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      defaultDBColumn0.toString();
      defaultDBColumn0.isIdentical((DBObject) null);
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DBColumn[] dBColumnArray1 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      boolean boolean0 = true;
      String string0 = ",Be2`";
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition(",Be2`", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[2];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("42Y56", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      stringArray0[1] = "UBL2M#Lc@9PH4zy)G/";
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized viewm%thod");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.355785150714608
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.994856650904326
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SQLUtil.normalize("select intomjqp<[oa7|y)yy", false);
      SQLUtil.isProcedureCall("create materialized view");
      SQLUtil.isQuery("select intomjqp < [ oa7 | y) yy");
      SQLUtil.isDDL("create materialized view");
      SQLUtil.mutatesStructure("LEFT");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("DATE", (String[]) null, "!Y+S9]P+'kL?OGwH", "select intomjqp<[oa7|y)yy", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BLOB", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("BLOB");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(41, (CharSequence) null, 1142, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 41
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5666614977694944
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, (-2414), "select'initrans'");
      DBDataType dBDataType0 = DBDataType.getInstance(4184, "select'initrans'");
      Integer integer0 = new Integer(430);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = Integer.valueOf(430);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, dBDataType0, integer2, integer3);
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      defaultDBColumn1.setFractionDigits(integer4);
      defaultDBColumn0.setName("s?T=w+'T");
      defaultDBColumn1.setVersionColumn(false);
      defaultDBColumn0.setOwner(defaultDBTable0);
      defaultDBColumn0.toString();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getPrimaryKeyConstraint();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("s?T=w+'T", (DBSchema) null);
      defaultDBTable2.setPrimaryKey((DBPrimaryKeyConstraint) null);
      SQLUtil.isDML("b|9khBz~sOk!F");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      SQLUtil.isProcedureCall(" as ");
      SQLUtil.isQuery("s?T=w+'T");
      SQLUtil.isDDL("QsP$62");
      SQLUtil.mutatesStructure("alter maerialized view");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("Dugzerehos#H(8=BF");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: Dugzerehos#H(8=BF
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "s,jn[~+>0>W.&VYm=";
      stringArray0[2] = "exected!";
      TableContainer tableContainer0 = new TableContainer("s,jn[~+>0>W.&VYm=");
      tableContainer0.getTable("");
      tableContainer0.getComponents();
      TableContainer tableContainer1 = new TableContainer("exected!");
      tableContainer1.getComponents();
      tableContainer1.getTable("--");
      TableContainer tableContainer2 = new TableContainer("\u0001\u01D5", (CompositeDBObject<? extends DBObject>) null);
      tableContainer1.getTables(true);
      tableContainer1.getSchema();
      Boolean boolean0 = SQLUtil.mutatesStructure("exected!");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create table", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = SQLUtil.normalize("yUI(uf6", false);
      assertEquals("yUI (uf6", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setUnknownLength(201);
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource2.setServerName("1cu!k");
      pGConnectionPoolDataSource0.setServerName("1cu!k");
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource5 = new PGConnectionPoolDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indexselect3aq2=@d:)|rh?y");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "The array index is out of range: {0}";
      stringArray0[1] = "truncate";
      stringArray0[2] = "truncate";
      stringArray0[3] = "|k~pt&!![J1";
      TableContainer tableContainer0 = new TableContainer("1cu!k");
      tableContainer0.getTable("|k~pt&!![J1");
      String[] stringArray1 = new String[0];
      String[] stringArray2 = new String[9];
      stringArray2[0] = "|k~pt&!![J1";
      stringArray2[2] = "1cu!k";
      stringArray2[3] = "drop indexselect3aq2=@d:)|rh?y";
      stringArray2[4] = "g[v:V4 <0Hsd_C&,{x";
      stringArray2[5] = "1cu!k";
      stringArray2[6] = "|k~pt&!![J1";
      stringArray2[7] = "The array index is out of range: {0}";
      stringArray2[8] = "g[v:V4 <0Hsd_C&,{x";
      String string0 = SQLUtil.innerJoin("g[v:V4 <0Hsd_C&,{x", stringArray1, "The array index is out of range: {0}", "truncate", stringArray2);
      assertEquals("The array index is out of range: {0} as truncate on ", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7773037865345511
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(430, "BLOB");
      Integer integer0 = new Integer(430);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer0, integer1);
      defaultDBColumn0.setName("s?T=w+'T");
      Integer.compare(4, 430);
      Integer.min(4, 2501);
      Integer.toUnsignedLong(430);
      Integer.toUnsignedLong(104);
      defaultDBColumn0.setDefaultValue("QeLOr tjpH");
      defaultDBColumn0.toString();
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "s?T=w+'T";
      stringArray0[6] = "s?T=w+'T";
      stringArray0[2] = "s?T=w+'T";
      stringArray0[3] = "QeLOr tjpH";
      stringArray0[4] = "QeLOr tjpH";
      stringArray0[5] = "QeLOr tjpH";
      stringArray0[6] = "QeLOr tjpH";
      stringArray0[7] = "BLOB";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "QeLOr tjpH";
      objectArray0[1] = (Object) "QeLOr tjpH";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter maerialized view", defaultDBTable0, (-2414), "select'initrans'");
      StringBuilder stringBuilder0 = new StringBuilder(1712);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      delayQueue0.poll(0L, timeUnit0);
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) null);
      SQLUtil.addRequiredCondition("select'initrans'", stringBuilder1);
      stringBuilder1.append((CharSequence) "alter maerialized view");
      boolean boolean0 = false;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "PtpCU";
      stringArray0[1] = "Cost of conglomerate ";
      stringArray0[2] = "Cost of conglomerate ";
      stringArray0[3] = "alter maerialized view";
      stringArray0[4] = "select'initrans'";
      stringArray0[5] = "Cost of conglomerate ";
      stringArray0[6] = "Cost of conglomerate ";
      stringArray0[7] = "Cost of conglomerate ";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("drop materialized view", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-2414), (Object) dBForeignKeyConstraint0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2414
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.42938410163885
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLoginTimeout();
      pGConnectionPoolDataSource0.setServerName((String) null);
      pGConnectionPoolDataSource1.setSocketTimeout(0);
      pGConnectionPoolDataSource2.getLoginTimeout();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.setServerName((String) null);
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource5 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource2.setSocketTimeout(57);
      PGConnectionPoolDataSource pGConnectionPoolDataSource6 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLoginTimeout();
      pGConnectionPoolDataSource6.setServerName((String) null);
      PGConnectionPoolDataSource pGConnectionPoolDataSource7 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource8 = new PGConnectionPoolDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      DBSchema dBSchema0 = new DBSchema("alter materialized viewmetho");
      dBSchema0.getTable("alter materialized viewmetho");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "alter materialized viewmetho";
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "alter materialized viewmetho";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, ">8Exn:");
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7131893885159473
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SQLUtil.removeComments("seJect into^jqp-[oa7|y)yy");
      SQLUtil.isDML("seJect into^jqp-[oa7|y)yy");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = SQLUtil.isQuery("JT%b^i@");
      assertFalse(boolean0);
      
      SQLUtil.isProcedureCall("alter index");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator();
      boolean boolean1 = SQLUtil.isDML("alter index");
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      boolean boolean2 = SQLUtil.isDDL("drop tableserver running on");
      Boolean boolean3 = SQLUtil.mutatesStructure(" free: ");
      assertFalse(boolean3.equals((Object)boolean2));
      
      boolean boolean4 = SQLUtil.isProcedureCall("JT%b^i@");
      assertTrue(boolean4 == boolean1);
      
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter materialized view,q0@.-2j#opi;", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("rename3aq2=@d:)|rh?y");
      StringReader stringReader0 = new StringReader(" on ");
      stringReader0.ready();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.5788449127168476
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.getLoginTimeout();
      pGConnectionPoolDataSource2.setServerName("1cu!k");
      pGConnectionPoolDataSource0.getLogWriter();
      pGConnectionPoolDataSource3.setSocketTimeout(0);
      pGConnectionPoolDataSource3.getLoginTimeout();
      pGConnectionPoolDataSource0.setServerName("1cu!k");
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indexselect3aq2=@d:)|rh?y");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, ",P2h*sgF?n$v2");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "The array index is out of range: {0}";
      stringArray0[1] = "truncate";
      stringArray0[2] = "truncate";
      stringArray0[3] = "1cu!k";
      stringArray0[4] = "drop indexselect3aq2=@d:)|rh?y";
      SQLUtil.normalize("[ts0U\"M@7:y+br 0<", true);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create table ", defaultDBTable0, 0, "truncate");
      assertNull(defaultDBColumn0.getFractionDigits());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.typeAndName(dBCatalog0);
      dBCatalog0.getComponents();
      dBCatalog0.getSequences();
      DBSchema dBSchema0 = new DBSchema("PQ|?;pu*", dBCatalog0);
      String[] stringArray0 = new String[8];
      dBCatalog0.getSchemas();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dBCatalog0.getTables();
      stringArray0[7] = "yUI(uf6";
      stringArray0[1] = "B";
      stringArray0[2] = "yUI(uf6";
      Random.setNextRandom(4);
      System.setCurrentTimeMillis(613L);
      System.setCurrentTimeMillis(0L);
      VersionNumber versionNumber0 = VersionNumber.valueOf("ZKTsk9$<T ^?v");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("catalog null", (String) null, versionNumber0);
      defaultDatabase0.getCatalog("Xi>Ug='v");
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = SQLUtil.renderValue("&_z<ggWngM:");
      assertEquals("'&_z<ggWngM:'", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "O[^`@)K2");
      String string0 = SQLUtil.normalize("U-ID)?#p,&2O)J$Tv", true);
      assertEquals("U - ID) ? # p, & 2O) J $ Tv", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Boolean boolean0 = new Boolean("select intomjqp<[oa7|y)yy");
      SQLUtil.removeComments("select intomjqp<[oa7|y)yy");
      SQLUtil.isQuery("select intomjqp<[oa7|y)yy");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1950865325403197
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "SELECT * FROM ";
      SQLUtil.mutatesDataOrStructure("select");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("alter session");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      MockPrintWriter mockPrintWriter2 = null;
      try {
        mockPrintWriter2 = new MockPrintWriter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SQLUtil.isDDL("create materialized qiew");
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte) (-61);
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.128183350293198
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "m?f3/=";
      stringArray0[1] = "2uiV6G*t";
      stringArray0[2] = "2uiV6G*t";
      stringArray0[3] = "m?f3/=";
      stringArray0[4] = "2uiV6G*t";
      stringArray0[5] = "drop index";
      stringArray0[6] = "drop index";
      SQLUtil.innerJoin("2uiV6G*t", stringArray0, "deletem?f3/=ecj[0d", "f=", stringArray0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "RqR(I+JB!";
      stringArray1[1] = "PRIMARY KEY ";
      stringArray1[2] = "select into";
      stringArray1[3] = "deletem?f3/=ecj[0d";
      stringArray1[4] = "RqR(I+JB!";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("2uiV6G*t", stringArray0, "deletem?f3/=ecj[0d as f= on 2uiV6G*t.m?f3/= = f=.m?f3/= and 2uiV6G*t.2uiV6G*t = f=.2uiV6G*t and 2uiV6G*t.2uiV6G*t = f=.2uiV6G*t and 2uiV6G*t.m?f3/= = f=.m?f3/= and 2uiV6G*t.2uiV6G*t = f=.2uiV6G*t and 2uiV6G*t.drop index = f=.drop index and 2uiV6G*t.drop index = f=.drop index", "A}", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "drop materialized view");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BLOB", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      String string0 = "select into";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.h2.result.SimpleRow";
      stringArray0[1] = "BLOB";
      stringArray0[2] = "BLOB";
      stringArray0[4] = "execute";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("execute", (String[]) null, "select into", "org.h2.result.SimpleRow", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.derby.impl.store.raw.xact.EndXact";
      stringArray0[1] = "select into";
      stringArray0[2] = "BLOB";
      stringArray0[3] = "!BJl";
      stringArray0[4] = "info.c";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.store.raw.xact.EndXact");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "4gY8[F= Gmjgsc5W!Jm", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(".properties", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "zr", false, stringArray0);
      dBUniqueConstraint0.setDoc("!BJl");
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("CONSTRAINT zr ", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder("BLOB");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(0, jdbcDataSource0.getTraceId());
      
      String[] stringArray0 = new String[8];
      stringArray0[1] = "B";
      DBSchema dBSchema0 = new DBSchema("org.apache.derby.impl.sql.compile.TableOperatorNode");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.compile.TableOperatorNode", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (, B, , , , , , )", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Random.setNextRandom((-1953));
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(128);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("&5", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder0.append((CharSequence) stringBuilder1);
      stringBuilder2.append((long) 128);
      stringBuilder1.append(128);
      stringBuilder2.append("&5");
      StringBuilder stringBuilder3 = new StringBuilder("&5");
      char[] charArray0 = new char[9];
      SQLUtil.addRequiredCondition("f5qL'yaL\\q>$^\t", stringBuilder3);
      // Undeclared exception!
      try { 
        stringBuilder3.insert(26, (-2));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 26
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("3AQ2=@D:)|Rh?y");
      dBCatalog0.getComponents();
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertEquals("catalog 3AQ2=@D:)|Rh?y", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[5];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "SystemTransaction");
      stringArray0[0] = "F;kRPrLxj-cjqA";
      String string0 = "]~`<\\\\6&Ca3Z";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("]~`<\\6&Ca3Z");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1cu!k";
      stringArray0[2] = "UBL2n#Lc@vPH]zy)Gp/";
      stringArray0[3] = "rename2uiv6g*t";
      stringArray0[4] = "drVp materilized view17(J5r";
      stringArray0[5] = "";
      stringArray0[1] = "DEYALT ";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "rename2uiv6g*t";
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "s,jn[~+>0>W.&VYm=";
      System.setCurrentTimeMillis((-990L));
      String string0 = SQLUtil.normalize("Lx?Q)}-QS5%].U4", true);
      assertEquals("Lx ? Q)  } - QS5 % ].U4", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LinkedList<ContainerComponent> linkedList0 = new LinkedList<ContainerComponent>();
      TableContainer tableContainer0 = new TableContainer("truncate");
      TableContainer tableContainer1 = new TableContainer("truncate", tableContainer0);
      tableContainer0.getSequences(false);
      tableContainer1.getTable("RDER Y");
      TableContainer tableContainer2 = new TableContainer("GHY6G]00b--4Z]]O");
      tableContainer2.getTable("RDER Y");
      tableContainer2.toString();
      tableContainer2.getTables(false);
      TableContainer tableContainer3 = new TableContainer("");
      tableContainer3.getTables();
      tableContainer3.getSequences(false);
      tableContainer1.getTable((String) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "truncate";
      stringArray0[1] = "alter indexcreate materialized qiew";
      stringArray0[2] = "";
      stringArray0[3] = "truncate";
      stringArray0[4] = "GHY6G]00b--4Z]]O";
      stringArray0[5] = "GHY6G]00b--4Z]]O";
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = "truncate";
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.016496301416993
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "BLOB";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BLOB", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      int int0 = 4;
      StringBuilder stringBuilder0 = new StringBuilder(4);
      dBForeignKeyConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = 1142;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = "Fx ?p";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "VOe~kxPp0K]tilv";
      char char0 = 'j';
      char char1 = 'J';
      int int0 = (-2545);
      boolean boolean0 = false;
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Fx ?p");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("Fx ?p", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.reverse();
      StringBuilder stringBuilder3 = stringBuilder2.append("VOe~kxPp0K]tilv");
      char[] charArray0 = new char[2];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      // Undeclared exception!
      try { 
        stringBuilder3.insert((-2545), charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2545
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 1941;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[5];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "SystemTransaction");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte)40;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      stringArray0[0] = "F;kRPrLxj-cjqA";
      stringArray0[1] = "XPcWs(WoK6dh";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("OQH,5S%P*Qxv&/");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "SystemTransaction", false, stringArray0);
      defaultDBTable0.getComponents();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(420, 1.1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 420
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.083122122960416
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = true;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BLOB", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      int int0 = 4;
      StringBuilder stringBuilder0 = new StringBuilder(4);
      dBForeignKeyConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringBuilder1.append("BLOB");
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      String string0 = "+ebGe88dw";
      StringBuilder stringBuilder2 = new StringBuilder("+ebGe88dw");
      int int1 = 1614;
      // Undeclared exception!
      try { 
        stringBuilder2.replace(1614, (-1600), "rename");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3447004957129813
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Fx ?p", (DBTable) null, 2732, "QdG");
      defaultDBColumn0.toString();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      defaultDBColumn0.setSize(integer1);
      defaultDBColumn0.setTable((DBTable) null);
      defaultDBColumn0.setFractionDigits(integer0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("Fx ?p : QDG(1,2)", string0);
      
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("Fx ?p, Fx ?p, Fx ?p, Fx ?p, Fx ?p", string1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<ContainerComponent> linkedList0 = new LinkedList<ContainerComponent>();
      TableContainer tableContainer0 = new TableContainer("truncate");
      TableContainer tableContainer1 = new TableContainer("truncate", tableContainer0);
      tableContainer1.getTable("RnDER Y");
      TableContainer tableContainer2 = new TableContainer("GHY6G]00b--4Z]]O");
      tableContainer2.getTable("<{9.j5\"");
      tableContainer2.getTable("RnDER Y");
      tableContainer2.toString();
      tableContainer2.getTables(false);
      TableContainer tableContainer3 = new TableContainer("");
      tableContainer3.getTables();
      tableContainer0.equals("truncate");
      tableContainer3.getSequences(false);
      tableContainer1.getTable((String) null);
      tableContainer1.setOwner(tableContainer3);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, (DBTable) null, 41, "wKO}");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      defaultDBColumn0.setSize(integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("null WKO}(3) NULL", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[9];
      String string0 = "lg(aI";
      String string1 = "\"O<#Gy0XD4Y";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\"O<#Gy0XD4Y");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "\"O<#Gy0XD4Y", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("lg(aI", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("lg(aI", false, dBTable0, stringArray0, dBTable0, stringArray0);
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setPortNumber(10);
      pGConnectionPoolDataSource0.getLogWriter();
      SQLUtil.renderColumnListWithTableName("drop index", stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alNer materialized view", defaultDBTable0, (-2414), "insert");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("insert", defaultDBTable0, (-2414), "Cost of conglomerate ");
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn1;
      String string0 = SQLUtil.renderColumnTypeWithSize(dBColumnArray0[1]);
      assertEquals("INSERT", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte)122;
      byteArray0[4] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("Ib3x@PPh_=Ahq`&8");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0856283886245763
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder(4);
      DBDataType dBDataType0 = DBDataType.getInstance(4, "Y2m");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized viewmethod", defaultDBTable0, dBDataType0, integer0, integer1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6-";
      stringArray0[1] = " DEFAULT ";
      DBDataType.getInstance(639, "6-");
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE 6- = '6-' AND  DEFAULT  = ' DEFAULT '", string0);
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("null.alter materialized viewmethod", string1);
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("6- = '6-' AND  DEFAULT  = ' DEFAULT '", false, defaultDBTable0, "Y2m");
      String string2 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"6- = '6-' AND  DEFAULT  = ' DEFAULT '\" ", string2);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LinkedList<ContainerComponent> linkedList0 = new LinkedList<ContainerComponent>();
      TableContainer tableContainer0 = new TableContainer("truncate");
      TableContainer tableContainer1 = new TableContainer("truncate", tableContainer0);
      TableContainer tableContainer2 = new TableContainer("('%Yv0`zY<");
      tableContainer2.getTable("truncate");
      TableContainer tableContainer3 = new TableContainer("GHY6G]00b--4Z]]O");
      tableContainer1.getTable("drop materialized view");
      String string0 = tableContainer1.toString();
      tableContainer3.getTables(false);
      TableContainer tableContainer4 = new TableContainer("yCi3MkL!KI");
      tableContainer4.getTables();
      tableContainer1.getSequences(false);
      tableContainer4.getTable("truncate");
      String[] stringArray0 = new String[0];
      String string1 = SQLUtil.renderColumnListWithTableName("alter indexcreate materialized qiew", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.7474008408851454
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure(" and ");
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      Boolean.compare(false, false);
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.substituteMarkers(" and ", "", (Object) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--", (DBSchema) null);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setSsl(false);
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.setPassword("org.h2.store.fs.FileSystemSplit");
      pGConnectionPoolDataSource1.getDescription();
      pGConnectionPoolDataSource0.setDatabaseName("drop tableselectserver running on");
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource5 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource2.setPrepareThreshold((-2141));
      pGConnectionPoolDataSource5.getReference();
      PGConnectionPoolDataSource pGConnectionPoolDataSource6 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource5.getReference();
      PGConnectionPoolDataSource pGConnectionPoolDataSource7 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource6.setUser("drop tableselectserver running on");
      PGConnectionPoolDataSource pGConnectionPoolDataSource8 = new PGConnectionPoolDataSource();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("@4]B)Y{>_VM/82}I", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("SPECIFICNAME");
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("SPECIFICNAME", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("updateorg.antlr.runtime.bitset", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String[] stringArray0 = new String[8];
      SQLUtil.normalize("", false);
      stringArray0[1] = "B";
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Random.setNextRandom(10);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read(charBuffer0);
      stringReader0.mark(2134);
      stringReader0.mark(45);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SQLUtil.normalize("^P6;t-WJt+ikRf@M/+A", true);
      Random.setNextRandom(45);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("drop materialized view\u00BA");
      tableContainer0.getTable("oss");
      tableContainer0.getComponents();
      String string0 = "ALTER TABLE ";
      TableContainer tableContainer1 = new TableContainer("ALTER TABLE ");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      Object[] objectArray0 = new Object[0];
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("drop materialized view\u00BA");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.42753220301923
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[9];
      String string0 = "\"O<#Gy0XD4Y";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\"O<#Gy0XD4Y");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, (-2414), "select'initrans'");
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      PrintWriter printWriter0 = mockPrintWriter0.printf("\"O<#Gy0XD4Y", (Object[]) stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter2);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("s&\":#@dz]");
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter(mockPrintWriter2, false);
      Locale locale0 = Locale.forLanguageTag("gt");
      mockPrintWriter0.printf(locale0, "SELECT * FROM ", (Object[]) stringArray0);
      mockPrintWriter1.println((-31));
      BufferedOutputStream bufferedOutputStream0 = null;
      try {
        bufferedOutputStream0 = new BufferedOutputStream(dynamicByteArrayOutputStream0, (-2414));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getReference();
      pGConnectionPoolDataSource0.setUser("029Vy&}~JTbS&$");
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource1.setPassword("alter sessionserver running on");
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 128;
      StringBuilder stringBuilder0 = new StringBuilder(128);
      String string0 = "&5";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("&5", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource2 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource3 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource3.getLoginTimeout();
      pGConnectionPoolDataSource2.setServerName("1cu!k");
      pGConnectionPoolDataSource3.setSocketTimeout(0);
      pGConnectionPoolDataSource3.getLoginTimeout();
      pGConnectionPoolDataSource0.setServerName("1cu!k");
      PGConnectionPoolDataSource pGConnectionPoolDataSource4 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource5 = new PGConnectionPoolDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indexselect3aq2=@d:)|rh?y");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "The array index is out of range: {0}";
      stringArray0[1] = "truncate";
      stringArray0[2] = "truncate";
      stringArray0[3] = "|k~pt&!![J1";
      stringArray0[4] = "drop indexselect3aq2=@d:)|rh?y";
      stringArray0[5] = "drop indexselect3aq2=@d:)|rh?y";
      stringArray0[6] = "truncate";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "~";
      stringArray0[1] = "~";
      stringArray0[2] = "OJ)XD";
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[9];
      int int0 = (-2414);
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "rename3aq2=@d:)|rh?y";
      stringArray0[1] = "rename3aq2=@d:)|rh?y";
      stringArray0[2] = "rename3aq2=@d:)|rh?y";
      stringArray0[3] = "rename3aq2=@d:)|rh?y";
      stringArray0[4] = "rename3aq2=@d:)|rh?y";
      stringArray0[5] = "rename3aq2=@d:)|rh?y";
      stringArray0[6] = "1],i8";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "qq4.tt58G Dl`flB";
      stringArray1[1] = "1],i8";
      stringArray1[2] = "rename3aq2=@d:)|rh?y";
      stringArray1[3] = "1],i8";
      stringArray1[4] = "1],i8";
      stringArray1[5] = "1],i8";
      stringArray1[6] = "rename3aq2=@d:)|rh?y";
      String string0 = SQLUtil.leftJoin("rename3aq2=@d:)|rh?y", stringArray0, "rename3aq2=@d:)|rh?y", "qq4.tt58G Dl`flB", stringArray1);
      assertEquals("left join rename3aq2=@d:)|rh?y as qq4.tt58G Dl`flB on rename3aq2=@d:)|rh?y.rename3aq2=@d:)|rh?y = qq4.tt58G Dl`flB.qq4.tt58G Dl`flB and rename3aq2=@d:)|rh?y.rename3aq2=@d:)|rh?y = qq4.tt58G Dl`flB.1],i8 and rename3aq2=@d:)|rh?y.rename3aq2=@d:)|rh?y = qq4.tt58G Dl`flB.rename3aq2=@d:)|rh?y and rename3aq2=@d:)|rh?y.rename3aq2=@d:)|rh?y = qq4.tt58G Dl`flB.1],i8 and rename3aq2=@d:)|rh?y.rename3aq2=@d:)|rh?y = qq4.tt58G Dl`flB.1],i8 and rename3aq2=@d:)|rh?y.rename3aq2=@d:)|rh?y = qq4.tt58G Dl`flB.1],i8 and rename3aq2=@d:)|rh?y.1],i8 = qq4.tt58G Dl`flB.rename3aq2=@d:)|rh?y", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      locale0.getDisplayVariant();
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1444465662389331
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1cu!k";
      stringArray0[1] = "UBL2n#Lc@vPH]zy)Gp/";
      int int0 = (-2414);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "UBL2n#Lc@vPH]zy)Gp/";
      objectArray0[1] = (Object) "1cu!k";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "UBL2n#Lc@vPH]zy)Gp/";
      objectArray0[4] = (Object) "UBL2n#Lc@vPH]zy)Gp/";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("42Y56", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized viewm%thod");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "alter indexorg.antlr.runtime.bitset";
      stringArray0[1] = "alter indexorg.antlr.runtime.bitset";
      stringArray0[2] = "select intoorg.antlr.runtime.bitset";
      stringArray0[3] = "alter indexorg.antlr.runtime.bitset";
      stringArray0[4] = "select intoorg.antlr.runtime.bitset";
      stringArray0[5] = "alter indexorg.antlr.runtime.bitset";
      stringArray0[6] = "alter indexorg.antlr.runtime.bitset";
      String string0 = SQLUtil.join("alter indexorg.antlr.runtime.bitset", "select intoorg.antlr.runtime.bitset", stringArray0, "FOREIGN KEY ", "M;VW", stringArray0);
      assertEquals("alter indexorg.antlr.runtime.bitset join FOREIGN KEY  as M;VW on select intoorg.antlr.runtime.bitset.alter indexorg.antlr.runtime.bitset = M;VW.alter indexorg.antlr.runtime.bitset and select intoorg.antlr.runtime.bitset.alter indexorg.antlr.runtime.bitset = M;VW.alter indexorg.antlr.runtime.bitset and select intoorg.antlr.runtime.bitset.select intoorg.antlr.runtime.bitset = M;VW.select intoorg.antlr.runtime.bitset and select intoorg.antlr.runtime.bitset.alter indexorg.antlr.runtime.bitset = M;VW.alter indexorg.antlr.runtime.bitset and select intoorg.antlr.runtime.bitset.select intoorg.antlr.runtime.bitset = M;VW.select intoorg.antlr.runtime.bitset and select intoorg.antlr.runtime.bitset.alter indexorg.antlr.runtime.bitset = M;VW.alter indexorg.antlr.runtime.bitset and select intoorg.antlr.runtime.bitset.alter indexorg.antlr.runtime.bitset = M;VW.alter indexorg.antlr.runtime.bitset", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1cu!k";
      stringArray0[1] = "UBL2n#Lc@vPH]zy)Gp/";
      stringArray0[2] = "Fx ?p";
      stringArray0[3] = "rename2uiv6g*t";
      stringArray0[4] = "drop materialized view17(q5r";
      stringArray0[5] = "";
      stringArray0[1] = "DEFALT ";
      stringArray0[7] = "6-";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "rename2uiv6g*t";
      stringArray1[1] = "1cu!k";
      String[] stringArray2 = new String[5];
      stringArray2[0] = "Jn'?KK#bLD}.1:4^s";
      stringArray2[1] = "DEFALT ";
      stringArray2[2] = "Fx ?p";
      stringArray2[3] = "CLOBGETPOSITIONFROMLOCATOR";
      stringArray2[4] = "";
      // Undeclared exception!
      try { 
        SQLUtil.join("CLOBGETPOSITIONFROMLOCATOR", ")", stringArray0, "Jn'?KK#bLD}.1:4^s", "rename2uiv6g*t", stringArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
