/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 09:36:06 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.parallelStream();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list5, locale_FilteringMode3);
      List<Locale> list6 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>(linkedList4);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list3, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list6);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2);
      Locale locale0 = Locale.TAIWAN;
      linkedList5.add(locale0);
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5, locale_FilteringMode5);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[15];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(1, xAQueueConnectionFactory1);
      assertEquals(15, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[10];
      StackTraceElement stackTraceElement0 = new StackTraceElement("j?;|7j)'%zOK:V}Gtzs", "z-HcksNr", "j?;|7j)'%zOK:V}Gtzs", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("+-VCYE@;p/_,6Ed", "+-VCYE@;p/_,6Ed", (String) null, (-842));
      stackTraceElementArray0[9] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("+-VCYE@;p/_,6Ed", "+-VCYE@;p/_,6Ed", (String) null, 13);
      stackTraceElementArray0[4] = stackTraceElement3;
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.enumerateQueueConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray1 = connectionFactories0.getTopicConnectionFactory();
      assertEquals(1, topicConnectionFactoryArray1.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList2.add(0, (Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list3, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list0);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1);
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list0, locale_FilteringMode1);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = connectionFactories0.getQueueConnectionFactory(0);
      assertNull(queueConnectionFactory0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("c", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", (-769), 0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Throwable throwable0 = sAXParseException0.initCause(mockException0);
      throwable0.toString();
      SAXParseException sAXParseException2 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", 0, (-1052));
      sAXParseException2.getSuppressed();
      sAXParseException0.getLocalizedMessage();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException3 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "c", (String) null, 0, (-769));
      sAXParseException2.getSuppressed();
      mockException0.addSuppressed(sAXParseException3);
      sAXParseException2.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "7}Ci6fnkv+", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException5 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "c", (String) null, (-769), (-769));
      sAXParseException5.addSuppressed(sAXParseException4);
      SAXParseException sAXParseException6 = new SAXParseException("Ui", "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", (String) null, "UTr^(T-r7|", (-769), 0);
      sAXParseException7.getLineNumber();
      sAXParseException7.getPublicId();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory(0);
      assertEquals(7, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list1);
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      Locale locale0 = Locale.UK;
      Object object0 = new Object();
      SAXParseException sAXParseException0 = new SAXParseException("ZaO*zKH,ok0M$SQi", "[qq<\"WYAR);kqi(ax", "Ui", 4177, (-1781));
      sAXParseException0.getStackTrace();
      sAXParseException0.getCause();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setLineNumber((-1306));
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory1 = connectionFactories0.getXATopicConnectionFactory(0);
      assertNull(xATopicConnectionFactory1.getName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(2, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("mixe5", "z-MHcksNr", "mixe5", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "org.exola.castor.xml.FieldValidator", (-842));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("U/\"JB", "", (String) null, (-842));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", (String) null, (-2393));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("i_D", "org.exola.castor.xml.FieldValidator", (String) null, (-842));
      stackTraceElementArray0[5] = stackTraceElement3;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory1);
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-73);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[18];
      connectionFactoryArray0[0] = null;
      connectionFactoryArray0[1] = null;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      byteArray0[1] = (byte)2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte) (-104);
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("8}c0$M)(qd", "8}c0$M)(qd", "T)U%3bPzBnUm~JW(L", 624);
      StackTraceElement stackTraceElement1 = new StackTraceElement("(H6w%1;,)%KpRIqn~@?", "8}c0$M)(qd", (String) null, 624);
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "Db]", (-3079));
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "XDx^mInXAfs~Ot0-7_", "wJPfYz'N", 1660);
      StackTraceElement stackTraceElement4 = new StackTraceElement("wJPfYz'N", "wJPfYz'N", (String) null, 0);
      StackTraceElement stackTraceElement5 = null;
      try {
        stackTraceElement5 = new StackTraceElement((String) null, "noNamespaceSchemaLocation", "W,]f>x}KMM", 1095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[3];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactory0.setName("");
      TopicConnectionFactory[] topicConnectionFactoryArray1 = new TopicConnectionFactory[5];
      topicConnectionFactoryArray1[0] = topicConnectionFactory0;
      topicConnectionFactoryArray1[1] = topicConnectionFactory0;
      topicConnectionFactoryArray1[2] = topicConnectionFactory0;
      topicConnectionFactoryArray1[3] = topicConnectionFactory0;
      topicConnectionFactoryArray1[4] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray1);
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories0.getTopicConnectionFactoryCount();
      connectionFactories0.getQueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAConnectionFactory((XAConnectionFactory) null);
      connectionFactories0.getXAConnectionFactory();
      int int0 = (-842);
      String string0 = null;
      String string1 = "^_&t=sZ\\4vtHHY";
      connectionFactories0.getConnectionFactoryCount();
      try { 
        connectionFactories0.getTopicConnectionFactory((-842));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[19];
      StackTraceElement stackTraceElement0 = new StackTraceElement("mixe5", "z-MHcksNr", "mixe5", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "org.exola.castor.xml.FieldValidator", (-842));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("U/\"JB", "", (String) null, (-842));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", "0$6jmyoS$/!G", (-2414));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("i_D", "org.exola.castor.xml.FieldValidator", (String) null, (-842));
      stackTraceElementArray0[5] = stackTraceElement3;
      stackTraceElementArray0[6] = stackTraceElement3;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      int int0 = 28;
      try { 
        connectionFactories0.getQueueConnectionFactory(1522);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[10];
      StackTraceElement stackTraceElement0 = new StackTraceElement("Oxb", "z-HcksNr", "Oxb", (-842));
      FileSystemHandling.shouldAllThrowIOExceptions();
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("j`/A$fg(kv\"(BgXlrfu", "+-VCYE@;p/_,6Ed", (String) null, (-842));
      stackTraceElementArray0[9] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("+-VCYE@;p/_,6Ed", "+-VCYE@;p/_,6Ed", (String) null, 13);
      stackTraceElementArray0[4] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("j`/A$fg(kv\"(BgXlrfu", "ZIKpz~}A", "j:BDSa}W-ZR", (-842));
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(1, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      connectionFactories0.getXAConnectionFactoryCount();
      try { 
        connectionFactories0.getQueueConnectionFactory((-2138));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode4);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode5);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = new LinkedList<Locale>();
      List<Locale> list4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList6);
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null, locale_FilteringMode6);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[5];
      Marshaller.enableDebug = false;
      byteArray0[0] = (byte) (-73);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[18];
      connectionFactoryArray0[0] = null;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      ConnectionFactory[] connectionFactoryArray1 = connectionFactories0.getConnectionFactory();
      assertFalse(connectionFactoryArray1.equals((Object)connectionFactoryArray0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      connectionFactories0.getConnectionFactory(0);
      boolean boolean0 = connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[10];
      StackTraceElement stackTraceElement0 = new StackTraceElement("mixe5", "z-MHcksNr", "mixe5", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "mixe5", (-842));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("U/\"JB", "", (String) null, (-842));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", (String) null, (-2393));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("i_D", "mixe5", (String) null, (-842));
      stackTraceElementArray0[5] = stackTraceElement3;
      stackTraceElementArray0[6] = stackTraceElement3;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(6, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      xAConnectionFactory1.setName("org.exolab.castor.xml.MarshalFramework$InternalXMLClassDescriptor");
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte) (-66);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAConnectionFactory((int) (byte)0, (XAConnectionFactory) null);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        connectionFactories0.setConnectionFactory((int) (byte)118, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        connectionFactories0.setConnectionFactory((-3046), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      ConnectionFactories connectionFactories3 = new ConnectionFactories();
      ConnectionFactories connectionFactories4 = new ConnectionFactories();
      ConnectionFactories connectionFactories5 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories4.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      assertNull(topicConnectionFactory1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[19];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getPublicId();
      int int0 = locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getPublicId();
      locator2Impl0.setXMLVersion((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      int int1 = connectionFactories0.getConnectionFactoryCount();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl0.getPublicId();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.setLineNumber(722);
      locatorImpl0.setColumnNumber(722);
      locatorImpl1.getPublicId();
      locator2Impl0.setXMLVersion((String) null);
      locatorImpl0.setLineNumber(0);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl3);
      locator2Impl8.setLineNumber(0);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl6.getSystemId();
      locator2Impl4.getEncoding();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl4);
      try { 
        connectionFactories0.setXAQueueConnectionFactory(2710, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode4);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode5);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list3);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList6, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList6);
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null, locale_FilteringMode6);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-5), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getColumnNumber();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      locator2Impl1.getLineNumber();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl1.setXMLVersion((String) null);
      locatorImpl0.getLineNumber();
      locator2Impl0.setLineNumber(0);
      locator2Impl0.getSystemId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      locator2Impl0.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getEncoding();
      locator2Impl7.getEncoding();
      locator2Impl6.setXMLVersion((String) null);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl9.setXMLVersion("mapping.wrongURL");
      locator2Impl9.setXMLVersion("Xpvh<$f6j5Hvf%0<");
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl6.setColumnNumber(1);
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl2);
      locator2Impl6.setLineNumber(0);
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getSystemId();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ltj[k2Vh");
      PipedInputStream pipedInputStream0 = new PipedInputStream(120);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedOutputStream0);
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[11];
      objectArray0[1] = (Object) ".";
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      locale0.getDisplayVariant();
      objectArray0[2] = (Object) locale0;
      pipedOutputStream0.close();
      objectArray0[3] = (Object) locator2Impl0;
      objectArray0[4] = (Object) null;
      objectArray0[10] = (Object) locator2Impl0;
      objectArray0[2] = (Object) ".";
      Object object0 = new Object();
      objectArray0[8] = (Object) null;
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("Ltj[k2Vh");
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl1.setEncoding("DeruUz~\"5V_@P8 ");
      locator2Impl1.setLineNumber(48);
      locator2Impl2.setColumnNumber((-1412));
      locator2Impl1.getPublicId();
      locator2Impl1.setXMLVersion((String) null);
      locator2Impl0.setLineNumber(48);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl3.getXMLVersion();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl11);
      locator2Impl8.setLineNumber(1833);
      locator2Impl8.setLineNumber(0);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl8.getSystemId();
      locator2Impl12.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-2113), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl1.getPublicId();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.setLineNumber((-352));
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.getXMLVersion();
      locator2Impl3.getSystemId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      locator2Impl6.setLineNumber((-352));
      locator2Impl1.getPublicId();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl0);
      locator2Impl4.getLineNumber();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.internalEntityDecl("O:R.z", "O:R.z");
      defaultHandler2_0.endDocument();
      LocatorImpl locatorImpl5 = new LocatorImpl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl0);
      locator2Impl8.getColumnNumber();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list2, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list5);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list6 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list4);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list6);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode4);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list7 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list5, locale_FilteringMode5);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list7, locale_FilteringMode1);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(692, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      assertNull(topicConnectionFactory1.getName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-8), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(112, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 112, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory(0, (ConnectionFactory) null);
      StackTraceElement stackTraceElement0 = new StackTraceElement("8}c0$M)(qd", "8}c0$M)(qd", "T)U%3bPzBnUm~JW(L", 624);
      StackTraceElement stackTraceElement1 = new StackTraceElement("(H6w%1;,)%KpRIqn~@?", "8}c0$M)(qd", (String) null, 624);
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "Db]", (-3079));
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "XDx^mInXAfs~Ot0-7_", "wJPfYz'N", 1660);
      StackTraceElement stackTraceElement4 = new StackTraceElement("wJPfYz'N", "wJPfYz'N", (String) null, 0);
      StackTraceElement stackTraceElement5 = null;
      try {
        stackTraceElement5 = new StackTraceElement((String) null, "noNamespaceSchemaLocation", "W,]f>x}KMM", 1095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      ConnectionFactories connectionFactories3 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories1.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl1.getColumnNumber();
      locatorImpl1.getSystemId();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ltj[k2Vh");
      PipedInputStream pipedInputStream0 = new PipedInputStream(120);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedOutputStream0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Object[] objectArray0 = new Object[19];
      objectArray0[0] = (Object) locator2Impl0;
      objectArray0[1] = (Object) "";
      locator2Impl0.getXMLVersion();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale1 = Locale.UK;
      Locale.lookup(linkedList0, linkedList2);
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) locator2Impl0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      assertFalse(fileSystemHandling5.equals((Object)fileSystemHandling0));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      connectionFactories0.addXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      xATopicConnectionFactoryArray0[0] = null;
      xATopicConnectionFactoryArray0[1] = null;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      assertFalse(fileSystemHandling19.equals((Object)fileSystemHandling2));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.oro.io.GlobFilenameFilter");
      connectionFactories0.getXATopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(3481, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      linkedList1.offerLast((Locale.LanguageRange) null);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode4);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list3);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode4);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode5);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList7.add((Locale.LanguageRange) null);
      linkedList7.iterator();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      linkedList1.pollLast();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4);
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list2);
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list3, locale_FilteringMode6);
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      linkedList5.add((Locale.LanguageRange) null);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list3, locale_FilteringMode2);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list0);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1);
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list5, locale_FilteringMode2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl1.setEncoding("DeruUz~\"5V_@P8 ");
      locator2Impl1.setLineNumber(48);
      locator2Impl2.setColumnNumber((-1412));
      locator2Impl1.getPublicId();
      locator2Impl1.setXMLVersion((String) null);
      locator2Impl0.setLineNumber(48);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl3.getXMLVersion();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl11);
      locator2Impl8.setLineNumber(1833);
      locator2Impl8.setLineNumber(0);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl8.getSystemId();
      locator2Impl12.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Marshaller.enableDebug = false;
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>(linkedList4);
      linkedList2.parallelStream();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      try { 
        connectionFactories0.marshal((ContentHandler) xMLReaderAdapter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling20 = new FileSystemHandling();
      assertFalse(fileSystemHandling20.equals((Object)fileSystemHandling7));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.isValid();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.enumerateTopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = null;
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.getXAConnectionFactoryCount();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      String string0 = "java.util.Enumeration";
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(829, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 829, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 13;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(13, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ltj[k2Vh");
      PipedInputStream pipedInputStream0 = new PipedInputStream(120);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-28);
      pipedOutputStream0.write(byteArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedOutputStream0);
      Object[] objectArray0 = new Object[13];
      objectArray0[10] = (Object) "Ltj[k2Vh";
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale0 = Locale.GERMANY;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.getISOLanguages();
      mockPrintWriter0.format(locale0, "", objectArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-90), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      connectionFactories0.marshal((Writer) stringWriter0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      assertNull(xAQueueConnectionFactory0.getName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[19];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[18] = topicConnectionFactory0;
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory((TopicConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte) (-66);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addXAConnectionFactory((int) (byte)27, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 27, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[26];
      queueConnectionFactoryArray0[3] = queueConnectionFactoryArray0[13];
      DefaultHandler defaultHandler0 = new DefaultHandler();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      assertFalse(connectionFactories2.equals((Object)connectionFactories1));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl1.getPublicId();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.setLineNumber((-917));
      locator2Impl0.getPublicId();
      locator2Impl1.getPublicId();
      locator2Impl0.setXMLVersion("4#]Lv+pmbbob");
      locatorImpl0.setLineNumber(722);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.getXMLVersion();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl3);
      locator2Impl8.setLineNumber(649);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl4);
      locator2Impl10.getSystemId();
      locator2Impl6.getEncoding();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl1);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      connectionFactories0.getXATopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory1);
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory1);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[4];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      int int0 = (-1329);
      try { 
        connectionFactories0.getXAConnectionFactory((-1329));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = null;
      int int0 = (-842);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[10];
      String string1 = "mixK5";
      StackTraceElement stackTraceElement0 = new StackTraceElement("mixK5", "z-MHcksNr", "mixK5", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory((-842), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -842, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(1, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(2, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException();
      sAXParseException0.addSuppressed(mockException0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling20 = new FileSystemHandling();
      try { 
        connectionFactories0.setXATopicConnectionFactory(3393, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("mij5", "Unable to obtain serializer", "mij5", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("(kSRSv>^b%", "(kSRSv>^b%", "(kSRSv>^b%", (-842));
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "mij5", (-842));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "", (String) null, (-842));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", (String) null, (-2393));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("(kSRSv>^b%", "mij5", (String) null, (-842));
      stackTraceElementArray0[5] = stackTraceElement2;
      stackTraceElementArray0[6] = stackTraceElement2;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      try { 
        connectionFactories0.setXATopicConnectionFactory((-2393), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getPublicId();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getPublicId();
      locator2Impl0.setXMLVersion((String) null);
      locatorImpl0.setLineNumber(0);
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      locator2Impl1.getSystemId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl3);
      locator2Impl8.setLineNumber(106);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl6.getSystemId();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl4);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      Marshaller.enableDebug = true;
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler0.endDocument();
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode3);
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list2, locale_FilteringMode0);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList3, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      linkedList5.iterator();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      linkedList6.pollLast();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0);
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) null, locale_FilteringMode4);
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      linkedList6.parallelStream();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      assertTrue(linkedList10.equals((Object)linkedList9));
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%Fo-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", (String) null, 0, 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException((String) null, "p\"ejdh6xNn;hYLNi46b", (String) null, 0, (-1052));
      sAXParseException3.toString();
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException0.getCause();
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, (String) null, (String) null, 0, (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0);
      sAXParseException2.getLineNumber();
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException6 = new SAXParseException((String) null, "~", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException7 = new SAXParseException("~", "p\"ejdh6xNn;hYLNi46b", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, 0);
      sAXParseException7.addSuppressed(sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException((String) null, (String) null, "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException7);
      SAXParseException sAXParseException9 = new SAXParseException((String) null, (String) null, "R.{%Fo-nA<*[VP", 0, 0);
      sAXParseException9.getPublicId();
      sAXParseException9.getException();
      sAXParseException7.getMessage();
      sAXParseException9.getCause();
      sAXParseException9.getPublicId();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[19];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode4);
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale0 = Locale.UK;
      Object object0 = new Object();
      connectionFactories0.getConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      try { 
        connectionFactories0.getConnectionFactory((-1139));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      locatorImpl0.setPublicId("");
      MockException mockException0 = new MockException();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "org.exolab.jms.config.ConnectionFactories", (-1));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      connectionFactories0.clearXATopicConnectionFactory();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl1.setEncoding("\r\n");
      locator2Impl1.setLineNumber(48);
      locator2Impl2.setColumnNumber((-1412));
      locator2Impl1.getPublicId();
      locator2Impl1.setXMLVersion((String) null);
      locator2Impl0.setLineNumber(48);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl3.getXMLVersion();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl5);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl11);
      locator2Impl8.setLineNumber(0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list5, locale_FilteringMode3);
      List<Locale> list6 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>(linkedList4);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list3, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list6);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2);
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5, locale_FilteringMode5);
      MockThrowable mockThrowable0 = new MockThrowable();
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("mixe5", "z-MHcksNr", "mixe5", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "org.exola.castor.xml.FieldValidator", (-842));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("U/\"JB", "", (String) null, (-842));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", (String) null, (-2393));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("i_D", "org.exola.castor.xml.FieldValidator", (String) null, (-842));
      stackTraceElementArray0[5] = stackTraceElement3;
      stackTraceElementArray0[6] = stackTraceElement3;
      Locator2Impl locator2Impl0 = new Locator2Impl();
      connectionFactories0.getTopicConnectionFactory();
      try { 
        connectionFactories0.getTopicConnectionFactory((-842));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      Locale locale0 = Locale.UK;
      locale0.getExtensionKeys();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      locale0.getDisplayVariant();
      pipedOutputStream0.close();
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("CJzad\rH");
      try { 
        connectionFactories0.getXATopicConnectionFactory((-842));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\"=E!$7Iu_x$z0[");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedOutputStream0);
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.forLanguageTag("#}W~?t-nBP[F\"");
      linkedList0.add(locale0);
      pipedOutputStream0.close();
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("#}W~?t-nBP[F\"");
      try { 
        connectionFactories0.getXATopicConnectionFactory((int) (byte)127);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", "}", 0, 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("}", "p\"ejdh6xNn;hYLNi46b", "}", 0, (-1052));
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "}", "}", 0, (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.initCause(sAXParseException3);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "(", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("(", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, 0);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("}", "}", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("}", (String) null, "R.{%F1-nA<*[VP", 0, 0);
      sAXParseException8.getPublicId();
      sAXParseException8.getException();
      sAXParseException8.getMessage();
      sAXParseException8.getCause();
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", (-769), 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.getPublicId();
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", 0, (-1052));
      sAXParseException0.getSuppressed();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "", (String) null, 0, (-769));
      sAXParseException4.getColumnNumber();
      sAXParseException3.fillInStackTrace();
      sAXParseException3.getSuppressed();
      mockException0.addSuppressed(sAXParseException2);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "VRZU YE/TaBqJtSMg", (-1052), 0);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("Ui", "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", (String) null, "UTr^(T-r7|", (-769), 0);
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getQueueConnectionFactory((-1052));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 38, 38);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      mockException0.addSuppressed(sAXParseException0);
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", (-769), 38);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.getPublicId();
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", 38, (-1052));
      sAXParseException0.getSuppressed();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "", (String) null, 38, (-769));
      sAXParseException4.getColumnNumber();
      sAXParseException3.fillInStackTrace();
      sAXParseException0.getMessage();
      sAXParseException3.getSuppressed();
      mockException0.addSuppressed(sAXParseException2);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 38; columnNumber: 38", 38, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 38; columnNumber: 38", "org.xml.sax.SAXParseException; lineNumber: 38; columnNumber: 38", "VRZU YE/TaBqJtSMg", (-1052), 38);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("Ui", "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 38; columnNumber: 38", (-1052), 38, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", (String) null, "UTr^(T-r7|", (-769), 38);
      sAXParseException8.getLocalizedMessage();
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getQueueConnectionFactory(38);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      mockException0.addSuppressed(sAXParseException0);
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", (-769), 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.getPublicId();
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", 0, (-1052));
      sAXParseException0.getSuppressed();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "", (String) null, 0, (-769));
      sAXParseException4.getColumnNumber();
      sAXParseException3.fillInStackTrace();
      sAXParseException0.getMessage();
      mockException0.addSuppressed(sAXParseException2);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "VRZU YE/TaBqJtSMg", (-1052), 0);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("Ui", "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", (String) null, "UTr^(T-r7|", (-769), 0);
      sAXParseException8.getLocalizedMessage();
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      mockException0.addSuppressed(sAXParseException0);
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", (-769), 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.getPublicId();
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "pMejd?6xNn;hYLN46b", "=3>zpSJ*6NEV-Z>A@", 0, (-1052));
      sAXParseException0.getSuppressed();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("=3>zpSJ*6NEV-Z>A@", "", (String) null, 0, (-769));
      sAXParseException4.getColumnNumber();
      SAXParseException sAXParseException5 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "pMejd?6xNn;hYLN46b", (String) null, 0, (-1052));
      sAXParseException0.getMessage();
      sAXParseException3.getSuppressed();
      mockException0.addSuppressed(sAXParseException2);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException6 = new SAXParseException((String) null, "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "VRZU YE/TaBqJtSMg", (-1052), 0);
      sAXParseException2.addSuppressed(sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("Ui", "VRZU YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException7);
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (String) null, "UTr^(T-r7|", (-769), (-1052));
      sAXParseException9.getLocalizedMessage();
      sAXParseException9.getPublicId();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("+i6f");
      PipedInputStream pipedInputStream0 = new PipedInputStream(120);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedOutputStream0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale locale0 = Locale.ENGLISH;
      linkedList1.add(locale0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale1 = Locale.UK;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)122;
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      connectionFactories0.validate();
      MockException mockException0 = new MockException((String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockException mockException0 = new MockException((String) null);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "hq", (String) null, (-842), (-842), mockException0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("mixe5", "H%Hw3<-resO", (String) null, (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("hq", "hq", "hq", (-842));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "org.exola.castor.xml.FieldValidator", (-842));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("U/\"4JO", "", (String) null, (-842));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", "0$jmy/oS$/!G", (-2393));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("hq", "org.exola.castor.xml.FieldValidator", (String) null, (-842));
      stackTraceElementArray0[5] = stackTraceElement3;
      StackTraceElement stackTraceElement6 = new StackTraceElement("", "-&6lRa6[eK", (String) null, (-2393));
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("@n-3Y(z|&@g", "H%Hw3<-resO", "%QUs 19/'068z<DU", (-2393));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration enumeration0 = connectionFactories0.enumerateXATopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl1.getPublicId();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.setEncoding("DeruUz~\"5V_@P8 ");
      locator2Impl0.setLineNumber(48);
      locator2Impl1.setColumnNumber((-1412));
      locator2Impl0.getPublicId();
      locator2Impl0.setXMLVersion((String) null);
      locatorImpl1.setLineNumber(48);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.getColumnNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl10);
      locator2Impl7.setLineNumber(0);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl7.getSystemId();
      locator2Impl11.getEncoding();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl4);
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException();
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", (String) null, 0, 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException((String) null, "p\"ejdh6xNn;hYLNi46b", (String) null, 0, (-1052));
      sAXParseException3.toString();
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException0.getCause();
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, (String) null, (String) null, 0, (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0);
      sAXParseException2.getLineNumber();
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException6 = new SAXParseException((String) null, "~", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException7 = new SAXParseException("~", "p\"ejdh6xNn;hYLNi46b", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, 0);
      sAXParseException7.addSuppressed(sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException((String) null, (String) null, "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException7);
      SAXParseException sAXParseException9 = new SAXParseException((String) null, (String) null, "R.{%F1-nA<*[VP", 0, 0);
      sAXParseException9.getPublicId();
      sAXParseException9.getException();
      sAXParseException9.getMessage();
      sAXParseException9.getCause();
      sAXParseException9.getPublicId();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, (-33), (-33));
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", "}", (-33), (-33));
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("}", "p\"ejdh6xNn;hYLNi46b", "}", (-33), (-1052));
      sAXParseException3.toString();
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "}", "}", (-33), (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.initCause(sAXParseException3);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "(", "org.xml.sax.SAXParseException; lineNumber: -33; columnNumber: -33", (-33), (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("(", "org.xml.sax.SAXParseException; lineNumber: -33; columnNumber: -33", "org.xml.sax.SAXParseException; lineNumber: -33; columnNumber: -33", (-33), (-33));
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("}", "}", "org.xml.sax.SAXParseException; lineNumber: -33; columnNumber: -33", (-1052), (-33), sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("}", (String) null, "R.{%F1-nA<*[VP", (-33), (-33));
      sAXParseException8.getPublicId();
      sAXParseException8.getException();
      sAXParseException8.getMessage();
      sAXParseException8.getCause();
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getXAConnectionFactory((-33));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 7, 7);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", "}", 7, 7);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("}", "p\"ejdh6xNn;hYLNi46b", "}", 7, (-1052));
      sAXParseException3.toString();
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "}", "}", 7, (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.initCause(sAXParseException3);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "(", "org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 7", 7, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("(", "org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 7", "org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 7", 7, 7);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("}", "}", "org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 7", (-1052), 7, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("}", (String) null, "R.{%F1-nA<*[VP", 7, 7);
      sAXParseException8.getPublicId();
      sAXParseException8.getException();
      sAXParseException8.getMessage();
      sAXParseException8.getCause();
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getXAConnectionFactory(7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", "}", 0, 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("}", "p\"ejdh6xNn;hYLNi46b", "}", 0, (-1052));
      sAXParseException3.toString();
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "}", "}", 0, (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.initCause(sAXParseException3);
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "(", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("(", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, 0);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("}", "}", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("}", (String) null, "R.{%F1-nA<*[VP", 0, 0);
      sAXParseException8.getPublicId();
      sAXParseException8.getException();
      sAXParseException8.getMessage();
      sAXParseException8.getCause();
      sAXParseException8.getPublicId();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[10];
      StackTraceElement stackTraceElement0 = new StackTraceElement("j?;|7j)'%zOK:V}Gtzs", "cksNr", "j?;|7j)'%zOK:V}Gtzs", (-842));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("i_D", "i_D", "i_D", (-842));
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("j`/A$fg(kv\"(BgXlrfu", "+-VCYE@;p/_,6Ed", (String) null, (-842));
      stackTraceElementArray0[9] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("+-VCYE@;p/_,6Ed", "+-VCYE@;p/_,6Ed", (String) null, 13);
      stackTraceElementArray0[4] = stackTraceElement3;
      SAXParseException sAXParseException0 = new SAXParseException("+-VCYE@;p/_,6Ed", "uO?)*[f${ww?n2,3o", "\";SbyUB6r!PrvG,K]u", 105, (-2145));
      try { 
        connectionFactories0.getConnectionFactory(105);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getColumnNumber();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      locator2Impl1.setPublicId((String) null);
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getPublicId();
      locator2Impl1.setXMLVersion((String) null);
      locatorImpl0.getLineNumber();
      locator2Impl0.setLineNumber(54);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      locator2Impl0.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl2.setXMLVersion((String) null);
      locator2Impl7.getEncoding();
      locator2Impl7.getEncoding();
      locator2Impl6.setXMLVersion((String) null);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl6.getSystemId();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl9.setXMLVersion("Xpvh<$f6j5Hvf%0<");
      locator2Impl9.getPublicId();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl5.getColumnNumber();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)37;
      byteArray0[3] = (byte)37;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      int int0 = (-842);
      String string0 = null;
      String string1 = null;
      String string2 = "6<4wCzhonnyC*}";
      String string3 = null;
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement("6<4wCzhonnyC*}", (String) null, (String) null, (-842));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Method name is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl1.getPublicId();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.setLineNumber((-352));
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.getXMLVersion();
      locator2Impl3.getSystemId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locator2Impl5.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      locator2Impl6.setLineNumber((-352));
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl4.getSystemId();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl7);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(1070);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      connectionFactories0.isValid();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling20 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling21 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling22 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling23 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling24 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling25 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling26 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling27 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling28 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling29 = new FileSystemHandling();
      assertFalse(fileSystemHandling29.equals((Object)fileSystemHandling1));
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte) (-31);
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling20 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling21 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling22 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling23 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling24 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling25 = new FileSystemHandling();
      assertFalse(fileSystemHandling25.equals((Object)fileSystemHandling0));
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      assertFalse(fileSystemHandling19.equals((Object)fileSystemHandling3));
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling10 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling11 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling12 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling13 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling14 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling15 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling16 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling17 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling18 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling19 = new FileSystemHandling();
      assertFalse(fileSystemHandling19.equals((Object)fileSystemHandling6));
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode4);
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode5);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>(linkedList2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList3, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list3);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList4, locale_FilteringMode5);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList6, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list4, locale_FilteringMode6);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list5, locale_FilteringMode6);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(517);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", "}", 0, 0);
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException0.initCause(mockException0);
      sAXParseException2.toString();
      SAXParseException sAXParseException3 = new SAXParseException("}", "p\"ejdh6xNn;hYLNi46b", "}", 0, (-1052));
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException3.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "}", "}", 0, (-1052));
      sAXParseException4.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      sAXParseException4.getLocalizedMessage();
      mockException0.addSuppressed(sAXParseException4);
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, "(", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException6 = new SAXParseException("(", "VR+U YE/TaBqJtSMg", "VR+U YE/TaBqJtSMg", 0, 0);
      sAXParseException6.addSuppressed(sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("VR+U YE/TaBqJtSMg", "VR+U YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException6);
      sAXParseException3.getPublicId();
      sAXParseException3.getException();
      sAXParseException3.getMessage();
      sAXParseException3.getCause();
      sAXParseException4.getPublicId();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-1052));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("R.{%F1-nA<*[VP", "p\"ejdh6xNn;hYLNi46b", "}", (-9), 0);
      Throwable throwable0 = sAXParseException0.initCause(mockException0);
      throwable0.toString();
      SAXParseException sAXParseException2 = new SAXParseException("}", "p\"ejdh6xNn;hYLNi46b", "}", 0, (-1052));
      sAXParseException2.getLocalizedMessage();
      sAXParseException2.addSuppressed(sAXParseException0);
      sAXParseException2.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException((String) null, "}", "}", (-9), (-1052));
      sAXParseException3.getLocalizedMessage();
      sAXParseException2.toString();
      sAXParseException3.getSystemId();
      sAXParseException3.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      mockException0.addSuppressed(sAXParseException3);
      throwable0.printStackTrace();
      sAXParseException3.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "(", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException5 = new SAXParseException("(", "VR+U YE/TaBqJtSMg", "VR+U YE/TaBqJtSMg", (-9), 0);
      sAXParseException5.addSuppressed(sAXParseException4);
      SAXParseException sAXParseException6 = new SAXParseException("VR+U YE/TaBqJtSMg", "VR+U YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", (-1052), 0, sAXParseException5);
      SAXParseException sAXParseException7 = new SAXParseException("}", (String) null, "R.{%F1-nA<*[VP", (-9), 0);
      sAXParseException7.getException();
      sAXParseException7.getMessage();
      sAXParseException7.getCause();
      sAXParseException7.getPublicId();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockException mockException0 = new MockException((String) null);
      sAXParseException0.addSuppressed(mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("instantiation eror for cass: ", (String) null, "'must implement5 ", (-769), 0);
      Throwable throwable0 = sAXParseException0.initCause(mockException0);
      throwable0.toString();
      SAXParseException sAXParseException2 = new SAXParseException("'must implement5 ", "'must implement5 ", "'must implement5 ", 0, (-1052));
      sAXParseException2.addSuppressed(sAXParseException0);
      sAXParseException0.getException();
      sAXParseException0.getLineNumber();
      sAXParseException2.getLocalizedMessage();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException3 = new SAXParseException((String) null, locator2Impl0);
      sAXParseException0.getException();
      sAXParseException3.getCause();
      sAXParseException3.getLocalizedMessage();
      sAXParseException2.getLineNumber();
      mockException0.addSuppressed(sAXParseException3);
      sAXParseException2.getSuppressed();
      throwable0.getMessage();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, "instantiation eror for cass: ", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", 0, (-1052));
      SAXParseException sAXParseException5 = new SAXParseException("'must implement5 ", "VR+U YE/TaBqJtSMg", "VR+U YE/TaBqJtSMg", (-769), 0);
      sAXParseException5.getLocalizedMessage();
      sAXParseException5.toString();
      sAXParseException5.getMessage();
      sAXParseException5.getMessage();
      sAXParseException5.addSuppressed(sAXParseException4);
      SAXParseException sAXParseException6 = new SAXParseException("VR+U YE/TaBqJtSMg", "org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0", "'must implement5 ", 0, 0, sAXParseException0);
      sAXParseException2.getPublicId();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      StringReader stringReader0 = new StringReader("");
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      DefaultHandler defaultHandler0 = new DefaultHandler();
      defaultHandler0.skippedEntity("0.");
      defaultHandler0.unparsedEntityDecl("0.", "0.", "0.", (String) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler0.endDocument();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }
}
