/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 11:49:41 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7141647078603324
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "*cKw%rl0LJw", (-3925), (-791));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "+!c`}gOis{CMJ 7=}", 3, 336);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getUpdateRule();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, (String) null, 167, 167);
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint2.getName();
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6081850857674325
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "#", 0, 0);
      foreignKeyConstraint0.isCascadeOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string1);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
      
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getName();
      assertTrue(foreignKeyConstraint0.isCascadeOnDelete());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8165087716709172
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(QPOt:9FWPl", 213, (-1));
      Config config0 = Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "UTF-8", 11, 0);
      foreignKeyConstraint1.isRestrictDelete();
      config0.setGraphvizDir("uJo#hY;W(R");
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean0);
      
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleName();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      assertEquals(213, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.setComments("<OqmfzIzCC\"");
      tableColumn0.setIsAutoUpdated(false);
      tableColumn0.setIsAutoUpdated(true);
      tableColumn0.unlinkChildren();
      tableColumn0.unlinkParents();
      tableColumn0.setShortType("<OqmfzIzCC\"");
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn0.removeParent(tableColumn1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      tableColumn0.removeParent(tableColumn1);
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn2.removeChild(tableColumn1);
      tableColumn2.removeChild(tableColumn1);
      tableColumn0.setIsAutoUpdated(false);
      tableColumn2.setType((String) null);
      tableColumn2.setIsAutoUpdated(false);
      tableColumn0.setComments("<OqmfzIzCC\"");
      tableColumn2.setIsAutoUpdated(true);
      tableColumn2.unlinkChildren();
      tableColumn2.setShortType("C");
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta3);
      tableColumn3.removeParent(tableColumn2);
      tableColumn3.removeChild(tableColumn0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn3, tableColumn2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.setComments("|~4E;Btg_F");
      tableColumn0.setIsAutoUpdated(false);
      tableColumn0.setIsAutoUpdated(false);
      tableColumn0.unlinkChildren();
      tableColumn0.unlinkParents();
      tableColumn0.setShortType("|~4E;Btg_F");
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn0.removeParent(tableColumn1);
      tableColumn0.removeParent(tableColumn1);
      tableColumn1.setIsAutoUpdated(true);
      tableColumn1.setComments("F4W.[Rc|9iMb2(7\"|A%");
      tableColumn0.setIsAutoUpdated(false);
      tableColumn0.setComments("|~4E;Btg_F");
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn0.setType("|~4E;Btg_F");
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0, 3094, 2874);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8797877350457353
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "tw,QM2nz5", (-911), 3);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      System.setCurrentTimeMillis((-911));
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2D_%D36%8h6ITEass");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=EMnx/=']JdgJ\"'F:E");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "z[68YE0(*HVr0%`N", 2, 2);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "3rlBkQL_]P5(.", (-206), (-1));
      assertEquals((-1), foreignKeyConstraint1.getDeleteRule());
      assertEquals((-206), foreignKeyConstraint1.getUpdateRule());
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4171715285888293
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "#", 0, 0);
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean0);
      
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getChildColumns();
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean1);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string1);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "#", (-4595), (-2766));
      assertFalse(foreignKeyConstraint1.isCascadeOnDelete());
      assertEquals((-2766), foreignKeyConstraint1.getDeleteRule());
      assertEquals((-4595), foreignKeyConstraint1.getUpdateRule());
      
      int int0 = new Integer((-4595));
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "i06F~R<N(yJx1WBzg", (-911), 3);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      Integer integer0 = new Integer((-1363));
      Integer integer1 = new Integer((-2619));
      int int0 = 1105;
      Integer integer2 = new Integer(1105);
      Integer integer3 = new Integer(1105);
      Integer integer4 = new Integer((-691));
      Integer.min((-18), (-1363));
      Integer integer5 = new Integer((-799));
      Integer.getInteger("i06F~R<N(yJx1WBzg", integer3);
      Integer.getInteger("^V=H@ ,d8n2~*dM:");
      try { 
        Integer.decode("i06F~R<N(yJx1WBzg");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"i06F~R<N(yJx1WBzg\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Table table0 = null;
      String string0 = "(QPOt:9FWPl";
      String string1 = "mD!q74:=&/M|~";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "mD!q74:=&/M|~", 5552, 3);
      foreignKeyConstraint0.isNullOnDelete();
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      foreignKeyConstraint0.isRestrictDelete();
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string2 = " references ";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", " references ", "mD!q74:=&/M|~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.setComments("bzIt<'zCC\"");
      tableColumn0.setIsAutoUpdated(false);
      tableColumn0.unlinkChildren();
      tableColumn0.unlinkParents();
      tableColumn0.setShortType("bzIt<'zCC\"");
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn0.removeParent(tableColumn1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      tableColumn0.removeParent(tableColumn1);
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn2.removeChild(tableColumn1);
      tableColumn2.removeChild((TableColumn) null);
      tableColumn1.setComments("F4W.[Rc|9iMb2(7\"|A%");
      tableColumn2.setType((String) null);
      tableColumn2.removeParent(tableColumn1);
      tableColumn2.setIsAutoUpdated(false);
      tableColumn0.setComments("bzIt<'zCC\"");
      tableColumn2.setIsAutoUpdated(false);
      tableColumn2.unlinkChildren();
      tableColumn2.setShortType((String) null);
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta3);
      tableColumn3.removeParent(tableColumn2);
      tableColumn0.setType("bzIt<'zCC\"");
      tableColumn2.removeChild(tableColumn1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3146241973600232
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "N", 12, 12);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, " via ", (-1), (-206));
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleName();
      assertEquals((-206), foreignKeyConstraint1.getDeleteRule());
      assertEquals((-1), foreignKeyConstraint1.getUpdateRule());
      
      foreignKeyConstraint0.getUpdateRule();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "tw,QM2nz5", 2646, (-1363));
      foreignKeyConstraint0.isReal();
      Integer integer0 = new Integer((-1718));
      Integer integer1 = new Integer(1105);
      Integer integer2 = new Integer(2505);
      Integer integer3 = new Integer(4284);
      Integer integer4 = new Integer((-691));
      Integer integer5 = new Integer(1105);
      Integer.getInteger("tw,QM2nz5", integer5);
      Integer.getInteger("%en<o{");
      Integer integer6 = new Integer(2505);
      int int0 = 4179;
      Integer.compareUnsigned((-2635), 18);
      Integer.remainderUnsigned(1, 2);
      try { 
        Integer.decode("^V=H@ ,d8n2~*dM:");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"^V=H@ ,d8n2~*dM:\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6103750560929169
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "disableImpliedKeys", 213, 2);
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(213, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", string1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "clum");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=EMnx/=']JdgJ\"vFhE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "clum");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_&-HnLiKuyj%5V0U");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "=EMnx/=']JdgJ\"vFhE", (-538), 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isNullOnDelete();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "=EMnx/=']JdgJ\"vFhE", 871, 2170);
      foreignKeyConstraint1.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.08086723981742
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "-F[6T[]U#]y5,", (-569), 1);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      
      tableColumn0.setType("Restrict delete");
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-569), foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "clm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "clm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z2@");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "clm");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "jrHN^dufh", (-851), 1);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K))jLR7Hcmu");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K))jLR7Hcmu");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K))jLR7Hcmu");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K))jLR7Hcmu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":e,aH");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":e,aH");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AsdM>2");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_&-HnLiKy%5V0U");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "AsdM>2", (-538), (-4073));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":e,aH");
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "AsdM>2", (-538), (-538));
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint1.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      String string0 = "(QPOy:9FWP'l";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(QPOy:9FWP'l", 213, 167);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "";
      Config config0 = Config.getInstance();
      config0.setConnectionProperties("");
      // Undeclared exception!
      try { 
        config0.setLogLevel("J`yM_EfF`BZnQ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid logLevel: 'J`yM_EfF`BZnQ'. Must be one of: [severe, warning, info, config, fine, finer, finest]
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte) (-126);
      byteArray0[7] = (byte) (-95);
      byteArray0[6] = (byte)23;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-6);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Version: \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Version: \"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G~yrUBjdGdatY5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-2647), 17);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis(17);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(QPOy:9FWP'l", 213, (-1));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(QPOy:9FWP'l", 213, (-1));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      Config config0 = Config.getInstance();
      // Undeclared exception!
      try { 
        config0.setLogLevel("J`yM_EfF`BZnQ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid logLevel: 'J`yM_EfF`BZnQ'. Must be one of: [severe, warning, info, config, fine, finer, finest]
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      int int0 = (-1363);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "%F^GttM~w(jd", 30, 30);
      Integer integer0 = new Integer((-1363));
      Integer integer1 = new Integer((-791));
      Integer integer2 = new Integer((-2625));
      int int1 = 1105;
      Integer integer3 = new Integer(1105);
      Integer[] integerArray0 = new Integer[3];
      Integer integer4 = new Integer(1105);
      String string0 = null;
      Integer integer5 = new Integer(30);
      int int2 = 943;
      foreignKeyConstraint0.getChildTable();
      Integer integer6 = new Integer(1);
      Integer.getInteger((String) null, integer6);
      Integer.compare(1, (-791));
      try { 
        Integer.decode(".nRq9e");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \".nRq9e\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1628052500881307
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "#", (-3), (-3));
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean1);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-3), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-3), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G~ZyrUBjdGdatY5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 20, 17);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      foreignKeyConstraint0.isCascadeOnDelete();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      System.setCurrentTimeMillis(17);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Restrict delete", (-791), 3464);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(3464, foreignKeyConstraint0.getDeleteRule());
      assertEquals((-791), int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G~byrEBjdGdatY5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lum");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lum");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 93, 93);
      foreignKeyConstraint0.getParentTable();
      assertEquals(93, foreignKeyConstraint0.getUpdateRule());
      assertEquals(93, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2619);
      foreignKeyConstraint0.getName();
      assertEquals(2619, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.stream();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      String string0 = "9?3SyF$ztXTI^t";
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "java.util.LinkedList@0000000001", (-4021), 0);
      foreignKeyConstraint0.getDeleteRule();
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("java.util.LinkedList@0000000001", "9?3SyF$ztXTI^t", "java.util.LinkedList@0000000001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"java.util.LinkedList@0000000001\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ":}^tT&L.]s@y[3fG", 46, 46);
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(46, int0);
      assertEquals(46, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "tw,QM2n5", 2646, (-1363));
      foreignKeyConstraint0.isImplied();
      Integer integer0 = new Integer((-1718));
      Integer integer1 = new Integer((-1718));
      Integer integer2 = new Integer(2505);
      Integer integer3 = new Integer(4274);
      Integer integer4 = new Integer((-691));
      Integer integer5 = new Integer((-2635));
      Integer.toUnsignedLong((-1718));
      try { 
        Integer.parseUnsignedInt("^JR-'jmOZ", (-691));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -691 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte) (-83);
      byteArray0[5] = (byte) (-83);
      byteArray0[6] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G~byr\"BjdGuatY5");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G~byr\"BjdGuatY5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6NLr,'9a$F5n\b");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6NLr,'9a$F5n\b");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZTs2R.>FFg~yOJ!");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ZTs2R.>FFg~yOJ!");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G~byr\"BjdGuatY5");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZTs2R.>FFg~yOJ!");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZTs2R.>FFg~yOJ!");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=#YgZ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G~byr\"BjdGuatY5");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "BK1*M! Y8%", (byte)46, (byte)46);
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertEquals(46, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(46, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "9?3SyF$ztXTI^t", (-4021), (-185));
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-185), int0);
      assertEquals((-4021), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer(1055);
      Integer integer1 = new Integer((-1));
      Integer integer2 = new Integer((-542));
      Integer integer3 = Integer.valueOf(1684);
      Integer integer4 = new Integer(1055);
      Integer.toUnsignedLong((-1641));
      Integer integer5 = new Integer((-813));
      Integer integer6 = new Integer((-5146));
      Integer integer7 = new Integer((-2742));
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer1;
      integerArray0[1] = integer4;
      integerArray0[2] = integer3;
      Integer integer8 = new Integer((-1));
      Integer.toUnsignedString(114);
      integerArray0[3] = integer8;
      integerArray0[6] = integer4;
      Integer[] integerArray1 = linkedList0.toArray(integerArray0);
      Integer integer9 = new Integer((-2536));
      Integer integer10 = new Integer((-389));
      Object object0 = new Object();
      linkedList0.toArray((Object[]) integerArray1);
      linkedList0.add((TableColumn) null);
      linkedList0.sort((Comparator<? super TableColumn>) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }
}
