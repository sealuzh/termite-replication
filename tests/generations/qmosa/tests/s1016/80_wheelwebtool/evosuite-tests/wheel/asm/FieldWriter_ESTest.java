/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 10:48:26 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      classWriter0.index = (-18);
      classWriter0.version = (-482);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-482), "Fz", " ,w*\"+d~-uK", (String) null, "Fz");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte) (-115);
      byteArray0[3] = (byte) (-115);
      String string0 = "";
      fieldWriter0.visitAnnotation("", false);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (-528), 1585, (byte)19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xyBHCT");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java/lang/Throwable");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(49);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "java/lang/Throwable";
      stringArray0[1] = "wheel.asm.Frame";
      stringArray0[2] = "wheel.asm.Frame";
      stringArray0[3] = "xyBHCT";
      stringArray0[4] = "V;MI>a(Sx";
      stringArray0[5] = "java/lang/Throwable";
      stringArray0[6] = "xyBHCT";
      stringArray0[7] = "wheel.asm.Frame";
      stringArray0[8] = "java/lang/Throwable";
      classWriter0.visit((-1789), (-2420), "V;MI>a(Sx", "xyBHCT", "wheel.asm.Frame", stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l0KGYHln*;u");
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rVd*9zHPPw2oIz2;&");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-69), "V;MI>a(Sx", "java/lang/Throwable", "V;MI>a(Sx", "");
      fieldWriter0.put(byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector1));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3622914870858265
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-71);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The prefix must not be null");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(56);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The prefix must not be null");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteVector byteVector0 = new ByteVector();
      classWriter0.index = (int) (byte) (-71);
      ByteVector byteVector1 = byteVector0.putShort((byte) (-71));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@a/f1ip)}~6F");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 56, "The prefix must not be null", "q", "YRiAA6G(&c[)", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0877530412219119
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4094, "8PL1dr_Y&n", "8PL1dr_Y&n", "8PL1dr_Y&n", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1067), "8PL1dr_Y&n", "F", "", "8PL1dr_Y&n");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
      
      fieldWriter1.next = fieldWriter0;
      classWriter0.visit(50, 50331602, "", "", "F", (String[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter1 = new ClassWriter(4);
      fieldWriter1.next = fieldWriter0;
      classWriter1.version = 1764;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      FieldWriter fieldWriter3 = classWriter0.lastField;
      int int1 = fieldWriter3.getSize();
      assertEquals(30, int1);
      
      fieldWriter2.getSize();
      int int2 = fieldWriter1.next.getSize();
      assertEquals(16, int2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0826248360937065
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4094, "8PL1dr_Yn", "8PL1dr_Yn", "8PL1dr_Yn", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1067), "8PL1dr_Yn", "F", "", "8PL1dr_Yn");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
      
      fieldWriter1.next = fieldWriter0;
      classWriter0.visit(50, 50331602, "", "", "F", (String[]) null);
      ByteVector byteVector0 = new ByteVector();
      int int1 = fieldWriter1.getSize();
      assertEquals(30, int1);
      
      int int2 = fieldWriter1.next.getSize();
      assertEquals(16, int2);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      String string0 = " \\,w*\"+d~-u\\K";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), " ,w*\"+d~-uK", "", "Fz", (Object) null);
      int int0 = (-69);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0225955941538991
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1890), ".1jRvG~bS-", ".1jRvG~bS-", "", "V;MI>a(Sx");
      Attribute attribute0 = new Attribute("V;MI>a(Sx");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.218839396646019
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      FieldWriter fieldWriter0 = classWriter0.lastField;
      String string0 = null;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-482), "RuntimeInvisibleAnnotations", " ,w*\"+d~-uK", (String) null, " ,w*\"+d~-uK");
      Attribute attribute0 = new Attribute(" ,w*\"+d~-uK");
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.put11(8, 2);
      byteVector2.put12(8, 754);
      byteVector1.putByte(2);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)91;
      byteVector0.data = byteArray0;
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter1, 2, "jo", "Deprecated", "5b!I\"l:365-S-k'nD]s", object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.606769022196835
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 218, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "8P>L1dr_Y&n", "8P>L1dr_Y&n");
      fieldWriter0.visitAnnotation("8P>L1dr_Y&n", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector1 = byteVector0.put12((-371), 169);
      ByteVector byteVector2 = new ByteVector((byte)0);
      ByteVector byteVector3 = byteVector1.putUTF8("8P>L1dr_Y&n");
      fieldWriter0.put(byteVector3);
      fieldWriter0.put(byteVector3);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation(".7ij", true);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "Fz", "Fz", "Fz", " ,w*\"+d~-uK");
      fieldWriter0.visitAnnotation("Fz", true);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte)10;
      byteArray0[4] = (byte) (-56);
      byteArray0[7] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[15];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byte[] byteArray2 = new byte[20];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l0KGYHln*;u");
      byteArray2[2] = (byte)0;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray2);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((byte) (-56));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l0KGYHln*;u");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteVector1.length = (int) (byte) (-56);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)4, "l0KGYHln*;u", "l0KGYHln*;u", "l0KGYHln*;u", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(50);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1109), "", "", "org.apache.commons.io.filefilter.AndFileFilter", "");
      fieldWriter0.visitAnnotation("SU;$fdu}770bQ", false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SU;$fdu}770bQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      classWriter0.visit(50, 50, "", "", "", (String[]) null);
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.AndFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      classWriter0.toByteArray();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5687834439010604
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      ByteVector byteVector0 = new ByteVector(218);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "I0/oD-%E+DvUN!", "8P>L1dr_Y&n", "", "");
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      Label label0 = new Label();
      Label label1 = label0.successor;
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = null;
      labelArray0[1] = null;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      Label label2 = new Label();
      labelArray0[4] = label2;
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(54, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      String string0 = "Fz";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, " ,w*\"+d~-uK", "Fz", " ,w*\"+d~-uK", (Object) null);
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-482), "Fz", "Fz", "Fz", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5520705c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The wildcard array must not be null");
      byteArray0[2] = (byte)4;
      ClassWriter classWriter0 = new ClassWriter(42);
      Item[] itemArray0 = new Item[9];
      Item item0 = classWriter0.key2;
      itemArray0[3] = item0;
      Item item1 = new Item();
      itemArray0[1] = item1;
      Item item2 = classWriter0.newMethodItem("oKZp#", "oKZp#", "oKZp#", true);
      itemArray0[8] = itemArray0[4];
      item2.longVal = 4294967295L;
      item1.strVal2 = "The wildcard array must not be null";
      item1.set((-1132.090956));
      Item item3 = new Item(42, item2);
      itemArray0[1] = item3;
      itemArray0[4] = item0;
      Item item4 = new Item();
      itemArray0[5] = item4;
      item0.strVal3 = "The wildcard array must not be null";
      item0.index = 12;
      Item item5 = classWriter0.newConstItem("oKZp#");
      itemArray0[6] = item5;
      itemArray0[7] = item3;
      itemArray0[8] = item0;
      classWriter0.typeTable = itemArray0;
      item5.set((byte)4);
      item3.set((byte)4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)4, "The wildcard array must not be null", "oKZp#", "The wildcard array must not be null", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("oKZp#", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6479422870982072
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      classWriter0.visitInnerClass("h*F%Hbt^V8)YtM'F7(", "h*F%Hbt^V8)YtM'F7(", "h*F%Hbt^V8)YtM'F7(", (-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212699, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n");
      ByteVector byteVector0 = new ByteVector(1);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte)0;
      ByteVector byteVector1 = byteVector0.put12((-779), 2218);
      byteArray0[3] = (byte) (-11);
      byteArray0[1] = (byte) (-9);
      byteArray0[5] = (byte)112;
      byteVector1.putByte(19);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("Signature", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1890), ".1jRvG~bS-", ".1jRvG~bS-", "", "V;MI>a(Sx");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.590416085693616
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 218);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.IOCase", "", "org.apache.commons.io.IOCase", "");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("The prefix must not be null");
      ByteVector byteVector2 = byteVector1.putByte(2372);
      classReader0.accept((ClassVisitor) classWriter0, 2895);
      byteVector2.data = classReader0.b;
      ByteVector byteVector3 = byteVector2.put11(49, 5);
      classWriter0.toByteArray();
      ByteVector byteVector4 = byteVector3.putInt(218);
      byteVector4.putShort(2);
      fieldWriter0.put(byteVector4);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      int int0 = (-482);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-482), "Fz", " ,w*\"+d~-uK", (String) null, "Fz");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("!b5c*$Yc+");
      Attribute attribute1 = new Attribute("RuntimeInvisibleAnnotations");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-115);
      byteArray0[3] = (byte) (-115);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Fz");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray1[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nur>\"5gh1_lI!t#q");
      byteArray1[1] = (byte)49;
      byteArray1[2] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)1, "[HcfXOdz9", "[HcfXOdz9", "[HcfXOdz9", (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), " ,w*\"+d~-uK", " ,w*\"+d~-uK", "The wildcard array must not be null", (Object) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      fieldWriter0.getSize();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = null;
      int int0 = 57;
      String string0 = "";
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 57, "", "", "kI))9_V,e<", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
