/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 12:07:09 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9992973105392757
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.star();
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token3.getTokenText());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.dots();
      assertEquals("g", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("n", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(".s", token7.getTokenText());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("6", token10.getTokenText());
      
      Token token11 = xPathLexer2.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
      assertEquals("V", token13.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token14 = xPathLexer2.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer3.equals();
      assertEquals(21, token15.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.069876470185463
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer1.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals("R", token2.getTokenText());
      
      xPathLexer1.comma();
      xPathLexer1.leftParen();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("^d");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("03", token5.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer2.operatorName();
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("^", token6.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("\"wY;h?");
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer2.operatorName();
      Token token8 = xPathLexer3.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer4.comma();
      Token token10 = xPathLexer4.doubleColon();
      assertEquals("wY", token10.getTokenText());
      
      xPathLexer3.not();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer4.nextToken();
      assertEquals(";h?", token14.getTokenText());
      
      Token token15 = xPathLexer0.comma();
      assertEquals(32, token15.getTokenType());
      
      Token token16 = xPathLexer1.identifier();
      assertEquals(15, token16.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.548091639600843
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:&");
      Token token0 = xPathLexer1.plus();
      assertEquals("H", token0.getTokenText());
      
      xPathLexer1.colon();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      Token token2 = xPathLexer4.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.leftParen();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals("7?", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("H3:&");
      xPathLexer5.operatorName();
      xPathLexer5.at();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer2.nextToken();
      Token token5 = xPathLexer5.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("&", token6.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer8.or();
      Token token7 = xPathLexer7.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer8.slashes();
      Token token8 = xPathLexer6.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals("c", token10.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3768344707328422
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.consume((-698));
      xPathLexer2.colon();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (c)");
      xPathLexer3.leftParen();
      xPathLexer2.nextToken();
      xPathLexer3.or();
      xPathLexer2.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.885179969289044
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals("c", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("G{&.QuSJv");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("G", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.or();
      xPathLexer3.slashes();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.operatorName();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer7.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token7 = xPathLexer9.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer1.slashes();
      Token token8 = xPathLexer8.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer6.whitespace();
      assertEquals((-2), token10.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0931927957412433
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("m", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("we", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.literal();
      assertEquals("ken.saxpath.XPathLexe", token5.getTokenText());
      assertNotNull(token5);
      assertEquals(27, token5.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals("g", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.comma();
      Token token8 = xPathLexer6.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer6.operatorName();
      Token token9 = xPathLexer6.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer5.nextToken();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer5.dollar();
      assertEquals(")", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer3.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer6.rightBracket();
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.155363560530804
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer(",sBHs>6");
      xPathLexer1.nextToken();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer1.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      xPathLexer3.at();
      xPathLexer2.doubleColon();
      xPathLexer3.operatorName();
      xPathLexer3.leftParen();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer2.leftBracket();
      xPathLexer3.relationalOperator();
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer0.comma();
      xPathLexer1.comma();
      XPathLexer xPathLexer6 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer5.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0402925251649795
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("v", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Z", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("]8", token5.getTokenText());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("=vZ]8-Y ?4I");
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("Z5{W}9PG&.v");
      Token token7 = xPathLexer5.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("Z", token7.getTokenText());
      
      xPathLexer1.operatorName();
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token9 = xPathLexer5.nextToken();
      assertEquals("5", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer2.slashes();
      Token token11 = xPathLexer5.slashes();
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.061672896789623
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("DV");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("DV");
      xPathLexer3.pipe();
      xPathLexer1.pipe();
      xPathLexer3.dots();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer2.minus();
      xPathLexer1.number();
      XPathLexer xPathLexer4 = new XPathLexer("4Eb_&");
      xPathLexer4.dollar();
      xPathLexer1.at();
      xPathLexer1.number();
      xPathLexer4.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("DV");
      xPathLexer3.leftBracket();
      xPathLexer5.operatorName();
      xPathLexer5.number();
      xPathLexer0.relationalOperator();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.dollar();
      xPathLexer5.comma();
      xPathLexer0.comma();
      xPathLexer5.getPreviousToken();
      Token token0 = xPathLexer2.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0628474385952704
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer1.colon();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer1.leftParen();
      assertEquals("v", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.minus();
      xPathLexer2.minus();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(6, token4.getTokenType());
      assertEquals("-", token4.getTokenText());
      
      xPathLexer2.doubleColon();
      xPathLexer2.operatorName();
      Token token5 = xPathLexer2.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("Y", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("}{b]X,8xHF?");
      Token token7 = xPathLexer3.leftBracket();
      assertEquals("}", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("{", token8.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token9 = new Token(14, "!jw>`!raeZT# k9sFN", 14, 14);
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("]", token11.getTokenText());
      
      Token token12 = xPathLexer2.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer1.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("8", token13.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.864906276772937
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("7", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token3 = xPathLexer1.leftParen();
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("`$qAt.E!ZTY#~=", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("`$", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("mj]4KXC!,W");
      XPathLexer xPathLexer4 = new XPathLexer("mj]4KXC!,W");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.operatorName();
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer3.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("j", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.comma();
      assertEquals("]", token11.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("q8BPw~`'P.FhOG");
      Token token12 = xPathLexer8.comma();
      assertEquals("q", token12.getTokenText());
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1325897575678097
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer1.colon();
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("7", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("H3:|?");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer1.pipe();
      assertEquals("?", token5.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token6 = xPathLexer5.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      Token token7 = xPathLexer5.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("?", token7.getTokenText());
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals("H3", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      xPathLexer1.leftParen();
      xPathLexer1.identifierOrOperatorName();
      Token token9 = xPathLexer4.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("n,ED[J$8y\"");
      Token token10 = xPathLexer7.identifierOrOperatorName();
      assertEquals("n", token10.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer4.comma();
      xPathLexer8.div();
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token11 = xPathLexer5.dollar();
      assertEquals("c", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer2.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer9.slashes();
      assertEquals(11, token13.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token14 = xPathLexer10.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9047054184726526
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("we", token3.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("r", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.pipe();
      assertEquals("g", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.star();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("e", token7.getTokenText());
      
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer1.dollar();
      assertEquals("6", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("V", token9.getTokenText());
      
      Token token10 = new Token(22, "com.werken.saxpath.XPathLexer", (-2), (-2));
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer5.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals("n", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer1.minus();
      assertEquals(")", token13.getTokenText());
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.309515191935057
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.consume((-2860));
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.nextToken();
      xPathLexer1.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.div();
      xPathLexer2.relationalOperator();
      xPathLexer1.dots();
      xPathLexer2.at();
      xPathLexer3.doubleColon();
      xPathLexer3.operatorName();
      xPathLexer1.leftParen();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.comma();
      xPathLexer4.div();
      xPathLexer5.consume(1483);
      XPathLexer xPathLexer6 = new XPathLexer(">U;HY./q@");
      xPathLexer0.dollar();
      xPathLexer4.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.188657152461847
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer1.plus();
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("J46m9y");
      xPathLexer0.mod();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("J46m9y");
      XPathLexer xPathLexer5 = new XPathLexer("^d");
      Token token6 = xPathLexer5.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.identifier();
      assertEquals("R03Zl", token7.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer4.nextToken();
      assertEquals("J46m9y", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer0.dollar();
      assertEquals("+", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("%", token10.getTokenText());
      
      xPathLexer3.comma();
      Token token11 = xPathLexer3.number();
      assertEquals(30, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer7.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.05834091788901
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("0", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("3", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("d", token6.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token7 = xPathLexer3.at();
      assertEquals(")", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token10 = new Token(100, "}aL/?itlvt#VyMD.", 1, (-2));
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("%g", token11.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      Token token12 = xPathLexer6.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("c", token12.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7084492250902223
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.slashes();
      assertEquals("?", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token1 = xPathLexer1.comma();
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals("?", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer1.plus();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("`$qAt.E!ZTY#~=", token3.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("`", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token5 = xPathLexer3.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer3.number();
      XPathLexer xPathLexer4 = new XPathLexer("5~ot-^QNRK");
      Token token6 = xPathLexer4.number();
      assertEquals("5", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer0.plus();
      assertEquals("`", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("$", token9.getTokenText());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer4.not();
      assertEquals("o", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer4.rightBracket();
      assertEquals(4, token12.getTokenType());
      assertEquals("t", token12.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9320652299159522
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("7", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.not();
      Token token4 = xPathLexer2.leftParen();
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token5 = xPathLexer4.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("P>*Zx%N]g)-j|u");
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer1.operatorName();
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer6.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("P", token8.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer("[ (");
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer8.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      xPathLexer0.or();
      Token token11 = xPathLexer5.doubleColon();
      assertEquals("7?", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("`", token12.getTokenText());
      
      XPathLexer xPathLexer12 = new XPathLexer();
      Token token13 = xPathLexer3.notEquals();
      assertEquals("7?", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer10.rightBracket();
      assertEquals(4, token14.getTokenType());
      assertEquals("[", token14.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8294089762890293
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer1.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.16586897721872
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("H", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("", token1.getTokenText());
      
      xPathLexer1.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals("R", token2.getTokenText());
      
      Token token3 = xPathLexer1.comma();
      assertEquals("d", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer1.leftParen();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("^d");
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("03", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("Zl", token7.getTokenText());
      
      xPathLexer2.operatorName();
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer3.leftBracket();
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      assertEquals("+", token9.getTokenText());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer3.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.div();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer4.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer3.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer3.rightBracket();
      assertEquals(4, token15.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.880727496599959
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer0.plus();
      xPathLexer1.comma();
      xPathLexer1.leftParen();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("^d");
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer2.operatorName();
      Token token5 = xPathLexer2.slashes();
      assertEquals("^", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("\"wY;h?");
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer2.operatorName();
      Token token7 = xPathLexer3.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer4.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("\"", token8.getTokenText());
      
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("w", token10.getTokenText());
      
      Token token11 = xPathLexer4.doubleColon();
      assertEquals("Y;", token11.getTokenText());
      
      xPathLexer3.not();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer1.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9069117591353661
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals("H", token0.getTokenText());
      
      xPathLexer1.colon();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer3.comma();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.plus();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(":", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.doubleColon();
      xPathLexer5.doubleColon();
      Token token3 = xPathLexer0.comma();
      assertEquals("?", token3.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token4 = xPathLexer6.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("7", token4.getTokenText());
      
      Token token5 = xPathLexer6.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("?", token5.getTokenText());
      
      xPathLexer3.div();
      Token token6 = xPathLexer4.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = new Token(2997, "com.werken.saxpath.XPathLexer", (-3472), 99);
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("c`", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer5.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token10);
      assertEquals("", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("coL?werke.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer1.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0427691720665355
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("DV");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("DV", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("c", token3.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("DV");
      Token token4 = xPathLexer3.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("D", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("P>*Zx%N]g)-j|u");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("$", token8.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer("");
      Token token9 = xPathLexer7.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer7.doubleColon();
      Token token10 = xPathLexer5.not();
      assertEquals("P", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      xPathLexer3.notEquals();
      Token token11 = xPathLexer8.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1420825768628564
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.colon();
      assertEquals("H", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("*", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("*", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.comma();
      Token token4 = xPathLexer0.plus();
      assertEquals("2", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Ep-", token5.getTokenText());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.slashes();
      assertEquals("s", token7.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2763903499788538
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "4l}9";
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.consume((-2404));
      xPathLexer0.rightBracket();
      xPathLexer1.plus();
      xPathLexer0.leftParen();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0039693070190303
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.comma();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("*", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("ys", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token6 = xPathLexer1.at();
      assertEquals("l", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.not();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("NH", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer2.comma();
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("`", token10.getTokenText());
      
      Token token11 = xPathLexer1.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer2.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9806866523379587
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$.4F:^:Vh8Da0h]KGR@");
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals("$", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("$.4F:^:Vh8Da0h]KGR@");
      xPathLexer3.or();
      Token token4 = xPathLexer1.doubleColon();
      assertEquals("NH", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      xPathLexer2.operatorName();
      Token token5 = xPathLexer1.leftParen();
      assertEquals("*", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.div();
      Token token7 = xPathLexer0.star();
      assertEquals(":", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer4.identifierOrOperatorName();
      xPathLexer0.or();
      Token token8 = xPathLexer4.comma();
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9672661207703723
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer1.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer2.operatorName();
      xPathLexer1.nextToken();
      xPathLexer2.leftParen();
      xPathLexer0.plus();
      String string0 = "@X',)@Brs";
      XPathLexer xPathLexer3 = new XPathLexer("@X',)@Brs");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = null;
      try {
        xPathLexer8 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7606605297762294
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer1.equals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer(">U;HY./q@");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("U", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer5.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer4.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("LgU0$ia:sd=8VO");
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("w", token9.getTokenText());
      
      Token token10 = xPathLexer5.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer5.equals();
      assertEquals(21, token11.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token12 = xPathLexer8.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0993531666003533
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("", token1.getTokenText());
      
      xPathLexer1.slashes();
      xPathLexer0.plus();
      Token token2 = xPathLexer1.comma();
      assertEquals("d", token2.getTokenText());
      
      xPathLexer1.leftParen();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.plus();
      Token token4 = xPathLexer0.identifier();
      assertEquals("03Zl", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("^d");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("+", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("%g", token6.getTokenText());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("^", token7.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer3.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer1.identifierOrOperatorName();
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.div();
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("G/ =m{ @x}rdgTgS");
      Token token11 = xPathLexer3.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer3.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.0309453947300713
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5497747095019578
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer1.leftParen();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer2.not();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      xPathLexer3.plus();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0379013920370266
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals("g", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("$", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      xPathLexer1.leftParen();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("A", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.or();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("v ByDLz-");
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("U1'Q7IWpPX<Z<j/4i");
      Token token6 = xPathLexer2.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("A(})");
      xPathLexer5.operatorName();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer4.dollar();
      assertEquals("U", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0806319015460524
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("H", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("*", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.plus();
      Token token4 = xPathLexer0.comma();
      assertEquals("f", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("*", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("W2Ep-", token6.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("sk}`", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token9 = xPathLexer2.doubleColon();
      assertEquals("lN", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("00qkV4UQ");
      xPathLexer1.operatorName();
      Token token10 = xPathLexer3.at();
      assertEquals("0", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.relationalOperator();
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer5.at();
      assertEquals(16, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer1.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer5.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer0.not();
      assertEquals("s", token15.getTokenText());
      assertEquals(23, token15.getTokenType());
      
      Token token16 = xPathLexer4.rightBracket();
      assertEquals(4, token16.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.877691552878845
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer1.not();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer(">U;HY./q@");
      xPathLexer3.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8236633114883
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.colon();
      xPathLexer2.rightBracket();
      xPathLexer1.plus();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("@~");
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("@~");
      xPathLexer2.leftBracket();
      xPathLexer1.operatorName();
      xPathLexer2.at();
      XPathLexer xPathLexer5 = new XPathLexer("wP!");
      xPathLexer5.relationalOperator();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.plus();
      xPathLexer2.dollar();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.comma();
      xPathLexer7.comma();
      xPathLexer2.not();
      xPathLexer4.rightBracket();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4928122102355763
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer1.equals();
      xPathLexer0.leftBracket();
      String string0 = ">\\U;HY./q@";
      XPathLexer xPathLexer2 = new XPathLexer(">U;HY./q@");
      xPathLexer2.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer1.doubleColon();
      xPathLexer1.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2309378343774333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(">U;HY./q@");
      Token token3 = xPathLexer2.nextToken();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("m.", token4.getTokenText());
      assertEquals(14, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("U", token6.getTokenText());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("we", token8.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer3.leftParen();
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.slashes();
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer5.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer4.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer4.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer3.rightBracket();
      assertEquals(4, token15.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8396646635931186
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-924));
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer1.pipe();
      xPathLexer1.mod();
      xPathLexer1.operatorName();
      xPathLexer1.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.564437833539768
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.plus();
      assertEquals("H", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer4 = new XPathLexer("HR03Zl+%g");
      Token token2 = xPathLexer2.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals("d", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.or();
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer4.doubleColon();
      assertEquals("H", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("^d");
      xPathLexer4.operatorName();
      xPathLexer5.at();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer1.leftParen();
      Token token6 = xPathLexer7.nextToken();
      assertEquals("^d", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals("R", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      xPathLexer6.relationalOperator();
      Token token8 = xPathLexer8.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token9 = xPathLexer10.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer7.slashes();
      assertEquals("^", token10.getTokenText());
      
      Token token11 = xPathLexer4.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer10.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer8.leftParen();
      assertEquals(1, token13.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.567450498703883
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      Token token0 = xPathLexer0.comma();
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("^kCB0/Nms]pop");
      Token token4 = xPathLexer1.nextToken();
      assertEquals("^kCB0/Nms]pop", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("Zl", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("HR03Zl+%g");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("^", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer2.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer1.operatorName();
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("+", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.comma();
      Token token10 = xPathLexer5.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.comma();
      Token token11 = xPathLexer2.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.165938272264772
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5Jh;z[s18");
      Token token0 = xPathLexer0.at();
      assertEquals("5", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.leftParen();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("h", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(";", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("h_.ng/");
      xPathLexer1.doubleColon();
      xPathLexer0.operatorName();
      Token token8 = xPathLexer4.leftParen();
      assertEquals("h", token8.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.identifier();
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer4.equals();
      assertEquals("_", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals(".", token11.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token12 = xPathLexer5.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer1.dollar();
      assertEquals(26, token14.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9857364749102426
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.146094028226641
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.consume((-872));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.1859890822303543
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("$", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("qAt.E!ZTY#~=", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("p$B$.wQ&9AJ/+{_<,R[");
      xPathLexer1.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("qA", token5.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("p$B$.wQ&9AJ/+{_<,R[");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("Mt<cdQ,5+DGWE,Fk");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("$", token6.getTokenText());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer2.at();
      assertEquals("p", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("Mt", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("$", token9.getTokenText());
      
      xPathLexer5.comma();
      XPathLexer xPathLexer6 = new XPathLexer("KwO");
      Token token10 = xPathLexer6.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("K", token10.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1923413354690964
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("`", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("qAt.E!ZTY#~=", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("QjZ\">adp");
      Token token5 = xPathLexer2.nextToken();
      assertEquals("QjZ", token5.getTokenText());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("QjZ\">adp");
      Token token6 = xPathLexer3.doubleColon();
      assertEquals("Qj", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer3.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals("q", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("A", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer6.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      Token token13 = xPathLexer7.comma();
      assertEquals("7", token13.getTokenText());
      
      Token token14 = xPathLexer6.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9484223519012878
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`'qAt.EvTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`'qAt.EvTY#~=");
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("P>*Zx%N]g)-j|u");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.operatorName();
      xPathLexer0.at();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.rightParen();
      xPathLexer2.dollar();
      xPathLexer5.comma();
      xPathLexer7.slashes();
      xPathLexer6.doubleColon();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer7.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5268617121804613
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer0.leftBracket();
      String string0 = ">\\U;HY./q@";
      XPathLexer xPathLexer2 = new XPathLexer(">U;HY./q@");
      xPathLexer2.nextToken();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer2.dots();
      xPathLexer3.at();
      xPathLexer1.rightParen();
      xPathLexer2.minus();
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.524809188457692
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals("H", token0.getTokenText());
      
      xPathLexer1.colon();
      Token token1 = xPathLexer0.slashes();
      assertEquals("7", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("H3:|?");
      xPathLexer0.leftParen();
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token3 = xPathLexer4.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(17, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer3.doubleColon();
      assertEquals("H3", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("rHM%oNam8");
      XPathLexer xPathLexer7 = new XPathLexer(">L`drU/ItJi~]#\"<+hj");
      xPathLexer2.at();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token6 = xPathLexer9.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer7.nextToken();
      assertEquals(9, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token9 = xPathLexer8.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer8.slashes();
      Token token10 = xPathLexer8.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer9.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer6.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals("r", token12.getTokenText());
      
      Token token13 = xPathLexer11.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.828410484918965
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer1.plus();
      xPathLexer0.leftParen();
      xPathLexer1.nextToken();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("4l}9");
      XPathLexer xPathLexer3 = new XPathLexer("4l}9");
      xPathLexer1.pipe();
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer2.at();
      xPathLexer4.relationalOperator();
      xPathLexer2.slashes();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer3.comma();
      Token token0 = xPathLexer5.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.941433094037255
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      Token token0 = xPathLexer0.at();
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer1.plus();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("9", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("4l}9");
      Token token5 = xPathLexer2.pipe();
      assertEquals("4", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("KwO");
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("4l}9");
      Token token8 = xPathLexer3.nextToken();
      assertEquals("KwO", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer3.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("l", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("m|IW#SU\"A$/6R_xTU0l");
      Token token11 = xPathLexer7.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer1.colon();
      Token token12 = xPathLexer7.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer5.rightBracket();
      assertEquals(4, token13.getTokenType());
      assertEquals("4", token13.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token14 = xPathLexer6.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.199668979852173
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer1.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer1.minus();
      xPathLexer0.minus();
      xPathLexer1.number();
      xPathLexer2.operatorName();
      xPathLexer0.at();
      xPathLexer1.plus();
      xPathLexer1.whitespace();
      xPathLexer1.leftParen();
      xPathLexer1.dollar();
      xPathLexer1.div();
      xPathLexer2.equals();
      xPathLexer2.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.star();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer1.rightParen();
      xPathLexer2.comma();
      int int0 = xPathLexer3.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.143259927965202
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("`", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("$", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("QjZ\">adp");
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("QjZ", token5.getTokenText());
      
      xPathLexer0.or();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer4.operatorName();
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("qAt.E!ZTY#~=", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      xPathLexer1.dollar();
      xPathLexer1.comma();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("q", token9.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4635816183710202
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      xPathLexer1.equals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer(">U;HY./q@");
      xPathLexer2.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer2.nextToken();
      xPathLexer2.or();
      xPathLexer1.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2064796443678967
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.consume((-2222));
      xPathLexer3.doubleColon();
      xPathLexer2.comma();
      // Undeclared exception!
      try { 
        xPathLexer1.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0481979056618456
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("`", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("$", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token5 = xPathLexer1.pipe();
      assertEquals(")", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("KwO");
      Token token6 = xPathLexer2.leftBracket();
      assertEquals("K", token6.getTokenText());
      
      xPathLexer1.operatorName();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("O", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer3.dollar();
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.slashes();
      assertEquals(" ", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token13 = xPathLexer2.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.949467818040342
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("N", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("H", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("*", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("f", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("W2Ep-", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer1.operatorName();
      Token token8 = xPathLexer0.at();
      assertEquals("}", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = new Token(22, "Xpt{sKO$.fp,\"i^", 22, 95);
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer1.doubleColon();
      assertEquals("lN", token12.getTokenText());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer2.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7612605287955776
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.colon();
      assertEquals("l", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("W", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer1.operatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("y", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals("s", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = new Token(22, "Xpt{sKO$.fp,\"i^", 22, 95);
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer1.doubleColon();
      assertEquals("lN", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals("H", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.08126397224745
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("*", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("W2Ep-", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.plus();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("ysk}`", token6.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("ys", token7.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer1.operatorName();
      Token token8 = xPathLexer0.at();
      assertEquals("`", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer0.relationalOperator();
      Token token10 = new Token(22, "Xpt{sKO$.fp,\"i^", 0, 65535);
      Token token11 = xPathLexer1.doubleColon();
      assertEquals("lN", token11.getTokenText());
      
      Token token12 = xPathLexer1.plus();
      assertEquals("H", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer0.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.191822595518546
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("}9", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setXPath("ki$O=Fs+bT{']#ovx");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("k", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.leftParen();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("b$.Z]N_V hlCMM!2(v-");
      Token token6 = xPathLexer2.doubleColon();
      assertEquals("b$", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("ki$O=Fs+bT{']#ovx");
      Token token7 = xPathLexer2.at();
      assertEquals(".", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("i$O=Fs+bT{']#ovx", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("i", token9.getTokenText());
      
      Token token10 = xPathLexer3.comma();
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer2.identifier();
      assertEquals("Z", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8577732413284518
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tOvV{]NB9H%-lZ");
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("{", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("!:4GK");
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("NB9H%-lZ", token3.getTokenText());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("6O2wb|kMRjz5&S");
      xPathLexer3.and();
      Token token4 = xPathLexer3.not();
      assertEquals("6", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer2.slashes();
      assertEquals(":", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer4.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer3.dollar();
      assertEquals("O", token7.getTokenText());
      
      Token token8 = xPathLexer1.comma();
      assertEquals("c", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer6.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer6.comma();
      Token token11 = xPathLexer5.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7857414877440105
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals("H", token0.getTokenText());
      
      xPathLexer1.colon();
      Token token1 = xPathLexer0.slashes();
      assertEquals("7", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer3.comma();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals("?c", token4.getTokenText());
      
      Token token5 = xPathLexer5.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer6 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token6 = xPathLexer6.pipe();
      assertEquals("7", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer6.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("?", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("H3:|?");
      Token token8 = xPathLexer7.at();
      assertEquals("H", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      xPathLexer7.relationalOperator();
      Token token9 = xPathLexer5.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer7.nextToken();
      assertEquals(30, token10.getTokenType());
      assertEquals("3", token10.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      xPathLexer7.comma();
      Token token12 = xPathLexer6.comma();
      assertEquals("c", token12.getTokenText());
      assertEquals(32, token12.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.colon();
      Token token13 = xPathLexer8.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.191202397853666
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.consume(47);
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (c)");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      xPathLexer2.div();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(" ", token5.getTokenText());
      
      Token token6 = xPathLexer1.rightParen();
      assertEquals("(", token6.getTokenText());
      
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (13) (c)");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.or();
      Token token11 = xPathLexer1.slashes();
      assertEquals(")", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer4.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer3.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1899946139515905
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.setXPath("[ (13) (c)");
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (c)");
      Token token4 = xPathLexer1.minus();
      assertEquals("[", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("[ (13) (c)");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(") ", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(" ", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer4.identifier();
      assertEquals(15, token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      Token token12 = xPathLexer3.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer3.doubleColon();
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8283448258993857
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("N", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("*", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.not();
      assertEquals("f", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("*", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("L~");
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("W", token8.getTokenText());
      
      xPathLexer0.at();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.relationalOperator();
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("E", token10.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token12 = xPathLexer7.dollar();
      assertEquals(26, token12.getTokenType());
      
      xPathLexer3.comma();
      Token token13 = xPathLexer5.comma();
      assertEquals("L", token13.getTokenText());
      assertEquals(32, token13.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("8Dcw0&;^");
      xPathLexer9.operatorName();
      Token token14 = xPathLexer2.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.282619914851255
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.plus();
      assertEquals("c", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("$", token3.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("P>*Zx%N]g)-j|u");
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.operatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("q", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token8 = xPathLexer4.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("P", token8.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("7xs7GY:|0{')3I");
      Token token9 = xPathLexer9.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("7", token9.getTokenText());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
      assertEquals(">", token11.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer4.notEquals();
      assertEquals("*Z", token12.getTokenText());
      
      Token token13 = xPathLexer0.equals();
      assertEquals("!", token13.getTokenText());
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6012056585578949
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("?", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("c", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.comma();
      assertEquals("`", token3.getTokenText());
      
      Token token4 = xPathLexer2.leftParen();
      assertEquals("c", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("<xkxa5>");
      Token token8 = xPathLexer0.nextToken();
      assertEquals("$", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer4.nextToken();
      assertEquals(7, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer7.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer8.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer3.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer9.notEquals();
      assertEquals("7?", token15.getTokenText());
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.066782012542082
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("X", token2.getTokenText());
      
      xPathLexer1.plus();
      Token token3 = xPathLexer0.comma();
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("2", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.plus();
      assertEquals("o", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer3.div();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer0.leftBracket();
      Token token9 = xPathLexer1.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer3.identifierOrOperatorName();
      assertEquals("", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.div();
      XPathLexer xPathLexer8 = new XPathLexer("^d");
      Token token12 = xPathLexer8.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("^", token12.getTokenText());
      
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token14 = xPathLexer9.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.0598929269641895
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(")", token5.getTokenText());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token8);
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals(" ", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer2.div();
      xPathLexer2.operatorName();
      Token token11 = xPathLexer2.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.identifier();
      assertEquals("", token12.getTokenText());
      
      xPathLexer0.or();
      Token token13 = xPathLexer2.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.113591371028252
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.leftBracket();
      xPathLexer2.operatorName();
      xPathLexer0.at();
      xPathLexer1.relationalOperator();
      xPathLexer2.rightBracket();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer3.dollar();
      xPathLexer1.comma();
      xPathLexer2.comma();
      xPathLexer2.comma();
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8020709415872567
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("q]:k`K3");
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer2.at();
      xPathLexer3.relationalOperator();
      xPathLexer2.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.comma();
      xPathLexer5.comma();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.466040037556812
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.consume((-31));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7241729211637566
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-924));
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.6741006299122283
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("f3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals("f", token0.getTokenText());
      
      xPathLexer1.colon();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token1 = xPathLexer3.comma();
      assertEquals("7", token1.getTokenText());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?c`$qAt.E!ZTY#~=", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer4.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("f3:|?");
      Token token5 = xPathLexer5.nextToken();
      assertEquals("f3", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer1.nextToken();
      assertEquals(":", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer0.dollar();
      assertEquals("c", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token8 = xPathLexer10.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("7", token8.getTokenText());
      
      Token token9 = xPathLexer3.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer7.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer8.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer1.notEquals();
      assertEquals("|?", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.9994193164251475
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer1.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer1.pipe();
      xPathLexer0.div();
      xPathLexer1.dots();
      xPathLexer1.at();
      xPathLexer1.rightParen();
      xPathLexer0.minus();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.at();
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.number();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer2.slashes();
      xPathLexer4.and();
      xPathLexer1.doubleColon();
      xPathLexer4.comma();
      String string0 = xPathLexer3.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.9046729533996605
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("we", token4.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.not();
      assertEquals("r", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("k", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      xPathLexer1.operatorName();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("en.saxpath.XPathLexer", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer(")");
      Token token9 = xPathLexer6.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("e", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer4.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer6.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer6.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer5.pipe();
      assertEquals(17, token15.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.0799247040113675
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("m", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("er", token4.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals("k", token6.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.pipe();
      assertEquals("g", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer5.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("s", token11.getTokenText());
      
      Token token12 = xPathLexer6.comma();
      assertEquals(32, token12.getTokenType());
      
      xPathLexer5.colon();
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
      assertEquals("6", token13.getTokenText());
      
      Token token14 = xPathLexer5.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer5.colon();
      assertEquals(18, token15.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.012183379537251
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("w", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer1.number();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer2.notEquals();
      assertEquals("co", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      xPathLexer2.and();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8833454575459445
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("we", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer0.pipe();
      assertEquals("k", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("V}|Lr");
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(14, token9.getTokenType());
      assertEquals("n.", token9.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8860842469696495
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.plus();
      xPathLexer1.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("gve8&!~02:b~");
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer(" ");
      xPathLexer5.pipe();
      xPathLexer1.at();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.not();
      xPathLexer0.relationalOperator();
      xPathLexer6.at();
      xPathLexer5.relationalOperator();
      xPathLexer2.slashes();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer3.comma();
      xPathLexer1.comma();
      Token token0 = xPathLexer2.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.8476260590190139
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.consume(46);
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.leftParen();
      assertEquals(" ", token6.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.div();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8994329977842457
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.identifierOrOperatorName();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("g", token5.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer3.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.notEquals();
      Token token7 = xPathLexer3.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals(2, token12.getTokenType());
      assertEquals(")", token12.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.1529905406164924
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.consume((-115));
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(">U;HY./q@");
      Token token3 = xPathLexer2.nextToken();
      assertEquals(9, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer3.consume(0);
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer2.dots();
      assertEquals("U", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("m.", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer2.and();
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer3.slashes();
      assertEquals(11, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      xPathLexer5.comma();
      Token token13 = xPathLexer0.comma();
      assertEquals("w", token13.getTokenText());
      assertEquals(32, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("comwerken.saxpath.XPathLexer");
      xPathLexer6.operatorName();
      char char0 = xPathLexer2.LA(0);
      assertEquals('U', char0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.085735426994397
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("]", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("8", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Y", token4.getTokenText());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer2.at();
      assertEquals("=", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer4.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer4.rightBracket();
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.1104757927239826
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("N", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("f", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("2", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("E", token7.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("p", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer1.operatorName();
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.nextToken();
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = new Token((-1180), "c 2He4F/0ct", (-1180), 95);
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.doubleColon();
      Token token13 = xPathLexer2.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer0.minus();
      assertEquals(6, token14.getTokenType());
      assertEquals("y", token14.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2662596083157305
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "4l}9";
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer1.plus();
      xPathLexer1.consume((-695));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.0894980055311674
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("Hm<$ct3_1:.rWA");
      xPathLexer0.consume((-2282));
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.6712605301301728
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("N", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("f*", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer0.slashes();
      assertEquals("W", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("toqkK-d#ZKq_70En=");
      Token token9 = xPathLexer4.dollar();
      assertEquals("t", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token10 = xPathLexer5.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1799437052142725
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.colon();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("=", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer1.leftParen();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Z", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.colon();
      assertEquals("]", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.minus();
      xPathLexer2.minus();
      Token token3 = xPathLexer0.minus();
      assertEquals("8", token3.getTokenText());
      
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer2.operatorName();
      Token token5 = xPathLexer0.at();
      assertEquals("-", token5.getTokenText());
      
      xPathLexer1.plus();
      Token token6 = xPathLexer1.leftParen();
      assertEquals("8", token6.getTokenText());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals("-", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      xPathLexer1.div();
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer2.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("Y", token10.getTokenText());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.whitespace();
      assertEquals("", token12.getTokenText());
      assertEquals((-2), token12.getTokenType());
      
      Token token13 = xPathLexer2.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.7026355313720192
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("]4gQg&_$");
      xPathLexer0.colon();
      xPathLexer1.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer1.nextToken();
      xPathLexer1.or();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.slashes();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token0 = new Token((-2368), "]4gQg&_$", (-1983), (-2278));
      xPathLexer4.doubleColon();
      xPathLexer1.star();
      // Undeclared exception!
      try { 
        xPathLexer7.LA((-2368));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.955733541256953
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.leftParen();
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer0.doubleColon();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer(">4wlv~kD:e53OYb");
      xPathLexer4.pipe();
      xPathLexer2.at();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer7.nextToken();
      xPathLexer4.at();
      xPathLexer4.relationalOperator();
      xPathLexer2.slashes();
      xPathLexer7.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer6.dollar();
      xPathLexer3.comma();
      xPathLexer2.comma();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0220747970845365
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer1.colon();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer1.minus();
      xPathLexer1.minus();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.at();
      assertEquals("]", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token7 = xPathLexer1.nextToken();
      assertEquals("8", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer4.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer8.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer2.colon();
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer1.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      xPathLexer0.minus();
      xPathLexer0.consume((-2818));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.124322507184239
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer1.colon();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer1.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer1.minus();
      xPathLexer2.minus();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer2.doubleColon();
      xPathLexer2.operatorName();
      Token token3 = xPathLexer2.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("}{b]X,8xHF?");
      Token token5 = xPathLexer3.leftBracket();
      assertEquals("}", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer3.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token7 = new Token(14, "!jw>`!raeZT# k9sFN", 14, 14);
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer1.dollar();
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals(" ", token11.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('^');
      assertFalse(boolean0);
      
      Token token12 = xPathLexer3.dollar();
      assertEquals("b", token12.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.2025556956077046
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-3070));
      xPathLexer0.setXPath("");
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer1.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4249218594295987
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("");
      xPathLexer0.consume((-364));
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.690623567401897
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8W( 9RD7%uK=e6~yE");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-795));
      token0.toString();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.9138590561116768
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals("o", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertEquals("werken", token2.getTokenText());
      assertEquals(27, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(">4wlv~kD:e53OYb");
      Token token4 = xPathLexer1.pipe();
      assertEquals("c", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer4.dollar();
      assertEquals(">", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer4.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals("w", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("o", token11.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.0865971979414635
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("DV");
      xPathLexer1.nextToken();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("DV");
      xPathLexer3.pipe();
      xPathLexer0.or();
      xPathLexer3.dots();
      xPathLexer0.at();
      xPathLexer2.rightParen();
      xPathLexer2.minus();
      xPathLexer1.number();
      XPathLexer xPathLexer4 = new XPathLexer("4Eb_&");
      xPathLexer4.dollar();
      xPathLexer1.at();
      xPathLexer1.number();
      xPathLexer1.dots();
      XPathLexer xPathLexer5 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer1.notEquals();
      xPathLexer3.nextToken();
      xPathLexer4.comma();
      xPathLexer2.div();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.dollar();
      xPathLexer5.comma();
      xPathLexer2.slashes();
      xPathLexer4.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer6.LA((-4213));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.425904643151232
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("com.weken.saxath.XPathLexer");
      xPathLexer1.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer1.or();
      xPathLexer1.operatorName();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8924472601175868
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("`", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer2 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      xPathLexer2.operatorName();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("*");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals("*", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals("?", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("*");
      Token token10 = xPathLexer5.comma();
      assertEquals("*", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer2.doubleColon();
      assertEquals("?g", token11.getTokenText());
      
      Token token12 = xPathLexer3.minus();
      assertEquals(6, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer6.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer6.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7855536497495978
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer1.plus();
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer1.colon();
      assertEquals("3", token1.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token2 = xPathLexer3.comma();
      assertEquals("7", token2.getTokenText());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("?c`$qAt.E!ZTY#~=", token3.getTokenText());
      
      Token token4 = xPathLexer4.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer4.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("H3:|?");
      Token token7 = xPathLexer5.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("H3", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer1.nextToken();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer0.dollar();
      assertEquals("c", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token10 = xPathLexer10.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("7", token10.getTokenText());
      
      Token token11 = xPathLexer3.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer7.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer8.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer1.notEquals();
      assertEquals("|?", token14.getTokenText());
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer4.rightBracket();
      assertEquals(4, token15.getTokenType());
      
      Token token16 = xPathLexer1.mod();
      assertNull(token16);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.9019127051447224
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals("v", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("]8", token5.getTokenText());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("<[ufj=T{2Rc>X");
      xPathLexer4.doubleColon();
      Token token6 = xPathLexer3.leftBracket();
      assertEquals("=", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.star();
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("]", token7.getTokenText());
      
      Token token8 = xPathLexer5.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("=vZ]8-Y ?4I");
      Token token10 = xPathLexer8.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer7.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals("Z", token12.getTokenText());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      assertEquals("8", token13.getTokenText());
      
      int int0 = xPathLexer4.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.844889216294908
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.leftParen();
      xPathLexer1.or();
      xPathLexer1.minus();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer5.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer4.comma();
      xPathLexer6.doubleColon();
      xPathLexer5.not();
      xPathLexer0.notEquals();
      xPathLexer5.equals();
      xPathLexer6.endPosition();
      Token token1 = xPathLexer4.leftParen();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.856335477094789
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer0.plus();
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer1.colon();
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("R", token3.getTokenText());
      
      xPathLexer1.plus();
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("0", token5.getTokenText());
      
      xPathLexer1.nextToken();
      xPathLexer0.or();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("3", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("qo%!,:s}8");
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.operatorName();
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("qo%!,:s}8");
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("q", token10.getTokenText());
      
      xPathLexer5.relationalOperator();
      Token token11 = new Token(1815, (String) null, (-2368), 1);
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer4.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer1.getPreviousToken();
      assertEquals((-1), token14.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.8471175618739895
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("r", token5.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("g", token6.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer3.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer3.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals("k", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals("6V", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5081886713714916
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.colon();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (c)");
      xPathLexer3.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("c<)!wT\"BK$I9U6CUv");
      xPathLexer4.pipe();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer7.at();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer5.nextToken();
      xPathLexer7.dollar();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer8.slashes();
      xPathLexer8.comma();
      xPathLexer9.doubleColon();
      XPathLexer xPathLexer10 = null;
      try {
        xPathLexer10 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.6934325121998517
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer0.isIdentifierChar('7');
      xPathLexer0.setXPath("|");
      Token token7 = xPathLexer0.pipe();
      assertEquals("|", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.mod();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.whitespace();
      assertEquals("", token11.getTokenText());
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals((-1), token14.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.156997308251746
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.star();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.isIdentifierChar('!');
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      char char0 = xPathLexer0.LA(2711);
      assertEquals('\uFFFF', char0);
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(2711);
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('e');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.768766878247616
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.comma();
      Token token3 = xPathLexer0.plus();
      assertEquals("*", token3.getTokenText());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("2", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Ep-", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("#", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("y", token10.getTokenText());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals("sk", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer5.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer5.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6724306521521277
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      xPathLexer1.plus();
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer1.slashes();
      Token token1 = xPathLexer0.plus();
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.or();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("^d");
      xPathLexer2.or();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("R", token6.getTokenText());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer2.slashes();
      assertEquals("^", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("HR03Zl+%g");
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals("d", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = new Token(7, "com.werken.saxpath.Token", (-2368), (-2368));
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer3.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("H", token12.getTokenText());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(2, int0);
      
      Token token13 = xPathLexer0.equals();
      assertEquals("0", token13.getTokenText());
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer0.rightParen();
      assertEquals("3", token14.getTokenText());
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.091898757503307
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.consume(31);
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.dots();
      xPathLexer1.at();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.number();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer2.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer6.slashes();
      assertEquals("c", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      xPathLexer3.and();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer4.comma();
      assertEquals("c", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      xPathLexer1.getXPath();
      Token token11 = xPathLexer6.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.003093907363428
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.plus();
      Token token0 = xPathLexer1.colon();
      assertEquals("v", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("=", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      xPathLexer1.div();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("v", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer2.number();
      Token token7 = xPathLexer2.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.div();
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token9 = new Token((-84), "$Zsk", 118, 248);
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("]8", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.944268943709666
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.div();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token2 = new Token(14, "!jw>`!raeZT# k9sFN", 14, (-3635));
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.9803441790839305
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.plus();
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer1.operatorName();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer1.literal();
      assertNull(token12);
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer2.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer1.plus();
      assertEquals(5, token15.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.244129326661727
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer1.plus();
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      xPathLexer1.hasMoreChars();
      XPathLexer xPathLexer2 = new XPathLexer("x-xlv3t");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("8", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer2.literal();
      assertEquals("-", token7.getTokenText());
      assertNotNull(token7);
      assertEquals(27, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(">,?B=7[U5");
      Token token8 = xPathLexer2.dollar();
      assertEquals("l", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("v", token9.getTokenText());
      
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("8", token10.getTokenText());
      
      Token token11 = xPathLexer3.whitespace();
      assertEquals((-2), token11.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.4605195519681793
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.7384117395120957
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HR03Zl+%g");
      XPathLexer xPathLexer1 = new XPathLexer("^d");
      Token token0 = xPathLexer1.plus();
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer1.star();
      assertEquals("d", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("H", token3.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer1.comma();
      xPathLexer1.leftParen();
      xPathLexer1.nextToken();
      xPathLexer1.leftParen();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("R03Zl", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals((-1), token12.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.7261879098681256
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      xPathLexer1.plus();
      xPathLexer1.colon();
      Token token0 = xPathLexer0.slashes();
      assertEquals("7", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token1 = xPathLexer3.comma();
      assertEquals("7", token1.getTokenText());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?c`$qAt.E!ZTY#~=", token2.getTokenText());
      
      Token token3 = xPathLexer4.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer4.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("H3:|?");
      Token token6 = xPathLexer5.nextToken();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(":", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer5.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals(":", token8.getTokenText());
      
      Token token9 = xPathLexer4.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer9.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer6.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token13 = xPathLexer0.leftBracket();
      assertEquals("`", token13.getTokenText());
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.6651703399894955
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H3:|?");
      Token token0 = xPathLexer0.plus();
      assertEquals("H", token0.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer2.comma();
      Token token1 = xPathLexer1.leftParen();
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer3.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("H3:|?");
      Token token4 = xPathLexer4.star();
      assertEquals("H", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer4.nextToken();
      assertEquals("3", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(18, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.consume();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token7 = xPathLexer9.slashes();
      assertEquals("7", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("?", token8.getTokenText());
      
      Token token9 = xPathLexer6.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer7.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("|?", token11.getTokenText());
      
      Token token12 = xPathLexer3.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.1188408497255926
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("?", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("DV");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("DV", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("DV");
      Token token5 = xPathLexer3.pipe();
      assertEquals("D", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer3.dots();
      assertEquals("V", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals("`", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("$", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer2.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer4 = new XPathLexer("4Eb_&");
      xPathLexer4.dollar();
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer1.number();
      assertEquals(30, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token12 = xPathLexer1.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer3.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer1.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer4.dollar();
      assertEquals(26, token15.getTokenType());
      assertEquals("E", token15.getTokenText());
      
      xPathLexer4.setXPath(",b Zz@]y w");
      xPathLexer1.comma();
      Token token16 = xPathLexer3.comma();
      assertEquals(32, token16.getTokenType());
      
      Token token17 = xPathLexer4.not();
      assertEquals(23, token17.getTokenType());
      assertEquals(",", token17.getTokenText());
      
      Token token18 = xPathLexer4.rightBracket();
      assertEquals("b", token18.getTokenText());
      assertEquals(4, token18.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.9421551585048313
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("g6V)((X;xh5,v%[zcE");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer6.comma();
      Token token0 = xPathLexer5.colon();
      xPathLexer1.not();
      xPathLexer5.rightBracket();
      Token token1 = xPathLexer5.colon();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.8158995797561222
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      xPathLexer1.plus();
      Token token0 = xPathLexer1.colon();
      assertEquals("3", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(".{(KY");
      xPathLexer2.pipe();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer1.dots();
      assertEquals(":", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      Token token3 = xPathLexer4.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer3.number();
      XPathLexer xPathLexer6 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer6.dollar();
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer7.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("H3:|?");
      Token token7 = xPathLexer0.notEquals();
      assertEquals("?c", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer7.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      Token token10 = xPathLexer4.dollar();
      assertEquals("{", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer8.comma();
      assertEquals("H", token11.getTokenText());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer7.rightBracket();
      assertEquals(4, token14.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.084104243932599
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token0 = xPathLexer1.plus();
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer3.comma();
      Token token4 = xPathLexer2.leftParen();
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer3.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("?c", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer5.operatorName();
      xPathLexer5.at();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer5.at();
      xPathLexer4.relationalOperator();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("`$qAt.E!ZTY#~=", token8.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer5.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer6.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("7", token10.getTokenText());
      
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token12 = xPathLexer2.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token13 = xPathLexer3.equals();
      assertEquals(21, token13.getTokenType());
      assertEquals("$", token13.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.4284546544261123
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      XPathLexer xPathLexer1 = new XPathLexer("H3:|?");
      xPathLexer1.plus();
      Token token0 = xPathLexer1.colon();
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("7", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token3 = xPathLexer3.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("7", token3.getTokenText());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer5 = new XPathLexer("H3:|?");
      Token token4 = xPathLexer5.doubleColon();
      assertEquals("H3", token4.getTokenText());
      
      xPathLexer2.operatorName();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.operatorName();
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer5.not();
      assertEquals(":", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer8.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      xPathLexer6.relationalOperator();
      Token token8 = xPathLexer7.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = new Token(95, "", 95, 22);
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token10 = xPathLexer9.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("?", token11.getTokenText());
      
      Token token12 = xPathLexer1.minus();
      assertEquals("?", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.6508817855190792
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.leftParen();
      xPathLexer2.plus();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("4l}9");
      xPathLexer5.relationalOperator();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = null;
      try {
        xPathLexer9 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.144188769979986
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("H", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("f", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("W2Ep-", token5.getTokenText());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("ysk}`", token7.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("ys", token8.getTokenText());
      
      xPathLexer0.operatorName();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token10 = xPathLexer1.at();
      assertEquals("l", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      assertEquals("`", token11.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token13 = new Token(22, "lNH*0f*W2Ep-#ysk}`", 22, 100);
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer0.whitespace();
      assertEquals((-2), token15.getTokenType());
      assertEquals("", token15.getTokenText());
      
      Token token16 = xPathLexer2.slashes();
      assertEquals(11, token16.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.1323426471515017
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("we", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.not();
      assertEquals("r", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(">4wlv~kD:e53OYb");
      Token token7 = xPathLexer1.pipe();
      assertEquals("c", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals("o", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token9.getTokenText());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer4.relationalOperator();
      assertEquals(9, token11.getTokenType());
      assertEquals(">", token11.getTokenText());
      
      Token token12 = xPathLexer0.slashes();
      assertEquals("e", token12.getTokenText());
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer4.nextToken();
      assertEquals("4", token13.getTokenText());
      assertEquals(30, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.consume(25);
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
      
      xPathLexer0.comma();
      Token token15 = xPathLexer0.comma();
      assertEquals(".", token15.getTokenText());
      assertEquals(32, token15.getTokenType());
      
      xPathLexer1.operatorName();
      Token token16 = xPathLexer5.minus();
      assertEquals(6, token16.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.317914172823868
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer(">4wlv~kD:e53OYb");
      XPathLexer xPathLexer2 = new XPathLexer(">4wlv~kD:e53OYb");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer0.dollar();
      assertEquals("m", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token3 = xPathLexer5.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.comma();
      assertEquals(">", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals(".w", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("}V6uG");
      Token token6 = xPathLexer7.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("}", token6.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer8.notEquals();
      assertEquals("co", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer9.rightBracket();
      assertEquals(4, token8.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.668800704441927
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (13) (c)", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("o", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (c)");
      Token token3 = xPathLexer3.leftParen();
      assertEquals("[", token3.getTokenText());
      
      xPathLexer2.or();
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer3.nextToken();
      assertEquals("(", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("[ (13) (c)");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.at();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token6 = xPathLexer5.nextToken();
      assertEquals("[", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer6.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("1", token8.getTokenText());
      
      xPathLexer9.slashes();
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      xPathLexer4.leftParen();
      Token token11 = xPathLexer5.equals();
      assertEquals("1", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.0828851096300167
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals("N", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("H", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("f", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.plus();
      Token token5 = xPathLexer0.equals();
      assertEquals("y", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("k}`", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("*", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("Xz{=:d");
      Token token10 = xPathLexer6.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("X", token10.getTokenText());
      
      Token token11 = xPathLexer3.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer4.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer7.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer2.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8184884899150682
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?g`$qAt.E!ZTY#~=");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      String string0 = "";
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.operatorName();
      String string1 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.1280887587130213
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("H", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.plus();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("*", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("ys", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token7 = xPathLexer1.at();
      assertEquals("l", token7.getTokenText());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("}", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token10 = new Token(22, "lNH*0f*W2Ep-#ysk}`", 22, 100);
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("N", token12.getTokenText());
      
      xPathLexer2.operatorName();
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      assertEquals("`", token13.getTokenText());
      
      Token token14 = xPathLexer1.identifier();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.8936884913800636
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (13) (c)", string0);
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (c)");
      Token token3 = xPathLexer3.nextToken();
      assertEquals("[", token3.getTokenText());
      
      xPathLexer1.or();
      xPathLexer2.or();
      xPathLexer3.doubleColon();
      xPathLexer1.operatorName();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token4 = xPathLexer3.at();
      assertEquals("1", token4.getTokenText());
      
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = new Token(113, "B+ejlJ", 101, 113);
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("3)", token8.getTokenText());
      
      Token token9 = xPathLexer4.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.9498367534118977
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.92311899834761
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">4wlv~kD:e53OYb");
      XPathLexer xPathLexer1 = new XPathLexer(">4wlv~kD:e53OYb");
      XPathLexer xPathLexer2 = new XPathLexer(">4wlv~kD:e53OYb");
      Token token0 = xPathLexer2.relationalOperator();
      assertNotNull(token0);
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token1 = xPathLexer4.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("}V6uG");
      Token token3 = xPathLexer6.not();
      assertEquals("}", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
  }
}
