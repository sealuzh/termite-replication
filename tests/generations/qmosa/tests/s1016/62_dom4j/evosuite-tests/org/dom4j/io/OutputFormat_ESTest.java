/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 11:11:22 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.030495400303718
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTK|)>c440B#yBzWY", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "-indent";
      stringArray0[2] = "==zo{1KroER{F0d~np8";
      stringArray0[3] = "==zo{1KroER{F0d~np8";
      stringArray0[4] = "-lineSep3Aarator";
      stringArray0[5] = "-xhtmlUTK|)>";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("==zo{1KroER{F0d~np8", outputFormat0.getIndent());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9299041669155916
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", true);
      outputFormat0.setIndentSize((-1797191536));
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      outputFormat0.setNewlines(false);
      stringArray0[2] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 234);
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("-omitEncoding");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("-omitEncoding");
      outputFormat1.setPadText(false);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertFalse(outputFormat0.isNewlines());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.118381492065873
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, (String) null);
      outputFormat0.setIndent("");
      outputFormat0.setIndent((String) null);
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      outputFormat1.setNewlines(true);
      outputFormat1.setPadText(true);
      stringArray0[1] = null;
      stringArray0[2] = null;
      outputFormat1.setEncoding((String) null);
      outputFormat1.parseOptions(stringArray0, 1867);
      outputFormat0.setIndent("");
      outputFormat0.parseOptions(stringArray0, 1867);
      outputFormat1.getEncoding();
      outputFormat1.isOmitEncoding();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setEncoding("UTF-8");
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding("Gn_OY9Nlvn");
      outputFormat3.setTrimText(false);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.setIndent((String) null);
      outputFormat1.isOmitEncoding();
      outputFormat1.getEncoding();
      assertEquals("Gn_OY9Nlvn", outputFormat1.getEncoding());
      
      outputFormat3.isOmitEncoding();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.452499500776114
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlQGixd", false, "-expandEmpty-XtmlUTK>c440BlyBzWY");
      String[] stringArray0 = new String[12];
      stringArray0[0] = "-xhtmlQGixd";
      stringArray0[1] = "-xhtmlQGixd";
      stringArray0[4] = "-xhtmlQGixd";
      stringArray0[5] = "UTK|)>c440k#yBzWY";
      stringArray0[6] = "-xhtmlQGixd";
      stringArray0[7] = "-xhtmlQGixd";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-xhtmlQGixd";
      stringArray1[1] = "-xhtmlQGixd";
      stringArray1[2] = "-expandEmpty-XtmlUTK>c440BlyBzWY";
      stringArray1[3] = "-xhtmlQGixd";
      stringArray1[4] = "-suppressDeclaration";
      stringArray1[5] = "-xhtmlQGixd";
      outputFormat0.setOmitEncoding(true);
      stringArray1[6] = "-xhtmlQGixd";
      stringArray1[7] = "-xhtmlQGixd";
      stringArray1[8] = "-expandEmpty-XtmlUTK>c440BlyBzWY";
      outputFormat0.parseOptions(stringArray1, 1);
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(9, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-`paTex*Nt", true);
      assertFalse(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "=zo{1KroER{F0d~np8";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-xhoAat]l-9tmlQGVxd";
      stringArray0[4] = "=zo{1KroER{F0d~np8";
      stringArray0[5] = "=zo{1KroER{F0d~np8";
      stringArray0[6] = "=zo{1KroER{F0d~np8";
      stringArray0[7] = "=zo{1KroER{F0d~np8";
      stringArray0[6] = "X8";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.800859086807244
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("yiT&Eq+rtjlyotK,Vk3", false);
      OutputFormat outputFormat1 = new OutputFormat("v", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "yiT&Eq+rtjlyotK,Vk3";
      stringArray0[3] = "v";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize((-483));
      outputFormat1.setIndent("v");
      outputFormat1.setIndent("cIn>'`3lGi5#?\"CsXb");
      outputFormat0.getLineSeparator();
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.365349639944498
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("%)A", true);
      String string0 = "M2gG";
      OutputFormat outputFormat2 = new OutputFormat("M2gG", false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setLineSeparator("");
      outputFormat2.setIndent("");
      String[] stringArray0 = new String[0];
      outputFormat2.parseOptions(stringArray0, 34);
      String string1 = "r?a 9^[r}XNCt";
      outputFormat0.setLineSeparator("=@");
      outputFormat1.setIndentSize((-762004414));
      // Undeclared exception!
      outputFormat2.setIndentSize(2147483645);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9434135588264301
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1[";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1217);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-padText";
      stringArray1[1] = "1[";
      stringArray1[2] = "-padText";
      stringArray1[3] = "1[";
      stringArray1[4] = "-padText";
      stringArray1[5] = "1[";
      stringArray1[6] = "-padText";
      stringArray1[7] = "-padText";
      outputFormat0.parseOptions(stringArray1, 3726);
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray0, 2364);
      outputFormat0.parseOptions(stringArray0, 2399);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTK|)>c440B#yBzWY", true);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-padTex";
      stringArray0[1] = "-xhtmlUTK|)>";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "~e0)Q/";
      stringArray0[4] = "-lineSep3Aarator";
      stringArray0[5] = "kUO;.zR]juToJgJ";
      stringArray0[6] = "UTK|)>c440B#yBzWY";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9476730318107442
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("UTF-8");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(true);
      outputFormat0.isExpandEmptyElements();
      OutputFormat.createPrettyPrint();
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals("UTF-8", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1868999087330017
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat1.setNewlines(true);
      outputFormat1.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat2 = new OutputFormat("3H~%i!%E*@T[N=");
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat2.setIndent("3H~%i!%E*@T[N=");
      outputFormat0.getLineSeparator();
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat1.setLineSeparator("Invalid attribute quote character (");
      assertTrue(outputFormat1.isNewlines());
      
      outputFormat2.setIndent("");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&@O", false);
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(outputFormat0.isTrimText());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9761270063422125
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "UPnB<ULpWC2K@>";
      stringArray0[2] = "";
      stringArray0[3] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"UPnB<ULpWC2K@>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[0];
      outputFormat0.setEncoding((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-237485686));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -237485686
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      stringArray0[1] = "-encoding";
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(3, int0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Ivalid attribute quote ch!racter (", true);
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Ivalid attribute quote ch!racter (";
      stringArray0[1] = "-xhtmlUTK|)>";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-padTex";
      stringArray0[4] = "-padTex";
      stringArray0[5] = "-lineSep3Aarator";
      stringArray0[6] = "-xhtmlUTK|)>";
      stringArray0[7] = "UPnB<ULpWC2K@>";
      stringArray0[8] = "UTK|)>c440B#yBzWY";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9706758056211484
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "";
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-padvTexk";
      stringArray0[1] = "-padvTexk";
      outputFormat0.setAttributeQuoteCharacter('\'');
      stringArray0[0] = "~$o)Hp_<!z$i";
      stringArray0[3] = "-padvTexk";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = (-1970002434);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1970002434));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1970002434
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0168805991642629
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("v", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = "tWZ>hW";
      stringArray0[2] = "yiT&Eq+rtjlyotK,Vk3";
      stringArray0[3] = "v";
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-indentSize");
      assertEquals("-indentSize", outputFormat0.getIndent());
      
      outputFormat0.setIndent("v");
      outputFormat0.setIndent("v");
      assertEquals("v", outputFormat0.getIndent());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Um4zFSH", false);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[7];
      outputFormat1.setNewLineAfterNTags(2188);
      stringArray0[0] = "^jvL>D%T";
      stringArray0[1] = "Um4zFSH";
      stringArray0[2] = "0()%j]}`lOo";
      stringArray0[6] = "\n";
      stringArray0[4] = "0()%j]}`lOo";
      stringArray0[5] = "\n";
      stringArray0[6] = "\n";
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(2188, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setAttributeQuoteCharacter('\"');
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("ysXr7]]?");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{tL*pJ!";
      stringArray0[0] = "org.dom4j.io.OutputFormat";
      String[] stringArray1 = new String[1];
      outputFormat0.setIndent("X(");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setOmitEncoding(true);
      assertEquals("X(", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("l;@\" :dJ", true);
      outputFormat1.setNewLineAfterDeclaration(true);
      boolean boolean0 = outputFormat1.isNewlines();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5817031858278026
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      outputFormat1.setTrimText(true);
      stringArray0[0] = "ody27";
      stringArray0[1] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(true);
      outputFormat1.setIndentSize(0);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat1.setLineSeparator((String) null);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat3.getIndent());
      
      outputFormat3.setIndentSize(0);
      outputFormat3.setXHTML(true);
      outputFormat3.setXHTML(true);
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setIndentSize(0);
      boolean boolean0 = outputFormat1.isNewlines();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.41794297922681
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "OmZz-<.\":\"bzc";
      stringArray0[5] = null;
      outputFormat0.parseOptions(stringArray0, 1594);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(39);
      outputFormat1.setNewLineAfterNTags((-1));
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat1.getIndent();
      outputFormat1.setOmitEncoding(false);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndentSize((-1));
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getIndent();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[1] = "";
      stringArray0[5] = "";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewLineAfterDeclaration();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2730));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2730
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1049922791552107
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags((-47));
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("K");
      OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1049922791552107
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags((-47));
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("K");
      OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      assertEquals("K", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-`xpandEmOptyUadText", true, "-xhtml-expandE~pty-XtmlUTK>c440BlyBzWY");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[1] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty-xhtmlQGixd";
      stringArray0[3] = "-expandEmpty";
      stringArray0[5] = "-xhtml-expandE~pty-XtmlUTK>c440BlyBzWY";
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&@O", false);
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("&@O", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "-xhtmlf;1N;ys";
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterNTags((-5224));
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-5224), int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9421822974250196
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("'|XC");
      outputFormat0.setEncoding("'|XC");
      outputFormat0.setIndent("p7s J){/`lm^K0.a");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags((-942));
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("'|XC");
      outputFormat0.setXHTML(false);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("p7s J){/`lm^K0.a");
      assertEquals("p7s J){/`lm^K0.a", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("'|XC");
      outputFormat0.setEncoding("'|XC");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("p7s J){/`lm^K0.a");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags((-942));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("'|XC");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(false);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("p7s J){/`lm^K0.a");
      assertEquals("p7s J){/`lm^K0.a", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6241026221599713
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("-omitEncoding");
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setLineSeparator((String) null);
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.getIndent();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6241026221599713
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("-omitEncoding");
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setIndent("dt TiWU");
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getIndent();
      assertEquals("dt TiWU", outputFormat0.getIndent());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.7310028510701474
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "~$o)Hp_<!z$i";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray1, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "8W( 9-%uK=e";
      stringArray0[1] = "n?";
      stringArray0[4] = "W6&7z[K";
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".8W( 9RD7%uK=e";
      outputFormat0.setAttributeQuoteCharacter('\"');
      int int0 = outputFormat0.parseOptions(stringArray0, 2866);
      assertEquals(2866, int0);
      
      outputFormat0.setAttributeQuoteCharacter('\"');
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("-xhtml", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".J8W( 9RD7%uK=e";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = ".J8W( 9RD7%uK=e";
      stringArray0[3] = "-lineSeparator";
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = outputFormat0.getLineSeparator();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.7257348275872986
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "Fd/Nmst@";
      stringArray0[0] = "~$o)Hp_<!z$i";
      stringArray0[3] = "Fd/Nmst@";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = (-1970002434);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1970002434));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1970002434
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "Fd/Nmst@";
      stringArray0[0] = "~$o)Hp_<!z$i";
      stringArray0[3] = "Fd/Nmst@";
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "");
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.setOmitEncoding(false);
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "";
      stringArray0[3] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 134);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("l@TrXUJMSczUOGqHL,");
      outputFormat0.setLineSeparator("-newlines");
      outputFormat0.getEncoding();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("-lineSeparator");
      assertEquals("-newlines", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", string0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-expandEmptyyiT&Eq+rtjlyotK,Vk3";
      stringArray0[1] = "Invalid attribute quote character (";
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertFalse(boolean0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-expandEmpty$`U[QujvcF?", true);
      String[] stringArray0 = new String[22];
      stringArray0[2] = "-3mitEncodiQ?";
      stringArray0[3] = "-padTe|x";
      stringArray0[4] = "UPnB<ULpWC2K@>";
      stringArray0[5] = "UPnB<ULpWC2K@>";
      stringArray0[6] = "UPnB<ULpWC2K@>";
      stringArray0[16] = "UPnB<ULpWC2K@>";
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty-expandEmpty-expandEmpty$`U[QujvcF?");
      assertEquals("-expandEmpty-expandEmpty-expandEmpty$`U[QujvcF?", outputFormat0.getIndent());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "^t";
      stringArray0[1] = "-expandEmpty-expandEmpty$`U[ujvcF?";
      stringArray0[2] = "^t";
      stringArray0[3] = "-expandEmpty-XtmlUTK>c440BlyBzWY";
      stringArray0[4] = null;
      stringArray0[5] = "UPnB<ULpWC2K@>";
      stringArray0[6] = "-expandEmpty-ePpandEmpty-padvTexk";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat("-`paTex*Nt", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('h');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (h)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-xhtmlQGixd", false, "'O&P(j-1");
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtmlQGixd";
      stringArray0[1] = "'O&P(j-1";
      stringArray0[2] = "'O&P(j-1";
      stringArray0[3] = "-xhtmlQGixd";
      stringArray0[5] = "-xhtmlQGixd";
      stringArray0[6] = "-xhtmlQGixd";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.121410475323288
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "g,cQHTbUTz/T C&q9%";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-lineSep3Aarator";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-encoding";
      stringArray0[6] = "-lineSeparator";
      stringArray0[7] = "-trimText";
      stringArray0[8] = "-lineSep3Aarator";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-lineSep3Aarator", outputFormat0.getEncoding());
      assertEquals(8, int0);
  }
}
