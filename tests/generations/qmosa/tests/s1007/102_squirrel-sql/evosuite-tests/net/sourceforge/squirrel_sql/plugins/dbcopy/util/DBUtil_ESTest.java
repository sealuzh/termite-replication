/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 00:08:52 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.Image;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JSpinner;
import javax.swing.plaf.basic.BasicLabelUI;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.plaf.metal.MetalRootPaneUI;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaDetailProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("75]8gT)ejoqE#");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("serializable");
      uidIdentifier3.setString("75]8gT)ejoqE#");
      uidIdentifier3.setString("75]8gT)ejoqE#");
      uidIdentifier3.setString("null");
      uidIdentifier2.setString("TER TABLE ");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("null");
      uidIdentifier1.setString(")s>V:/JGBXW`");
      uidIdentifier1.setString("TER TABLE ");
      uidIdentifier1.setString((String) null);
      uidIdentifier4.setString("");
      uidIdentifier4.setString("TER TABLE ");
      uidIdentifier4.setString("null");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("@W-#.&");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      uidIdentifier2.setString("-hO`O(4ohtXv0G");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "21AAlUhm]qH9z", "^8<3");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) null;
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 993);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-8));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAliasSchemaProperties0.setGlobalState(182);
      sQLAlias0.setUseDriverProperties(false);
      sQLAlias0.getDriverPropertiesClone();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-1752), 2, (-1752), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl2);
      String string0 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("+@5;eYCpPday^d*-xU", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, 1637, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3, 3, 4, 120, (String) null, "org.hibernate.dialect.function.StandardSQLFunction", 5916, 2006, "Skipping FK (");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      DBUtil.getSchemaNameFromDbObject(iDatabaseObjectInfo0);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        schemaInfo1.reloadAll();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setAutoLogon(true);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      JLabel jLabel0 = new JLabel();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      sQLAlias1.equals(defaultTableModel0);
      metalSplitPaneUI0.getBaselineResizeBehavior(jLabel0);
      metalSplitPaneUI0.getDivider();
      sQLAlias1.removePropertyChangeListener((PropertyChangeListener) null);
      sQLAlias0.setUseDriverProperties(true);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.typesAreEquivalent((-7), 32767);
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.setSize(2004);
      dBCopyPlugin0.setSourceDatabaseObjects(stack0);
      assertEquals("Dan Dragut", dBCopyPlugin0.getContributors());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setOverrideStatusBarBackgroundColor(true);
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias0.setPassword("org.hibernate.dialect.InformixDialect$1");
      sQLAlias0.getDriverPropertiesClone();
      sQLAliasSchemaProperties0.setGlobalState(1);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = sQLAlias0.getConnectionProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      sQLAlias0.setPassword("org.hibernate.dialect.InformixDialect$1");
      sQLAlias0.removePropertyChangeListener(metalRootPaneUI0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.typesAreEquivalent(3, (-1747));
      DBUtil.getLastStatementValues();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      String string0 = "q].j\\\\_+Y(IR";
      DBUtil.setLastStatementValues("q].j\\_+Y(IR");
      linkedList0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      DBUtil.convertTableToObjectList(list0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.getMetaData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-291));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      sQLAlias0.setDriverIdentifier(integerIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.getDriverPropertiesClone();
      sQLAlias1.getConnectionProperties();
      sQLAlias0.setUseDriverProperties(false);
      sQLAlias1.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 98);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("XD?mDa!o %fQEMjO9");
      imageIcon0.getIconWidth();
      imageIcon0.getImage();
      imageIcon0.getImageLoadStatus();
      imageIcon0.getImage();
      imageIcon0.getIconHeight();
      imageIcon0.toString();
      imageIcon0.getIconHeight();
      System.setCurrentTimeMillis((-2250L));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("@Ldt\";AB~M!Wk");
      imageIcon0.getIconWidth();
      imageIcon0.getImageLoadStatus();
      imageIcon0.getImageObserver();
      Image image0 = imageIcon0.getImage();
      imageIcon0.getIconHeight();
      imageIcon0.getIconHeight();
      ImageIcon imageIcon1 = new ImageIcon(image0);
      imageIcon1.getImage();
      imageIcon0.toString();
      DBUtil.typesAreEquivalent((-7), (-7));
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setSourceDatabaseObjects(stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier1);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAlias1.setColorProperties(sQLAliasColorProperties0);
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias2.setAutoLogon(true);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      JLabel jLabel0 = new JLabel();
      metalSplitPaneUI0.getBaselineResizeBehavior(jLabel0);
      metalSplitPaneUI0.getDivider();
      sQLAlias1.removePropertyChangeListener((PropertyChangeListener) null);
      sQLAlias2.setUseDriverProperties(true);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DBUtil.typesAreEquivalent((-7), 16);
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.setSize(2004);
      assertFalse(stack0.empty());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getSchemaProperties();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("U", "vG^Gx:", "select * from ( select row_.*, rownum rownum_ from ( ", "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", 0, "I_", (-5), 1, 0, (-19), "vG^Gx:", "reverse", 683, 2002, "I_");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.DATABASE_TYPE_DBO;
      Icon icon0 = databaseObjectType3.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("{\u0005!JVu+fq*I.", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.createNewDatabaseObjectType("select count(*) from ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl4 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl0.getFAQFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperFactoryImpl3.create((FileWrapper) fileWrapperImpl0, ",gPaj)D7KhI1tv72D");
      MockFile mockFile0 = (MockFile)applicationFiles0.getDatabaseAliasesTreeStructureFile();
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperFactoryImpl1.create((File) mockFile0);
      fileWrapperFactoryImpl0.createTempFile("'RT}QY8A[*:_yVt", "'RT}QY8A[*:_yVt", (FileWrapper) fileWrapperImpl2);
      mockFile0.getCanonicalFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles2.getUserPreferencesFile();
      applicationFiles2.getDatabaseAliasesFile();
      fileWrapperFactoryImpl2.create((File) mockFile0);
      fileWrapperFactoryImpl3.create("'RT}QY8A[*:_yVt");
      fileWrapperFactoryImpl2.create("'RT}QY8A[*:_yVt", "'RT}QY8A[*:_yVt");
      fileWrapperFactoryImpl3.create("9.MK*D_&", "9.MK*D_&");
      FileWrapperFactoryImpl fileWrapperFactoryImpl5 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl6 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl7 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl8 = new FileWrapperFactoryImpl();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-4));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setCopyMenuEnabled(true);
      dBCopyPlugin1.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "Column add not yet supported", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#y7M1");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "gaxJ%2z", "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SELECT next_value-1, max_value, min_value, cache_size, increment_value, case     when cycle_flag = 'Y'     then 1     else 0 end FROM iisequences where seq_name = ?";
      stringArray0[1] = "Cs-'4(&KQR+d";
      stringArray0[2] = "HK";
      stringArray0[3] = "_*A-";
      stringArray0[4] = "Cs-'4(&KQR+d";
      stringArray0[5] = "select ";
      stringArray0[6] = "aT5#~_QKo<:iih!p}JL";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier1);
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setUseDriverProperties(true);
      sQLAlias1.getDriverPropertiesClone();
      sQLAlias0.setUrl("M\"!]43jE_a'");
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLAlias sQLAlias2 = new SQLAlias(uidIdentifier0);
      assertEquals("5cec034f:16e718425f8:-5ffa", uidIdentifier0.toString());
      
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias1.getSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "M\"!]43jE_a'";
      stringArray0[1] = "M\"!]43jE_a'";
      stringArray0[2] = "M\"!]43jE_a'";
      stringArray0[3] = "M\"!]43jE_a'";
      stringArray0[4] = "M\"!]43jE_a'";
      sQLAliasSchemaProperties0.getSchemaLoadInfos(sQLAliasSchemaProperties1, stringArray0, stringArray0);
      sQLAliasSchemaProperties1.setCacheSchemaIndependentMetaData(true);
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo(sQLAliasSchemaProperties1);
      sQLAliasSchemaProperties0.setGlobalState(0);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-5));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setPassword("org.hibernate.dialect.InformixDialect$1");
      sQLAlias0.getDriverPropertiesClone();
      sQLAliasSchemaProperties0.setGlobalState(91);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = sQLAlias1.getConnectionProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      sQLAlias0.removePropertyChangeListener(metalRootPaneUI0);
      sQLAlias0.setUseDriverProperties(true);
      sQLAlias1.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 436);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      MockFile mockFile0 = new MockFile("R4[>R~c+z");
      mockFile0.deleteOnExit();
      mockFile0.setWritable(false);
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create((File) mockFile0);
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)fileWrapperFactoryImpl0.createTempFile("R4[>R~c+z", "R4[>R~c+z");
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperImpl.createTempFile("R4[>R~c+z", "R4[>R~c+z", fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("VrW~Gpxh]`Oc~", "net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", "VrW~Gpxh]`Oc~", "net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", 899, (String) null, 4193, 4193, 409, 4193, "\b'_,", "_;PL\"Eva", 4193, 1152, "\b'_,");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setAutoLogon(true);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      JLabel jLabel0 = new JLabel();
      metalSplitPaneUI0.getDivider();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      sQLAlias0.removePropertyChangeListener(propertyChangeListener0);
      SQLAlias sQLAlias1 = new SQLAlias();
      metalSplitPaneUI0.getMinimumSize(jLabel0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("changes.txt", dBCopyPlugin0.getChangeLogFileName());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[8] = (IDatabaseObjectInfo) foreignKeyInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$570440265 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl4 = new FileWrapperFactoryImpl();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(19);
      SQLAliasConnectionProperties sQLAliasConnectionProperties1 = sQLAlias0.getConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("oB=QsLM\"]Snl=vWi5y");
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("O*lRA7ni1$DC:");
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(19);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(19);
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("oB=QsLM\"]Snl=vWi5y");
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("Br0");
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("78>QykWflpowOxFWdG");
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("Br0");
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties1);
      sQLAlias0.setName("+&,.TSjL");
      sQLAlias0.setPassword("miJ+{>nuCIeN{");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "78>QykWflpowOxFWdG", "isStandardType: unable to get value for javk.sql.Types.", ":\"M\"b6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5/");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "5/", "5/");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "5/");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("C6Q");
      imageIcon0.getIconWidth();
      imageIcon0.getImageLoadStatus();
      JPasswordField jPasswordField0 = new JPasswordField();
      Image image0 = imageIcon0.getImage();
      ImageIcon imageIcon1 = new ImageIcon(image0);
      imageIcon0.setDescription("`Fkz>RJP>R");
      ImageIcon imageIcon2 = new ImageIcon(image0);
      imageIcon2.getIconHeight();
      imageIcon2.getIconHeight();
      imageIcon0.getDescription();
      ImageIcon imageIcon3 = new ImageIcon(image0);
      imageIcon3.toString();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("@W-#.&");
      uidIdentifier1.setString("75]8gT)ejoqE#");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("serializable");
      uidIdentifier3.setString("75]8gT)ejoqE#");
      uidIdentifier3.setString("75]8gT)ejoqE#");
      uidIdentifier3.setString("null");
      uidIdentifier2.setString("TER TABLE ");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("null");
      uidIdentifier1.setString(")s>V:/JGBXW`");
      uidIdentifier1.setString("TER TABLE ");
      uidIdentifier1.setString((String) null);
      uidIdentifier4.setString("");
      uidIdentifier4.setString("TER TABLE ");
      uidIdentifier4.setString("null");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("@W-#.&");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      uidIdentifier2.setString("-hO`O(4ohtXv0G");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-175));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("C6Q");
      imageIcon0.getIconWidth();
      imageIcon0.getImageLoadStatus();
      JPasswordField jPasswordField0 = new JPasswordField();
      Image image0 = imageIcon0.getImage();
      ImageIcon imageIcon1 = new ImageIcon(image0);
      imageIcon0.setDescription("`Fkz>RJP>R");
      ImageIcon imageIcon2 = new ImageIcon(image0);
      imageIcon2.getIconHeight();
      imageIcon2.getIconHeight();
      imageIcon0.getDescription();
      ImageIcon imageIcon3 = new ImageIcon(image0);
      imageIcon3.toString();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("k-.?1:NdS", "%H*R&fr3gj$", "replaceDistinctDataType: Unexpected exception - ", "%H*R&fr3gj$", 4, "k-.?1:NdS", 28, 17, (-2044), 4, "vv5&udw", "", 3, 17, "");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("%H*R&fr3gj$, %H*R&fr3gj$, %H*R&fr3gj$, %H*R&fr3gj$", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias0.setSchemaProperties((SQLAliasSchemaProperties) null);
      SQLAlias sQLAlias3 = new SQLAlias();
      sQLAlias2.getDriverPropertiesClone();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "\"\"XH[ Y#j,H_QZ[U", "", ",(", (-4), "http://www.squirrelsql.org", (-4), (-7), 1896, (-3), "b?WqdZd'", "dbcopytest", 501, (-3), "yvxP]P*@qDF?OUY");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = sQLAlias0.getConnectionProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias2.setUseDriverProperties(true);
      sQLAlias2.getDriverPropertiesClone();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-407));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier1);
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      sQLAlias0.getColorProperties();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setUseDriverProperties(true);
      sQLAlias1.getDriverPropertiesClone();
      sQLAlias0.setUrl("M\"!]43jE_a'");
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-123));
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLAlias sQLAlias2 = new SQLAlias(uidIdentifier0);
      //  // Unstable assertion: assertEquals("5cec034f:16e718425f8:-60df", uidIdentifier0.toString());
      
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias1.getSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo(sQLAliasSchemaProperties1);
      sQLAliasSchemaProperties0.setGlobalState(0);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-5));
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("L`qw{bin&,by3@]Z{(I");
      uidIdentifier0.setString("L`qw{bin&,by3@]Z{(I");
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString("5m^J}2)+6W$7%!");
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString("(");
      uidIdentifier0.setString("\" was already parsed.");
      uidIdentifier0.setString("(");
      uidIdentifier0.setString("rP,uC ?c!Mqe/ty");
      uidIdentifier0.setString((String) null);
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      uidIdentifier0.setString("to_char");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier0.setString("D2c{s/-DhXL*vIO");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "L`qw{bin&,by3@]Z{(I", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl4 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFileWrappersImpl0.getWelcomeFile();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl5 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      FileWrapperFactoryImpl fileWrapperFactoryImpl6 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl7 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl8 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "2", "2", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$p");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      boolean boolean0 = DBUtil.typesAreEquivalent(98, 18);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getConnectionProperties();
      sQLAlias0.removePropertyChangeListener((PropertyChangeListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("com.jidesoft.plaf.vsnet.VsnetMenuItemUI$MenuKeyHandler", (String) null, "XD?mDa!o %fQEMjO9", (String) null, (-28), "q%E", (-692), 624, 128, 1520, "JCUSfnwiB", "com.jidesoft.plaf.vsnet.VsnetMenuItemUI$MenuKeyHandler", 128, 2632, "com.jidesoft.plaf.vsnet.VsnetMenuItemUI$MenuKeyHandler");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      System.setCurrentTimeMillis(128);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias0.setPassword((String) null);
      sQLAlias0.setUserName("~");
      sQLAlias0.setPassword("~");
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1216);
      sQLAlias0.setDriverIdentifier(integerIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[4];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      sQLAlias0.getConnectionProperties();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      sQLAlias0.removePropertyChangeListener(metalRootPaneUI0);
      sQLAliasSchemaProperties0.setGlobalState(1246);
      sQLAlias0.setUseDriverProperties(true);
      sQLAlias0.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-1311), (-2));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("@W-#.&");
      uidIdentifier1.setString("75]8gT)ejoqE#");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("serializable");
      uidIdentifier3.setString("75]8gT)ejoqE#");
      uidIdentifier3.setString("75]8gT)ejoqE#");
      uidIdentifier3.setString("keyName == null");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("keyName == null");
      uidIdentifier1.setString(")k*s>V:/JG~BXW`");
      uidIdentifier1.setString("75]8gT)ejoqE#");
      uidIdentifier1.setString((String) null);
      uidIdentifier4.setString((String) null);
      uidIdentifier4.setString("keyName == null");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("@W-#.&");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      uidIdentifier2.setString("-hO`O(4ohtXv0G");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString("");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      uidIdentifier7.setString("@W-#.&");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, (ArrayList<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("k6RizI[7=#X)5Y", "K>T%cyPl{;Zg:tq|M", " ]", "K>T%cyPl{;Zg:tq|M", (-128), "_O", (-128), 1979, 3924, 1979, "A,&?eWWGY&yx;)]J2Y", "_O", 2005, (-2121), "select ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("ALTER TABLE ", ":;^-`", "", "_mFXI=F@v", 3207, (String) null, (-2121), (-3380), (-128), (-2121), "net.sourceforge.squirrel_sql.fw.dialects.AxionDialectExt", "K>T%cyPl{;Zg:tq|M", (-128), (-693), "e:~_BD z_V:T");
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo1, (ISession) null);
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.add((IDatabaseObjectInfo) tableColumnInfo1);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("OP5TV", (String) null, "gt3=", "JD:_", (-2), ">;R0<|eVAOOrxyIi", (-1989), (-2), (-727), 3, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "O0QL6S/c8R!cr", 3, 1024, " and table_schema = ? ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
      
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-2), int0);
      
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      List<IDatabaseObjectInfo> list2 = DBUtil.convertTableToObjectList(list0);
      assertNotSame(list2, list1);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("oB=Q$LM\"]Snl=vWi5y", "nul Comdonent paseB", " +0G)abUtaKEd", foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("yFIzHq!QDvNjUDNj", "yFIzHq!QDvNjUDNj", "yFIzHq!QDvNjUDNj", "vG@sx:", (-2084322361), "yFIzHq!QDvNjUDNj", (-2084322361), 1604, (-2084322361), 969, "Xg]o_3aq>_T4J,CZje", "vG@sx:", (-2084322361), 969, "l:8.0lIxhfX,k?|rt");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("Xg]o_3aq>_T4J,CZje");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("select count(*) from ");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("yFIzHq!QDvNjUDNj");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte) (-57);
      DatabaseObjectType.createNewDatabaseObjectType("H+RSU|RRGZ", (Icon) null);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)77;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "!Nl", 2004, "wX2GHEWh.$", 1640, 2004, (-2084322361), (-2084322361), "wX2GHEWh.$", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2004, 2004, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType.createNewDatabaseObjectType("PC?bn");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("oC/Z;s]~w=FwE", "", "oC/Z;s]~w=FwE", "{\u0005!JVDu+fq*I.", 1144, "oB=QsLM\"]Snl=vWi5y", 37, 2022, 2022, 3063, (String) null, "^_D<}", 1, (-1822), "MTDZ38L<6Yi<<4P ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FOREIGN_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      System.setCurrentTimeMillis((-1718L));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("!Xs/v{mv$", "fileWrapperFactory", "fileWrapperFactory", "!Xs/v{mv$", 0, ")", 0, (-183), (-183), (-183), "2k43:ARZ", "2JNC783_Xqd<Htx6m", (-1173), (-2636), "2k43:ARZ");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertTrue(list1.isEmpty());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" from ", " from ", "*B\"mQl|\"", (String) null, 2005, "*B\"mQl|\"", 2005, 2005, (-5768), 2005, "*B\"mQl|\"", "!Xs/X{mv$", 2005, (-5768), "i*t");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      fileWrapperFactoryImpl2.create("q%E", "q%E");
      fileWrapperFactoryImpl2.create("HHFuX\"JD\"\"4f=PRh", "q%E");
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl4 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl5 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl6 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.getSourceSession();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JLabel jLabel0 = new JLabel();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "='MNa'cKY%", "hYZdC55cg", "com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuKeyHandler");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("0");
      uidIdentifier1.setString(" ADD FOREIGN KEY (");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("keyName == null");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("org.hibernate.dialect.InformixDialect$1");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("0");
      uidIdentifier2.setString("!WcnNe");
      uidIdentifier2.setString("-hO`O(4ohtXv0G");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier2.setString("SpOjDT[khl^K5");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, " seems to already have it defined.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TableOrder.BY_ROW", "TableOrder.BY_ROW", "clob($l)", "clob($l)", 2777, "73o%)nAc", 2777, (-2126), (-215), (-2126), "TableOrder.BY_ROW", "org.h`zernate.dialect.Inf}rmixDitlect1", (-799), 6, "clob($l)");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType.createNewDatabaseObjectType("73o%)nAc");
      DatabaseObjectType.createNewDatabaseObjectType("XD?mDa!o %fQEMjO9");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("clob($l)", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      SQLAlias sQLAlias0 = new SQLAlias();
      BasicLabelUI basicLabelUI0 = new BasicLabelUI();
      sQLAlias0.addPropertyChangeListener(basicLabelUI0);
      // Undeclared exception!
      try { 
        sQLAlias0.assignFrom((SQLAlias) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.gui.db.SQLAlias", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.setDriverProperties(sQLDriverPropertyCollection0);
      sQLAlias0.setAutoLogon(false);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      JLabel jLabel0 = new JLabel();
      metalSplitPaneUI0.getOrientation();
      metalSplitPaneUI0.getDivider();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      sQLAlias0.removePropertyChangeListener(propertyChangeListener0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("l8.<lIxhfX,k?|rt", "<YWbWp{JMW8^zrt", "<YWbWp{JMW8^zrt", "`1`)TJ`D", (-245), "Xg]o_3aq>_T4J,CZje", (-2412), (-2412), 969, (-2412), "Xg]o_3aq>_T4J,CZje", "JKy>", 1808, 3282, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("<YWbWp{JMW8^zrt");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("M]X_ b45BjC.");
      databaseObjectType3.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("71omk8'Bi", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("dIbt0IZ3.S");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(3282, tableColumnInfo0, (ISession) null);
      assertEquals(3282, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("y3r)h\")C3r*m=2hW", "Application.splash.loadsqlhistory", "TABLE", "websiteUrl", (-2786), "TABLE", 3, 1446, 978, (-722), "n(", "if-f0", 4147, 3, "y3r)h\")C3r*m=2hW");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PriorityQueue<Object> priorityQueue0 = new PriorityQueue<Object>();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, ";.e%qx(4T^.fq ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("l:8.0lIxhfX,k?|rt", "A", "l:8.0lIxhfX,k?|rt", "O=)i", 400, "-hB", (-1046), (-1046), (-1755), (-1755), "O=)i", "E#5H9.nxr6", (-1046), 400, "O=)i");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("u{AQg3,yS4*hy]");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType.createNewDatabaseObjectType(", ");
      DatabaseObjectType.createNewDatabaseObjectType("_tkrx2msA->U[_4");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("l:8.0lIxhfX,k?|rt", (Icon) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDT;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType((-1755), tableColumnInfo0, (ISession) null);
      assertEquals((-1755), int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias0.setPassword((String) null);
      sQLAlias0.setUserName("~");
      sQLAlias0.setPassword("~");
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1216);
      sQLAlias0.setDriverIdentifier(integerIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[4];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      sQLAlias0.getConnectionProperties();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints", "~", " cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints", "k-.?1:NdS", 2, "Application.splash.loadcellselections", (-3), 2, 2, 2, "~", "T%\"#*O&SB*;sd}4B", 1, 2, "DBUtil.info.bindbloblength");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      System.setCurrentTimeMillis((-3));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      MockFile mockFile0 = new MockFile("R4[>R~c+z", "R4[>R~c+z");
      fileWrapperFactoryImpl0.create("R4[>R~c+z");
      mockFile0.deleteOnExit();
      fileWrapperFactoryImpl0.create("R4[>R~c+z");
      mockFile0.mkdirs();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create((File) mockFile0);
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)fileWrapperImpl0.getCanonicalFile();
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperFactoryImpl0.createTempFile("R4[>R~c+z", "R4[>R~c+z");
      fileWrapperImpl1.listFiles();
      FileWrapperImpl.createTempFile("R4[>R~c+z", "R4[>R~c+z");
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperImpl.createTempFile("R4[>R~c+z", "R4[>R~c+z", fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      fileWrapperFactoryImpl0.createTempFile("R4[>R~c+z", "R4[>R~c+z", (FileWrapper) fileWrapperImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("R4[>R~c+z/R4[>R~c+z1R4[>R~c+z");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = (-2170);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "1T", (ITableInfo) null, (-2170));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JLabel jLabel0 = new JLabel();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getDivider();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      metalComboBoxUI0.createPropertyChangeListener();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-963));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      sQLAlias0.removePropertyChangeListener((PropertyChangeListener) null);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "{\u0005!JVu+fq*I.", "f/>/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.setLastStatementValues("q].j\\_+Y(IR");
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      DBUtil.convertTableToObjectList(list0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertNull(dBCopyPlugin0.getPasteToTableName());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DBUtil.setLastStatement(" g_6%5hbY");
      String string0 = "insert into ";
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("@Ldt\";AB~M!Wk");
      imageIcon0.getImageLoadStatus();
      imageIcon0.getImageObserver();
      Image image0 = imageIcon0.getImage();
      ImageIcon imageIcon1 = new ImageIcon(image0);
      ImageIcon imageIcon2 = new ImageIcon(image0);
      imageIcon2.getIconHeight();
      imageIcon2.getIconHeight();
      imageIcon0.getDescription();
      ImageIcon imageIcon3 = new ImageIcon(image0);
      imageIcon2.getImage();
      imageIcon3.toString();
      ImageIcon imageIcon4 = new ImageIcon();
      imageIcon2.getImageLoadStatus();
      imageIcon0.getAccessibleContext();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("H!", "@Ldt\";AB~M!Wk", "hibernate.jdbc.use_get_generated_keys", "@Ldt\";AB~M!Wk", (-7), "hibernate.jdbc.use_get_generated_keys", 4, (-1), (-7), 4, "G*qL.'Lc44up)rDA|vM", "@Ldt\";AB~M!Wk", 17, (-2525), "dbcopytest");
      int int0 = DBUtil.replaceDistinctDataType(3, tableColumnInfo0, (ISession) null);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = 1604;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("yFIzHq!QDvNjUDNj", "yFIzHq!QDvNjUDNj", "yFIzHq!QDvNjUDNj", "vG@sx:", (-2084322361), "yFIzHq!QDvNjUDNj", (-2084322361), 1604, (-2084322361), 969, "Xg]o_3aq>_T4J,CZje", "vG@sx:", (-2084322361), 969, "l:8.0lIxhfX,k?|rt");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Xg]o_3aq>_T4J,CZje");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("select count(*) from ");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("yFIzHq!QDvNjUDNj");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("H+RSU|RRGZ", (Icon) null);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("0");
      uidIdentifier1.setString(" ADD FOREIGN KEY (");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("keyName == null");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("org.hibernate.dialect.InformixDialect$1");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("0");
      uidIdentifier2.setString("!WcnNe");
      uidIdentifier2.setString("-hO`O(4ohtXv0G");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier2.setString("SpOjDT[khl^K5");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "5YbjQr6N/egV>JA", " ADD FOREIGN KEY (");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("jL>", "HyZ ii?#OMficPX^", "13VG$9&RI`|", "HyZ ii?#OMficPX^", (-3), "56O.jY mR/k3PN/", (-3), 1446, (-3), 92, "13VG$9&RI`|", "", 69, 1602, "13VG$9&RI`|");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE;
      ImageIcon imageIcon0 = new ImageIcon("\"`6ZsPD-", "driversFile == null");
      DatabaseObjectType.createNewDatabaseObjectType("84{`;]");
      DatabaseObjectType.createNewDatabaseObjectType("13VG$9&RI`|", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("<`.$bwk'J!>>OB$e", "FUH", "p'^", (String) null, (-5348), "b~J$+~gC", (-995), 38, 49, 201, "Application.splash.loadsqlhistory", "FUH", 53, 201, "L[>=,oIKpe1&p<e");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 9999;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("b~J$+~gC", 9999, 53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("<`.$bwk'J!>>OB$e", "FUH", "p'^", (String) null, (-5348), "b~J$+~gC", (-995), 38, 49, 201, "Application.splash.loadsqlhistory", "FUH", 53, 201, "L[>=,oIKpe1&p<e");
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 9999;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("b~J$+~gC", 9999, 53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("C6Q");
      imageIcon0.getIconWidth();
      imageIcon0.getImageLoadStatus();
      JPasswordField jPasswordField0 = new JPasswordField();
      Image image0 = imageIcon0.getImage();
      ImageIcon imageIcon1 = new ImageIcon(image0);
      ImageIcon imageIcon2 = new ImageIcon(image0);
      imageIcon2.getIconHeight();
      imageIcon2.getIconHeight();
      imageIcon0.getDescription();
      ImageIcon imageIcon3 = new ImageIcon(image0);
      imageIcon3.toString();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("k-.?1:NdS", "%H*R&fr3gj$", "replaceDistinctDataType: Unexpected exception - ", "%H*R&fr3gj$", 4, "k-.?1:NdS", 28, 17, (-2044), 4, "vv5&udw", "", 3, 17, "");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql((SessionInfoProvider) null, tableColumnInfo0, (String) null, "C6Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JLabel jLabel0 = new JLabel();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getDivider();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      metalComboBoxUI0.createPropertyChangeListener();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl4 = new FileWrapperFactoryImpl();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "$3<_d?)VETtF,D[", " cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints", " cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier0.setString("key");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "key");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      boolean boolean0 = false;
      SQLAlias sQLAlias0 = new SQLAlias();
      DBUtil dBUtil0 = new DBUtil();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0, "4^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerDateModel
         //
         verifyException("javax.swing.JSpinner$DateEditor", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setAutoLogon(true);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      JLabel jLabel0 = new JLabel();
      metalSplitPaneUI0.getDivider();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      sQLAlias0.removePropertyChangeListener(propertyChangeListener0);
      SQLAlias sQLAlias1 = new SQLAlias();
      metalSplitPaneUI0.getMinimumSize(jLabel0);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("Rob Manning", "Rob Manning", " ADD FOREIGN KEY (", (ISession) null, true, 2487);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("C6Q");
      imageIcon0.getIconWidth();
      imageIcon0.getImageLoadStatus();
      Image image0 = imageIcon0.getImage();
      ImageIcon imageIcon1 = new ImageIcon(image0);
      imageIcon1.setDescription("`Fkz>RJP>R");
      ImageIcon imageIcon2 = new ImageIcon(image0);
      imageIcon2.getIconHeight();
      imageIcon1.getIconHeight();
      imageIcon2.getIconHeight();
      imageIcon0.getDescription();
      ImageIcon imageIcon3 = new ImageIcon(image0);
      imageIcon3.toString();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "javax.swing.ImageIcon@19ab3cb8", "`Fkz>RJP>R", "C6Q", (-387));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, " cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints", "{\u0005!JVu+fq*I.", "?,h~WhsPG`-fcg", 1759);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("0");
      uidIdentifier1.setString(" ADD FOREIGN KEY (");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("{\u0005!JVu+qI.");
      uidIdentifier2.setString("yZFO");
      uidIdentifier2.setString("75]8gT)ejoqE#");
      uidIdentifier2.setString("metaDataOutputClassName");
      uidIdentifier1.setString("2");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, " cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints,  cascade constraints");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences((DBCopyPreferenceBean) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("DBCopy Plugin", dBCopyPlugin0.getDescriptiveName());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SELECT next_value-1, max_value, min_value, cache_size, increment_value, case     when cycle_flag = 'Y'     then 1     else 0 end FROM iisequences where seq_name = ?";
      stringArray0[1] = "Cs-'4(&KQR+d";
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
