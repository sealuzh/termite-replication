/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 13:21:27 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectInputValidation;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7460929019843043
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[5] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      javaCharStream0.BeginToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.backup(1);
      stringReader1.read(charArray0, 1, 1);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "+67ld'=qQ F)*?2=l7";
      StringReader stringReader0 = new StringReader("+67ld'=qQ F)*?2=l7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 151, 0);
      javaCharStream0.tokenBegin = 2772;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(1309, 56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream.hexval('2');
      String string0 = "-]j0)x*.mjvI#n4Yb";
      MockFile mockFile0 = new MockFile("-]j0)x*.mjvI#n4Yb");
      String string1 = "Invalid escape character at line ";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "SV%Vmisu0H9Mt=V`64");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"SV%Vmisu0H9Mt=V`64\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)56;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      javaCharStream0.backup(1);
      stringReader1.read(charArray0, 1, 1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        MockFile.createTempFile(".", "?5D/p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.tokenBegin = 2;
      javaCharStream0.adjustBeginLineColumn((-3858), 62);
      URI uRI0 = MockURI.aFileURI;
      MockURI.normalize(uRI0);
      String string0 = "img`";
      try { 
        MockURI.URI("img`", "img`", "img`", "img`", (String) null);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: img`://img%60img%60?img%60
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4978661367769952
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 2138);
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = '{';
      charArray0[2] = 'Q';
      javaCharStream1.tokenBegin = 1403;
      charArray0[3] = '+';
      charArray0[4] = 'n';
      charArray0[5] = '/';
      charArray0[6] = 'O';
      charArray0[7] = 'r';
      javaCharStream1.buffer = charArray0;
      javaCharStream1.adjustBeginLineColumn((-3858), 62);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream1.bufpos = 4148;
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 62, 2138);
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9954206619524524
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      StringReader stringReader1 = new StringReader("Hj 9sW:Yd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("BjI)$n-WhkiXd");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("=", "a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      javaCharStream0.backup(1);
      stringReader1.read(charArray0, 1, 1);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      MockFile.createTempFile("[SZx", "?5D/p");
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getLine();
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8718021769015916
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "%TjQi~|";
      StringReader stringReader0 = new StringReader("%TjQi~|");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      try { 
        MockFile.createTempFile("=", "=");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.690576668409362
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "=";
      StringReader stringReader0 = new StringReader("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      boolean boolean0 = JavaCharStream.staticFlag;
      char[] charArray0 = new char[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("=");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[0];
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.backup(1);
      javaCharStream0.bufsize = (-1612);
      stringReader0.read(charArray0, 1, 1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        MockFile.createTempFile(".", "?5D/p");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "aUU/Wgp5");
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)62;
      byteArray0[0] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)62, 3, (byte)62);
      byteArrayInputStream0.read();
      byteArrayInputStream0.markSupported();
      javaCharStream0.Done();
      char char0 = '<';
      javaCharStream0.line = (int) (byte)62;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte)62, (byte)62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      StringReader stringReader1 = new StringReader("Hj 9sW:Yd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8901629440042702
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 2138, 0);
      javaCharStream0.adjustBeginLineColumn(2526, (-3858));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = '[';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("[SZx");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader2.read(charArray0);
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("s}>~Np:e.M(");
      stringReader4.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1), 5, 2138);
      javaCharStream0.adjustBeginLineColumn(115, 0);
      assertEquals(115, javaCharStream0.getBeginLine());
      
      javaCharStream1.getBeginLine();
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2829866987676994
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-118);
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 64);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-118), (-754), 71);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      javaCharStream0.readChar();
      byteArrayInputStream0.skip(0L);
      bufferedInputStream0.skip(0L);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.255265733556093
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      char[] charArray0 = javaCharStream0.GetSuffix(677);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3315483732983022
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 3990);
      char[] charArray0 = javaCharStream0.buffer;
      StringReader stringReader1 = new StringReader("Sa`@");
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      javaCharStream0.GetSuffix(1);
      char[] charArray1 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1);
      stringReader1.read(charBuffer0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.ReInit((Reader) stringReader0, 0, 53, 802);
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "4@X5(-%+MbxzW1n";
      StringReader stringReader0 = new StringReader("4@X5(-%+MbxzW1n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.512729463737998
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('F');
      boolean boolean0 = false;
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      char[] charArray0 = new char[2];
      charArray0[0] = 'F';
      charArray0[1] = 'T';
      stringReader0.read(charArray0);
      boolean boolean1 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 91, (-1257));
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">e&!");
      int int0 = 2235;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2235, 2235);
      javaCharStream0.Done();
      char char0 = 'd';
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('d');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "? ?_(p}h2:Jv");
      JavaCharStream.hexval('f');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "? ?_(p}h2:Jv");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2177807089948396
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)7;
      byteArray0[3] = (byte)4;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)0, (-1), 61);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.backup((byte)4);
      bufferedInputStream0.skip((-1));
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.adjustBeginLineColumn((byte)7, 198);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(7, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.863679987341
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZB?x");
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 't';
      charArray0[2] = '6';
      charArray0[3] = '(';
      charArray0[4] = 'l';
      charArray0[5] = 'e';
      charArray0[6] = ')';
      charArray0[7] = '(';
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 3990, 0);
      javaCharStream0.GetImage();
      char[] charArray1 = javaCharStream0.buffer;
      StringReader stringReader1 = new StringReader("EF!!|@~AfaH");
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 2048, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.26238625418332
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 2138);
      javaCharStream1.adjustBeginLineColumn((-3858), 62);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream1.bufpos = 4148;
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 62, 2138);
      MockFile mockFile0 = new MockFile((File) null, "Hj 9sW:Yd");
      File file0 = MockFile.createTempFile("Hj 9sW:Yd", "!njY;Ugs}", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream3 = new JavaCharStream(mockFileInputStream0, 98, 1, (-3858));
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader0, (-1079), (-1847));
      javaCharStream4.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream3.backup(2584);
      javaCharStream2.Done();
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream2.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1756363574222692
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("+W0<_K/}H#hR");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11, 11);
      javaCharStream0.column = (-1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.nextCharInd = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.backup(11);
      javaCharStream0.Done();
      MockFile mockFile0 = new MockFile("Invalid escape character at line ");
      JavaCharStream.hexval('8');
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 2982, 2982);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)23;
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.311619854648014
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1132, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 70, 2048);
      javaCharStream1.adjustBeginLineColumn((-1456), 2048);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, (-1456), 62);
      javaCharStream0.GetImage();
      javaCharStream1.getBeginLine();
      JavaCharStream javaCharStream3 = new JavaCharStream(pipedInputStream0);
      javaCharStream3.ExpandBuff(false);
      javaCharStream2.getBeginColumn();
      javaCharStream2.ExpandBuff(false);
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$cb.");
      int int0 = 0;
      String string0 = "";
      String string1 = "";
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-17);
      byteArray0[6] = (byte) (-64);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 4092);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, (byte)10, 62);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nt!Nmh\"IyQWr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1867, 0, 13);
      javaCharStream0.nextCharInd = (-120);
      javaCharStream0.backup((-37));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
      
      int int1 = JavaCharStream.hexval('d');
      assertEquals(13, int1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)71;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0590443660090973
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("+W0<_K/}H#hR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 11;
      int int1 = 3;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 3, 3);
      javaCharStream0.column = 11;
      javaCharStream0.GetSuffix(1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-2851), (-2230), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = "Hj 9sW:Yd";
      String string1 = "|";
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2852930241200995
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 2138);
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = '{';
      charArray0[2] = 'Q';
      charArray0[3] = '+';
      charArray0[4] = 'n';
      charArray0[5] = '/';
      charArray0[6] = 'O';
      charArray0[7] = 'r';
      javaCharStream1.buffer = charArray0;
      javaCharStream1.adjustBeginLineColumn((-3858), 62);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream1.bufpos = 4148;
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 62, 2138);
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0659484376172368
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      boolean boolean0 = javaCharStream0.prevCharIsCR;
      StringReader stringReader1 = new StringReader("=r_dC(n[N$4~");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 2190, 91, 99);
      JavaCharStream.hexval('b');
      javaCharStream1.GetSuffix(73);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      char[] charArray0 = new char[4];
      charArray0[2] = 'Q';
      charArray0[3] = '2';
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("=r_dC(n[N$4~");
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0034168339095553
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("4@X5(-%+MbxzW1n");
      char[] charArray0 = new char[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("4@X5(-%+MbxzW1n");
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte) (-35);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, 4096);
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(4096, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 91);
      javaCharStream0.GetImage();
      javaCharStream1.ExpandBuff(false);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9417850586313683
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("+W0<_K/}H#hR");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11, 11);
      javaCharStream0.column = 11;
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.readChar();
      javaCharStream0.backup(11);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 12);
      javaCharStream1.GetImage();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      javaCharStream0.ExpandBuff(true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 91);
      javaCharStream0.getEndColumn();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.ReadByte();
      assertEquals(2, javaCharStream0.getEndColumn());
      assertEquals('Z', char0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9697764683159095
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 91);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.53089186116679
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2138, 0);
      javaCharStream0.adjustBeginLineColumn(2526, (-3858));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(mockFileInputStream0, 1, 4148);
      JavaCharStream javaCharStream3 = new JavaCharStream(mockFileInputStream0);
      javaCharStream3.GetImage();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((Reader) null, 2312, 76, 0);
      javaCharStream3.getBeginColumn();
      javaCharStream2.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "4@X5(-%+MbxzW1n";
      StringReader stringReader0 = new StringReader("4@X5(-%+MbxzW1n");
      stringReader0.read();
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "[SZx";
      StringReader stringReader0 = new StringReader("[SZx");
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.029395601506142
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[1];
      StringReader stringReader0 = new StringReader("$jKJ|j#Z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 69);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-1978), (-5267));
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      String string0 = "";
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~{:~?x/Ne");
      JavaCharStream.hexval('9');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      MockFile mockFile0 = new MockFile("~{:~?x/Ne");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "Z*d;EdxQ{;qw)qV}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"Z*d;EdxQ{;qw)qV}\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream.hexval('5');
      try { 
        JavaCharStream.hexval('|');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Larg4r:i%<Yg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-346);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4@X5(-%+MbxzW1n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = "Hj 9sW:Yd";
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader1 = new StringReader("<bzv\"katox7");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 3, 1810, 3);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaCharStream.hexval('E');
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "%TjQi~|";
      StringReader stringReader0 = new StringReader("%TjQi~|");
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      String string1 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'A';
      charArray0[1] = 'H';
      charArray0[2] = 'w';
      charArray0[3] = '4';
      charArray0[4] = ' ';
      charArray0[5] = 'T';
      charArray0[6] = '2';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("Hj 9sW:Yd");
      StringReader stringReader2 = new StringReader("Hj 9sW:Yd");
      StringReader stringReader3 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
      javaCharStream1.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MalD:Q0IPxw<.B_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.114698279466819
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      javaCharStream0.GetImage();
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("[SZ");
      StringReader stringReader2 = new StringReader("[SZ");
      stringReader0.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1), 88, 1259);
      javaCharStream0.adjustBeginLineColumn(75, 349);
      javaCharStream2.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.tokenBegin = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-3858), 62);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.1998139591112973
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("+W0<_K/}H#hR");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11, 11);
      javaCharStream0.column = 11;
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.readChar();
      javaCharStream0.backup(11);
      stringReader0.skip(0L);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, 2078);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9104956296178259
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      char[] charArray0 = new char[18];
      charArray0[0] = '/';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      charArray0[1] = '/';
      charArray0[2] = 'M';
      charArray0[3] = 'h';
      stringReader0.read(charArray0, 1, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.152491312574311
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S!");
      char[] charArray0 = new char[4];
      charArray0[0] = '/';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*ColX{$ts,%c_FO");
      charArray0[1] = '9';
      charArray0[2] = 'M';
      charArray0[3] = '?';
      stringReader0.read(charArray0, 1, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (int) '!';
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader0, 88, (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "? ?_(p}h2:Jv");
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
      
      JavaCharStream.hexval('8');
      int int1 = JavaCharStream.hexval('8');
      assertEquals(8, int1);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.721904941357862
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.reset();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 102, (-1));
      javaCharStream0.inBuf = (-1);
      javaCharStream0.getBeginColumn();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      char[] charArray0 = new char[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("E8I.");
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("^gD<E J|m$xrhzm");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("E8I.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, (byte)45, 4, 11);
      javaCharStream0.adjustBeginLineColumn(102, 0);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(103, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0986122886681098
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";J|0U)!ktAl8|x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      javaCharStream0.adjustBeginLineColumn(5, (-1));
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      JavaCharStream.hexval('D');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      String string0 = "+Lzn+~07|w-uqs[3";
      MockFile mockFile0 = new MockFile("+Lzn+~07|w-uqs[3");
      String string1 = null;
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("+Lzn+~07|w-uqs[3", "Invalid escape character at line ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"Invalid escape character at line \" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = 'f';
      charArray0[2] = 'X';
      charArray0[3] = 'P';
      charArray0[4] = '<';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0, 91, 91);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      javaCharStream0.getEndColumn();
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix((-1734));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)7;
      byteArray0[3] = (byte)4;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4087, (byte) (-118));
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.27512230322082
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "BjI)$n-WhkiXd";
      StringReader stringReader0 = new StringReader("BjI)$n-WhkiXd");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 1 column 3.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5268781472745927
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+67ld'=qQ F)*?2=l7");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("+67ld'=qQ F)*?2=l7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '`';
      charArray0[3] = '[';
      javaCharStream0.maxNextCharInd = (int) (byte)49;
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '*';
      charArray0[7] = '[';
      charArray0[8] = '[';
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5065950881316383
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 2138);
      javaCharStream1.adjustBeginLineColumn((-3858), 62);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream1.bufpos = 4148;
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 62, 2138);
      JavaCharStream javaCharStream3 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix(4095);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.2868726303980162
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("2kXnO5^W");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)23, 67, 69);
      char[] charArray0 = javaCharStream0.buffer;
      StringReader stringReader1 = new StringReader(",]@,p*GXM!5:h&YL");
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aT[,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      javaCharStream0.backup((-1));
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.0341960331609608
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte) (-118);
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 64);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-118), (-754), 71);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      byteArrayInputStream0.skip(0L);
      bufferedInputStream0.skip(0L);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-118), int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0652116257094466
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)7;
      byteArray0[3] = (byte)4;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)0, (-1), 61);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.backup((byte)4);
      bufferedInputStream0.skip((-1));
      javaCharStream0.readChar();
      bufferedInputStream0.close();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[5] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader(".");
      int int0 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (int) (byte)49, (int) (byte)5, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.2320555836111624
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 61);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 124);
      javaCharStream2.ReInit((InputStream) bufferedInputStream0, 1, 242, 1571);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      charArray0[6] = '[';
      charArray0[7] = '[';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader(".");
      StringReader stringReader2 = new StringReader(".");
      PipedInputStream pipedInputStream0 = new PipedInputStream(1889);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 117);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-2992), 2069);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, (-2992), 1889);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 117);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("cDXqJPS*8?0M-#");
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      stringReader0.skip((-1L));
      charArray0[1] = '}';
      charArray0[2] = 'v';
      charArray0[5] = 'V';
      charArray0[4] = '<';
      charArray0[5] = 'O';
      charArray0[6] = 's';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2049, 12, 2049);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.inBuf = 12;
      stringReader0.mark(74);
      javaCharStream0.ReInit((Reader) stringReader0, 65, 65, 2049);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.7731058914351236
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)7;
      byteArray0[3] = (byte)4;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)0, (-1), 61);
      javaCharStream0.adjustBeginLineColumn((byte)7, (byte)4);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (byte)4, 85);
      javaCharStream0.GetImage();
      javaCharStream1.getBeginLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaCharStream.hexval('4');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3829444252357833
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('a');
      JavaCharStream.hexval('1');
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.relativize(uRI0, uRI0);
      URI uRI2 = MockURI.normalize(uRI1);
      URI uRI3 = MockURI.relativize(uRI0, uRI2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 10);
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        MockURI.resolve(uRI3, "7%Yr{lNpdW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed escape pair at index 1: 7%Yr{lNpdW
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('e');
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 0, 95);
      javaCharStream0.adjustBeginLineColumn(0, (-3858));
      URI uRI0 = MockURI.aFileURI;
      MockURI.normalize(uRI0);
      try { 
        MockURI.URI("img`", "", "73(([*?Blz'cIe_<SJL", "rc-2jbdod=", "73(([*?Blz'cIe_<SJL");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: img`://73((%5B*%3FBlz'cIe_%3CSJL?rc-2jbdod=#73(([*?Blz'cIe_%3CSJL
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = "+67ld'=qQ F)*?2=l7";
      StringReader stringReader0 = new StringReader("+67ld'=qQ F)*?2=l7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 151, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(1309, 56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = "Hj 9sW:Yd";
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.061112832579594
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      javaCharStream0.backup(1);
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.711845135233912
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "=";
      StringReader stringReader0 = new StringReader("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      boolean boolean0 = JavaCharStream.staticFlag;
      char[] charArray0 = new char[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("=");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 1 column 2.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.9542357193389899
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte) (-118);
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 64);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-118), (-754), 71);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 71);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (byte)62, (byte)14, (byte)62);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 71);
      javaCharStream1.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 469);
      javaCharStream0.UpdateLineColumn('\r');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "$^>KFQ}?{T9cZ#";
      StringReader stringReader0 = new StringReader("$^>KFQ}?{T9cZ#");
      int int0 = 151;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 151, 93, (-21));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9722469794234412
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D=H8u!WuO#q6J{?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      stringReader0.read();
      javaCharStream0.available = 68;
      stringReader0.reset();
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0, 2389, 247, 227);
      javaCharStream0.column = 21;
      javaCharStream0.prevCharIsCR = false;
      stringReader0.read();
      javaCharStream0.readChar();
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0, 2954, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.05289085369352
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      javaCharStream0.GetImage();
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("[SZ");
      StringReader stringReader2 = new StringReader("[SZ");
      stringReader0.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1), 88, 1259);
      javaCharStream0.bufline = intArray0;
      javaCharStream0.adjustBeginLineColumn(75, 349);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream2.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"e1`^F-z!E B*/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-764));
      char[] charArray0 = new char[8];
      charArray0[0] = 'Y';
      charArray0[1] = 'o';
      charArray0[2] = ']';
      charArray0[3] = 'h';
      charArray0[4] = 'z';
      charArray0[5] = 'y';
      charArray0[6] = '5';
      charArray0[7] = 'g';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[SZx");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0659484376172368
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int int0 = (-1);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (int) '[';
      intArray0[2] = (-1);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      ObjectInputValidation objectInputValidation0 = mock(ObjectInputValidation.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char[] charArray0 = javaCharStream0.GetSuffix(659);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(659, charArray0.length);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2343));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 86, 86);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6290407622471204
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[7];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("[SZ");
      StringReader stringReader2 = new StringReader("[SZ");
      stringReader0.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1), 88, 1259);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('S', char0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4@X5(-%+MbxzW1n");
      char[] charArray0 = new char[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader1 = new StringReader("{IN9&\"8>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('{', char0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-43), (byte)10, 10);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4154690333344857
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JavaCharStream.hexval('a');
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)11;
      byteArray0[0] = (byte)11;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (byte)11);
      javaCharStream0.maxNextCharInd = (int) (byte)1;
      javaCharStream0.bufpos = (int) (byte)0;
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (int) (byte)0;
      intArray0[2] = 0;
      intArray0[3] = 1397;
      intArray0[4] = (int) (byte)0;
      javaCharStream0.bufline = intArray0;
      JavaCharStream.hexval('a');
      javaCharStream0.Done();
      byteArrayInputStream0.mark(10);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4907247913392696
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4@X5(-%+MbxzW1n");
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      charArray0[1] = '[';
      char[] charArray1 = new char[2];
      charArray1[0] = '[';
      charArray1[1] = '[';
      stringReader0.read(charArray1);
      StringReader stringReader1 = new StringReader("4@X5(-%+MbxzW1n");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte) (-1);
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)92, (byte)85, (byte)63);
      JavaCharStream.hexval('0');
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.ExpandBuff(true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream1.Done();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 91);
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 4, (-6791));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1862), (-1862));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)52);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)52, 105);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JavaCharStream.hexval('6');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      ObjectInputValidation objectInputValidation0 = mock(ObjectInputValidation.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Fl;_;JN@sVc);>3i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('(');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = ";Fq (kk%octN;";
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.readChar();
      MockFile.createTempFile(";Fq (kk%octN;", (String) null);
      String string1 = "W91r)Z6K.<JC,rI5lON";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("S,phM<", "W91r)Z6K.<JC,rI5lON");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"W91r)Z6K.<JC,rI5lON\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0744911730129716
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H%;{qVTY\"qVCXuM");
      StringReader stringReader0 = new StringReader("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)96;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      StringReader stringReader1 = new StringReader("=");
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)117;
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte)118;
      byteArray1[5] = (byte)55;
      byteArray1[6] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byte[] byteArray2 = new byte[21];
      byteArray2[0] = (byte)92;
      byteArray2[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray2);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 1 column 2.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aT[0,");
      stringReader0.mark(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[SZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) '[';
      intArray0[1] = (int) '[';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(true);
      assertEquals(1, javaCharStream0.getBeginLine());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 91);
      javaCharStream1.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, (-143), 91, 91);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte) (-90);
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)7;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (byte)39, (byte)10);
      StringReader stringReader0 = new StringReader("X`B7@^dY_?F]");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)7, 95, 4681);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6994293420567295
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H%;{qVTY\"qVCXuM");
      StringReader stringReader0 = new StringReader("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)96;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4@X5(-%+MbxzW1n");
      StringReader stringReader1 = new StringReader("=");
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1906), 2);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.8462202193216333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-66);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-48);
      byteArray0[6] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4096, (-2403));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 3096);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.6290407622471201
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hj 9sW:Yd");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.tokenBegin = 0;
      char char0 = javaCharStream0.readChar();
      assertEquals('j', char0);
  }
}
