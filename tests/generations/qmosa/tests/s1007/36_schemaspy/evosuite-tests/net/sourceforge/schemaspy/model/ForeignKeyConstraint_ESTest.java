/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:54:42 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Predicate;
import java.util.regex.Pattern;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5179872908529675
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "P+AE", 2, 2);
      String string1 = ",6YH~RcLxv";
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      foreignKeyConstraint0.getParentColumns();
      System.setCurrentTimeMillis(2);
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, "Null on delete:\n Foreign key to parent set to NULL when parent deleted", "_C}8xyc&me'S", "A^&N(XL", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)91;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[2] = (byte)91;
      byteArray0[4] = (byte)2;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "p[n", (byte) (-36), (byte)2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta((String) null, "p[n", "-p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.757637858307174
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkChildren();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.removeParent(tableColumn1);
      tableColumn0.unlinkParents();
      tableColumn0.setShortType("");
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn2.setIsAutoUpdated(true);
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta3);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "RLcMG3]D<7`/Ox.*", 2, 2);
      foreignKeyConstraint0.getDeleteRuleName();
      tableColumn3.removeAParentFKConstraint();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildTable();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("x}e");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)9;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("x}e");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "225h$mN6rA");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("x}e");
      byte[] byteArray1 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray1);
      byteArray1[1] = (byte)34;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray1);
      System.setCurrentTimeMillis(3);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 3);
      foreignKeyConstraint0.getName();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertTrue(foreignKeyConstraint0.isRestrictDelete());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^3*@vl)85a'eey-^", 1605, 1);
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "^3*@vl)85a'eey-^", 1605, 1);
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string0 = "";
      String string1 = "YQ1VNFWbcO|Iot}$";
      Table table1 = null;
      try {
        table1 = new Table((Database) null, "", "net.sourceforge.schemaspy.model.xml.TableColumnMeta", "YQ1VNFWbcO|Iot}$", "^3*@vl)85a'eey-^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Table", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("x}e");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("x}e");
      byte[] byteArray1 = new byte[2];
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray1);
      byteArray1[1] = (byte)34;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray1);
      System.setCurrentTimeMillis(3);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 3);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(2, int0);
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", foreignKeyConstraint0.getDeleteRuleDescription());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "p[n", (-702), 3);
      Config.getInstance();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "p[n";
      stringArray0[1] = "p[n";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "p[n";
      stringArray0[6] = "UTF-8";
      stringArray0[7] = "UTF-8";
      stringArray0[8] = "UTF-8";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config(stringArray0);
      Integer integer0 = new Integer((-702));
      config0.setPort((Integer) null);
      Config.getInstance();
      config1.getTableExclusions();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      assertEquals((-702), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "z", 3, 1);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(481);
      Integer integer3 = new Integer(3);
      Integer integer4 = new Integer((-14));
      Integer integer5 = new Integer((-1362));
      Integer integer6 = new Integer(140);
      Integer integer7 = new Integer(46);
      Integer integer8 = new Integer(3);
      Integer integer9 = new Integer(46);
      Integer integer10 = new Integer(140);
      Integer integer11 = new Integer(46);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertEquals(1, foreignKeyConstraint0.getDeleteRule());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "zF0MSXx7%'", 18, 31);
      Integer integer0 = new Integer(31);
      Integer integer1 = new Integer((-105));
      Integer integer2 = new Integer((-105));
      Integer integer3 = new Integer((-3075));
      Integer integer4 = new Integer((-2054));
      Integer integer5 = new Integer(18);
      Integer integer6 = new Integer((-1));
      Integer integer7 = new Integer((-3075));
      Integer integer8 = new Integer(1769);
      Integer integer9 = new Integer(1605);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(31, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
      assertEquals(18, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0253639737248905
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0pn");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "00pn", (-702), 3);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config0 = new Config();
      foreignKeyConstraint0.getDeleteRule();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config1 = new Config();
      config1.getParam("C$w/qk;WSlMv|eR`Xg");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      config1.getTableExclusions();
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string2);
      assertEquals((-702), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^3*@vl)85a'eey-^", 1605, 1);
      Integer integer0 = new Integer(56);
      System.setCurrentTimeMillis(1L);
      Integer integer1 = new Integer(1418);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "^3*@vl)85a'eey-^";
      stringArray0[2] = "![B>@V";
      Integer integer2 = new Integer(1);
      Integer integer3 = new Integer(117);
      Integer integer4 = new Integer(1605);
      Integer.compareUnsigned(1605, 1605);
      Integer integer5 = new Integer(1);
      Integer integer6 = new Integer(117);
      Integer integer7 = new Integer(0);
      Integer.min(154, 83);
      Integer.max(2696, 1605);
      System.setCurrentTimeMillis(0);
      Config.getInstance();
      Pattern.compile("");
      System.setCurrentTimeMillis((-397L));
      foreignKeyConstraint0.getName();
      assertEquals(1605, foreignKeyConstraint0.getUpdateRule());
      assertTrue(foreignKeyConstraint0.isRestrictDelete());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0291734975344147
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "0pn", (-692), 0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRule();
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleName();
      Config config0 = new Config();
      config0.getIndirectColumnExclusions();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;zVj\fMjR<`*f&");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("x}e");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n;zVj\fMjR<`*f&");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "n;zVj\fMjR<`*f&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;zVj\fMjR<`*f&");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("x}e");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, (String) null);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "n;zVj\fMjR<`*f&");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ZoB,75p6Tc|)KC");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ZoB,75p6Tc|)KC");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;zVj\fMjR<`*f&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "ZoB,75p6Tc|)KC", (-175), (-175));
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertEquals((-175), foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
      assertEquals((-175), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("x}e");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;j\fMjV<`*f&");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("x}e");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      FileSystemHandling.setPermissions(evoSuiteFile4, false, false, true);
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;j\fMjV<`*f&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;j\fMjV<`*f&");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "u-{8ND'x `OY<VD");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n;j\fMjV<`*f&");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "u-{8ND'x `OY<VD", (byte) (-20), (byte) (-20));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "818d!+_");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|oj\"X+j>%u:=3 50) /F");
      FileSystemHandling.setPermissions(evoSuiteFile2, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "u-{8ND'x `OY<VD");
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertTrue(boolean0);
      assertEquals((-20), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-20), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^3*@vl)85a'eey-^", 1, 1);
      Integer integer0 = new Integer(56);
      Integer integer1 = new Integer(1418);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "^3*@vl)85a'eey-^";
      stringArray0[2] = "~fB>ZV";
      Integer integer2 = new Integer((-329));
      Integer integer3 = new Integer(2723);
      Integer integer4 = new Integer(389);
      Integer.getInteger("");
      Integer.compareUnsigned(1260, (-329));
      Integer integer5 = new Integer(1);
      Integer integer6 = new Integer((-1));
      Integer.getInteger("");
      Integer.compareUnsigned(1260, (-1));
      Config.getInstance();
      Config.getInstance();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "z", 3, 1);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(481);
      Integer integer3 = new Integer(3);
      Integer integer4 = new Integer((-14));
      Integer integer5 = new Integer(5272);
      Integer integer6 = new Integer((-57));
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer(2);
      Integer integer9 = new Integer(0);
      Integer integer10 = new Integer((-5));
      Integer integer11 = new Integer(1);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertEquals(1, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "^3*@vl)85a'eey-^";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^3*@vl)85a'eey-^", 1605, 1);
      TableColumn tableColumn0 = null;
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      String string1 = "";
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = null;
      String string2 = "";
      String string3 = "3D@YIbzlKl?j( R>";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", "3D@YIbzlKl?j( R>", "column_type");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \"column_type.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.unlinkParents();
      tableColumn0.setComments("");
      tableColumn0.unlinkParents();
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta2);
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta3);
      tableColumn1.unlinkParents();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn3.setType("9::}y.Op[4Tp?LY0\"2");
      TableColumnMeta tableColumnMeta4 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta4).getComments();
      doReturn((String) null).when(tableColumnMeta4).getDefaultValue();
      doReturn(0).when(tableColumnMeta4).getDigits();
      doReturn((String) null).when(tableColumnMeta4).getId();
      doReturn((String) null).when(tableColumnMeta4).getName();
      doReturn(0).when(tableColumnMeta4).getSize();
      doReturn((String) null).when(tableColumnMeta4).getType();
      doReturn(false).when(tableColumnMeta4).isAutoUpdated();
      doReturn(false).when(tableColumnMeta4).isNullable();
      TableColumn tableColumn4 = new TableColumn((Table) null, tableColumnMeta4);
      tableColumn4.setShortType("");
      tableColumn3.unlinkChildren();
      tableColumn2.unlinkParents();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("x}e");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;j\fMjV<`*f&");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-98);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[3] = (byte)9;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("x}e");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "u-{8ND'|x `OY<VD");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "OE'jw4`!9emX.X=3", (-2804), 7712);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((byte)9);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "AA";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "AA", (-1468), 5);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkParents();
      linkedList0.add(tableColumn0);
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      TableColumn tableColumn1 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0, 1, 1986);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte) (-56);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("x}e");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("x}e");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "ZoB,75p6Tc|)KC");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "ZoB,75p6Tc|)KC", (-175), (-175));
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-175), int0);
      assertEquals((-175), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte) (-56);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("x}e");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;zVj\fMjR<`*f&");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("x}e");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("x}e");
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "n;zVj\fMjR<`*f&");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "n;zVj\fMjR<`*f&");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;zVj\fMjR<`*f&");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n;zVj\fMjR<`*f&");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "n;zVj\fMjR<`*f&");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;zVj\fMjR<`*f&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile4, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "n;zVj\fMjR<`*f&");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "ZoB,75p6Tc|)KC", (byte) (-20), (-175));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "ZoB,75p6Tc|)KC");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;zVj\fMjR<`*f&");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals(0, int0);
      assertEquals((-20), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-175), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6142966247203678
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0pn");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-702), (-702));
      foreignKeyConstraint0.getDeleteRuleAlias();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "0pn");
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-110);
      byteArray1[1] = (byte) (-110);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config0 = new Config();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-702), int0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config1 = new Config();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      config1.getTableExclusions();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-702), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n;j\fMjV<`*f&");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;j\fMjV<`*f&");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;j\fMjV<`*f&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dY'~oM");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n;j\fMjV<`*f&");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "u-{8NDx `OYVD", (byte) (-18), (byte) (-18));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|oj\"X+j>%u:=3 50) /F");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u-{8NDx `OYVD");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "u-{8NDx `OYVD");
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals((-18), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-18), foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n;j\fMjV<`*f&");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;j\fMjV<`*f&");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "n;j\fMjV<`*f&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dY'~oM");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n;j\fMjV<`*f&");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "u-{8NDx `OYVD", (byte) (-18), (byte) (-18));
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "|oj\"X+j>%u:=3 50) /F");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u-{8NDx `OYVD");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "u-{8NDx `OYVD");
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      assertEquals((-18), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-18), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "P+AE", 18, 18);
      String string1 = ",6YH~RcLxv";
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      String string2 = "_C}8xyY&me'S";
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, "u2+?*qt}#", "_C}8xyY&me'S", "|s>%?E$f,`,i", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^3*@vl)85a'eey-^", 1, 1);
      Integer integer0 = new Integer(56);
      Integer integer1 = new Integer(1410);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "^3*@vl)85a'eey-^";
      stringArray0[2] = "&fBfZV";
      Integer integer2 = new Integer(56);
      Integer integer3 = new Integer((-3075));
      Integer integer4 = new Integer((-246));
      Integer integer5 = new Integer(1678);
      Integer integer6 = new Integer(123);
      Integer integer7 = new Integer(1771);
      Integer integer8 = new Integer((-255));
      Integer integer9 = new Integer((-246));
      foreignKeyConstraint0.isCascadeOnDelete();
      System.setCurrentTimeMillis(46);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;aVj\fMjV<`*f&");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("x}e");
      FileSystemHandling.createFolder(evoSuiteFile2);
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;aVj\fMjV<`*f&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "n;aVj\fMjV<`*f&");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "u-{8ND'x `OY<VD", (byte) (-20), (-175));
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "u-{8ND'x `OY<VD");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "n;aVj\fMjV<`*f&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "u-{8ND'x `OY<VD", (-175), (-175));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5254350565542036
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "p[n", 5, 104);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "*3WkOUbL:", 1685, (byte)0);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(1685, foreignKeyConstraint1.getUpdateRule());
      assertEquals(70, int0);
      assertEquals(104, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long long0 = 1338L;
      System.setCurrentTimeMillis(1338L);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "P+AE", 1, 1);
      String string1 = ",6YH~RcLxv";
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, "u2+?*qt}#", "_C}8xyY&me'S", "|s>%?E$f,`,i", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "P+ME", 1, 1);
      String string1 = "HkcXf*Fz?@";
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, "u2+?*qt}#", "_C}8xyY&me'S", "|s>%?E$f,`,i", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Connection connection2 = mock(Connection.class, new ViolatedAssumptionAnswer());
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) connection1);
      predicate0.negate();
      linkedList0.removeIf(predicate0);
      String string0 = ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setIsAutoUpdated(true);
      tableColumn0.unlinkChildren();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      tableColumn0.setComments(" references ");
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.removeParent(tableColumn1);
      tableColumn1.setType("");
      tableColumn0.unlinkParents();
      tableColumn1.setComments("");
      tableColumn0.setShortType("");
      tableColumn1.unlinkParents();
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn2.setIsAutoUpdated(true);
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta3);
      tableColumn3.setType("");
      tableColumn3.setShortType("");
      tableColumn3.unlinkChildren();
      tableColumn1.unlinkParents();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
