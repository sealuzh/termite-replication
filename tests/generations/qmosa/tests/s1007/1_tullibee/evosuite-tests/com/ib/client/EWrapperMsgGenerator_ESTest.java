/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 00:57:13 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.AnyWrapperMsgGenerator;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AnyWrapperMsgGenerator.connectionClosed();
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3306, "Connection Closed", "q~Mv", "q~Mv", 3306, (String) null, "q~Mv", "  It does not support SSHORT flag for combo legs.", "q~Mv", "Connection Closed", vector0, "Connection Closed", false, "q~Mv", "  It does not support SSHORT flag for combo legs.");
      vector0.add("");
      Order order0 = new Order();
      vector0.add((String) null);
      order0.m_algoStrategy = "P$f9@qG^hC.9F";
      contract0.m_primaryExch = "%Mxe$==8/(#t";
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = (-1.0);
      OrderState orderState0 = new OrderState();
      order0.m_orderRef = null;
      vector0.setSize(1);
      orderState0.m_status = null;
      orderState0.m_status = "j~Mv";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.ib.client.TagValue
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3306, "FA:", "q~Mv", "q~Mv", 3306, (String) null, "q~Mv", "az", "q~Mv", "FA:", vector0, "V,*vw3sd#nE", false, "q~Mv", "az");
      Order order0 = new Order();
      order0.m_algoStrategy = "P$f9@qG^hC.9F";
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = (-1.0);
      OrderState orderState0 = new OrderState();
      orderState0.m_status = null;
      orderState0.m_status = "j~Mv";
      String string1 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertFalse(vector0.contains(string1));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.964532803443662
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(22, 22, (-773.0810504), 3306, 1.7976931348623157E308, 1.7976931348623157E308);
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3306, "id=22  OpenInterest: vol = N/A delta = N/A", "id=22  OpenInterest: vol = N/A delta = N/A", " ---- Execution Details end ----\n", 3306, (String) null, "id=22  OpenInterest: vol = N/A delta = N/A", "Dz", " ---- Execution Details end ----\n", "id=22  OpenInterest: vol = N/A delta = N/A", vector0, "V$*v)w3Zdpn0E", false, " ---- Execution Details end ----\n", "Dz");
      contract0.m_conId = 22;
      Order order0 = new Order();
      order0.m_algoStrategy = "P$f9@qG^hC.9F";
      Vector<Object> vector1 = new Vector<Object>();
      OrderState orderState0 = new OrderState();
      orderState0.m_maxCommission = 1188.6773;
      AnyWrapperMsgGenerator.error(0, 0, "");
      EWrapperMsgGenerator.contractDetailsEnd(0);
      orderState0.m_maxCommission = 3306.0;
      EWrapperMsgGenerator.execDetailsEnd(0);
      EWrapperMsgGenerator.scannerDataEnd(0);
      EWrapperMsgGenerator.tickSnapshotEnd(1921);
      System.setCurrentTimeMillis(0);
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      EWrapperMsgGenerator.tickOptionComputation(0, Integer.MAX_VALUE, 90.3481753396608, 2918.85865338, 1.7976931348623157E308, 0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(Integer.MAX_VALUE, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AnyWrapperMsgGenerator.connectionClosed();
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3306, "Connection Closed", "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", 3306, (String) null, "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "  It does not support SSHORT flag for combo legs.", "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "Connection Closed", vector0, "Connection Closed", false, "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "  It does not support SSHORT flag for combo legs.");
      Order order0 = new Order();
      vector0.add((String) null);
      order0.m_algoStrategy = "P$f9@qG^hC.9F";
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = (-1.0);
      OrderState orderState0 = new OrderState();
      order0.m_orderRef = null;
      vector0.setSize(1);
      orderState0.m_status = null;
      orderState0.m_status = "j~Mv";
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AnyWrapperMsgGenerator.connectionClosed();
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3306, "Connection Closed", "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", 3306, (String) null, "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "  It does not support SSHORT flag for combo legs.", "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "Connection Closed", vector0, "Connection Closed", false, "id=13  modelOptComp: vol = 3301.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "  It does not support SSHORT flag for combo legs.");
      Order order0 = new Order();
      vector0.add((String) null);
      order0.m_algoStrategy = "Pf9@qG^hC.9F";
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = (double) 'b';
      OrderState orderState0 = new OrderState();
      order0.m_orderRef = null;
      vector0.setSize(1);
      order0.m_sweepToFill = false;
      orderState0.m_status = null;
      orderState0.m_status = "";
      orderState0.m_commission = (double) 0;
      orderState0.m_status = "j~Mv";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.806754853779283
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(367);
      Vector<Object> vector1 = new Vector<Object>();
      Contract contract0 = new Contract(3306, " trailStopPr2dice=", "BAG", " trailStopPr2dice=", 367, "p$ermId= ", "BAG", " trailStopPr2dice=", "rUA#P{#!djK8@{*45R", "XlZVCv", vector1, "+~1;,>&sy.=JVWK}", true, (String) null, "XlZVCv");
      Order order0 = new Order();
      order0.m_basisPoints = 367.0;
      contract0.m_localSymbol = null;
      order0.m_scaleSubsLevelSize = 1;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "+~1;,>&sy.=JVWK}");
      vector1.remove((Object) null);
      vector1.removeIf(predicate0);
      contract0.m_multiplier = "+~1;,>&sy.=JVWK}";
      contract0.m_includeExpired = true;
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(2);
      assertEquals("reqId = 2 =============== end ===============", string0);
      
      orderState0.m_status = ":Ma/?Lj7+h3Lc";
      String string1 = EWrapperMsgGenerator.accountDownloadEnd("rUA#P{#!djK8@{*45R");
      assertEquals("accountDownloadEnd: rUA#P{#!djK8@{*45R", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(0, 'b', 2177.823365557, 2177.823365557, 0, 0.0);
      assertEquals("id=0  unknown: vol = 2177.823365557 delta = N/A", string2);
      
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(3306);
      Execution execution0 = new Execution();
      String string3 = EWrapperMsgGenerator.execDetails((-553), contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = -553\norderId = 0\nclientId = 0\nsymbol =  trailStopPr2dice=\nsecType = BAG\nexpiry =  trailStopPr2dice=\nstrike = 367.0\nright = p$ermId= \ncontractExchange =  trailStopPr2dice=\ncurrency = rUA#P{#!djK8@{*45R\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(3306);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.ensureCapacity(3306);
      Contract contract0 = new Contract(3306, " trailStopPrice=", "BAG", " trailStopPrice=", 3306, "permId = ", "BAG", "", "rUA#P{#!djK8@{*45R", "XlZVCv", vector1, "+~1;,sy.=JV}", true, (String) null, "XlZVCv");
      Order order0 = new Order();
      order0.m_volatility = (double) 3306;
      contract0.m_includeExpired = true;
      OrderState orderState0 = new OrderState();
      contract0.m_comboLegsDescrip = "permId = ";
      order0.m_orderRef = "lastPrice";
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      EWrapperMsgGenerator.contractDetailsEnd(2);
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(1);
      assertEquals("reqId = 1 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.currentTime(0);
      assertEquals("current time = 0 (Jan 1, 1970 12:00:00 AM)", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(0, 5060, (String) null);
      assertEquals("id=0  unknown=null", string2);
      
      String string3 = EWrapperMsgGenerator.tickGeneric(2, (-1676), 0);
      assertEquals("id=2  unknown=0.0", string3);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.540448551364985
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(335);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.ensureCapacity(3306);
      Contract contract0 = new Contract(3306, " trailStopPr2dice=", "BAG", " trailStopPr2dice=", 335, "p$ermId= ", "BAG", ">Niowe", "rUA#P{#!djK8@{*45R", "XlZVCv", vector1, "+~1;,>&sy.=JVWK}", true, (String) null, "XlZVCv");
      Order order0 = new Order();
      contract0.m_localSymbol = null;
      order0.m_scaleSubsLevelSize = 335;
      contract0.m_includeExpired = true;
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(2);
      assertEquals("reqId = 2 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.accountDownloadEnd("rUA#P{#!djK8@{*45R");
      assertEquals("accountDownloadEnd: rUA#P{#!djK8@{*45R", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd(Integer.MAX_VALUE);
      assertEquals("reqId = 2147483647 =============== end ===============", string2);
      
      ContractDetails contractDetails0 = new ContractDetails(contract0, "O", "O", 0, (String) null, (String) null, 'n', (String) null, "p$ermId= ", ">Niowe", (String) null, "rUA#P{#!djK8@{*45R", "XlZVCv", (String) null, ">Niowe");
      order0.m_allOrNone = false;
      contractDetails0.m_longName = "+fOaH]$(|#b5";
      contractDetails0.m_liquidHours = null;
      String string3 = EWrapperMsgGenerator.contractDetails(617, contractDetails0);
      assertEquals("reqId = 617 ===================================\n ---- Contract Details begin ----\nconid = 3306\nsymbol =  trailStopPr2dice=\nsecType = BAG\nexpiry =  trailStopPr2dice=\nstrike = 335.0\nright = p$ermId= \nmultiplier = BAG\nexchange = >Niowe\nprimaryExch = +~1;,>&sy.=JVWK}\ncurrency = rUA#P{#!djK8@{*45R\nlocalSymbol = null\nmarketName = O\ntradingClass = O\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 110\nlongName = +fOaH]$(|#b5\ncontractMonth = p$ermId= \nindustry = >Niowe\ncategory = null\nsubcategory = rUA#P{#!djK8@{*45R\ntimeZoneId = XlZVCv\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string3);
      
      String string4 = EWrapperMsgGenerator.scannerDataEnd((-1279));
      assertEquals("id = -1279 =============== end ===============", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd(2467);
      assertEquals("id=2467 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.nextValidId(0);
      assertEquals("Next Valid Order ID: 0", string6);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9263548464292743
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(367);
      Contract contract0 = new Contract(3306, (String) null, "3^R", "Ki5rF78^X", 3306, "3^R", "permId = ", " trailStopPrice=", "g2tOxD*0tQ<L>1g&", "", vector0, "T{Auay", true, "26WeekHigh", (String) null);
      contract0.m_comboLegsDescrip = "3^R";
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      OrderState orderState0 = new OrderState("", (String) null, (String) null, (String) null, 0.0, 1.7976931348623157E308, 1.7976931348623157E308, (String) null, " trailStopPrice=");
      EWrapperMsgGenerator.openOrder(3306, contract0, order0, orderState0);
      contract0.m_primaryExch = "I?P){Or$k}zS%$'";
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2699), 0, (-111.85669), 3306, 1.7976931348623157E308, 0);
      assertEquals("id=-2699  bidSize: vol = N/A delta = N/A", string0);
      
      Contract contract1 = new Contract();
      EWrapperMsgGenerator.contractMsg(contract1);
      ContractDetails contractDetails0 = new ContractDetails();
      String string1 = EWrapperMsgGenerator.contractDetails(Integer.MAX_VALUE, contractDetails0);
      assertEquals("reqId = 2147483647 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis((-1019L));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(26, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.clear();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = new Locale("CC-VO", "CC-VO");
      Locale locale2 = new Locale("_)m{6%\"-&", "CC-VO", "_)m{6%\"-&");
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("CC-VO");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) list1, locale_FilteringMode1);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      hashMap0.put("nIPi8<jg@_ dT[+3<", list2);
      locale2.getDisplayCountry(locale0);
      Vector<String> vector1 = new Vector<String>();
      Locale locale3 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector2 = new Vector<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) vector2);
      locale3.getDisplayLanguage();
      Locale locale4 = Locale.JAPAN;
      locale2.getUnicodeLocaleAttributes();
      hashMap0.put("_)m{6%\"-&", list1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 1990.468, (-752.9521921536563), 1.7976931348623157E308, 2.147483647E9);
      assertEquals("id=0  modelOptComp: vol = 1990.468 delta = N/A: modelPrice = N/A: pvDividend = 2.147483647E9", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(2183, 13, 2019.0733352, 1.0, 13, 2.147483647E9);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) null);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.containsAll(linkedList0);
      // Undeclared exception!
      try { 
        linkedList1.subList((-3988), 13);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -3988
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("&t6#0Z1K:;k<bA&FV");
      Contract contract0 = new Contract(10, "I>|n)9", "I>|n)9", "I>|n)9", (-1.0), "I>|n)9", "I>|n)9", "", "", "", vector0, (String) null, false, "I>|n)9", " 'Ehq(\"^1;O?j");
      contract0.m_localSymbol = "Eror -S ";
      EWrapperMsgGenerator.contractMsg(contract0);
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, (String) null, "", 10, "'d&tP]J+", "2cPQ9,\"=@=;!,;}", 124, " referencePriceType=", "!i}u7PL8H)*]m{~$", "2cPQ9,\"=@=;!,;}", "", "", "PEvFVY`Tww", "Eror -S ", (String) null);
      contractDetails0.m_validExchanges = "PEvFVY`Tww";
      contract0.m_secId = "";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(10, 2146771815, contractDetails0, " 'Ehq(\"^1;O?j", "2cPQ9,\"=@=;!,;}", "c", "auctionPrice");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(367, 367, 0.0, 1.7976931348623157E308, 0.0, 1.7976931348623157E308);
      int int0 = 4242;
      Contract contract0 = null;
      Order order0 = new Order();
      order0.m_minQty = 367;
      OrderState orderState0 = new OrderState((String) null, (String) null, "", (String) null, 1.7976931348623157E308, 0.0, 0, (String) null, (String) null);
      order0.m_ocaGroup = "OptionCallVolume";
      orderState0.m_status = "";
      orderState0.m_commissionCurrency = "B_Q";
      UnderComp underComp0 = new UnderComp();
      EWrapperMsgGenerator.deltaNeutralValidation(Integer.MAX_VALUE, underComp0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(2183, 13, 1222.00107161, 3306, (-14.8246618756539), 1.7976931348623157E308);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "id=2183  modelOptComp: vol = 1222.00107161 delta = N/A: modelPrice = N/A: pvDividend = N/A");
      // Undeclared exception!
      try { 
        linkedList0.subList(2145726297, (-301));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2145726297) > toIndex(-301)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(3306, 13, 481.99, 417.138978692684, 101.0, (-694.12));
      Integer integer0 = new Integer((-969));
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer1 = new Integer(110);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer2 = new Integer(2146923533);
      Integer integer3 = new Integer(13);
      assertFalse(integer3.equals((Object)integer0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(367);
      Order order0 = new Order();
      order0.m_referencePriceType = (-890);
      order0.m_delta = (double) 367;
      order0.m_volatilityType = 340;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 1285, 1.7976931348623157E308, 0, 0, 0.0, 2992.0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Order order0 = new Order();
      System.setCurrentTimeMillis(0L);
      String string0 = EWrapperMsgGenerator.tickPrice(0, 0, 1.7976931348623157E308, (-449));
      assertEquals("id=0  bidSize=1.7976931348623157E308  canAutoExecute", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_notes = ";`<T31C5&,m\"t";
      EWrapperMsgGenerator.contractDetails(0, contractDetails0);
      EWrapperMsgGenerator.contractDetails(0, contractDetails0);
      Object object0 = new Object();
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals(" =============== end ===============", eWrapperMsgGenerator0.openOrderEnd());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      TagValue tagValue0 = new TagValue("pimayExch  ", "&I:n?tm<&jOuTsk");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector1 = new Vector<Object>(linkedList0);
      vector1.addAll((Collection<?>) linkedList0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "&I:n?tm<&jOuTsk");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      vector0.remove((Object) vector1);
      linkedList0.stream();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      vector1.removeIf(predicate3);
      Object object1 = new Object();
      vector1.add(object1);
      Object object2 = new Object();
      vector0.add(object2);
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 0.0, (-2499.0724004370054), 0.0, 0.0);
      System.setCurrentTimeMillis((-1909863644));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(1568, (-18), (-18), "QUSiDcn-kTCJ>xjv+", (-824.0), 1568, "n,81(Kn4&&*$5!r9", (-18), 1568);
      assertEquals("id=1568  unknown: basisPoints = -18.0/QUSiDcn-kTCJ>xjv+ impliedFuture = -824.0 holdDays = 1568 futureExpiry = n,81(Kn4&&*$5!r9 dividendImpact = -18.0 dividends to expiry = 1568.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickEFP(1568, 5132, (-4277.0), "QUSiDcn-kTCJ>xjv+", 1568, (-18), "v+2z>^48m}e)p=", (-2463.0), 982.266967);
      assertEquals("id=1568  unknown: basisPoints = -4277.0/QUSiDcn-kTCJ>xjv+ impliedFuture = 1568.0 holdDays = -18 futureExpiry = v+2z>^48m}e)p= dividendImpact = -2463.0 dividends to expiry = 982.266967", string1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode3);
      Locale locale1 = Locale.GERMANY;
      locale0.getDisplayCountry(locale1);
      Vector<String> vector1 = new Vector<String>();
      Locale locale2 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector2 = new Vector<Locale>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) vector2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1);
      locale0.getDisplayLanguage();
      Locale locale3 = Locale.JAPAN;
      locale2.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, 0, 0.0, 1.0, 0);
      assertEquals("id=0  bidSize: vol = 0.0 delta = 0.0", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("^3tdEeT)Oy'mh");
      assertEquals("updateAccountTime: ^3tdEeT)Oy'mh", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EWrapperMsgGenerator.openOrderEnd();
      Integer integer0 = new Integer(3306);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer1 = new Integer(3306);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer2 = new Integer(1879048192);
      Integer integer3 = new Integer(3306);
      assertFalse(integer3.equals((Object)integer2));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(13, "W8!%oJk*=U@z", "t\"%;;zY", "NTux07D", (-739.7828652262), "open", "OptionBidExchStr", "", "-z6GSSkZb", "iMtR$5/!=iR!*JDJ", vector0, "-z6GSSkZb", true, "W8!%oJk*=U@z", ",`~_Z~>J,MX`UB`~H");
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      OrderState orderState1 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState1);
      assertFalse(vector0.contains(string0));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Order order0 = new Order();
      vector0.add((String) null);
      order0.m_algoStrategy = "P$f9@qG^hC.9F";
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = 2.14529316E9;
      OrderState orderState0 = new OrderState();
      order0.m_orderRef = null;
      orderState0.m_status = null;
      orderState0.m_status = "j~Mv";
      String string0 = EWrapperMsgGenerator.orderStatus(12, (String) null, (-1), 0, 2.14529316E9, Integer.MAX_VALUE, 3594, 2019.0733352, 23, (String) null);
      assertEquals("order status: orderId=12 clientId=23 permId=2147483647 status=null filled=-1 remaining=0 avgFillPrice=2.14529316E9 lastFillPrice=2019.0733352 parent Id=3594 whyHeld=null", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(536, "INuL#J]1TY+q>5g/", (-1), (-4065), (-509.6482014), 536, (-994), (-994), 0, "1&GMOo}xm@P_-2v7c");
      assertEquals("order status: orderId=536 clientId=0 permId=536 status=INuL#J]1TY+q>5g/ filled=-1 remaining=-4065 avgFillPrice=-509.6482014 lastFillPrice=-994.0 parent Id=-994 whyHeld=1&GMOo}xm@P_-2v7c", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 2183;
      EWrapperMsgGenerator.tickOptionComputation(13, 3306, 1.7976931348623157E308, 3306, 0.0, (-14.8246618756539));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("+|GxYD g$#=", 1.7976931348623157E308);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=1.7976931348623157E308
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AnyWrapperMsgGenerator.connectionClosed();
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3306, "Connection Closed", "q~Mv", "q~Mv", 3306, (String) null, "q~Mv", "Iu<u)(_(1i}]DC{vC[ ", "q~Mv", "Connection Closed", vector0, "Connection Closed", false, "q~Mv", "Iu<u)(_(1i}]DC{vC[ ");
      vector0.add("");
      Order order0 = new Order();
      vector0.add((String) null);
      order0.m_algoStrategy = "P$f9@qG^hC.9F";
      contract0.m_primaryExch = "%Mxe$==8/(#t";
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = (-1.0);
      OrderState orderState0 = new OrderState();
      order0.m_orderRef = null;
      vector0.setSize(1);
      orderState0.m_status = null;
      orderState0.m_status = "j~Mv";
      AnyWrapperMsgGenerator.error((int) 'm', 1, (String) null);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(Integer.MAX_VALUE, contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.clear();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = new Locale("CC-VO", "CC-VO");
      Locale locale2 = new Locale("_)m{6%\"-&", "CC-VO", "_)m{6%\"-&");
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("CC-VO");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) list0, locale_FilteringMode0);
      hashMap0.put("nIPi8<jg@_ dT[+3<", list0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      locale2.getDisplayCountry(locale0);
      List<Locale.LanguageRange> list2 = Locale.LanguageRange.mapEquivalents(linkedList1, hashMap0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>(list2);
      linkedList1.add(locale_LanguageRange0);
      Vector<String> vector1 = new Vector<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      vector1.replaceAll(unaryOperator0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) vector1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector2 = new Vector<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) vector2);
      locale0.getDisplayLanguage();
      Locale locale3 = Locale.JAPAN;
      locale2.getUnicodeLocaleAttributes();
      hashMap0.put("_)m{6%\"-&", list1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      String string0 = EWrapperMsgGenerator.managedAccounts("_)m{6%\"-&");
      assertEquals("Connected : The list of managed accounts are : [_)m{6%\"-&]", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-2483), 0, 0, 0);
      assertEquals("id=-2483  bidSize=0.0  noAutoExecute", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.currentTime((-2483));
      assertEquals("current time = -2483 (Dec 31, 1969 11:18:37 PM)", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EWrapperMsgGenerator.updateNewsBulletin((-301), 2146859219, "qLSt.zq8[=", "auctionPrice");
      System.setCurrentTimeMillis(2146859219);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract(41, "O]DVk,{qu^f+YDz", "U)`s(", "Sq'mM", (-474.38470154), "", (String) null, (String) null, "O]DVk,{qu^f+YDz", " status=", vector0, "Sq'mM", true, "Fs):O%d~}t", (String) null);
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "`T_$\"ZI8", 600L, " time = ", "Sq'mM", 2155, "", "validExchanges = ", "D>!tjGpnHg2", " ---- Execution Details end ----\n", (String) null, " remaining=", (String) null, "U)`s(");
      String string0 = EWrapperMsgGenerator.bondContractDetails((-396), contractDetails0);
      assertEquals("reqId = -396 ===================================\n ---- Bond Contract Details begin ----\nsymbol = O]DVk,{qu^f+YDz\nsecType = U)`s(\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = O]DVk,{qu^f+YDz\nmarketName = null\ntradingClass = `T_$\"ZI8\nconid = 41\nminTick = 600.0\norderTypes =  time = \nvalidExchanges = Sq'mM\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = \n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "]@B>J'92 XY");
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      vector1.add(object0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-957));
      String string0 = EWrapperMsgGenerator.tickPrice(163, 13, 1.7976931348623157E308, 3306);
      assertEquals("id=163  modelOptComp=1.7976931348623157E308  canAutoExecute", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Vector<Object> vector1 = new Vector<Object>();
      TagValue tagValue0 = new TagValue("Kw!J(qy3v=c4q1", "  It does not support realtime bar data query cancellation.");
      vector1.add((Object) null);
      vector1.add((Object) "  It does not support realtime bar data query cancellation.");
      String string0 = EWrapperMsgGenerator.updateAccountValue((String) null, "  It does not support realtime bar data query cancellation.", "&YxVCn=S", "HKv=EZ5");
      assertEquals("updateAccountValue: null   It does not support realtime bar data query cancellation. &YxVCn=S HKv=EZ5", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      TagValue tagValue0 = new TagValue();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      vector0.listIterator();
      linkedList0.containsAll(vector0);
      linkedList0.removeFirstOccurrence("openEFP");
      Vector<Object> vector1 = new Vector<Object>();
      vector1.addAll((Collection<?>) vector0);
      vector1.add((Object) vector0);
      tagValue0.m_value = "jowH2h[FbAr;*.!r";
      vector1.add((Object) null);
      Vector<Object> vector2 = new Vector<Object>();
      TagValue tagValue1 = new TagValue("openEFP", (String) null);
      vector1.add((Object) vector0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(10, (-1331), (-1331), 2146256465, (-1331), 1549);
      assertEquals("updateMktDepth: 10 -1331 -1331 2146256465 -1331.0 1549", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1833), (-2), 2146541818, (-2), (-1833), 1728);
      assertEquals("updateMktDepth: -1833 -2 2146541818 -2 -1833.0 1728", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "id=3306  unknown: vol = 3306.0 delta = N/A", 0.0, (String) null, (String) null, (-1879), "bL)*bEEa'wiWy", "V<?G;X8Ec NKyR}|#.", (String) null, (String) null, "bL)*bEEa'wiWy", (String) null, "OptionImpliedVolatility", (String) null);
      String string0 = EWrapperMsgGenerator.scannerData((-2147483645), (-3109), contractDetails0, "Mk}5", "bL)*bEEa'wiWy", "LtKhW", "shortable");
      assertEquals("id = -2147483645 rank=-3109 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=id=3306  unknown: vol = 3306.0 delta = N/A distance=Mk}5 benchmark=bL)*bEEa'wiWy projection=LtKhW legsStr=shortable", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters("pjGz8bRq&PT.,");
      assertEquals("SCANNER PARAMETERS:\npjGz8bRq&PT.,", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Order order0 = new Order();
      vector0.add((String) null);
      order0.m_algoStrategy = "Pf9@qG^hC.9F";
      order0.m_scaleInitLevelSize = 0;
      order0.m_deltaNeutralAuxPrice = (double) 'b';
      OrderState orderState0 = new OrderState();
      order0.m_orderRef = null;
      vector0.setSize(1);
      vector0.add(" symbol=");
      order0.m_sweepToFill = false;
      orderState0.m_status = null;
      orderState0.m_status = "";
      orderState0.m_commission = (double) 0;
      orderState0.m_status = "j~Mv";
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(1000L);
      System.setCurrentTimeMillis(0);
      String string0 = EWrapperMsgGenerator.receiveFA(3306, (String) null);
      assertEquals("FA: null null", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Integer integer0 = new Integer(367);
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      OrderState orderState1 = new OrderState();
      OrderState orderState2 = new OrderState();
      order0.m_stockRangeLower = (-1542.905);
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(2343, 0, "t:Ptq}j.i#d- U5", (-902), 2136478832, 173.8221, 2146408989);
      assertEquals("updateMktDepth: 2343 0 t:Ptq}j.i#d- U5 -902 2136478832 173.8221 2146408989", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-313), " close=", (String) null, "L[lu<7l$?32:", 0.0, "L[lu<7l$?32:", "20t", "1&GMOo}xm@P_-2v7c", "1&GMOo}xm@P_-2v7c", " close=", vector0, "L[lu<7l$?32:", true, "L[lu<7l$?32:", (String) null);
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 2146833289, (-313), (-313), 0.0, 2146833289, 741.18404, "3tqy\" A`~j^Al$2");
      assertEquals("updatePortfolio: conid = -313\nsymbol =  close=\nsecType = null\nexpiry = L[lu<7l$?32:\nstrike = 0.0\nright = L[lu<7l$?32:\nmultiplier = 20t\nexchange = 1&GMOo}xm@P_-2v7c\nprimaryExch = L[lu<7l$?32:\ncurrency = 1&GMOo}xm@P_-2v7c\nlocalSymbol =  close=\n2146833289 -313.0 -313.0 0.0 2.146833289E9 741.18404 3tqy\" A`~j^Al$2", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      TagValue tagValue0 = new TagValue("openEFP", "openEFP");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      vector0.listIterator();
      linkedList0.containsAll(vector0);
      linkedList0.removeFirstOccurrence("openEFP");
      Vector<Object> vector1 = new Vector<Object>();
      vector1.addAll((Collection<?>) vector0);
      vector1.add((Object) vector0);
      tagValue0.m_value = "jowH2h[FbAr;*.!r";
      vector1.add((Object) "openEFP");
      Vector<Object> vector2 = new Vector<Object>();
      TagValue tagValue1 = new TagValue("openEFP", "openEFP");
      vector1.add((Object) vector0);
      String string0 = EWrapperMsgGenerator.fundamentalData(0, "openEFP");
      assertEquals("id  = 0 len = 7\nopenEFP", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Integer integer0 = new Integer((-1723900170));
      linkedList0.offerLast(integer0);
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale1.getDisplayVariant();
      Locale locale2 = new Locale("", "CC-VO", "CC-VO");
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("CC-VO");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      locale0.getUnicodeLocaleKeys();
      Locale locale3 = Locale.ITALY;
      locale0.getDisplayLanguage();
      Locale locale4 = Locale.KOREAN;
      Set<String> set0 = locale2.getUnicodeLocaleAttributes();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0);
      Vector<String> vector1 = new Vector<String>();
      hashMap0.put("Chinese", (List<String>) null);
      vector0.listIterator();
      Locale locale5 = Locale.KOREAN;
      locale3.getUnicodeLocaleKeys();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) null);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      locale5.getUnicodeLocaleKeys();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) null);
      linkedList0.stream();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 2145293160, 443.2402811366, 3572.0, (-1393.264), 3572.0, 0.0, (String) null);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n2145293160 443.2402811366 3572.0 -1393.264 3572.0 0.0 null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Integer integer0 = new Integer(2146474757);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.add(integer0);
      Integer integer1 = new Integer(31);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer2 = new Integer((-460));
      vector1.add(integer2);
      vector0.add(integer0);
      System.setCurrentTimeMillis((-2545L));
      String string0 = EWrapperMsgGenerator.realtimeBar(2146474757, 1000L, (-1075.9375031437), 1222.00107161, 2146474757, 1222.00107161, 1000L, (-55.0), 469);
      assertEquals("id=2146474757 time = 1000 open=-1075.9375031437 high=1222.00107161 low=2.146474757E9 close=1222.00107161 volume=1000 count=469 WAP=-55.0", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-2144504536), (-2144504536), (-2160.483311538041), (-2144504536), (-2144504536), (-2160.483311538041), (-18L), 2622.5628250309, (-2144504536));
      assertEquals("id=-2144504536 time = -2144504536 open=-2160.483311538041 high=-2.144504536E9 low=-2.144504536E9 close=-2160.483311538041 volume=-18 count=-2144504536 WAP=2622.5628250309", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      TagValue tagValue0 = new TagValue("pimayExch  ", "&I:n?tm<&jOuTsk");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector1 = new Vector<Object>(linkedList0);
      vector1.addAll((Collection<?>) linkedList0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "&I:n?tm<&jOuTsk");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      vector1.removeIf(predicate3);
      Object object0 = new Object();
      vector1.add(object0);
      Object object1 = new Object();
      vector0.add(object1);
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 0.0, (-2499.0724004370054), 0.0, 1.0);
      System.setCurrentTimeMillis((-1909863644));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      System.setCurrentTimeMillis((-1748L));
      String string0 = EWrapperMsgGenerator.tickSize((-277), 1, 0);
      assertEquals("id=-277  bidPrice=0", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      TagValue tagValue0 = new TagValue("pimayExch  ", "&I:n?tm<&jOuTsk");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector1 = new Vector<Object>(linkedList0);
      vector1.addAll((Collection<?>) linkedList0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "&I:n?tm<&jOuTsk");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      vector1.removeIf(predicate3);
      Object object0 = new Object();
      vector1.add(object0);
      Object object1 = new Object();
      vector0.add(object1);
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 194.1403525413, 0.0, 13, 1.7976931348623157E308);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1909863644));
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale1.getDisplayVariant();
      Locale locale2 = new Locale("", "CC-VO", "CC-VO");
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("CC-VO");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      locale0.getUnicodeLocaleKeys();
      Locale locale3 = Locale.ITALY;
      locale1.getDisplayLanguage();
      Locale locale4 = Locale.KOREAN;
      locale1.getUnicodeLocaleAttributes();
      String string0 = EWrapperMsgGenerator.realtimeBar((-2539), (-2539), (-2539), (-2539), (-2539), (-4925.5), (-2539), (-4925.5), (-2539));
      assertEquals("id=-2539 time = -2539 open=-2539.0 high=-2539.0 low=-2539.0 close=-4925.5 volume=-2539 count=-2539 WAP=-4925.5", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(3306, 13, 3306, 13.0, 412.8877392, 13.0);
      Integer integer0 = new Integer(2144705823);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer1 = new Integer((-286));
      Integer integer2 = new Integer(10);
      vector0.add(integer2);
      vector0.add(integer0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(10, (-2483), 1.7976931348623157E308, (-1190.9915), 505.06904547424, (-1190.9915));
      assertEquals("id=10  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(952, "Error - ", "Error - ", "Error - ", 952, "9\"SN'>-6h ", "Error - ", "halted", "1o.8", "halted", vector0, ";p7se6|5$yH", true, "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = 0.0: pvDividend = 0.0", "halted");
      UnderComp underComp0 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(2136478832, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale1.getDisplayVariant();
      Locale locale2 = Locale.GERMANY;
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("CC-VO");
      locale0.getUnicodeLocaleKeys();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      locale0.getUnicodeLocaleKeys();
      locale1.getDisplayLanguage(locale2);
      Locale locale3 = Locale.JAPAN;
      locale1.getDisplayLanguage();
      Locale locale4 = Locale.KOREAN;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Vector<String> vector0 = new Vector<String>();
      Locale locale5 = new Locale("");
      locale5.getUnicodeLocaleKeys();
      locale2.clone();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale6 = Locale.ITALIAN;
      locale6.getUnicodeLocaleKeys();
      Order order0 = new Order();
      System.setCurrentTimeMillis((-2344L));
      System.setCurrentTimeMillis(0);
      String string0 = EWrapperMsgGenerator.historicalData(2799, "$.Sd", 131.122870208, 11.82, 0, 2372.463, 114, 23, 23, true);
      assertEquals("id=2799 date = $.Sd open=131.122870208 high=11.82 low=0.0 close=2372.463 volume=114 count=23 WAP=23.0 hasGaps=true", string0);
  }
}
