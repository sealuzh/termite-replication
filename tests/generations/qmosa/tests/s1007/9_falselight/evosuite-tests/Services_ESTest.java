/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 23:44:26 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://y(kaK0*`'FJ\"o<cfVZ");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "y(kaK0*`'FJ\"o<cfVZ");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("y(kaK0*`'FJ\"o<cfVZ", (-1));
      assertTrue(services_HTTP_Result0.works);
      assertEquals(19, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(20);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 20);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("i#|q<r[A)~o 1ej3.", 20);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "?1Ig?k:C'?(91");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("?1Ig?k:C'?(91", 3000);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://4\\H&rDq3x&vSKR_]c:1569");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "C");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("4H&rDq3x&vSKR_]c", 1569);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.page_weight = 1569;
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 1569 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: 4H&rDq3x&vSKR_]c) **.\n****", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://4\\H&rDq3x&vSKR_]c:1569");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("4H&rDq3x&vSKR_]c", 1569);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.time = (-1093L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-47L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1621);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("MT8%-", 1621);
      services_HTTP_Result0.reset();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-47L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1621);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("=(4*b$-\"YlcYCB!vL", 1621);
      services_HTTP_Result0.reset();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-81);
      byteArray0[0] = (byte) (-81);
      byteArray0[2] = (byte) (-81);
      byteArray0[4] = (byte) (-122);
      byteArray0[4] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byte[] byteArray1 = new byte[6];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "J~ECcSo[1Udi|#m$!");
      byteArray1[3] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:1");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "J~ECcSo[1Udi|#m$!");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "\"Ie$pl=QU%`c!4S!");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "** TempPm: ");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "** TempPm: ");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "** TempPm: ");
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("J~ECcSo[1Udi|#m$!", (-2077));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(14L);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (-1117));
      services_HTTP_Result0.toString();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_HTTP_Result0.Error = "<\"f@_@E*x8";
      services_SIMPLE_Result0.toString();
      String string0 = services_HTTP_Result0.Error;
      services_HTTP_Result0.page_weight = 2253;
      services_SIMPLE_Result0.Error = "<\"f@_@E*x8";
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.toString();
      services_SIMPLE_Result1.Error = "<\"f@_@E*x8";
      services_SIMPLE_Result1.toString();
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("_p*YuoNmOjd;", 3000);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("(5#c", 1);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("FLv}T%~f7JK*", (-646));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 1);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("i%@2g5L", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("y(kaK0*`'FJ\"o<cfVZ", (-1));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("QUIT\r\n", (-1556));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Services services0 = new Services();
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-562L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(680L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1917L));
      System.setCurrentTimeMillis((-1321L));
      System.setCurrentTimeMillis((-416L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1720L));
      System.setCurrentTimeMillis(680L);
      System.setCurrentTimeMillis((-165L));
      System.setCurrentTimeMillis((-165L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1L));
  }
}
