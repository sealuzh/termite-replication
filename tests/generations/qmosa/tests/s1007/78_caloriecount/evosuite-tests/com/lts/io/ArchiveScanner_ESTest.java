/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 01:20:06 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.EOFException;
import java.io.File;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.SequenceInputStream;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8970164980763546
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.TAIWAN;
      String string0 = "com.lts.io.ArchiveScanner";
      ImprovedFile improvedFile0 = new ImprovedFile(".JAR", ".JAR");
      improvedFile0.createTempDir();
      ImprovedFile.createTempImprovedFile("com.lts.io.ArchiveScanner", "com.lts.io.ArchiveScanner", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      try { 
        archiveScanner0.scan();
       //  fail("Expecting exception: Exception");
       // Unstable assertion
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/.JAR/.JAR/com.lts.io.ArchiveScanner1com.lts.io.ArchiveScanner
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7862097648384696
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.TAIWAN;
      String string0 = "com.lts.io.ArchiveScanner";
      String string1 = ".JAR";
      ImprovedFile improvedFile0 = new ImprovedFile(".JAR", ".JAR");
      improvedFile0.getCanonicalPath();
      ImprovedFile.createTempImprovedFile("com.lts.io.ArchiveScanner", "com.lts.io.ArchiveScanner", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "com.lts.io.ArchiveScanner";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/.JAR/.JAR";
      stringArray0[2] = "com.lts.io.ArchiveScanner";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Enumeration<InputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "1{ lXi:;)\\fU";
      ImprovedFile improvedFile0 = new ImprovedFile("1{ lXi:;)\fU", "`)w4?SdGW}4H]4");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "1{ lXi:;)\fU";
      stringArray0[1] = "`)w4?SdGW}4H]4";
      archiveScanner0.setBasedir("`)w4?SdGW}4H]4");
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "1{ lXi:;)\fU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[10];
      byteArray0[9] = (byte) (-97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte) (-97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "EFb(4}2UK .jUr.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6,%.";
      archiveScanner0.excludes = stringArray0;
      stringArray0[1] = "6,%.";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "6,%.", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/EFb(4}2UK .jUr.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[10];
      byteArray0[9] = (byte) (-97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte) (-97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "EFb(4}2UK .jUr.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6,%.";
      archiveScanner0.excludes = stringArray0;
      stringArray0[1] = "6,%.";
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "6,%.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("3cN(X,}K+RoKpom^~W", "3cN(X,}K+RoKpom^~W");
      ImprovedFile.createTempImprovedFile("3cN(X,}K+RoKpom^~W", "#m#tUAt|40hZct{7T0^C|v", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "3cN(X,}K+RoKpom^~W", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7993991393748952
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.TAIWAN;
      ImprovedFile improvedFile0 = new ImprovedFile(".JAR", ".JAR");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processFile(".jar");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray0 = new byte[10];
      byteArray0[3] = (byte) (-97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile3, true, true, true);
      stringArray0[0] = "6,%.";
      stringArray0[1] = "6,%.";
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsIncluded = vector0;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "6,%.", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/EFb(4};UK .jar.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("{L-yQ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile2);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile4, true, true, true);
      stringArray0[0] = "6,%.";
      stringArray0[1] = "6,%.";
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(127);
      vector0.add(integer0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "6,%.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("N~(19", "`)w4?SdGW}4H]4");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "N~(19";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[1] = "`)w4?SdGW}4H]4";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processArchive(improvedFile0, "N~(19");
      assertEquals(0L, improvedFile0.getUsableSpace());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5366777855438347
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "Xz?~erK^EO";
      ImprovedFile improvedFile0 = new ImprovedFile("Xz?~erK^EO", "Xz?~erK^EO");
      improvedFile0.deleteOnExit();
      System.setCurrentTimeMillis((-37L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Xz?~erK^EO";
      stringArray0[1] = "Xz?~erK^EO";
      stringArray0[2] = "Xz?~erK^EO";
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.haveSlowResults = false;
      archiveScanner0.filesNotIncluded = vector0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      vector0.add("!");
      DirectoryScanner.matchPath("!", "Xz?~erK^EO");
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesNotIncluded;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.dirsExcluded = archiveScanner1.dirsNotIncluded;
      System.setCurrentTimeMillis(archiveScanner1.ARCHIVE);
      vector0.setSize(archiveScanner1.ARCHIVE);
      long long0 = (-3615L);
      System.setCurrentTimeMillis(long0);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      improvedFile0.createTempDir();
      String string1 = "jar.jr";
      archiveScanner1.scandir(improvedFile0, string1, boolean0);
      assertTrue(improvedFile0.isAbsolute());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/uQDH/tempdir1");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte) (-97);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Failed to create directory, ");
      ImprovedFile improvedFile0 = new ImprovedFile("Failed to create directory, ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";,c}-z>4>t(9");
      MockFile.createTempFile("#m#tUAIt|40>Zc_{7T", "^F|v", (File) improvedFile0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.createTempDir();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ";,c}-z>4>t(9", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile2);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile4);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "Fb(4};UK jar.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      FileSystemHandling.createFolder(evoSuiteFile4);
      stringArray0[0] = "6,%.";
      stringArray0[1] = "6,%.";
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(127);
      vector0.add(integer0);
      archiveScanner0.dirsIncluded = vector0;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "6,%.", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/Fb(4};UK jar.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "3cN(X,}K+RoKpom^~W";
      ImprovedFile improvedFile0 = new ImprovedFile("3cN(X,}K+RoKpom^~W", "3cN(X,}K+RoKpom^~W");
      improvedFile0.deleteOnExit();
      System.setCurrentTimeMillis((-37L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir("3cN(X,}K+RoKpom^~W");
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<String> vector0 = new Vector<String>();
      boolean boolean0 = false;
      archiveScanner0.haveSlowResults = boolean0;
      archiveScanner0.filesNotIncluded = vector0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      String string1 = "-0H^HSQZ)|3L";
      vector0.add(string1);
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesNotIncluded;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.couldHoldIncluded(string0);
      archiveScanner0.dirsExcluded = archiveScanner1.dirsNotIncluded;
      Vector<String> vector1 = new Vector<String>();
      vector1.add(string0);
      archiveScanner1.filesIncluded = vector1;
      long long0 = 4057L;
      System.setCurrentTimeMillis(long0);
      Locale locale0 = Locale.ROOT;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      vector0.removeAll(set0);
      vector1.removeAll(archiveScanner1.dirsNotIncluded);
      long long1 = 4628L;
      System.setCurrentTimeMillis(long1);
      String string2 = "\"?ss9N#!R0#2}Y`";
      try { 
        archiveScanner1.processDirectory(improvedFile0, string2, archiveScanner0.haveSlowResults);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/3cN(X,}K+RoKpom^~W/3cN(X,}K+RoKpom^~W
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("5knx=bG;>`?^'\"LVu.P", "5knx=bG;>`?^'\"LVu.P");
      improvedFile0.deleteOnExit();
      System.setCurrentTimeMillis((-37L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      String string0 = ", before creating temp directory with prefix .jar";
      archiveScanner0.setBasedir(", before creating temp directory with prefix .jar");
      stringArray0[0] = "5knx=bG;>`?^'\"LVu.P";
      stringArray0[1] = "5knx=bG;>`?^'\"LVu.P";
      stringArray0[2] = "5knx=bG;>`?^'\"LVu.P";
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.haveSlowResults = false;
      archiveScanner0.filesNotIncluded = vector0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.couldHoldIncluded("5knx=bG;>`?^'\"LVu.P");
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesNotIncluded;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
      // Undeclared exception!
      try { 
        archiveScanner1.processArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[21];
      stringArray0[0] = "";
      stringArray0[1] = ".ZIP";
      stringArray0[4] = "";
      stringArray0[3] = "";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[4] = "";
      String[] stringArray1 = new String[1];
      stringArray0[20] = ".ZIP";
      archiveScanner0.includes = stringArray1;
      stringArray0[5] = ".ZIP";
      stringArray0[6] = "";
      stringArray0[6] = ".ZIP";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[21];
      stringArray0[0] = "{Q";
      stringArray0[1] = "l2ps9\"S`j*]N*#v.jar";
      stringArray0[4] = "{Q";
      stringArray0[3] = "{Q";
      archiveScanner0.excludes = stringArray0;
      stringArray0[4] = "{Q";
      String[] stringArray1 = new String[1];
      stringArray0[20] = "l2ps9\"S`j*]N*#v.jar";
      archiveScanner0.includes = stringArray1;
      stringArray0[5] = "{Q";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[6] = "{Q";
      stringArray0[8] = "{Q";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("{Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "EFb(4};UK .jar.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile3, true, true, true);
      stringArray0[0] = "6,%.";
      stringArray0[1] = "6,%.";
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(127);
      vector0.add(integer0);
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, "6,%.", false);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[10];
      byteArray0[9] = (byte) (-97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte) (-97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/uQDH");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "EFb(4}2UK .jUr.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6,%.";
      archiveScanner0.excludes = stringArray0;
      stringArray0[1] = "6,%.";
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "6,%.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("N~(19", "Xz?~erK^EO");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.processArchive(improvedFile0, "`^Te=GR");
      assertEquals(0L, improvedFile0.length());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8950056533107491
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "5knx=bG;>`?^'\"LVu.P";
      ImprovedFile improvedFile0 = new ImprovedFile("5knx=bG;>`?^'\"LVu.P", "5knx=bG;>`?^'\"LVu.P");
      improvedFile0.deleteOnExit();
      System.setCurrentTimeMillis((-37L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      archiveScanner0.setBasedir(", before creating temp directory with prefix .jar");
      stringArray0[0] = "5knx=bG;>`?^'\"LVu.P";
      stringArray0[1] = "5knx=bG;>`?^'\"LVu.P";
      stringArray0[2] = "5knx=bG;>`?^'\"LVu.P";
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.haveSlowResults = false;
      archiveScanner0.filesNotIncluded = vector0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      vector0.add("-0H^HSQZ)|3L");
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesNotIncluded;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = archiveScanner0.couldHoldIncluded(stringArray0[2]);
      archiveScanner0.dirsExcluded = archiveScanner1.dirsNotIncluded;
      long long0 = 1L;
      Vector<String> vector1 = new Vector<String>();
      boolean boolean1 = vector1.add(string0);
      archiveScanner1.filesIncluded = vector1;
      System.setCurrentTimeMillis(long0);
      vector0.removeAll(archiveScanner1.dirsNotIncluded);
      long long1 = (-3615L);
      System.setCurrentTimeMillis(long1);
      String string1 = "2}gBU0v{";
      archiveScanner1.processDirectory(improvedFile0, string1, boolean0);
      archiveScanner1.setIncludes(stringArray0);
      archiveScanner1.addDefaultExcludes();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, stringArray0[1], boolean1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "5knx=bG;>`?^'\"LVu.P";
      ImprovedFile improvedFile0 = new ImprovedFile("5knx=bG;>`?^'\"LVu.P", "5knx=bG;>`?^'\"LVu.P");
      improvedFile0.deleteOnExit();
      System.setCurrentTimeMillis((-37L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      archiveScanner0.setBasedir(", before creating temp directory with prefix .jar");
      stringArray0[0] = "5knx=bG;>`?^'\"LVu.P";
      stringArray0[1] = "5knx=bG;>`?^'\"LVu.P";
      stringArray0[2] = "5knx=bG;>`?^'\"LVu.P";
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      String string1 = "-0H^HSQZ)|3L";
      vector0.add("-0H^HSQZ)|3L");
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesNotIncluded;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.couldHoldIncluded(stringArray0[2]);
      archiveScanner0.dirsExcluded = archiveScanner1.dirsNotIncluded;
      long long0 = 1L;
      Vector<String> vector1 = new Vector<String>();
      vector1.add(string0);
      archiveScanner1.filesIncluded = vector1;
      System.setCurrentTimeMillis(long0);
      vector0.removeAll(archiveScanner1.dirsNotIncluded);
      long long1 = (-3615L);
      System.setCurrentTimeMillis(long1);
      String string2 = "";
      archiveScanner0.processArchive(improvedFile0, string2);
      archiveScanner0.processFile(string1);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("N~(19", "N~(19");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "N~(19";
      archiveScanner0.addDefaultExcludes();
      improvedFile0.deleteAll();
      stringArray0[4] = "N~(19";
      Vector<Integer> vector0 = new Vector<Integer>();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.includes = stringArray0;
      try { 
        archiveScanner0.processArchive(improvedFile0, "N~(19");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/N~(19/N~(19
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "f-MQ";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("f-MQ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[21];
      stringArray0[0] = "{Q";
      stringArray0[1] = ".P";
      stringArray0[4] = "{Q";
      stringArray0[3] = "{Q";
      archiveScanner0.excludes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[4] = "{Q";
      String[] stringArray1 = new String[1];
      stringArray0[20] = ".P";
      archiveScanner0.includes = stringArray1;
      stringArray0[5] = "{Q";
      stringArray0[6] = "{Q";
      stringArray0[6] = "{Q";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processFile("{Q");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "{Q";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("{Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "3cN(X,}K+RoKpom^~W";
      ImprovedFile improvedFile0 = new ImprovedFile("3cN(X,}K+RoKpom^~W", "3cN(X,}K+RoKpom^~W");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "3cN(X,}K+RoKpom^~W", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "3cN(X,}K+RoKpom^~W0#m#tUAt|40hZct{70^C|v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.ENGLISH;
      Locale locale2 = Locale.GERMAN;
      linkedList0.add(locale0);
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.ITALIAN;
      locale3.getDisplayScript(locale4);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      locale3.getDisplayName();
      locale3.getDisplayLanguage();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.spliterator();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null);
      Locale locale5 = Locale.forLanguageTag("Chinese");
      Vector<String> vector0 = new Vector<String>();
      vector0.retainAll(list0);
      locale5.getDisplayScript();
      Locale locale6 = Locale.FRANCE;
      linkedList3.spliterator();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale locale7 = Locale.forLanguageTag("");
      Locale locale8 = Locale.forLanguageTag("Chinese");
      locale7.getDisplayCountry(locale8);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("Chinese");
      linkedList6.add(locale_LanguageRange0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList6, (Collection<String>) vector0);
      Locale locale9 = Locale.TRADITIONAL_CHINESE;
      locale9.getUnicodeLocaleAttributes();
      locale5.getUnicodeLocaleAttributes();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.TAIWAN;
      Locale locale2 = Locale.KOREAN;
      linkedList0.add(locale0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale3 = Locale.ITALIAN;
      locale1.getDisplayName();
      locale0.getDisplayLanguage();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.spliterator();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null);
      Locale locale4 = Locale.forLanguageTag("French");
      Vector<String> vector0 = new Vector<String>();
      vector0.retainAll(list0);
      locale4.getDisplayScript();
      Locale locale5 = Locale.FRANCE;
      linkedList3.spliterator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.forLanguageTag("French");
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("French");
      linkedList5.add(locale_LanguageRange0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList5, (Collection<String>) vector0);
      Locale locale6 = Locale.SIMPLIFIED_CHINESE;
      locale4.getUnicodeLocaleAttributes();
      locale4.getUnicodeLocaleAttributes();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "com.lts.swing.menu.MenuBuilder");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList1, (Collection<Locale>) null);
      Locale locale1 = Locale.CANADA;
      linkedList0.add(locale0);
      Locale locale2 = Locale.JAPANESE;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale3 = Locale.ITALIAN;
      locale2.getDisplayScript(locale3);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      locale2.getDisplayName();
      locale2.getDisplayLanguage();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.spliterator();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      Locale locale4 = Locale.forLanguageTag("Japanese");
      Vector<String> vector0 = new Vector<String>();
      vector0.retainAll(list0);
      locale4.getDisplayScript();
      Locale locale5 = Locale.TAIWAN;
      linkedList3.spliterator();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale6 = Locale.forLanguageTag("");
      locale6.getDisplayCountry(locale4);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("Japanese");
      linkedList5.add(locale_LanguageRange0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList5, (Collection<String>) vector0);
      Locale locale7 = Locale.CANADA;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleAttributes();
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      System.setCurrentTimeMillis((-37L));
      Vector<String> vector0 = new Vector<String>();
      vector0.add("-0H^HSQZ)|3L");
      Vector<String> vector1 = new Vector<String>();
      vector1.add("3cN(X,}K+RoKpom^~W");
      System.setCurrentTimeMillis(4057L);
      Locale locale0 = Locale.ROOT;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      vector0.removeAll(set0);
      System.setCurrentTimeMillis(4628L);
      System.setCurrentTimeMillis((-2790L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("hB8e{obB");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList1, (Collection<Locale>) null);
      Locale locale1 = Locale.CANADA;
      linkedList0.add(locale0);
      Locale locale2 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale3 = Locale.ITALIAN;
      locale2.getDisplayScript(locale3);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      locale2.getDisplayName();
      locale2.getDisplayLanguage();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.spliterator();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      Vector<String> vector0 = new Vector<String>();
      vector0.retainAll(list0);
      locale4.getDisplayScript();
      Locale locale5 = Locale.TAIWAN;
      linkedList3.spliterator();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale6 = Locale.forLanguageTag("bs@");
      locale6.getDisplayCountry(locale4);
      vector0.retainAll(linkedList2);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      List<String> list3 = new LinkedList<String>();
      Locale locale7 = Locale.CANADA;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleAttributes();
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray0 = new byte[26];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[10];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("SgL#uK46)L`*4b<;.", "com.lts.application.errors.properties");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.CANADA;
      linkedList0.add(locale0);
      Locale locale2 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale3 = Locale.US;
      locale2.getDisplayScript(locale3);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      locale2.getDisplayName();
      locale2.getDisplayLanguage();
      Predicate.isEqual((Object) locale2);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.spliterator();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0);
      Locale locale4 = Locale.GERMANY;
      Vector<String> vector0 = new Vector<String>();
      vector0.retainAll(list0);
      locale4.getDisplayScript();
      Locale locale5 = Locale.KOREA;
      linkedList2.spliterator();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale locale6 = Locale.forLanguageTag("b@");
      locale6.getDisplayCountry(locale4);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList4, (Collection<String>) vector0);
      Locale locale7 = Locale.CANADA;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleAttributes();
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "Dm/l2ps9\"S`j*]N\\*#v";
      ImprovedFile improvedFile0 = new ImprovedFile("Dm/l2ps9\"S`j*]N*#v", "Dm/l2ps9\"S`j*]N*#v");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("#m#tUAt|40hZct{7T0^C|v", ", before creating temp directory with prefix ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, ", in preparation to write to archive, ", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/#m#tUAt|40hZct{7T0^C|v/, before creating temp directory with prefix 
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }
}
