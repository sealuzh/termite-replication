/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 23:11:23 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(831);
      Integer integer1 = new Integer(831);
      Integer integer2 = new Integer(831);
      linkedList0.add(integer2);
      Integer integer3 = new Integer(765);
      linkedList0.add(integer3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      MockThrowable mockThrowable0 = new MockThrowable("~2/!9qd$!^0;9c9xlu");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[0];
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = null;
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, (String) null);
      messageFormatter0.myLastException = (Throwable) applicationException0;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale locale0 = Locale.CHINESE;
      messageFormatter0.getLastException();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) messageFormatter0.myLastException;
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) messageFormatter0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      String string1 = "b49k6w(r\\\\qWb#Z";
      Locale.forLanguageTag("b49k6w(r\\qWb#Z");
      String string2 = "";
      Locale locale1 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        ResourceBundle.Control.getNoFallbackControl(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle$Control", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = object0;
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "lV\"){*9c<!";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", object0, object1, (Object) "Could%not fin< anyresource bundle give names: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9456645463488123
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(724);
      pipedInputStream0.mark(2);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("L!Z6tN`&.Qd");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      MessageFormatter messageFormatter2 = new MessageFormatter();
      messageFormatter0.formatMessage("L!Z6tN`&.Qd", messageFormatter2.DEFAULT_BUNDLE_PATH);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      List list0 = new LinkedList<String>();
      messageFormatter1.formatMessage("9fCTuC~", (Object[]) messageFormatter2.DEFAULT_BUNDLE_PATH, (ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter1.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) "5%Y.,aF";
      objectArray0[2] = (Object) messageFormatter0;
      StringReader stringReader0 = new StringReader("5%Y.,aF");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("5%Y.,aF", objectArray0, (ResourceBundle) propertyResourceBundle0);
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      assertNotNull(resourceBundle_Control0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J;");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      propertyResourceBundle0.containsKey("J;");
      ResourceBundle.clearCache();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      try { 
        messageFormatter0.formatMessage("resources.messages.standard", messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      StringReader stringReader0 = new StringReader("}`>_");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("16+>sI{$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "lV\"){*9!";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", object5, (Object) messageFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "Could%not fin< anyresource bundle give names: ";
      String string1 = "lV\"){*9!";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("lV\"){*9!", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      ResourceBundle resourceBundle0 = null;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "Could%not fin< anyresource bundle give names: ";
      String string1 = "lV\"){*9!";
      Object[] objectArray1 = new Object[8];
      objectArray1[0] = (Object) "Could%not fin< anyresource bundle give names: ";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("Could%not fin< anyresource bundle give names: ", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      MockThrowable mockThrowable0 = new MockThrowable("");
      MockThrowable mockThrowable1 = new MockThrowable("ABhN4[", (Throwable) null);
      Object object0 = new Object();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      ApplicationException applicationException0 = new ApplicationException("<:\"7,1[", object0, mockThrowable1);
      linkedList0.add(applicationException0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.lts.application.ApplicationException cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "Could%not fin< anyresource bundle give names: ";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("lV\"){*9!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      StringReader stringReader0 = new StringReader("");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("16+>sI{$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(1775);
      Integer integer1 = new Integer(1775);
      Integer integer2 = new Integer((-1));
      Integer integer3 = new Integer(1775);
      Integer integer4 = new Integer(155);
      Integer integer5 = new Integer(1775);
      Integer integer6 = new Integer((-1));
      Integer integer7 = new Integer((-1));
      Integer integer8 = new Integer(1775);
      Integer integer9 = new Integer((-1));
      Integer integer10 = new Integer(0);
      Integer integer11 = new Integer(0);
      Integer integer12 = new Integer(2);
      Integer integer13 = new Integer((-2605));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError((String) null, (Throwable) null);
      linkedList0.add(messageFormatter_LoadBundleError0);
      messageFormatter0.createLoadException(linkedList0);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      // Undeclared exception!
      try { 
        ResourceBundle.getBundle("}");
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name }, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate3.or(predicate0);
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate1.or(predicate4);
      Predicate<Object> predicate8 = predicate7.or(predicate4);
      predicate0.or(predicate5);
      Predicate<Object> predicate9 = predicate0.and(predicate0);
      predicate8.or(predicate0);
      Predicate<Object> predicate10 = predicate7.or(predicate3);
      Predicate<Object> predicate11 = predicate10.or(predicate1);
      Predicate<Object> predicate12 = predicate8.or(predicate1);
      predicate8.test(predicate3);
      Predicate<Object> predicate13 = predicate4.negate();
      Predicate<Object> predicate14 = predicate0.or(predicate13);
      predicate2.or(predicate12);
      predicate11.and(predicate14);
      predicate4.and(predicate6);
      predicate7.negate();
      Predicate<Object> predicate15 = predicate4.and(predicate14);
      predicate15.negate();
      predicate0.negate();
      predicate4.and(predicate2);
      predicate9.or(predicate15);
      predicate7.and(predicate8);
      predicate12.and(predicate10);
      predicate0.negate();
      predicate3.and(predicate0);
      predicate0.and(predicate4);
      Predicate<Object> predicate16 = predicate11.and(predicate8);
      predicate16.negate();
      predicate9.negate();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = new Locale("s");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "s");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate0.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate2.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      predicate4.or(predicate0);
      Predicate<Object> predicate9 = predicate8.or(predicate6);
      predicate9.negate();
      predicate0.test(locale0);
      Predicate<Object> predicate10 = predicate1.negate();
      Predicate<Object> predicate11 = predicate9.and(predicate0);
      Predicate<Object> predicate12 = predicate7.and(predicate0);
      predicate5.and(predicate6);
      Predicate<Object> predicate13 = predicate3.negate();
      Predicate<Object> predicate14 = predicate9.and(predicate2);
      predicate10.and(predicate14);
      predicate9.or(predicate12);
      Predicate<Object> predicate15 = predicate2.and(predicate11);
      predicate5.negate();
      predicate15.and(predicate3);
      predicate15.or(predicate13);
      predicate12.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale1 = Locale.PRC;
      ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0, (List<String>) linkedList0, locale1, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      linkedList0.add(integer1);
      Integer integer2 = new Integer(849);
      Integer integer3 = new Integer((-1717986916));
      Integer integer4 = new Integer((-2013265917));
      Object[] objectArray0 = null;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("p");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("L:q/xSb~^I+!Aw-dl", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      try { 
        messageFormatter0.formatMessage("p", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-17);
      pipedOutputStream1.write(2);
      pipedInputStream0.read();
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)0;
      byteArray0[8] = (byte) (-112);
      pipedOutputStream1.write(byteArray0);
      pipedOutputStream1.write((int) (byte) (-20));
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream0.skip((byte)0);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedInputStream0.mark(2);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      pipedInputStream1.mark((-1));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream(pipedInputStream2);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      pipedOutputStream6.close();
      pipedOutputStream1.close();
      pipedOutputStream6.flush();
      PipedOutputStream pipedOutputStream7 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream8 = new PipedOutputStream();
      pipedOutputStream8.close();
      pipedOutputStream3.flush();
      PipedOutputStream pipedOutputStream9 = new PipedOutputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.markSupported();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.mark((-1528));
      pipedInputStream1.close();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte) (-35);
      byteArray0[4] = (byte)55;
      pipedOutputStream0.write(byteArray0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream(pipedInputStream1);
      pipedOutputStream2.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream1);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(1760);
      Integer integer1 = new Integer((-2926));
      Integer integer2 = new Integer((-6));
      Integer integer3 = new Integer((-2926));
      Integer integer4 = new Integer((-6));
      Integer integer5 = new Integer((-2105376123));
      Integer integer6 = new Integer(1760);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "%:S`sre6R";
      objectArray0[1] = (Object) "%:S`sre6R";
      objectArray0[2] = (Object) "%:S`sre6R";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "%:S`sre6R";
      objectArray0[5] = (Object) "%:S`sre6R";
      objectArray0[6] = (Object) "%:S`sre6R";
      objectArray0[7] = (Object) "%:S`sre6R";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("%:S`sre6R", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("You have unsaved changes.  Save them now?");
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "java.class, java.properties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources("P[DU", (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.getLastException();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("resources.messages.standard", "resources.messages.standard");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // resources.messages.standard
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("6A7cf&?p?Qe");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("r-.", applicationException0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringWriter stringWriter0 = new StringWriter();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) "l]M";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "3Z p";
      objectArray0[4] = (Object) stringWriter0;
      objectArray0[5] = (Object) "3Z p";
      objectArray0[6] = (Object) "l]M";
      try { 
        messageFormatter0.getMessage("l]M", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(1760);
      Integer integer1 = new Integer((-6));
      Integer integer2 = new Integer((-2926));
      Integer integer3 = new Integer((-6));
      Integer integer4 = new Integer(1760);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      linkedList1.clone();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      String string0 = messageFormatter0.listToString(list1);
      assertEquals("", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer((-2335));
      Integer integer1 = new Integer((-2335));
      Integer integer2 = new Integer((-2939));
      Integer integer3 = new Integer(9);
      Integer integer4 = new Integer((-2939));
      Integer integer5 = new Integer(1083);
      Integer integer6 = new Integer(1083);
      Integer integer7 = new Integer((-2335));
      Integer integer8 = new Integer((-2939));
      Integer integer9 = new Integer(1314);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      assertFalse(messageFormatter1.equals((Object)messageFormatter0));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(bufferedInputStream0, sequenceInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("", object0, (Object) sequenceInputStream1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)56;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("gZzSci83c;b~:cc", object0, (Object) byteArrayInputStream0, (Object) sequenceInputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer((-2335));
      Integer integer1 = new Integer((-2335));
      Integer integer2 = new Integer((-2939));
      Integer integer3 = new Integer(9);
      Integer integer4 = new Integer((-2939));
      Integer integer5 = new Integer(1083);
      Integer integer6 = new Integer(1083);
      Integer integer7 = new Integer((-1879));
      Integer integer8 = new Integer(1083);
      Integer integer9 = new Integer(3);
      Integer integer10 = new Integer((-2939));
      Integer integer11 = new Integer(3);
      Integer integer12 = new Integer(517);
      Integer integer13 = new Integer(517);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer14 = new Integer((-1932735304));
      linkedList0.addFirst(integer3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer(1760);
      Integer integer1 = new Integer((-2926));
      Integer integer2 = new Integer(1);
      Integer integer3 = new Integer((-2926));
      Integer integer4 = new Integer(1);
      Integer integer5 = new Integer((-2105376123));
      Integer integer6 = new Integer(1760);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("FK7L':C~JAF?'[m_c#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(true);
      messageFormatter0.listResources("&", classLoader0);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("&");
      MockPrintWriter mockPrintWriter2 = null;
      try {
        mockPrintWriter2 = new MockPrintWriter("&", "M*j(cvs5b~M");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // M*j(cvs5b~M
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = new LinkedList<PropertyResourceBundle>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      try { 
        messageFormatter0.initializeResourceBundle((List) list0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8742830984023096
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-7);
      pipedOutputStream1.write(2);
      pipedInputStream0.read();
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)0;
      byteArray0[8] = (byte) (-112);
      pipedOutputStream1.write(byteArray0);
      pipedInputStream0.markSupported();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream0.skip((byte)0);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream(pipedInputStream1);
      pipedInputStream1.mark((-1));
      pipedInputStream2.skip(0L);
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream(pipedInputStream2);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      pipedOutputStream6.close();
      PipedOutputStream pipedOutputStream7 = new PipedOutputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream(pipedOutputStream4);
      pipedInputStream1.mark((-548));
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Locale locale0 = Locale.ENGLISH;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "# ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "# ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("~!a[q@Va", messageFormatter0, "~!a[q@Va");
      MockThrowable mockThrowable0 = new MockThrowable("~gn|YgfhT.)yk", applicationException0);
      applicationException0.getMessage();
      ApplicationException applicationException1 = new ApplicationException((Throwable) mockThrowable0, "Cizbf?\"$'VC;Uz-", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("xH7Qu=~MzaOz1c", messageFormatter0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-7);
      pipedOutputStream1.write(2);
      pipedInputStream0.read();
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)0;
      byteArray0[8] = (byte) (-112);
      pipedOutputStream1.write(byteArray0);
      pipedInputStream0.markSupported();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream0.skip((byte)0);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedInputStream0.mark(2);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      pipedInputStream1.mark((-1));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream(pipedInputStream2);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      pipedOutputStream6.close();
      pipedOutputStream1.close();
      pipedOutputStream6.flush();
      PipedOutputStream pipedOutputStream7 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream8 = new PipedOutputStream();
      pipedOutputStream8.close();
      pipedOutputStream3.flush();
      PipedOutputStream pipedOutputStream9 = new PipedOutputStream();
      pipedInputStream0.mark(2);
      messageFormatter0.temp();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte) (-67);
      byteArray0[4] = (byte) (-70);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte) (-67);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-112);
      pipedOutputStream1.write(byteArray0);
      pipedInputStream0.markSupported();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedInputStream1.mark((byte) (-67));
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      pipedOutputStream1.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream3);
      pipedInputStream0.mark((byte) (-35));
      messageFormatter0.temp();
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      List list1 = messageFormatter0.loadCriticalBundles();
      assertTrue(list1.equals((Object)list0));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.CHINESE;
      locale1.getDisplayLanguage(locale0);
      Locale locale2 = Locale.FRENCH;
      Set<String> set0 = locale2.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>(linkedList3);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList4, (Collection<String>) set0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) list0, locale_FilteringMode0);
      linkedList3.add((Locale.LanguageRange) null);
      Locale locale3 = Locale.JAPANESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      linkedList4.addLast((Locale.LanguageRange) null);
      Locale.setDefault(locale_Category0, locale1);
      Locale locale4 = Locale.ROOT;
      List list1 = MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      assertFalse(list1.isEmpty());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("resources.messages.standard", "aGj8}qY\"MFb?O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("s");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "s");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate3.or(predicate2);
      predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate2.or(predicate5);
      Predicate<Object> predicate8 = predicate7.or(predicate5);
      predicate0.and(predicate1);
      predicate8.or(predicate1);
      Predicate<Object> predicate9 = predicate7.or(predicate4);
      predicate8.negate();
      Predicate<Object> predicate10 = predicate9.or(predicate2);
      Predicate<Object> predicate11 = predicate8.or(predicate2);
      predicate5.negate();
      Predicate<Object> predicate12 = predicate6.negate();
      Predicate<Object> predicate13 = predicate1.or(predicate12);
      predicate3.or(predicate11);
      predicate5.and(predicate6);
      predicate7.negate();
      Predicate<Object> predicate14 = predicate5.and(predicate13);
      predicate14.negate();
      predicate5.and(predicate3);
      predicate12.or(predicate14);
      predicate7.and(predicate8);
      predicate11.and(predicate9);
      predicate1.negate();
      predicate4.and(predicate0);
      predicate0.and(predicate5);
      predicate10.and(predicate8);
      predicate6.or(predicate4);
      predicate12.negate();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: s
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
