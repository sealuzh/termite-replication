/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 23:45:23 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.Locale;
import java.util.Set;
import java.util.function.Predicate;
import java.util.stream.Stream;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.8347244283467834
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setLabel("~=lG`");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.getOntologyTerms();
      User user1 = new User();
      user1.setAffiliation("~=lG`");
      user1.setPassword("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setAddressLine1("variable.name.label");
      User user2 = new User();
      User user3 = new User();
      user3.setCity("");
      user1.setUserID((String) null);
      User user4 = new User("~=lG`", "2iD4&b{/ '(_]&Ze`r");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("variable.name.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable2);
      assertEquals("~=lG`", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0850486830727526
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      derivedVariable0.setCleaningStatus("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      derivedVariable0.getForm();
      User user0 = new User("s=o9", "UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAlias();
      derivedVariable0.setIdentifier(946);
      user0.setPostCode("s=o9");
      derivedVariable0.addSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      user0.setLastName("%Z,-L%I)7M2vrummV");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCategory();
      rawVariable0.setQuestionNumber("s=o9");
      derivedVariable0.setAlternativeVariable((Variable) null);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable(rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9700712845710653
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("^");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("^");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setLabel("^");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("qc)WOk9uKk`>M:");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      // Undeclared exception!
      try { 
        arrayList0.listIterator((-169));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -169
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.959595003257237
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setAvailability("variable.category.label");
      rawVariable0.setForm("UNABLE_TO_GET_STUDY_YEARS");
      User user0 = new User("general.fieldValue.unknown", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.clone();
      rawVariable0.setLabel((String) null);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getValueLabels();
      rawVariable0.getLabel();
      rawVariable0.isCleaned();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCleaned();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getIdentifier();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertTrue(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("OcB8o>SkQ[`7x@OQ/^.");
      rawVariable0.questionNumber = "variable.alternativeVariable.label";
      rawVariable0.getQuestionNumber();
      rawVariable0.getCategory();
      assertEquals("variable.alternativeVariable.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9986330663747731
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setAddressLine1("variable.notes.label");
      user1.setUserID("UNABLE_TO_GET_STUDY_YEARS");
      user0.setPassword("}Atnkwn");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      user1.setAddressLine1((String) null);
      User user2 = new User();
      User user3 = new User("Sk!@=\" >.^'|DT'g", "variable.notes.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue((String) null);
      Variable variable0 = rawVariable1.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1602716730041522
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("}AUnkown");
      ontologyTerm0.setTerm("macaw.system.MacawException");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("general.fieldValue.blank");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setStatus("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.iterator();
      arrayList1.add(supportingDocument0);
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      arrayList1.containsAll(arrayList0);
      supportingDocument2.setIdentifier(57);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertEquals("}AUnkown", derivedVariable0.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      supportingDocument2.setFileName((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.setIdentifier((-1327));
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument5);
      assertFalse(boolean0);
      
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setAlias("variable.name.label");
      derivedVariable0.getAlias();
      derivedVariable0.getName();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getSourceVariables();
      assertEquals("variable.name.label", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.808226851330753
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.codeBookNumber.label");
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword("3x^;zpIH,.o!Kpu}");
      derivedVariable0.notes = "variable.codeBookNumber.label";
      User user1 = new User("zZ *F%`y71xL", "UNABLE_TO_GET_ORIGINAL_USER");
      user1.setLastName("UNABLE_TO_ASSOCIATE_SOURCE_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User.detectFieldChanges(user1, user0, user0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.isNewRecord();
      derivedVariable0.getLabel();
      derivedVariable0.getNotes();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getNotes());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7934622163474203
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(121);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals("121", derivedVariable1.getDisplayItemIdentifier());
      
      rawVariable0.getCleaningDescription();
      derivedVariable2.getAlternativeVariable();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User("general.fieldValue.blank", "KlU0JmhHp=m>m~aT)");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setAddressLine1("KlU0JmhHp=m>m~aT)");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("q.mPz F");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "B+f/u$_S(iFDr}#-?f";
      derivedVariable1.getFilePath();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      derivedVariable0.setFilePath("$B");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      assertEquals("$B", derivedVariable0.getFilePath());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable2.getForm();
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAlias("gwF8%k_&L}");
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.91744264088867
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      User user0 = new User("KlU0JmhHp=m>m~aT)", "KlU0JmhHp=m>m~aT)");
      user0.setCity("KlU0JmhHp=m>m~aT)");
      user0.setCity("KlU0JmhHp=m>m~aT)");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("^");
      rawVariable0.setCategory("^");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("^", rawVariable0.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      derivedVariable1.getFilePath();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = null;
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.051681985465941
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(3176);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      User user0 = new User("variable.questionNumber.label", "variable.alias.label");
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.setValue("variable.alias.label");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList1.contains(ontologyTerm0));
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.setValue("macaw.businessLayer.ValueLabel");
      rawVariable1.columnStart = "user.userID.saveChanges";
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      String string0 = rawVariable1.getFilePath();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", string0);
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("user.addressLine2.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.columnEnd = "user.addressLine2.label";
      User user0 = new User("INVALID_ALIAS_FILE_PATH", "INVALID_ALIAS_FILE_PATH");
      user0.setIdentifier((-2867));
      supportingDocument0.setTitle("=QkNBOc_(Hz.@sa");
      user0.setCity("variable.form.label");
      supportingDocument0.getDisplayName();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getForm();
      derivedVariable0.notes = "";
      derivedVariable0.setYear("=QkNBOc_(Hz.@sa");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setIdentifier(2147483645);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getName();
      RawVariable rawVariable0 = null;
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.0775103640613946
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "*}n96O";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.notes = "*}n96O";
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      arrayList1.add((Variable) rawVariable1);
      derivedVariable0.addSupportingDocuments(arrayList0);
      arrayList1.add((Variable) derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable0.getCleaningDescription();
      rawVariable0.getCodeBookNumber();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable0.getIdentifier();
      rawVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable1.getName();
      derivedVariable0.getOntologyTerms();
      System.setCurrentTimeMillis((-1519L));
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "";
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCodeBookNumber("variable.name.label");
      String string0 = "";
      derivedVariable0.setNotes("variable.name.label");
      derivedVariable0.setAvailability("");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAvailability();
      derivedVariable0.isCleaned();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setQuestionNumber("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER", "D?");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setOntologyName("l]Nm-Yy_Q!");
      try { 
        User.checkValidEmail("variable.name.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"variable.name.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.notes = "`O";
      valueLabel1.setValue("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable1 = new RawVariable();
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.6571975905778524
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.parallelStream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList1.add(ontologyTerm8);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      arrayList2.add(ontologyTerm7);
      derivedVariable0.getOntologyTerms();
      arrayList0.parallelStream();
      assertFalse(arrayList0.contains(ontologyTerm0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      String string0 = "variable.alias.label";
      rawVariable1.setAvailability("variable.alias.label");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCleaned();
      derivedVariable0.setForm(".n'<QOmf!8pq^g");
      derivedVariable0.getForm();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals(".n'<QOmf!8pq^g", derivedVariable0.getForm());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.539854387905324
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.897076731555482
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("}Atnkwn");
      Variable.validateFields(derivedVariable0);
      ontologyTerm0.setTerm("macaw.system.MacawException");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.setDescription("~V%77(;suS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      derivedVariable1.createVariableSummary();
      arrayList0.containsAll(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument6);
      derivedVariable0.clone();
      assertEquals("}Atnkwn", derivedVariable0.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.720905729214054
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("");
      derivedVariable0.clone();
      derivedVariable0.setLabel("");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(913);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.parallelStream();
      System.setCurrentTimeMillis(913);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.spliterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel1 = new ValueLabel();
      // Undeclared exception!
      try { 
        derivedVariable1.addValueLabel(valueLabel1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.862885772479412
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.setForm("l]Nm-Yy_Q!");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.codeBookNumber = "Gh{DD}dh)GdM";
      derivedVariable0.setIdentifier((-1627));
      User user0 = new User("E.", "Unknown");
      user0.setCity("variable.isCleaned.saveChanges.changedToNotClean");
      User.detectFieldChanges(user0, user0, user0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      user0.setPassword("l]Nm-Yy_Q!");
      User user1 = new User("E.", "o:WwNp2`w23]E?AN{");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.getAvailability();
      derivedVariable0.getOntologyTerms();
      assertEquals("-1627", derivedVariable0.getDisplayItemIdentifier());
      
      derivedVariable1.getOntologyTerms();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6585173550746726
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = null;
      rawVariable0.form = null;
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable1.removeSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5349043680606425
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=4.0528628912916655
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.setForm("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.label.label");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(false);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable0.setForm("S.@cI0E*=Jd");
      rawVariable0.setNotes("");
      rawVariable0.clone();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getForm();
      rawVariable0.clone();
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9912503649402398
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("variable.alias.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("user.addressLine1.label");
      derivedVariable0.getAvailability();
      ontologyTerm0.setIdentifier(712);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      User user0 = new User("user.addressLine1.label", "?U8rOh'8e2P<vX");
      user0.setCity("Mre%X6$`AxUajz?(");
      user0.setStatus("user.addressLine1.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getName();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.parallelStream();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getDisplayName();
      assertEquals("variable.alias.label", derivedVariable0.getName());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add((OntologyTerm) null);
      arrayList0.parallelStream();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.041110381369436
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("variable.alias.label");
      ontologyTerm0.setTerm("variable.year.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("variable.year.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setStatus("variable.alias.label");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable2.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      Stream<OntologyTerm> stream0 = arrayList2.parallelStream();
      assertNotNull(stream0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.9930832023946157
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.setAvailability("_V'@Y7|");
      User user0 = new User("i@zdfMOyEZ~!wuT", "variable.form.label");
      user0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable1.setQuestionNumber("7I#x@");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.columnEnd = "=d*{Yvo}~";
      derivedVariable1.columnStart = "_V'@Y7|";
      derivedVariable1.createVariableSummary();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getForm();
      derivedVariable1.setCleaningDescription("");
      derivedVariable0.setCleaningStatus("_V'@Y7|");
      derivedVariable0.setForm("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE");
      derivedVariable1.setCleaningDescription("_V'@Y7|");
      derivedVariable0.getColumnStart();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getColumnStart();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getFilePath();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("_V'@Y7|", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User("KlU0JmFHp=m>m~aT)", "]p/OJO@2A");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "m[0 EbO<*S,phM<*g";
      User user1 = new User();
      user0.setUserID("KlU0JmFHp=m>m~aT)");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setAlternativeVariable(rawVariable0);
      user0.setAddressLine1("KlU0JmFHp=m>m~aT)");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.319904429847949
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm0.setIdentifier(131);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      arrayList1.parallelStream();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User("O9hB[_`agA%*", "B");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel1.setValue("mcaw.usinessLayer.ValueLabel");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "+~u}8S=2~,";
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.744580495930726
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      User user0 = new User("", "variable.questionNumber.label");
      user0.setAffiliation("Lhm0Z~@w4=o ic^");
      User.detectFieldChanges(user0, user0, user0);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setYear("p7A2i;JNk`<{5");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable4);
      derivedVariable0.getYear();
      User user2 = new User();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      derivedVariable0.addSourceVariable(derivedVariable2);
      assertEquals("p7A2i;JNk`<{5", derivedVariable0.getYear());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setCounty((String) null);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel1);
      rawVariable0.setColumnEnd("blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setLabel("blank");
      derivedVariable0.getLabel();
      rawVariable0.getCleaningStatus();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4980758620581636
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setIsNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.getOntologyTerms();
      ValueLabel[] valueLabelArray0 = new ValueLabel[8];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[1] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabelArray0[2] = valueLabel2;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabelArray0[3] = valueLabel3;
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabelArray0[4] = valueLabel4;
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabel1.setValue("macaw.businessLayer.ValueLabel");
      valueLabelArray0[5] = valueLabel5;
      ValueLabel valueLabel6 = new ValueLabel();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList1.parallelStream();
      assertEquals(2, arrayList1.size());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = null;
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setYear("}AUnkn/own");
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable1.removeSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8295727673964
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User("general.fieldValue.blank", "KlU0JmhHp=m>m~aT)");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setAddressLine1("KlU0JmhHp=m>m~aT)");
      User user2 = new User();
      user1.setStatus("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = null;
      arrayList0.add((OntologyTerm) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.041110381369436
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("}AUnknown");
      ontologyTerm0.setTerm("macaw.system.MacawException");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("general.fieldValue.blank");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setStatus("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable2.getDisplayName();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      assertEquals(4, arrayList0.size());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.805975801225258
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.codeBookNumber = "}Atnkwn";
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm2);
      ontologyTerm6.setDescription("UNABLE_TO_GET_CATEGORIES");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList1.add(ontologyTerm6);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      Stream<OntologyTerm> stream0 = arrayList3.parallelStream();
      assertNotNull(stream0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Object object0 = derivedVariable0.clone();
      derivedVariable0.setColumnEnd("");
      Predicate.isEqual(object0);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      User user0 = new User("O9hB[_`agA%*", "B");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel1.setValue("mcaw.usinessLayer.ValueLabel");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "B";
      rawVariable0.getFilePath();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      assertEquals("B", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = null;
      rawVariable0.questionNumber = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.6209093416512177
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      supportingDocument2.setFileName((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5053262207700673
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("UNABLE_TO_GET_RAW_VARIABLE");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.getOntologyTerms();
      ValueLabel[] valueLabelArray0 = new ValueLabel[8];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[0] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("UNABLE_TO_GET_RAW_VARIABLE");
      rawVariable1.createVariableSummary();
      assertEquals("UNABLE_TO_GET_RAW_VARIABLE", rawVariable1.getYear());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      boolean boolean0 = derivedVariable2.containsSupportingDocument(supportingDocument5);
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("^");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("^");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.createVariableSummary();
      assertEquals("^", derivedVariable0.getDisplayName());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      supportingDocument0.setDescription("variable.columnEnd.label");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable2.getSupportingDocuments();
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = Locale.ITALY;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      arrayList2.containsAll(set0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      boolean boolean0 = derivedVariable2.containsSupportingDocument(supportingDocument6);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9701754186958174
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("}AUnknown");
      ontologyTerm0.setTerm("}AUnknown");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("general.fieldValue.blank");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes("general.fieldValue.blank");
      User user0 = new User();
      user0.setStatus("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setValue("general.fieldValue.blank");
      ValueLabel valueLabel1 = new ValueLabel();
      User user1 = new User(">06h~D(M\"&{\"'", "i-:a7YR%<+j1'!5");
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.differencesExist(user1, derivedVariable1, valueLabel2, valueLabel2);
      valueLabel1.setValue("`%[moSf#=");
      valueLabel1.setValue("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.hasSameDisplayName(valueLabel0);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.DELETE;
      valueLabel4.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabel5.setValue("}AUnknown");
      assertFalse(valueLabel5.equals((Object)valueLabel2));
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0145466841498587
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      User user0 = new User("variable.questionNumber.label", "variable.questionNumber.label");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      user0.setStatus("variable.questionNumber.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("variable.questionNumber.label", rawVariable0.getColumnEnd());
      
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList2.parallelStream();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.getDisplayName();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList2.add(ontologyTerm5);
      arrayList2.parallelStream();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5918664536051965
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.8232147977919806
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.questionNumber = null;
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.7683162241407686
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.questionNumber = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.83012655185737
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList1);
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      derivedVariable1.getDisplayName();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList2.parallelStream();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.8508755171671347
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      User user0 = new User("", "variable.questionNumber.label");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setYear("p7A2i;JNk`<{5");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable2.removeSupportingDocument(supportingDocument0);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable2.addSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable2.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6635536726984816
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.name.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("variable.name.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable1.getOntologyTerms();
      arrayList2.add(ontologyTerm5);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      arrayList1.parallelStream();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("d9{Y'MfreE/");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription("KlU0JmFHp=m>m~aT)");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument4);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = Locale.ITALY;
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      arrayList1.containsAll(set0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument9);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      User user0 = new User("UP4+9qBOl ;Lj", "blank");
      User user1 = new User("UP4+9qBOl ;Lj", "blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("blank");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("I(", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.setDescription("al}PIGJ&yR2`Q~8DW1");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setAlias("-B 5&kU^LU;");
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      derivedVariable0.getAlias();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.getDisplayItemIdentifier();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("-B 5&kU^LU;", derivedVariable0.getAlias());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.columnStart = "oG6?UP5a%KKUjR";
      rawVariable0.questionNumber = null;
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      User user0 = new User("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", "O9hB[_`agA%*");
      user0.setCounty("O9hB[_`agA%*");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_CREATE_SUPPORTING_DOCUMENT";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", rawVariable0.getCodeBookNumber());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8821103874851657
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      User user0 = new User("general.fieldVa9ue=blank", "KlU0JmFHp=m>m~aT)");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setAddressLine1("mSI");
      user1.setPassword("KlU0JmFHp=m>m~aT)");
      user1.setUserID("general.fieldVa9ue=blank");
      User user2 = new User();
      User user3 = new User("general.fieldVa9ue=blank", "KlU0JmFHp=m>m~aT)");
      rawVariable0.columnStart = null;
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User("general.fieldValue.blank", "KlU0JmhHp=m>m~aT)");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      User user2 = new User();
      user2.setFirstName("variable.codeBookNumber.label");
      rawVariable0.codeBookNumber = "p._u!E";
      User user3 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.notes = null;
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      User user1 = new User();
      User.detectFieldChanges(user0, user1, user0);
      user0.setCounty("^");
      User user2 = new User();
      User.detectFieldChanges(user0, user2, user0);
      user1.setCounty("}ANVUnknown");
      user0.setPhone("variable.questionNumber.label");
      user2.setPhone(":BR2?R*pqpFT2bSds");
      User.detectFieldChanges(user1, user0, user2);
      user1.setStatus("WvlHowO'FW");
      user2.setCounty("5aO&G\"[xFT!8b6");
      user0.setAddressLine1("^");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertTrue(arrayList0.isEmpty());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7353390710828336
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setIsNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.getOntologyTerms();
      ValueLabel[] valueLabelArray0 = new ValueLabel[8];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[1] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabelArray0[2] = valueLabel2;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabelArray0[3] = valueLabel3;
      valueLabel2.setValue("variable.questionNumber.label");
      rawVariable0.setColumnStart("");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertTrue(derivedVariable0.isNewRecord());
      
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7962719295404583
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument2);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument1.setDescription("KMTU0JmhHrZp=m>m~a3)");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument4);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.getSupportingDocuments();
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = Locale.ITALY;
      locale1.getUnicodeLocaleAttributes();
      derivedVariable0.setForm("KMTU0JmhHrZp=m>m~a3)");
      arrayList0.containsAll(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument10);
      assertEquals("KMTU0JmhHrZp=m>m~a3)", derivedVariable0.getForm());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setAddressLine1("KlU0JmFHp=m>m~aT)");
      user1.setUserID("general.fieldVa9ue=blank");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.notes = "variable.name.label";
      user1.setAddressLine1("UNABLE_TO_DELETE_USER");
      User user2 = new User();
      User user3 = new User("general.fieldVa9ue=blank", "KlU0JmFHp=m>m~aT)");
      rawVariable1.setFilePath("p!E9MHJh^h ;8W");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("*FXK");
      rawVariable1.getAlternativeVariable();
      assertEquals("p!E9MHJh^h ;8W", rawVariable1.getFilePath());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.21798344858705
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setUserID("KlU0JmFHp=m>m~aT)");
      rawVariable0.setColumnEnd((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAlternativeVariable(rawVariable1);
      user1.setAddressLine1("UNABLE_TO_DELETE_USER");
      User user2 = new User();
      User user3 = new User("UNABLE_TO_DELETE_USER", "UNABLE_TO_CLEAR_TABLE");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable1, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("general.error.blankField");
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      boolean boolean1 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean1 == boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      supportingDocument2.setFilePath("variable alias.label");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = null;
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable1.removeSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.questionNumber = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList0);
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setUserID("general.fieldVa9ue=blank");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      user1.setAddressLine1("UNABLE_TO_DELETE_USER");
      User user2 = new User();
      User user3 = new User("general.fieldVa9ue=blank", "KlU0JmFHp=m>m~aT)");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel1.setValue("*FXK");
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable1.setAvailability((String) null);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.708665825820528
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setCleaningStatus("nR%Ca[Yv>&'8j{X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setCodeBookNumber((String) null);
      rawVariable0.getAvailability();
      rawVariable1.isCoded();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable1.isCoded();
      assertEquals("nR%Ca[Yv>&'8j{X", rawVariable1.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("variable.isCleaned.saveChanges.changedToNotClean");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable1.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel0.setValue("{|/QJW[NIn7EjLZ'F='");
      assertFalse(valueLabel0.isMissingValue());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.84739645144437
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("}AUnknown");
      ontologyTerm0.setTerm("macaw.system.MacawException");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("general.fieldValue.blank");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setStatus("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      assertEquals("}AUnknown", derivedVariable0.getName());
      
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      derivedVariable2.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable2.setOntologyTerms(arrayList2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable3);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable2.addOntologyTerm(ontologyTerm1);
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable5 = new DerivedVariable();
      DerivedVariable derivedVariable6 = new DerivedVariable();
      derivedVariable2.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable6);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument1.setDescription("KMTU0JmhHrZp=m>m~a3)");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument9);
      assertFalse(boolean0);
      
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5053262207700673
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      derivedVariable1.setCleaningStatus("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_EXISTS", derivedVariable1.getCleaningStatus());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) user0);
      arrayList0.removeIf(predicate0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      boolean boolean1 = derivedVariable2.hasSameDisplayName(rawVariable0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6949398388865458
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable2.getDisplayName();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.parallelStream();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.360380995184394
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setValue("general.fieldVa9ue=blank");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "<AmhY&k:Wto";
      String string0 = rawVariable0.getNotes();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.945040911948867
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel.validateFields(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel1);
      rawVariable0.codeBookNumber = "";
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.ensureCapacity(0);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.removeOntologyTerms(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable1.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setForm("");
      derivedVariable0.setName("");
      arrayList1.add((OntologyTerm) null);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList2.listIterator(0);
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.parallelStream();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel1.setMissingValue(false);
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.setLabel("variable.saveChanges.valueChanged");
      assertEquals("variable.saveChanges.valueChanged", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCategory("o,nCT-}c)r]A|``wz");
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      assertEquals("o,nCT-}c)r]A|``wz", derivedVariable0.getCategory());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("}AUnknown");
      ontologyTerm0.setTerm("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setStatus("general.fieldValue.blank");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      User user0 = new User("O9hB[_`agA%*", "B");
      user0.setCounty("O9hB[_`agA%*");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "qc)WOk9uKk`>M:";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("qc)WOk9uKk`>M:", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "sQ>?QNnJ~z+v+|\u0003\"";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("sQ>?QNnJ~z+v+|\u0003\"", rawVariable0.getQuestionNumber());
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setValue("gwF8%k(&L}");
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.DELETE;
      valueLabel3.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel3.setValue("tM',W8]8");
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "{&qdR`{yae=$,~yngT~";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setValue("user.affiliation.saveChanges");
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel2.setValue("gwF8%k(&L}");
      valueLabel0.setValue("general.fie$dValue.blank");
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel4.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabel4.setValue("tM',W8]8");
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      assertEquals("{&qdR`{yae=$,~yngT~", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.6632462855664722
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "UNABLE_TO_GET_RAW_VARIABLE";
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setYear("UNABLE_TO_GET_RAW_VARIABLE");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_RAW_VARIABLE");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      System.setCurrentTimeMillis(845L);
      rawVariable0.getAlternativeVariable();
      assertEquals("", rawVariable0.getForm());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.7224640077418707
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("MLTGG4~}j~  )Bx\"V|");
      derivedVariable0.setAlias("MLTGG4~}j~  )Bx\"V|");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("MLTGG4~}j~  )Bx\"V|");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("MLTGG4~}j~  )Bx\"V|", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.6256878823154617
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable2.getSupportingDocuments();
      rawVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.setColumnEnd("variable.alias.label");
      derivedVariable0.cloneAttributes(rawVariable1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.7168864158526693
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument2.setDescription((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.notes = null;
      derivedVariable1.removeSupportingDocument(supportingDocument2);
      derivedVariable0.setCleaningDescription((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.6223850771891493
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "o,q/U2^;.~SlY[*WNgE";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      User user0 = new User("o,q/U2^;.~SlY[*WNgE", "o,q/U2^;.~SlY[*WNgE");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("o,q/U2^;.~SlY[*WNgE", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.862885772479412
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      User user0 = new User("UP4+9qBOl ;Lj", "UP4+9qBOl ;Lj");
      User.detectFieldChanges(user0, user0, user0);
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("UP4+9qBOl ;Lj");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      arrayList0.containsAll(arrayList3);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.getSupportingDocuments();
      rawVariable3.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument9);
      assertEquals("UP4+9qBOl ;Lj", derivedVariable0.getCleaningDescription());
      
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "o)^g5G[_y5iA7h";
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setValue("general.fie$dValue.blank");
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.setValue("general.fie$dValue.blank");
      valueLabel2.setValue((String) null);
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel3.hasSameDisplayName(valueLabel1);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel5.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel5.setValue("M4@3#I80ef0/3=]+");
      assertFalse(valueLabel5.equals((Object)valueLabel6));
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9715503473033111
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setAddressLine1("KlU0JmFHp=m>m~aT)");
      user1.setUserID("general.fieldVa9ue=blank");
      user0.setPassword("KlU0JmFHp=m>m~aT)");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      user1.setAddressLine1("T");
      User user2 = new User();
      User user3 = new User("UNABLE_TO_UPDATE_USER", "UNABLE_TO_UPDATE_USER");
      rawVariable0.setIdentifier((-120));
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("KlU0JmFHp=m>m~aT)");
      rawVariable0.getAlternativeVariable();
      assertEquals("-120", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.663136899830553
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setUserID("general.fieldVa9ue=blank");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      user1.setAddressLine1("UNABLE_TO_DELETE_USER");
      User user2 = new User();
      User user3 = new User("general.fieldVa9ue=blank", "KlU0JmFHp=m>m~aT)");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("*FXK");
      rawVariable1.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, (Variable) null);
      assertNull(macawChangeEvent1);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument1.setDescription("KMTU0JmhHrZp=m>m~a3)");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel1.setValue("qNm?RB]_y0b4>t}ci");
      assertEquals("0", valueLabel1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "KMTU0JmhHrZp=m>m~a3)";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }
}
