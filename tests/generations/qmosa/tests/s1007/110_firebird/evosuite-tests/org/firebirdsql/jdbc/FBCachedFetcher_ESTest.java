/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 00:20:28 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9219491070698185
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte) (-47);
      byteArray0[3] = (byte)96;
      databaseParameterBufferImp0.hasArgument((byte)96);
      databaseParameterBufferImp0.addArgument((int) (byte)96, byteArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      linkedList1.add((byte[][]) null);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.setFetchSize((byte)96);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.last();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.relative((-649));
      fBCachedFetcher0.previous();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, fBCachedFetcher0.getRowNum());
      assertEquals(96, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.firebirdsql.jdbc.FBCachedFetcher$1");
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Function<byte[][], Integer> function0 = (Function<byte[][], Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, FBCachedBlobField> function1 = (Function<Object, FBCachedBlobField>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, byte[][]> function2 = (Function<Object, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super Object, ? extends byte[][]>) function2);
      Function<Object, FBCachedBlobField> function3 = unaryOperator1.andThen((Function<? super Object, ? extends FBCachedBlobField>) function1);
      unaryOperator0.andThen((Function<? super byte[][], ? extends FBBlobField>) function3);
      unaryOperator0.apply((byte[][]) null);
      unaryOperator0.andThen((Function<? super byte[][], ? extends Integer>) function0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = (-626);
      int int1 = 1;
      fBCachedFetcher1.relative(1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSType gDSType0 = javaGDSImpl0.getType();
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl(gDSType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.275508648777424
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&dz~ut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2489282199675644
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-47);
      byteArray0[6] = (byte) (-47);
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte) (-47);
      byteArray0[6] = (byte) (-47);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate4.and(predicate3);
      predicate7.negate();
      Predicate<Object> predicate8 = predicate2.and(predicate1);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate9 = predicate8.negate();
      predicate3.and(predicate4);
      predicate7.and(predicate6);
      predicate1.negate();
      predicate4.negate();
      predicate7.or(predicate9);
      predicate0.and(predicate1);
      predicate3.negate();
      predicate5.or(predicate3);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.removeIf(predicate9);
      fBCachedFetcher0.relative(56);
      assertEquals(0, fBCachedFetcher0.getRowNum());
      
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.absolute((-1));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2052732897559393
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedList1.addLast((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList2);
      linkedList1.add((byte[][]) null);
      FBResultSet fBResultSet2 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet1);
      fBCachedFetcher1.last();
      fBCachedFetcher1.previous();
      System.setCurrentTimeMillis((byte)45);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4055250768656427
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[][] byteArray1 = new byte[6][4];
      byteArray1[0] = byteArray0;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte)12;
      byteArray2[2] = (byte)101;
      byteArray2[3] = (byte)38;
      byteArray2[4] = (byte) (-117);
      byteArray2[5] = (byte)71;
      byteArray2[6] = (byte) (-112);
      byteArray1[1] = byteArray2;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      fBCachedFetcher0.insertRow(byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&dzut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8-c?wVF<6@/ZAj");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.absolute(4361);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) unaryOperator0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate1.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<String> predicate4 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate5 = predicate1.negate();
      predicate4.negate();
      Predicate<Object> predicate6 = predicate2.and(predicate5);
      Predicate<Object> predicate7 = predicate0.negate();
      predicate3.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate<Object> predicate9 = predicate8.or(predicate1);
      predicate1.test(predicate2);
      Predicate<Object> predicate10 = predicate6.negate();
      Predicate<Object> predicate11 = predicate0.and(predicate10);
      predicate10.or(predicate3);
      predicate9.negate();
      Predicate<Object> predicate12 = predicate11.and(predicate0);
      predicate11.negate();
      Predicate<Object> predicate13 = predicate12.and(predicate10);
      Predicate<Object> predicate14 = predicate13.negate();
      predicate14.and(predicate10);
      Predicate<Object> predicate15 = predicate1.negate();
      Predicate<Object> predicate16 = Predicate.isEqual((Object) predicate10);
      predicate9.and(predicate16);
      predicate15.negate();
      predicate14.or(predicate1);
      Predicate.isEqual((Object) predicate4);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-2311L));
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4011085348019465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[][] byteArray0 = new byte[26][5];
      byte[] byteArray1 = new byte[2];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[][] byteArray2 = new byte[9][7];
      byte[] byteArray3 = new byte[17];
      byteArray3[0] = (byte)34;
      byteArray3[1] = (byte)34;
      byteArray3[2] = (byte)34;
      byteArray3[3] = (byte)34;
      byteArray3[4] = (byte)34;
      byteArray2[0] = byteArray3;
      byteArray2[1] = byteArray1;
      byteArray0[10] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[0] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray0[0] = byteArray1;
      fBCachedFetcher0.relative(16);
      byteArray2[7] = byteArray1;
      byteArray2[8] = byteArray1;
      fBCachedFetcher0.insertRow(byteArray2);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.relative(1166);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.503333204440867
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-47);
      byteArray0[2] = (byte) (-47);
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte) (-47);
      byteArray0[6] = (byte) (-47);
      databaseParameterBufferImp0.addArgument((int) (byte) (-47), byteArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.afterLast();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.isAfterLast();
      assertEquals(2, fBCachedFetcher1.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2933852235912173
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.addFirst((byte[][]) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&dzut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      predicate5.and(predicate1);
      predicate0.and(predicate3);
      Predicate<Object> predicate6 = predicate0.and(predicate3);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(100);
      MockThread mockThread0 = new MockThread((Runnable) null);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) 100, timeUnit0);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) scheduledFuture0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate2.and(predicate0);
      predicate6.or(predicate0);
      Predicate<Object> predicate10 = predicate5.negate();
      Predicate<Object> predicate11 = predicate8.and(predicate9);
      predicate10.and(predicate7);
      predicate11.negate();
      Predicate<Object> predicate12 = predicate0.negate();
      predicate0.or(predicate4);
      predicate0.or(predicate12);
      predicate3.or(predicate0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(0, fBResultSet0.getRow());
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3278768613324594
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) unaryOperator0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<String> predicate5 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate6 = predicate2.negate();
      predicate5.negate();
      Predicate<Object> predicate7 = predicate3.and(predicate6);
      Predicate<Object> predicate8 = predicate0.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate9.or(predicate1);
      predicate1.test(predicate3);
      Predicate<Object> predicate11 = predicate7.negate();
      Predicate<Object> predicate12 = predicate0.and(predicate11);
      Predicate<Object> predicate13 = predicate11.or(predicate4);
      Predicate<Object> predicate14 = predicate10.negate();
      predicate12.and(predicate0);
      Predicate<Object> predicate15 = predicate12.negate();
      Predicate<Object> predicate16 = predicate13.and(predicate15);
      Predicate<Object> predicate17 = predicate16.negate();
      predicate14.negate();
      Predicate<Object> predicate18 = predicate8.negate();
      Predicate<Object> predicate19 = Predicate.isEqual((Object) predicate11);
      predicate10.and(predicate19);
      predicate18.negate();
      Predicate<Object> predicate20 = predicate17.or(predicate1);
      predicate20.and(predicate16);
      predicate7.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.239295360598141
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-50);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte)106;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)55;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[2][8];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute((byte) (-50));
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.200574027673497
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-32);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)55;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[2][8];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl0.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl0.getTr();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
      
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.last();
      fBCachedFetcher0.isBeforeFirst();
      boolean boolean1 = fBCachedFetcher0.last();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.setUpdateCount(16384);
      isc_stmt_handle_impl0.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][1];
      linkedList0.add(byteArray0);
      byte[] byteArray1 = new byte[4];
      linkedList0.add((byte[][]) null);
      byteArray1[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      byte[][] byteArray2 = new byte[6][5];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      linkedList2.add(byteArray2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.setUpdateCount(16384);
      isc_stmt_handle_impl0.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][1];
      linkedList0.add(byteArray0);
      byte[] byteArray1 = new byte[4];
      linkedList0.add((byte[][]) null);
      byteArray1[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_db_handle_impl0.out;
      databaseParameterBufferImp2.write((XdrOutputStream) null);
      byte[] byteArray0 = new byte[3];
      databaseParameterBufferImp2.addArgument((int) (byte)96, byteArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      databaseParameterBufferImp1.addArgument(1387, byteArray0);
      databaseParameterBufferImp1.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.push((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "38VbCXlB]Db-5H");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "38VbCXlB]Db-5H");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-32);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q(he{qr-8#j_");
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)106;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)55;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[2][8];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-123);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "35<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "35<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        fBCachedFetcher0.absolute((byte) (-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      JavaGDSImpl.parseRawAddress("PURE_JAVA");
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.addArgument((-2104), (String) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][7];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = byteArray0[0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(16384);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp1.write((XdrOutputStream) null);
      byte[] byteArray0 = new byte[3];
      databaseParameterBufferImp1.addArgument((int) (byte)96, byteArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      databaseParameterBuffer0.addArgument(16384, byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.push((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) unaryOperator0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate6 = predicate2.negate();
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate7.or(predicate1);
      Predicate<Object> predicate9 = predicate7.and(predicate8);
      Predicate<Object> predicate10 = predicate0.and(predicate9);
      Predicate<Object> predicate11 = predicate8.negate();
      Predicate<Object> predicate12 = predicate10.and(predicate0);
      Predicate<Object> predicate13 = predicate5.or(predicate1);
      Predicate<Object> predicate14 = predicate12.and(predicate9);
      Predicate<Object> predicate15 = predicate14.negate();
      Predicate<Object> predicate16 = predicate15.and(predicate4);
      Predicate<Object> predicate17 = Predicate.isEqual((Object) predicate16);
      predicate1.or(predicate17);
      Object object0 = new Object();
      Predicate<Object> predicate18 = Predicate.isEqual(object0);
      predicate1.and(predicate11);
      predicate18.or(predicate17);
      Predicate<Object> predicate19 = predicate4.negate();
      Predicate<Object> predicate20 = predicate13.negate();
      predicate18.or(predicate5);
      predicate19.and(predicate14);
      Predicate<Object> predicate21 = predicate20.and(predicate1);
      predicate21.or(predicate7);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) unaryOperator0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate.isEqual((Object) "");
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate6 = predicate2.negate();
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate7.or(predicate1);
      Predicate<Object> predicate9 = predicate7.and(predicate8);
      Predicate<Object> predicate10 = predicate0.and(predicate9);
      Predicate<Object> predicate11 = predicate8.negate();
      Predicate<Object> predicate12 = predicate10.and(predicate0);
      predicate5.or(predicate1);
      Predicate<Object> predicate13 = predicate12.and(predicate9);
      Predicate<Object> predicate14 = predicate13.negate();
      Predicate<Object> predicate15 = predicate14.and(predicate4);
      Predicate<Object> predicate16 = Predicate.isEqual((Object) predicate15);
      predicate1.or(predicate16);
      Object object0 = new Object();
      Predicate<Object> predicate17 = Predicate.isEqual(object0);
      predicate1.and(predicate11);
      predicate4.negate();
      Object object1 = new Object();
      Predicate.isEqual((Object) "");
      Predicate.isEqual((Object) predicate16);
      Predicate<Object> predicate18 = predicate17.or(predicate5);
      predicate9.and(predicate18);
      predicate16.or(predicate4);
      fBCachedFetcher0.isEmpty();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-47);
      byteArray0[6] = (byte) (-47);
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte) (-47);
      byteArray0[6] = (byte) (-47);
      databaseParameterBufferImp0.addArgument((int) (byte) (-47), byteArray0);
      databaseParameterBufferImp0.removeExtensionParams();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      predicate3.negate();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      predicate4.test(pipedInputStream0);
      predicate4.negate();
      predicate4.and(predicate3);
      Predicate<Object> predicate5 = predicate2.and(predicate1);
      predicate5.negate();
      predicate3.and(predicate4);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) unaryOperator0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate.isEqual((Object) "");
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate6 = predicate2.negate();
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate7.or(predicate1);
      Predicate<Object> predicate9 = predicate7.and(predicate8);
      Predicate<Object> predicate10 = predicate0.and(predicate9);
      Predicate<Object> predicate11 = predicate8.negate();
      Predicate<Object> predicate12 = predicate10.and(predicate0);
      predicate7.and(predicate12);
      Predicate<Object> predicate13 = predicate12.and(predicate9);
      Predicate<Object> predicate14 = predicate13.negate();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<Object> predicate15 = predicate14.and(predicate4);
      Predicate<Object> predicate16 = Predicate.isEqual((Object) predicate15);
      predicate1.or(predicate16);
      Object object1 = new Object();
      Predicate<Object> predicate17 = Predicate.isEqual(object1);
      predicate1.and(predicate11);
      predicate4.negate();
      Object object2 = new Object();
      Predicate.isEqual((Object) "");
      Predicate.isEqual((Object) predicate16);
      Predicate<Object> predicate18 = predicate17.or(predicate5);
      predicate9.and(predicate18);
      predicate16.or(predicate4);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setODSMajorVersion((-1077));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      byte[][] byteArray0 = new byte[5][4];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)4;
      byteArray1[1] = (byte)121;
      byteArray1[2] = (byte) (-112);
      byteArray1[3] = (byte)20;
      byteArray1[4] = (byte)31;
      byteArray1[5] = (byte)70;
      byteArray1[6] = (byte) (-104);
      byteArray1[7] = (byte)121;
      byteArray1[8] = (byte) (-58);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)31;
      byteArray2[1] = (byte)31;
      byteArray2[2] = (byte) (-58);
      byteArray2[3] = (byte)70;
      byteArray2[4] = (byte)121;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)121;
      byteArray3[1] = (byte)31;
      byteArray3[2] = (byte) (-16);
      byteArray3[3] = (byte) (-58);
      byteArray3[4] = (byte)121;
      byteArray3[5] = (byte)121;
      byteArray3[6] = (byte)121;
      byteArray3[7] = (byte) (-58);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)70;
      byteArray4[1] = (byte) (-45);
      byteArray4[2] = (byte)20;
      byteArray4[3] = (byte)4;
      byteArray4[4] = (byte)121;
      byteArray4[5] = (byte)4;
      byteArray4[6] = (byte) (-112);
      byteArray4[7] = (byte)121;
      byteArray4[8] = (byte)20;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)31;
      byteArray5[1] = (byte)44;
      byteArray5[2] = (byte)121;
      byteArray5[3] = (byte)70;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.offer(byteArray0);
      byte[][] byteArray1 = new byte[1][5];
      byte[] byteArray2 = new byte[1];
      byteArray1[0] = byteArray2;
      linkedList0.add(byteArray1);
      linkedList0.removeLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 400;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&d-zut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.getFetchSize();
      System.setCurrentTimeMillis(400);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[1][9];
      byteArray1[0] = byteArray0;
      linkedList0.add(byteArray1);
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      fBCachedFetcher1.isAfterLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.881606497926179
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][3];
      gDSHelper0.getJavaEncoding();
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[8] = gDSHelper0.BLOB_LENGTH_REQUEST;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative((-626));
      isc_stmt_handle_impl0.getRsr_rdb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener1);
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper1, (-626), (byte) (-77), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl3.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][1];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4570061729088613
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Function<byte[][], Integer> function0 = (Function<byte[][], Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      fBCachedFetcher0.afterLast();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, FBCachedBlobField> function1 = (Function<Object, FBCachedBlobField>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, FBCachedBlobField> function2 = unaryOperator1.andThen((Function<? super Object, ? extends FBCachedBlobField>) function1);
      unaryOperator0.andThen((Function<? super byte[][], ? extends FBBlobField>) function2);
      linkedList0.add((byte[][]) null);
      unaryOperator0.apply((byte[][]) null);
      unaryOperator0.andThen((Function<? super byte[][], ? extends Integer>) function0);
      linkedList0.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6581388739197473
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      fBResultSet0.afterLast();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&dzut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.next();
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.setUpdateCount((byte) (-32));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[][] byteArray1 = new byte[3][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      linkedList0.add(byteArray1);
      linkedList0.clone();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isAfterLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(252);
      MockThread mockThread0 = new MockThread("");
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0);
      MockThread mockThread2 = new MockThread();
      ClassLoader classLoader0 = mockThread1.getContextClassLoader();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      PriorityBlockingQueue<byte[][]> priorityBlockingQueue0 = new PriorityBlockingQueue<byte[][]>();
      priorityBlockingQueue0.contains(classLoader0);
      linkedList0.addAll((Collection<? extends byte[][]>) priorityBlockingQueue0);
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread1, 0L, timeUnit0);
      MockThread.dumpStack();
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread3 = new MockThread(threadGroup1, "You cannot position to the row 0 with absolute() method.");
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread1, 0L, timeUnit0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-845L));
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_db_handle_impl0.out;
      databaseParameterBufferImp2.write((XdrOutputStream) null);
      byte[] byteArray0 = new byte[3];
      databaseParameterBufferImp2.addArgument((int) (byte)96, byteArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      databaseParameterBufferImp1.addArgument(1387, byteArray0);
      databaseParameterBufferImp1.removeExtensionParams();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArrayArray0 = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      byte byte0 = (byte) (-77);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][3];
      gDSHelper0.getJavaEncoding();
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[8] = gDSHelper0.BLOB_LENGTH_REQUEST;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = (-626);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-626));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(400);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.881606497926179
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][3];
      gDSHelper0.getJavaEncoding();
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative((-626));
      isc_stmt_handle_impl0.getRsr_rdb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener1);
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper1, (-626), (byte) (-77), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6835958012740218
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      fBCachedFetcher0.absolute(1737);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&d-zut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = fBCachedFetcher0.absolute(400);
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(252);
      MockThread mockThread0 = new MockThread("");
      MockThread mockThread1 = new MockThread();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread1, (long) 252, timeUnit0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup0, "ml");
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(1619, threadPoolExecutor_DiscardPolicy0);
      scheduledThreadPoolExecutor1.schedule((Runnable) mockThread1, (long) 252, timeUnit0);
      Predicate.isEqual((Object) scheduledThreadPoolExecutor1);
      fBCachedFetcher0.first();
      System.setCurrentTimeMillis(1619);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&dzut<:C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8-c?wVF<6@/ZAj");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      MockThread mockThread0 = new MockThread("");
      MockThread mockThread1 = new MockThread();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup0, "ml");
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread3 = new MockThread(threadGroup1, "");
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-112);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
