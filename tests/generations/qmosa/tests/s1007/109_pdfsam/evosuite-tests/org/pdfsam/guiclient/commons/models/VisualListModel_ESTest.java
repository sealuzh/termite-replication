/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 00:01:54 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.AWTKeyStroke;
import java.awt.GridBagLayout;
import java.awt.RenderingHints;
import java.awt.event.ComponentListener;
import java.awt.event.HierarchyListener;
import java.awt.event.MouseListener;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.beans.PropertyChangeListener;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.PlanarImage;
import javax.media.jai.PropertyGenerator;
import javax.media.jai.SnapshotImage;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.ActionMap;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.event.RowSorterEvent;
import javax.swing.event.TableColumnModelListener;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.001192908978559
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.spliterator();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[1];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[0] = rowSorterEvent_Type0;
      JComboBox<RowSorterEvent.Type> jComboBox0 = new JComboBox<RowSorterEvent.Type>();
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[1];
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-75);
      byteArray0[2] = (byte)43;
      visualListModel0.data = null;
      byteArray0[3] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int) (byte)3, 5228, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0557051606564785
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[12];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      JTableHeader jTableHeader0 = new JTableHeader();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<uzXE%.U");
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[6];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[0] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type1;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[3] = rowSorterEvent_Type3;
      RowSorterEvent.Type rowSorterEvent_Type4 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type4;
      RowSorterEvent.Type rowSorterEvent_Type5 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[5] = rowSorterEvent_Type5;
      JComboBox<RowSorterEvent.Type> jComboBox0 = new JComboBox<RowSorterEvent.Type>(rowSorterEvent_TypeArray0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.getSize();
      visualListModel0.addElementAt(visualPageListItemArray0[0], 0);
      assertEquals(11, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.addElement((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.86348392091719
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[7];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[12];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      JTableHeader jTableHeader0 = new JTableHeader();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<uzXE%.U");
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2338616644583413
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.removeElements(0, 0, false);
      int[] intArray0 = new int[2];
      visualListModel0.reverseElements(intArray0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElements();
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      List<VisualPageListItem> list0 = jList0.getSelectedValuesList();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -1
         //
         verifyException("java.util.BitSet", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.622827904722017
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      byte[] byteArray0 = new byte[4];
      intArray0[0] = (int) (byte)47;
      byteArray0[2] = (byte) (-75);
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 47
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.382219492169876
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y3eXVYX}~el7K%vqn");
      visualListModel0.setData(visualPageListItemArray0);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.updateElementAt(1, visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      visualListModel1.moveDownIndex((-3574));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.moveUpIndex(1);
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = (-3574);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-3573)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1049561813316413
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      int[] intArray0 = new int[3];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[20];
      visualPageListItemArray0[11] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addElementAt(visualPageListItemArray0[0], (-3610));
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[5];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type1;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type3;
      JComboBox<RowSorterEvent.Type> jComboBox0 = null;
      try {
        jComboBox0 = new JComboBox<RowSorterEvent.Type>((RowSorterEvent.Type[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      List<VisualPageListItem> list0 = jList0.getSelectedValuesList();
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -1
         //
         verifyException("java.util.BitSet", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<DefaultTableColumnModel> arrayList1 = new ArrayList<DefaultTableColumnModel>();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      JTable jTable0 = new JTable(57, 235);
      JTable jTable1 = new JTable();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1, 0);
      TableRowSorter<DefaultTableModel> tableRowSorter0 = new TableRowSorter<DefaultTableModel>(defaultTableModel0);
      jTable1.setRowSorter(tableRowSorter0);
      jTable0.setRowMargin(235);
      JTableHeader jTableHeader1 = jTable1.getTableHeader();
      jTableHeader1.getVerifyInputWhenFocusTarget();
      jTableHeader1.getTable();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModel0.removeColumnModelListener(jTable0);
      int[] intArray0 = new int[1];
      intArray0[0] = 57;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 56
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.669435108494575
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.clone();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.isValidateRoot();
      jTableHeader0.getTable();
      DefaultTableColumnModel defaultTableColumnModel3 = new DefaultTableColumnModel();
      defaultTableColumnModel3.removeColumnModelListener(jTableHeader0);
      defaultTableColumnModel1.getColumnIndexAtX((-5119));
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-5119);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5118
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.181731920758287
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-87);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      Vector<RowSorterEvent.Type> vector0 = new Vector<RowSorterEvent.Type>();
      visualListModel0.clearData();
      OperationRegistry operationRegistry1 = new OperationRegistry();
      visualListModel0.moveDownIndex(1502);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      visualListModel0.removeElements(1, (-1), false);
      visualListModel0.moveUpIndex(1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector1 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector1);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock1);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[3];
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      defaultTableColumnModelArray0[0] = defaultTableColumnModel0;
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModelArray0[1] = defaultTableColumnModel1;
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getTable();
      defaultTableColumnModel1.removeColumnModelListener((TableColumnModelListener) null);
      defaultTableColumnModel0.getColumnIndexAtX((-5119));
      defaultTableColumnModelArray0[2] = defaultTableColumnModel2;
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.moveUpIndex((-940));
      visualListModel0.subList((-662), 1520, true);
      visualListModel0.removeElementAt(0, true);
      visualListModel0.subList((-185), (-964), true);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.519583768449818
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<DefaultTableColumnModel> arrayList1 = new ArrayList<DefaultTableColumnModel>();
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[3];
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      defaultTableColumnModel0.getColumnSelectionAllowed();
      defaultTableColumnModel0.getColumnIndexAtX(1768);
      defaultTableColumnModel0.getColumnSelectionAllowed();
      defaultTableColumnModelArray0[2] = defaultTableColumnModel0;
      Vector<Integer> vector0 = new Vector<Integer>();
      defaultTableColumnModel0.getColumns();
      JTable jTable0 = new JTable(vector0, vector0);
      jTable0.isPaintingTile();
      defaultTableColumnModel0.addColumnModelListener((TableColumnModelListener) null);
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      Class<DefaultTableColumnModel> class0 = DefaultTableColumnModel.class;
      defaultTableColumnModel0.getListeners(class0);
      defaultTableColumnModel1.getSelectionModel();
      defaultTableColumnModel1.getColumnCount();
      defaultTableColumnModel1.getColumnIndexAtX((-213));
      defaultTableColumnModel1.getTotalColumnWidth();
      defaultTableColumnModelArray0[1] = defaultTableColumnModel1;
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 2;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, 2, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1382619446879207
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<DefaultTableColumnModel> arrayList1 = new ArrayList<DefaultTableColumnModel>();
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[3];
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      defaultTableColumnModel0.getColumnSelectionAllowed();
      defaultTableColumnModelArray0[2] = defaultTableColumnModel0;
      Vector<Integer> vector0 = new Vector<Integer>();
      defaultTableColumnModel0.getColumns();
      JTable jTable0 = new JTable(vector0, vector0);
      jTable0.isPaintingTile();
      defaultTableColumnModel0.addColumnModelListener(jTable0);
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModel1.getSelectionModel();
      defaultTableColumnModel1.getColumnIndexAtX((-213));
      defaultTableColumnModel1.getTotalColumnWidth();
      defaultTableColumnModelArray0[1] = defaultTableColumnModel1;
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      defaultTableColumnModel0.getColumnIndexAtX((-1609));
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1609);
      intArray0[1] = (-976);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1609
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.722973226438147
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      int int0 = 1366;
      Collection<VisualPageListItem> collection0 = null;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex(1366);
      visualListModel0.elementsChanged();
      visualListModel0.elementsChanged();
      intArray0[0] = 1467;
      visualListModel0.clearData();
      boolean boolean0 = false;
      visualListModel0.removeElements(114, 1467, false);
      intArray0[1] = 599;
      visualListModel0.getElements();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getElements();
      Vector<VisualPageListItem> vector0 = null;
      visualListModel0.data = null;
      visualListModel0.getSize();
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.528966596020963
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.spliterator();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) null, defaultTableColumnModel0);
      jTable0.setSize(1, 1);
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[8];
      defaultTableColumnModelArray0[0] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[1] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[2] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[3] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[4] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[5] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[6] = defaultTableColumnModel0;
      defaultTableColumnModelArray0[7] = defaultTableColumnModel0;
      JComboBox<DefaultTableColumnModel> jComboBox0 = new JComboBox<DefaultTableColumnModel>(defaultTableColumnModelArray0);
      ActionMap actionMap0 = jComboBox0.getActionMap();
      jTableHeader0.setActionMap(actionMap0);
      jTableHeader0.getVerifyInputWhenFocusTarget();
      jTableHeader0.getTable();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9263548464292743
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<DefaultTableColumnModel> arrayList1 = new ArrayList<DefaultTableColumnModel>();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      JTable jTable0 = new JTable(57, 235);
      JTable jTable1 = new JTable();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1, 0);
      TableRowSorter<DefaultTableModel> tableRowSorter0 = new TableRowSorter<DefaultTableModel>(defaultTableModel0);
      jTable1.setRowSorter(tableRowSorter0);
      jTable0.setRowMargin(235);
      JTableHeader jTableHeader1 = jTable1.getTableHeader();
      jTableHeader1.getVerifyInputWhenFocusTarget();
      jTableHeader1.getTable();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModel0.removeColumnModelListener(jTable0);
      int[] intArray0 = new int[1];
      intArray0[0] = 57;
      jTableHeader1.getTable();
      defaultTableColumnModel0.setColumnMargin(0);
      defaultTableColumnModel1.getColumnModelListeners();
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      defaultTableColumnModel0.getColumnIndexAtX(1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel1.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.731741760099072
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet1 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1795);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[6]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray1 = new int[4];
      intArray1[0] = (-1795);
      intArray1[1] = (-1795);
      intArray1[3] = (-1795);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel2.reverseElements(intArray1);
      visualListModel1.undeleteElements(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3128868859883003
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.spliterator();
      visualListModel0.setData(visualPageListItemArray0);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PriorityQueue<RenderingHints.Key> priorityQueue0 = new PriorityQueue<RenderingHints.Key>();
      linkedHashSet0.containsAll(priorityQueue0);
      visualListModel0.updateElementAt(1, visualPageListItemArray0[0]);
      visualListModel0.moveDownIndex(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.moveUpIndex(1);
      visualListModel0.addElementAt(visualPageListItemArray0[0], 1);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "lg4j.loggeroact|rJ", parameterBlock0);
      // Undeclared exception!
      try { 
        collectionOp0.containsAll(linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"lg4j.loggeroact|rJ\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.transferFocus();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultComboBoxModel<String> defaultComboBoxModel1 = null;
      try {
        defaultComboBoxModel1 = new DefaultComboBoxModel<String>((Vector<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      List<VisualPageListItem> list0 = jList0.getSelectedValuesList();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -1
         //
         verifyException("java.util.BitSet", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3119786101400903
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<DefaultTableColumnModel> arrayList1 = new ArrayList<DefaultTableColumnModel>();
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[3];
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      defaultTableColumnModel0.getColumnSelectionAllowed();
      defaultTableColumnModelArray0[0] = defaultTableColumnModel0;
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModelArray0[1] = defaultTableColumnModel1;
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      Vector<RowSorterEvent.Type> vector0 = new Vector<RowSorterEvent.Type>();
      JComboBox<RowSorterEvent.Type> jComboBox0 = new JComboBox<RowSorterEvent.Type>(vector0);
      jComboBox0.isOptimizedDrawingEnabled();
      jTableHeader0.isValidateRoot();
      jTableHeader0.getTable();
      defaultTableColumnModel0.removeColumnModelListener(jTableHeader0);
      DefaultTableColumnModel defaultTableColumnModel3 = new DefaultTableColumnModel();
      defaultTableColumnModel3.getColumnModelListeners();
      defaultTableColumnModel0.getColumnIndexAtX((-2149));
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 5511;
      intArray0[1] = (-2149);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 5511
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3150745853722885
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.199663191579221
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener4 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener5 = AWTEventMulticaster.remove(componentListener2, componentListener4);
      ComponentListener componentListener6 = AWTEventMulticaster.remove(componentListener3, componentListener5);
      AWTEventMulticaster.remove(componentListener2, componentListener6);
      ComponentListener componentListener7 = AWTEventMulticaster.remove(componentListener4, (ComponentListener) null);
      ComponentListener componentListener8 = AWTEventMulticaster.add((ComponentListener) null, componentListener7);
      ComponentListener componentListener9 = AWTEventMulticaster.add(componentListener8, componentListener2);
      AWTEventMulticaster.add(componentListener9, componentListener9);
      ComponentListener componentListener10 = AWTEventMulticaster.remove(componentListener8, componentListener9);
      ComponentListener componentListener11 = AWTEventMulticaster.add(componentListener10, componentListener2);
      AWTEventMulticaster.add(componentListener6, componentListener2);
      AWTEventMulticaster.add((ComponentListener) null, componentListener2);
      AWTEventMulticaster.remove(componentListener6, componentListener7);
      AWTEventMulticaster.remove(componentListener4, componentListener6);
      AWTEventMulticaster.remove(componentListener11, (ComponentListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel2.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[3];
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      defaultTableColumnModelArray0[0] = defaultTableColumnModel0;
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModelArray0[1] = defaultTableColumnModel1;
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getTable();
      defaultTableColumnModel1.removeColumnModelListener((TableColumnModelListener) null);
      defaultTableColumnModel0.getColumnIndexAtX((-5119));
      defaultTableColumnModelArray0[2] = defaultTableColumnModel2;
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.moveUpIndex((-940));
      visualListModel0.subList((-662), 1520, true);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9876946323551454
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<DefaultTableColumnModel> arrayList1 = new ArrayList<DefaultTableColumnModel>();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowListener0, windowListener0);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 1603;
      intArray0[1] = 11;
      visualListModel1.moveDownIndexes(intArray0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1603
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.460650980761152
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener4 = AWTEventMulticaster.add(componentListener1, componentListener2);
      ComponentListener componentListener5 = AWTEventMulticaster.add(componentListener4, componentListener2);
      ComponentListener componentListener6 = AWTEventMulticaster.remove(componentListener3, componentListener5);
      ComponentListener componentListener7 = AWTEventMulticaster.add(componentListener6, componentListener4);
      ComponentListener componentListener8 = AWTEventMulticaster.add(componentListener6, componentListener6);
      ComponentListener componentListener9 = AWTEventMulticaster.add(componentListener6, componentListener2);
      ComponentListener componentListener10 = AWTEventMulticaster.remove(componentListener8, componentListener9);
      ComponentListener componentListener11 = AWTEventMulticaster.add(componentListener7, componentListener10);
      AWTEventMulticaster.add(componentListener11, componentListener3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[1];
      intArray1[0] = (-1);
      visualListModel0.moveDownIndexes(intArray1);
      int[] intArray2 = new int[2];
      intArray2[0] = (-1);
      intArray2[1] = (-1);
      visualListModel1.reverseElements(intArray2);
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7039917864324616
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedHashSet0.spliterator();
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel1.setData(vector0);
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3168084546157512
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedHashSet0.spliterator();
      visualListModel0.setData(visualPageListItemArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.updateElementAt(1, visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndex(1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      visualListModel0.moveUpIndex(1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addElementAt(visualPageListItemArray0[0], 1);
      visualListModel0.updateElementAt(114, visualPageListItemArray0[0]);
      assertEquals(10, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.237966169824137
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[12];
      visualPageListItemArray0[0] = null;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener4 = AWTEventMulticaster.add(componentListener3, componentListener2);
      ComponentListener componentListener5 = AWTEventMulticaster.remove(componentListener3, componentListener4);
      AWTEventMulticaster.add(componentListener2, componentListener4);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      ComponentListener componentListener6 = AWTEventMulticaster.add(componentListener5, componentListener5);
      ComponentListener componentListener7 = AWTEventMulticaster.add(componentListener5, componentListener2);
      ComponentListener componentListener8 = AWTEventMulticaster.remove(componentListener6, componentListener7);
      AWTEventMulticaster.add((ComponentListener) null, componentListener8);
      AWTEventMulticaster.add((ComponentListener) null, componentListener4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0803875532203735
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      JTable jTable0 = new JTable(57, 57);
      JTableHeader jTableHeader1 = jTable0.getTableHeader();
      jTableHeader1.getTable();
      DefaultTableColumnModel defaultTableColumnModel3 = new DefaultTableColumnModel();
      defaultTableColumnModel3.removeColumnModelListener(jTableHeader0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      DefaultTableColumnModel defaultTableColumnModel4 = new DefaultTableColumnModel();
      defaultTableColumnModel4.setColumnMargin((-214));
      DefaultTableColumnModel defaultTableColumnModel5 = new DefaultTableColumnModel();
      defaultTableColumnModel5.getColumnModelListeners();
      defaultTableColumnModel1.getColumnIndexAtX((-214));
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2488215410938253
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      DefaultTableColumnModel[] defaultTableColumnModelArray0 = new DefaultTableColumnModel[3];
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      int[] intArray1 = defaultTableColumnModel0.getSelectedColumns();
      defaultTableColumnModelArray0[0] = defaultTableColumnModel0;
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      defaultTableColumnModel1.addColumnModelListener(jTable0);
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel3 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel4 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel5 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getTable();
      DefaultTableColumnModel defaultTableColumnModel6 = new DefaultTableColumnModel();
      int[] intArray2 = defaultTableColumnModel3.getSelectedColumns();
      DefaultTableColumnModel defaultTableColumnModel7 = new DefaultTableColumnModel();
      TableColumn tableColumn0 = new TableColumn();
      defaultTableColumnModel7.removeColumn(tableColumn0);
      JTableHeader jTableHeader1 = new JTableHeader();
      jTableHeader0.isValidateRoot();
      JTableHeader jTableHeader2 = new JTableHeader(defaultTableColumnModel7);
      defaultTableColumnModel0.getColumnIndexAtX(1056);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray2);
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 30000;
      floatArray0[1] = (float) (-2292);
      floatArray0[4] = (float) 30000;
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.transferFocus();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<String> vector0 = new Vector<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(vector0);
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox1);
      defaultComboBoxModel0.getElementAt(50000);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Stack<String> stack0 = new Stack<String>();
      stack0.trimToSize();
      DefaultComboBoxModel<String> defaultComboBoxModel1 = new DefaultComboBoxModel<String>(stack0);
      JComboBox<String> jComboBox2 = new JComboBox<String>(defaultComboBoxModel0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(903, 2063, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 7 and should be 1862889
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.92967840055467
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener4 = AWTEventMulticaster.add(componentListener1, componentListener2);
      ComponentListener componentListener5 = AWTEventMulticaster.add(componentListener4, componentListener2);
      ComponentListener componentListener6 = AWTEventMulticaster.remove(componentListener3, componentListener5);
      ComponentListener componentListener7 = AWTEventMulticaster.add(componentListener6, componentListener4);
      ComponentListener componentListener8 = AWTEventMulticaster.add(componentListener6, componentListener6);
      ComponentListener componentListener9 = AWTEventMulticaster.add(componentListener6, componentListener2);
      ComponentListener componentListener10 = AWTEventMulticaster.remove(componentListener8, componentListener9);
      ComponentListener componentListener11 = AWTEventMulticaster.add(componentListener7, componentListener10);
      AWTEventMulticaster.add(componentListener11, componentListener3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[1];
      int int0 = (-1);
      intArray1[0] = (-1);
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.620089674945963
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getListDataListeners();
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel1.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndex(0);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      visualListModel1.moveUpIndex(10);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.getSize();
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[6];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[0] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type1;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[3] = rowSorterEvent_Type3;
      RowSorterEvent.Type rowSorterEvent_Type4 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type4;
      RowSorterEvent.Type rowSorterEvent_Type5 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[5] = rowSorterEvent_Type5;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(2510);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.587821318696078
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[12];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      JTableHeader jTableHeader0 = new JTableHeader();
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[6];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type1;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[3] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type3;
      RowSorterEvent.Type rowSorterEvent_Type4 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[5] = rowSorterEvent_Type4;
      JComboBox<RowSorterEvent.Type> jComboBox0 = new JComboBox<RowSorterEvent.Type>(rowSorterEvent_TypeArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.590498607142004
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener4 = AWTEventMulticaster.add(componentListener1, componentListener2);
      ComponentListener componentListener5 = AWTEventMulticaster.add(componentListener4, componentListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.remove(componentListener3, componentListener5);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, componentListener4);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, componentListener2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, componentListener5);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.618984594522883
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[12];
      visualListModel0.setData(visualPageListItemArray0);
      JTableHeader jTableHeader0 = new JTableHeader();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, componentListener0);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.undeleteElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1049561813316413
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[20];
      visualPageListItemArray0[11] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addElementAt(visualPageListItemArray0[0], (-3610));
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[5];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type1;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type3;
      JComboBox<RowSorterEvent.Type> jComboBox0 = null;
      try {
        jComboBox0 = new JComboBox<RowSorterEvent.Type>((RowSorterEvent.Type[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8065432531941146
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener1, componentListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, componentListener2);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove(componentListener3, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster2, componentListener2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.removeElements(489, (-5119), true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8934284047624406
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener2 = AWTEventMulticaster.remove(componentListener0, componentListener1);
      ComponentListener componentListener3 = AWTEventMulticaster.add(componentListener2, componentListener2);
      ComponentListener componentListener4 = AWTEventMulticaster.add(componentListener1, componentListener2);
      ComponentListener componentListener5 = AWTEventMulticaster.add(componentListener4, componentListener2);
      ComponentListener componentListener6 = AWTEventMulticaster.remove(componentListener3, componentListener5);
      ComponentListener componentListener7 = AWTEventMulticaster.add(componentListener6, componentListener4);
      ComponentListener componentListener8 = AWTEventMulticaster.add(componentListener6, componentListener6);
      ComponentListener componentListener9 = AWTEventMulticaster.add(componentListener6, componentListener2);
      ComponentListener componentListener10 = AWTEventMulticaster.remove(componentListener8, componentListener9);
      AWTEventMulticaster.add(componentListener7, componentListener10);
      AWTEventMulticaster.add(componentListener7, componentListener5);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.removeElements(489, (-5119), true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.3373641978673163
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel0 = new VisualListModel();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedHashSet0.spliterator();
      visualListModel0.setData(visualPageListItemArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(1, visualPageListItemArray0[0]);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndex(1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      visualListModel0.moveUpIndex(1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addElementAt(visualPageListItemArray0[0], 1);
      visualListModel0.clearData();
      visualListModel0.updateElementAt(114, visualPageListItemArray0[0]);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[0];
      visualListModel0.reverseElements(intArray1);
      intArray0[1] = 0;
      intArray0[3] = 1932;
      intArray0[4] = (-303);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      float[] floatArray0 = new float[6];
      floatArray0[2] = (float) (-303);
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) 1932;
      Kernel kernel0 = new Kernel((-303), 0, floatArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      hashMap1.put(sunHints_Key0, sunHints_Key0);
      hashMap1.put(sunHints_Key0, visualListModel0);
      Kernel kernel1 = new Kernel(0, 1932, floatArray0);
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel2.removeElements(0, 5, true);
      assertNotSame(visualListModel2, visualListModel0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 1);
      Integer integer4 = JLayeredPane.DRAG_LAYER;
      Integer.sum(2223, (-1012));
      Integer.max(0, 0);
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.compareUnsigned(0, 1211);
      Integer.divideUnsigned(0, 2375);
      Integer.sum((-13), (-1012));
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      Integer.sum((-978), 0);
      Integer.remainderUnsigned((-1012), 350);
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = JLayeredPane.DRAG_LAYER;
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("4294966284", (Integer) null);
      Integer.min((-1), 995);
      Integer.sum(350, 0);
      Integer integer11 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("", integer10);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.transferFocus();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<String> vector0 = null;
      DefaultComboBoxModel<String> defaultComboBoxModel1 = null;
      try {
        defaultComboBoxModel1 = new DefaultComboBoxModel<String>((Vector<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.removeElements(110, 2, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(intArray0, true);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      OperationRegistry.getThreadSafeOperationRegistry();
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      BiFunction<RenderingHints.Key, Object, AWTKeyStroke> biFunction0 = (BiFunction<RenderingHints.Key, Object, AWTKeyStroke>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable1.computeIfPresent(sunHints_Key0, biFunction0);
      hashtable1.clear();
      RenderingHints renderingHints0 = new RenderingHints(hashtable1);
      float[] floatArray0 = new float[17];
      floatArray0[1] = (float) 50000;
      floatArray0[2] = (float) 50000;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(50000, (-1013), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[7];
      rowSorterEvent_TypeArray0[0] = rowSorterEvent_Type2;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type0;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[3] = rowSorterEvent_Type3;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type4 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[5] = rowSorterEvent_Type4;
      rowSorterEvent_TypeArray0[6] = rowSorterEvent_Type1;
      JComboBox<RowSorterEvent.Type> jComboBox0 = new JComboBox<RowSorterEvent.Type>(rowSorterEvent_TypeArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      assertEquals("[]", vector0.toString());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 1);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer.sum(2223, (-1012));
      Integer.max(0, 0);
      Integer.getInteger("4294966284", (Integer) null);
      Integer.compareUnsigned(0, 1211);
      Integer.divideUnsigned(0, 2329);
      Integer.sum((-13), (-1012));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.sum((-946), 0);
      Integer.remainderUnsigned((-1012), 364);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.sum(0, 527);
      Integer.getInteger("", integer9);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-1012), 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[0];
      intArray0[1] = 0;
      intArray0[3] = 1932;
      intArray0[4] = 1932;
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      float[] floatArray0 = new float[6];
      floatArray0[2] = (float) (-303);
      floatArray0[3] = (float) 0;
      Kernel kernel0 = new Kernel(1932, 0, floatArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      hashMap1.put(sunHints_Key0, sunHints_Key0);
      Object object0 = hashMap1.put(sunHints_Key0, visualListModel0);
      Kernel kernel1 = new Kernel(0, 1932, floatArray0);
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      kernel1.clone();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke('*');
      BiFunction<Object, Object, AWTKeyStroke> biFunction0 = (BiFunction<Object, Object, AWTKeyStroke>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge((RenderingHints.Key) object0, keyStroke0, biFunction0);
      Box box0 = Box.createHorizontalBox();
      box0.getTransferHandler();
      KeyStroke keyStroke1 = KeyStroke.getKeyStroke(0, 1064);
      Character character0 = new Character('Q');
      AWTKeyStroke.getAWTKeyStroke(character0, (-1831));
      AWTKeyStroke.getAWTKeyStroke((-2527), (-1));
      BiFunction<AWTKeyStroke, AWTKeyStroke, AWTKeyStroke> biFunction1 = (BiFunction<AWTKeyStroke, AWTKeyStroke, AWTKeyStroke>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction1).apply(any(java.awt.AWTKeyStroke.class) , any(java.awt.AWTKeyStroke.class));
      hashtable0.merge(sunHints_Key0, keyStroke1, biFunction1);
      visualListModel0.removeElements(2216, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.getInteger("4294966284", (-3710));
      Integer integer4 = new Integer(0);
      Integer integer5 = new Integer((-2274));
      Integer integer6 = new Integer((-3710));
      Integer integer7 = FPXDescriptor.MAX_RESOLUTION;
      Integer.min(472, (-1012));
      Integer.sum((-2450), (-364));
      Integer.getInteger("D3[Q}h#'+mu@", 3071);
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("", integer8);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 1);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer.sum(2223, (-1012));
      Integer.max(0, 0);
      Integer.getInteger("4294966284", (Integer) null);
      Integer.compareUnsigned(0, 1211);
      Integer.divideUnsigned(0, 2375);
      Integer.sum((-13), (-1012));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.sum((-951), 0);
      Integer.remainderUnsigned((-1012), 350);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer integer8 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.min((-1), 995);
      Integer integer10 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("", integer9);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte byte0 = (byte)49;
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry.getThreadSafeOperationRegistry();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = (-2292);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.getGraphicsConfiguration();
      jComboBox0.transferFocus();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, stack0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "org.pdfsam.guiclient.commons.models.VisualListModel", parameterBlock0);
      visualListModel0.addAllElements(256, (Collection<VisualPageListItem>) collectionOp0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 1);
      Integer.getInteger("4294966284", (-3));
      Integer.sum(2223, (-1012));
      Integer.max(0, 0);
      Integer.getInteger("4294966284", (Integer) null);
      Integer.compareUnsigned(0, 1211);
      Integer.divideUnsigned(0, 2329);
      Integer.sum((-13), (-1012));
      Integer integer4 = JLayeredPane.DRAG_LAYER;
      Integer.sum((-946), 0);
      Integer.remainderUnsigned((-1012), 364);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.DEFAULT_LAYER;
      Integer integer8 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("4294966284", integer8);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-946), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -946
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1173);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1021, (-1173));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1021) > toIndex(-1173)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = new Integer(2);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 2);
      Integer.getInteger("4294966284", (-3));
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string0 = "%jqEe-A&o>'{DT[^M(Y";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4294966284");
      OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1760, (-2369), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1760) > toIndex(-2369)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Boolean boolean0 = new Boolean("");
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%jqEe-A&o>'{DT[^M(Y");
      OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vYV0^$Ygt9nPvEB@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-929), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-929)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.subList(0, 870, false);
      Object object0 = new Object();
      String string0 = null;
      String string1 = "log4j: ";
      String string2 = "it.pdfsam.utils.JarFilter";
      // Undeclared exception!
      try { 
        operationRegistry0.registerFactory("log4j: ", "", "it.pdfsam.utils.JarFilter", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"log4j: \" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString(1);
      Integer.remainderUnsigned(1, 1);
      Integer.getInteger("1", 1);
      Integer.sum(2223, 1);
      Integer.max(0, 0);
      Integer.getInteger("1", (Integer) null);
      Integer.divideUnsigned(0, 2329);
      Integer integer4 = new Integer(0);
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.sum((-946), 0);
      Integer.remainderUnsigned(1, 363);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, sunHints_Key0);
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      renderingHints0.forEach(biConsumer0);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 0.0F, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(940, (-348), (-1654), (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      int int0 = 30000;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, sunHints_Key0);
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      renderingHints0.forEach(biConsumer0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(940, 940, (-1654), (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(66, (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.transferFocus();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<String> vector0 = new Vector<String>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-2292), (Collection<VisualPageListItem>) stack0);
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Vector<String> vector1 = null;
      try {
        vector1 = new Vector<String>((-2292));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2292
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = new Integer((-1));
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[6];
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[0] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[1] = rowSorterEvent_Type1;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type2;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[3] = rowSorterEvent_Type3;
      RowSorterEvent.Type rowSorterEvent_Type4 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type4;
      RowSorterEvent.Type rowSorterEvent_Type5 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      rowSorterEvent_TypeArray0[5] = rowSorterEvent_Type5;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(3006);
      visualListModel0.appendAllElements(linkedHashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      linkedHashSet1.removeAll(stack0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, parameterBlock0);
      // Undeclared exception!
      try { 
        operationRegistry0.createCollection("/", parameterBlock0, renderingHints0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"/\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 1);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer.sum(2223, (-1012));
      Integer.max(0, 0);
      Integer.getInteger("4294966284", (Integer) null);
      Integer.compareUnsigned(0, 1211);
      Integer.divideUnsigned(0, 2329);
      Integer.sum((-13), (-1012));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.sum((-946), 0);
      Integer.remainderUnsigned((-1012), 364);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("", integer9);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-946), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -946
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Boolean boolean0 = new Boolean("");
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string1 = "%jqEe-A&o>'{DT[^M(Y";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%jqEe-A&o>'{DT[^M(Y");
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%jqEe-A&o>'{DT[^M(Y");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.subList(21, 21, true);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        operationRegistry0.addPropertyGenerator("eYdZm/h;,A55sFf", "eYdZm/h;,A55sFf", (PropertyGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"eYdZm/h;,A55sFf\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-25));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, sunHints_Key0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      Integer.getInteger("RepositorySelector must be non-null.", 13);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 0.0F, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(13, 13, 0, (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 30000;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, true);
      floatArray0[1] = (float) (-2292);
      floatArray0[4] = (float) 30000;
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<String> vector0 = new Vector<String>(30000);
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      KeyStroke.getKeyStroke(30000, 30000);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Character character0 = Character.valueOf('u');
      hashtable0.elements();
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke(character0, (-2292));
      AWTKeyStroke.getAWTKeyStroke('u');
      KeyStroke.getKeyStroke((-2292), (-2292));
      AWTKeyStroke.getAWTKeyStroke(10, 2235);
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke('u');
      hashtable0.put(sunHints_Key2, keyStroke0);
      // Undeclared exception!
      try { 
        hashtable0.merge(sunHints_Key0, aWTKeyStroke0, (BiFunction<? super AWTKeyStroke, ? super AWTKeyStroke, ? extends AWTKeyStroke>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1975);
      visualListModel0.moveUpIndex((-1975));
      int int1 = 0;
      visualListModel0.subList((-1975), 0);
      visualListModel0.subList(0, 0);
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Boolean boolean0 = new Boolean("");
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string1 = "%jqEe-A&o>'{DT[^M(Y";
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%jqEe-A&o>'{DT[^M(Y");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.subList(0, 0, false);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        operationRegistry0.addPropertyGenerator("eYdZm/h;,A55sFf", "eYdZm/h;,A55sFf", (PropertyGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"eYdZm/h;,A55sFf\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.180066384203239
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%jDEe-A&o>'{DT[^M(Y");
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.subList((-5520), 6);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      visualListModel0.subList(0, 0, true);
      Object object0 = new Object();
      String string0 = null;
      // Undeclared exception!
      try { 
        operationRegistry0.registerFactory("", "%jDEe-A&o>'{DT[^M(Y", (String) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%jDEe-A&o>'{DT^M(Y");
      OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Collection<VisualPageListItem> collection0 = new HashSet<VisualPageListItem>();
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      KeyStroke.getKeyStroke(50, (-12));
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashtable0.clear();
      KeyStroke.getKeyStroke("v.!8$>PC)gB7qCrrf;l");
      KeyStroke.getKeyStroke(",T");
      KeyStroke.getKeyStroke("v.!8$>PC)gB7qCrrf;l");
      BiFunction<AWTKeyStroke, Object, AWTKeyStroke> biFunction0 = (BiFunction<AWTKeyStroke, Object, AWTKeyStroke>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(sunHints_Key2, (AWTKeyStroke) null, biFunction0);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 114;
      intArray0[1] = 1527;
      intArray0[2] = (-90);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      RowSorterEvent.Type rowSorterEvent_Type1 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      RowSorterEvent.Type rowSorterEvent_Type2 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      RowSorterEvent.Type[] rowSorterEvent_TypeArray0 = new RowSorterEvent.Type[8];
      rowSorterEvent_TypeArray0[0] = rowSorterEvent_Type0;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type0;
      RowSorterEvent.Type rowSorterEvent_Type3 = RowSorterEvent.Type.SORTED;
      rowSorterEvent_TypeArray0[2] = rowSorterEvent_Type3;
      rowSorterEvent_TypeArray0[3] = rowSorterEvent_Type1;
      rowSorterEvent_TypeArray0[4] = rowSorterEvent_Type2;
      rowSorterEvent_TypeArray0[5] = rowSorterEvent_Type0;
      rowSorterEvent_TypeArray0[6] = rowSorterEvent_Type1;
      rowSorterEvent_TypeArray0[7] = rowSorterEvent_Type0;
      JComboBox<RowSorterEvent.Type> jComboBox0 = new JComboBox<RowSorterEvent.Type>(rowSorterEvent_TypeArray0);
      assertFalse(jComboBox0.getIgnoreRepaint());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      Vector<RowSorterEvent.Type> vector0 = new Vector<RowSorterEvent.Type>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      visualListModel0.getElementAt(201);
      hashMap0.put(sunHints_Key0, (Object) null);
      hashMap0.put(sunHints_Key0, vector0);
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Character.valueOf('O');
      Character character0 = new Character('O');
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(character0, (-4282));
      hashtable0.put(sunHints_Key0, keyStroke0);
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      KeyStroke.getKeyStroke('1');
      KeyStroke keyStroke1 = KeyStroke.getKeyStroke(201, (-444), false);
      KeyStroke.getKeyStroke('O');
      defaultEditorKit_CutAction0.addPropertyChangeListener((PropertyChangeListener) null);
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable1 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      AWTKeyStroke.getAWTKeyStroke((-4282), (-120), true);
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke('a');
      BiFunction<Object, Object, AWTKeyStroke> biFunction0 = (BiFunction<Object, Object, AWTKeyStroke>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      AWTKeyStroke aWTKeyStroke1 = hashtable0.merge(sunHints_Key1, aWTKeyStroke0, biFunction0);
      assertNotSame(aWTKeyStroke1, keyStroke1);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(1);
      Integer.toUnsignedString((-1012));
      Integer.remainderUnsigned((-1012), 1);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("4294966284", (-3710));
      Integer integer5 = new Integer(0);
      Integer.divideUnsigned(0, (-3710));
      Integer integer6 = new Integer((-2274));
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer8 = new Integer(0);
      Integer integer9 = new Integer((-3710));
      Integer integer10 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer11 = JLayeredPane.MODAL_LAYER;
      Integer.max(17, (-2274));
      Integer.getInteger(">GH,", integer11);
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2274));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2274
         //
         verifyException("java.util.Vector", e);
      }
  }
}
