/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:32:45 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 753;
      Player player0 = new Player(753, (String) null, 753);
      DataInputStream dataInputStream0 = null;
      Party party0 = new Party();
      player0.head = party0;
      player0.setDead((long) 753, true);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1446510267836394
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-18), "", "EhXMt\"!$qc+p", (-2041));
      Player player1 = new Player(1, (String) null, "?\"cMg{Sx3", (-1330), 4919);
      player0.getSubparty();
      player1.setJoinOK(player0, true);
      player1.setY(0.0F);
      player0.setY(0.0F);
      player0.isJoinOK(player1, true);
      int int0 = player1.type();
      assertEquals(5, int0);
      
      player0.pack();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      player1.getName();
      player1.pack();
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player1.toString();
      player1.pack();
      Player player2 = new Player((-1));
      Player player3 = new Player(533, "", 1);
      Player player4 = new Player();
      Player player5 = new Player((short)4919);
      player3.isJoinOK(player4, false);
      assertEquals(1, player4.getStrength());
      assertEquals("Player-1", player4.getName());
      
      player1.getIP();
      assertEquals(4919, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals((-1330), player1.getPictureId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis((-18L));
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)123;
      player0.id = (int) (byte)123;
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (byte)47);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(3, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 80, 560);
      player0.getSubparty();
      player0.setDead((long) 560);
      player0.boss = null;
      player0.setX((-1152.0F));
      player0.getIP();
      player0.type();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(560);
      System.setCurrentTimeMillis(560);
      byte[] byteArray0 = player0.pack();
      player0.getMoney();
      player0.getZ();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(5);
      byteArrayInputStream0.read(byteArray0);
      player0.setDead((long) 5);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      player0.unpack(dataInputStream0);
      player0.getX();
      player0.getIP();
      player0.getX();
      player0.pack();
      player0.type();
      System.setCurrentTimeMillis(2860L);
      float float0 = player0.getZ();
      assertEquals(5L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(3749, (String) null, 3749);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1490), ".*[.]class$", "ikxD6", 1, 1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(0, " ", " ", 0, (-1875));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.writeShort(0);
      dataOutputStream0.writeChar(0);
      mockFileOutputStream0.close();
      dataOutputStream0.writeBytes("");
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.getSubparty();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setJoinOK(player0, false);
      player0.setY(0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(0.2F);
      player0.isJoinOK(player0, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      player0.unpack(byteArray0);
      player0.getZ();
      float float0 = player0.getY();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player0.id = 0;
      player0.setY(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)33;
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("EhXMt\"!$qc+p", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "EhXMt\"!$qc+p";
      String string1 = "E#j1!;$";
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.getSubparty();
      player0.setX((-18));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-1386), "", "", (-1386));
      Party party0 = new Party();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setMoney((-1386));
      party0.getSubparty();
      party0.next = (Party) player0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      party0.add(player0);
      player0.head = party0;
      player0.head.head = party0;
      player0.getIP();
      System.setCurrentTimeMillis((-1386));
      party0.id = (int) (short)4919;
      player0.type();
      player0.getIP();
      player0.getMoney();
      System.setCurrentTimeMillis(5);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-1.0F));
      player0.setMoney(1794.02F);
      player0.id = (-2077);
      player0.getMoney();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (-2077));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2607697993230333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.setDead(2045L);
      Player player1 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      player0.setDead((-2617L), false);
      player0.getPictureId();
      player1.toString();
      player1.type();
      player1.pack();
      player0.setZ((byte) (-5));
      player1.getName();
      player0.pack();
      assertEquals((-5.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3, (String) null, (-18));
      int int0 = Packable.PLAYER;
      player0.getName();
      player0.getZ();
      player0.toString();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.142383453087495
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.setDead(2045L);
      Player player1 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)0;
      player1.unpack(byteArray0);
      player0.type();
      player0.setDead((long) (-18));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
      player0.getTimeOfDeath();
      player0.toString();
      player1.getZ();
      player1.toString();
      System.setCurrentTimeMillis((-1238L));
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-18L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.flush();
      mockFileOutputStream0.write((int) (short)4919);
      dataOutputStream0.writeShort(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte) (-1);
      dataOutputStream0.write(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(dataOutputStream0);
      byte[] byteArray1 = player0.pack();
      int int0 = Packable.TEXT_MESSAGE;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, "+Qw.ro", 0);
      player0.setDead(573L, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      player0.unpack(dataInputStream1);
      player0.setDead((long) 0, false);
      player0.gangStrength();
      byteArrayInputStream0.mark((byte)0);
      player0.pack();
      player0.setConnected(false);
      player0.getName();
      player0.isConnected();
      player0.setX(1);
      player0.setY(618.0F);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "+Qw.ro", 0);
      player0.setDead(573L, true);
      player0.getSubparty();
      player0.gangStrength();
      player0.reset(true);
      player0.setDead(0L);
      player0.setX(0.0F);
      player0.setMoney(0.0F);
      player0.setDead(1392409281320L, false);
      player0.getX();
      player0.setZ(1.0F);
      player0.getZ();
      player0.getZ();
      Player player1 = new Player(4, "$>aR(!KR|P~", "1#rz!`XK", 1, (byte)10);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0862180084758277
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.setDead(2045L);
      Player player1 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)33;
      player1.isJoinOK(player0, false);
      Player player2 = new Player((byte) (-5), "", "0.0.0.0", (byte)0, 5);
      player0.isJoinOK(player2, true);
      player0.getName();
      player2.pack();
      player2.getZ();
      player2.toString();
      player0.gangStrength();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertTrue(player0.isDead());
      assertFalse(player2.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(14318);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player14318", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9975924732932673
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      Player player1 = new Player((short)4919, "EhXMt\"!$qc+p", "E#j1!;$", 439, (-18));
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player1.setY(439);
      player1.setY(0.2F);
      player1.isJoinOK(player0, false);
      player1.type();
      byte[] byteArray0 = player0.pack();
      player0.setY(1142.819F);
      player0.setY(0.0F);
      player0.isJoinOK(player1, false);
      player1.unpack(byteArray0);
      player0.pack();
      player1.pack();
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3781438627923985
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.setDead(2045L);
      Player player1 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = (int) (short)4919;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.getSubparty();
      player1.setY(0);
      player1.isJoinOK(player0, true);
      Player player2 = new Player();
      byte[] byteArray0 = player2.pack();
      player2.getName();
      player0.getZ();
      player1.unpack(byteArray0);
      player0.setZ((-3284.1F));
      player0.toString();
      float float0 = player0.getZ();
      assertTrue(player0.isDead());
      assertEquals((-3284.1F), float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.975102728219374
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)5;
      Player player0 = new Player((byte) (-2), "P^3H", "P^3H", (byte)0, 33);
      player0.id = 33;
      Player player1 = new Player((byte)5, (String) null, "<1Hj~4}86( GVOHu=3", 1);
      Player player2 = new Player((-1659), (String) null, (short)4919);
      Player player3 = new Player();
      Player player4 = new Player((short)4919);
      player4.remove(player2);
      Player player5 = new Player((byte) (-2), "", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (byte)0, (short)4919);
      player4.getPictureId();
      player1.toString();
      player3.type();
      player1.pack();
      player1.add(player3);
      player5.setZ(1.0F);
      assertEquals(1.0F, player5.getZ(), 0.01F);
      
      player2.getName();
      player1.pack();
      assertEquals(5, player1.type());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5562001863305714
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(19, "&3.M1", 19);
      player0.setDead((long) 19);
      player0.getSubparty();
      player0.pack();
      player0.gangStrength();
      player0.isDead();
      player0.getX();
      player0.setDead();
      player0.getZ();
      Player player1 = new Player((-1089));
      byte[] byteArray0 = player1.pack();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player1.isDead();
      player1.setZ(10.0F);
      player1.reset(false);
      player1.setDead();
      player0.unpack(byteArray0);
      player1.setY((-2359.1472F));
      player0.getX();
      player0.gangStrength();
      player0.getStrength();
      player1.getMoney();
      player1.head = (Party) player0;
      player1.reset(false);
      System.setCurrentTimeMillis((short)4919);
      player0.pack();
      Player player2 = new Player(1, "GOHr6,Sb", "&3.M1", 2815, 2815);
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals("Player-1089", player0.toString());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte byte0 = (byte)0;
      Player player0 = new Player((byte) (-108), "module.ModuleBrowserDialog$ModuleFilter", 836);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte) (-53);
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte) (-109);
      byteArray0[6] = (byte)47;
      Player player0 = new Player((byte)88, "", 1095);
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1095, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1313650219229507
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-18), "EhMt\"!qcp", "E#j1!;$", (-18));
      Player player1 = new Player((-2751), "E#j1!;$", "EhMt\"!qcp", 1, (-2333));
      Player player2 = new Player((-2751), "E#j1!;$", "EhMt\"!qcp", (short)4919);
      player2.setJoinOK(player0, true);
      player1.setY((-2333));
      player2.setY((-733.7F));
      Player player3 = new Player();
      player3.isJoinOK(player2, false);
      Player player4 = new Player((-1960), "E#j1!;$", "EhMt\"!qcp", (-2333));
      player1.setZ((-2333));
      Player player5 = new Player((short)4919, "EhMt\"!qcp", "", (short)4919, 1527);
      player5.isJoinOK(player1, true);
      player5.getName();
      player5.pack();
      player1.type();
      player1.pack();
      assertEquals((-2333.0F), player1.getY(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3805678363275375
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(583L);
      player0.setZ((-1461));
      Player player1 = new Player((-1461), "<'D*'", "<'D*'", (-1461), 0);
      player1.setDead((-1386L));
      player1.setZ((short)4919);
      player1.reset(false);
      player1.setMoney((short)4919);
      player0.add(player1);
      player0.setJoinOK(player1, false);
      player0.getMoney();
      player0.type();
      player1.pack();
      player1.head = (Party) player0;
      player1.setZ(0.0F);
      player0.getMoney();
      player1.getStrength();
      player0.reset(false);
      player1.getIP();
      assertEquals(4919.0F, player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      player0.setY(0);
      player0.setY((-1875));
      player0.getMoney();
      player0.getMoney();
      player0.getStrength();
      player0.getY();
      Player player1 = new Player((-1875), "v9pdsSse=I{< }@7", (String) null, 4);
      player1.boss = (Party) player0;
      player1.getZ();
      player1.setZ(0.0F);
      int int0 = player0.type();
      assertEquals((-1875.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", "E#j1!;$", (-18));
      player0.setDead(2045L);
      Player player1 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", (short)4919, (short)4919);
      player1.reset(false);
      player1.id = 0;
      player0.getSubparty();
      System.setCurrentTimeMillis((-18));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-105);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)19;
      byteArray0[7] = (byte) (-91);
      byteArray0[8] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, (String) null, (String) null, (-434), 2815);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("5(1", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.writeShort(2615);
      dataOutputStream0.writeBytes("");
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9761326214173685
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(0, "/E#j1!;$", "EhXMt\"!$qc+p", 0, 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      assertEquals(2045L, player0.getTimeOfDeath());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)0;
      player1.unpack(byteArray0);
      player0.setDead((long) 0);
      player0.getTimeOfDeath();
      assertEquals(0, player0.getStrength());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(0, "90|TcE", "90|TcE", 0);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      player0.isJoinOK(player1, false);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream2);
      DataOutputStream dataOutputStream1 = new DataOutputStream(pipedOutputStream2);
      try { 
        dataOutputStream1.writeShort((-17921));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-118);
      boolean boolean0 = player0.isConnected();
      assertEquals(0, player0.getPictureId());
      assertEquals((-1875), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      player0.setY(0);
      player0.setDead(0L, false);
      player0.getMoney();
      player0.getMoney();
      int int0 = Packable.ACTION;
      player0.getY();
      assertTrue(player0.isDead());
      
      Player player1 = new Player((-1875), "v9pdsSse=I{< }@7", (String) null, 4);
      player1.getZ();
      player1.setZ(0.0F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player0.id = 0;
      player0.getSubparty();
      Player player1 = new Player(0, "EhXMt\"!$qc+p", 455);
      Player player2 = new Player();
      player1.remove(player2);
      Player player3 = new Player(455, "1PEwX'^W\"", "", (short)4919, (short)4919);
      int int0 = player1.getPictureId();
      assertEquals(455, int0);
      
      player1.toString();
      int int1 = player2.type();
      assertEquals(5, int1);
      
      player1.pack();
      player3.setZ(0);
      String string0 = player2.getName();
      assertEquals(0, player2.getPictureId());
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, player2.getStrength());
      
      player3.pack();
      assertEquals(0L, player3.getTimeOfDeath());
      assertTrue(player3.isConnected());
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals("1PEwX'^W\"", player3.getIP());
      assertEquals(4919, player3.getStrength());
      assertEquals(0.0F, player3.getZ(), 0.01F);
      assertEquals(0.0F, player3.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(4919, "jC0.", 4919);
      player0.setX(2323.8F);
      player0.setY((-1.0F));
      player0.setY(4919);
      player0.setDead(2001L);
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((-1812L));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0, "90|TcE", "90|TcE", 0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{W]\"!hm~11,E", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      player0.pack(dataOutputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      int int0 = (-5523);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "state.Party";
      Player player0 = new Player((-15), "state.Party", "state.Party", 0, (-1875));
      player0.gangStrength();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.flush();
      int int0 = (-273);
      dataOutputStream0.writeShort((-273));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-273));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-82);
      byteArray0[7] = (byte)63;
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 459);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte) (-1);
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((-18));
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      System.setCurrentTimeMillis(2524L);
      Player player0 = new Player();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      sequenceInputStream1.read();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-18), "EhXMt\"!$qc+p", (-18));
      player0.setDead(2045L);
      Player player1 = new Player((-18), "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player1.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player0.isDead();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      player0.setY(0.0F);
      player0.isJoinOK(player1, false);
      assertTrue(player0.isDead());
      
      player1.setX(0.0F);
      Player player2 = new Player((-1019), "1PEwX'^W\"", "", 256);
      player2.setZ(0.0F);
      assertEquals(256, player2.getPictureId());
  }
}
