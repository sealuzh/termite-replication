/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:57:07 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.130122473135964
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer0.setXPath("L`SxPt7a&B|lWo.A^");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals("`", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("SxPt7a", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer("u$[;1");
      Token token5 = xPathLexer4.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer2.setPreviousToken(token4);
      Token token6 = xPathLexer0.leftParen();
      assertEquals("&", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
      
      xPathLexer1.dots();
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer4.nextToken();
      assertEquals("$", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer4.equals();
      assertEquals("[", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer0.pipe();
      assertEquals("B", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer3.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer4.rightBracket();
      assertEquals(4, token15.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token16 = xPathLexer5.star();
      assertEquals(20, token16.getTokenType());
      
      xPathLexer4.or();
      xPathLexer5.plus();
      Token token17 = xPathLexer5.comma();
      assertEquals(32, token17.getTokenType());
      
      Token token18 = xPathLexer5.plus();
      assertEquals(5, token18.getTokenType());
      
      Token token19 = xPathLexer4.doubleColon();
      assertEquals(19, token19.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.157983211791251
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (21) (r)", string0);
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("wRM", token2.getTokenText());
      
      xPathLexer1.or();
      Token token3 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token3);
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.setXPath("");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(":", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.at();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer2.setPreviousToken(token5);
      assertEquals(16, token5.getTokenType());
      
      Token token7 = xPathLexer3.leftParen();
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals("1I", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("-", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer2.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer1.rightBracket();
      assertEquals(4, token13.getTokenType());
      assertEquals("T", token13.getTokenText());
      
      Token token14 = xPathLexer0.star();
      assertEquals(20, token14.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.or();
      xPathLexer1.div();
      Token token15 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token15.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.729832139040542
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(";/UX#Kz7t,");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%pVF]iAJLEZ)UM", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(";/UX#Kz7t,");
      Token token3 = xPathLexer1.plus();
      assertEquals("/", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("%", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer0.comma();
      xPathLexer3.and();
      xPathLexer1.star();
      Token token6 = xPathLexer2.slashes();
      assertEquals(";/", token6.getTokenText());
      
      xPathLexer3.at();
      Token token7 = xPathLexer1.dollar();
      assertEquals("#", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("V", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer2.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("UX", token11.getTokenText());
      
      xPathLexer0.star();
      xPathLexer4.or();
      XPathLexer xPathLexer7 = new XPathLexer("*{CdM6]h");
      Token token12 = xPathLexer7.minus();
      assertEquals("*", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      assertEquals("K", token13.getTokenText());
      
      Token token14 = xPathLexer6.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1392878402291893
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.plus();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer("&Y`Fu]KLnd2y;JMJ4@");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.at();
      Token token4 = xPathLexer2.nextToken();
      xPathLexer1.setPreviousToken(token4);
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.dots();
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer1.nextToken();
      Token token9 = xPathLexer3.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer3.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals("Y", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer4.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer4.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer2.doubleColon();
      assertEquals(19, token15.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.180356864952881
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.getPreviousToken();
      xPathLexer1.or();
      Token token1 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.setXPath("");
      Token token2 = xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      token2.toString();
      xPathLexer0.consume(642);
      xPathLexer2.plus();
      xPathLexer2.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("[ (21) (r)");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer3.plus();
      xPathLexer0.equals();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token3 = xPathLexer6.or();
      assertNull(token3);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.190638481609358
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (21) (r)", string0);
      
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("wRM", token2.getTokenText());
      
      xPathLexer1.or();
      Token token3 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token3);
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.setXPath("");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer2.setPreviousToken(token5);
      assertEquals(16, token5.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("T", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("/", token11.getTokenText());
      
      xPathLexer2.leftBracket();
      Token token12 = xPathLexer1.rightBracket();
      assertEquals("8", token12.getTokenText());
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer1.or();
      Token token14 = xPathLexer1.comma();
      assertEquals(32, token14.getTokenType());
      assertEquals("G", token14.getTokenText());
      
      Token token15 = xPathLexer1.plus();
      assertEquals(5, token15.getTokenType());
      assertEquals("`", token15.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2731914619245592
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("/[G~NH6\"1");
      xPathLexer1.mod();
      xPathLexer0.relationalOperator();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("/[G~NH6\"1");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.not();
      xPathLexer3.at();
      XPathLexer xPathLexer5 = new XPathLexer("/[G~NH6\"1");
      xPathLexer5.colon();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.at();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("/[G~NH6\"1");
      xPathLexer3.dots();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.doubleColon();
      XPathLexer xPathLexer10 = new XPathLexer("/[G~NH6\"1");
      xPathLexer10.at();
      xPathLexer1.equals();
      xPathLexer6.slashes();
      xPathLexer9.equals();
      xPathLexer8.number();
      Token token1 = xPathLexer8.or();
      assertNull(token1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0966269724888975
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer2.doubleColon();
      xPathLexer1.at();
      xPathLexer1.equals();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.equals();
      xPathLexer2.star();
      Token token1 = xPathLexer2.or();
      assertNull(token1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6845606759632155
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1194));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8417909564967372
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.setXPath("V*");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.rightBracket();
      xPathLexer0.consume(2461);
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (*)");
      xPathLexer1.plus();
      xPathLexer1.leftParen();
      token0.toString();
      xPathLexer1.consume((-2247));
      xPathLexer0.slashes();
      xPathLexer1.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.star();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer1.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8433053568049123
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-8Q O1VC6K8;%3-+");
      Token token0 = xPathLexer0.at();
      assertEquals(".", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals("-8Q", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8358849525323446
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(">XT|+(6K");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer2.equals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer(">XT|+(6K");
      xPathLexer2.equals();
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer4.not();
      xPathLexer2.at();
      xPathLexer1.nextToken();
      xPathLexer4.div();
      xPathLexer4.rightBracket();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9704406355462378
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.LA((-1));
      Token token1 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.dots();
      token1.toString();
      xPathLexer0.consume((-1));
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.setPreviousToken(token3);
      xPathLexer0.dots();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("[ (5) (G)");
      xPathLexer2.at();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("QD@zGPY");
      xPathLexer3.nextToken();
      xPathLexer1.equals();
      xPathLexer3.star();
      Token token4 = xPathLexer1.or();
      assertNull(token4);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.110299905914592
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.setXPath("V*");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setXPath("[ (20) (*)");
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.setXPath("t8H&A:Z},!~");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("t8H&A:Z},!~");
      xPathLexer1.nextToken();
      xPathLexer1.star();
      xPathLexer1.leftBracket();
      xPathLexer0.at();
      xPathLexer0.slashes();
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9987763856643368
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("< ", token2.getTokenText());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.mod();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer3.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer2.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("WO1Y t1U");
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("Ds", token8.getTokenText());
      
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("IkZGfM,v=xuGe'X");
      Token token10 = xPathLexer7.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("I", token10.getTokenText());
      
      xPathLexer7.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.or();
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token12 = xPathLexer9.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer6.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer5.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6859757121665366
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.setXPath("V*");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setXPath("[ (20) (*)");
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.equals();
      xPathLexer1.star();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1838396915512734
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      xPathLexer1.rightParen();
      xPathLexer1.pipe();
      xPathLexer1.leftParen();
      xPathLexer0.or();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer("[ (26) (w)");
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.at();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token1 = xPathLexer5.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9531696410576371
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(";/UX#Kz7t,");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(";/UX#Kz7t,");
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("%", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.or();
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("p", token6.getTokenText());
      
      xPathLexer3.and();
      xPathLexer1.star();
      Token token7 = xPathLexer2.slashes();
      assertEquals("/", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      xPathLexer3.at();
      Token token8 = xPathLexer3.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer3.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer1.dots();
      assertEquals("X", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals("V", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      xPathLexer3.pipe();
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer1.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer0.star();
      assertEquals("F", token15.getTokenText());
      assertEquals(20, token15.getTokenType());
      
      xPathLexer1.or();
      xPathLexer3.comma();
      Token token16 = xPathLexer1.doubleColon();
      assertEquals("z7", token16.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8570102562821125
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("A", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("*", token3.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("^", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(5, token6.getTokenType());
      assertEquals("+", token6.getTokenText());
      
      xPathLexer0.setPreviousToken(token5);
      xPathLexer2.leftParen();
      xPathLexer1.dots();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals("1G", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("WO1Y t1U");
      Token token8 = xPathLexer3.dots();
      assertEquals("W", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("<", token9.getTokenText());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("3", token10.getTokenText());
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      assertEquals("G", token12.getTokenText());
      
      Token token13 = xPathLexer3.notEquals();
      assertEquals("O1", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.258908217850163
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (19) (L`)", string0);
      
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (23) (x)", string1);
      
      Token token4 = xPathLexer0.number();
      assertEquals("7", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("30MW@F|z6Z|{~");
      Token token6 = xPathLexer1.rightParen();
      assertEquals("3", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("0", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (23) (S)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("RSSWp:^&og4[");
      Token token8 = xPathLexer2.nextToken();
      assertEquals("[", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer4.nextToken();
      assertEquals("RSSWp", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer4.and();
      Token token10 = xPathLexer4.plus();
      assertEquals(":", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("G$,gV");
      xPathLexer1.rightBracket();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("lu4Zj=1");
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer2.equals();
      assertEquals(" ", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("m[Pm}1PFQBg|");
      Token token13 = xPathLexer5.at();
      assertEquals("G", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      xPathLexer0.operatorName();
      Token token14 = xPathLexer0.nextToken();
      assertEquals("lWo.A^", token14.getTokenText());
      
      xPathLexer3.div();
      Token token15 = xPathLexer6.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.36715800144217
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("WO1Y t1U");
      Token token2 = xPathLexer1.not();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer1.leftParen();
      xPathLexer1.dots();
      xPathLexer1.notEquals();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer1.rightBracket();
      xPathLexer1.star();
      xPathLexer1.or();
      xPathLexer0.comma();
      xPathLexer1.slashes();
      Token token3 = xPathLexer0.doubleColon();
      assertNotSame(token3, token1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9335239327238303
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer2.equals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer2.dollar();
      xPathLexer2.comma();
      xPathLexer0.plus();
      xPathLexer2.slashes();
      xPathLexer3.not();
      xPathLexer2.at();
      XPathLexer xPathLexer4 = new XPathLexer("aB7_'9+JQ4");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dollar();
      xPathLexer4.at();
      xPathLexer1.slashes();
      xPathLexer5.nextToken();
      xPathLexer1.equals();
      xPathLexer4.star();
      Token token0 = xPathLexer5.or();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0424222970967993
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      xPathLexer1.notEquals();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.mod();
      xPathLexer0.relationalOperator();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("WO1Y t1U");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer4.at();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer3.nextToken();
      xPathLexer1.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      xPathLexer5.dollar();
      xPathLexer4.setPreviousToken((Token) null);
      xPathLexer5.setXPath("aE~ 8");
      xPathLexer5.nextToken();
      xPathLexer0.and();
      xPathLexer4.dollar();
      xPathLexer2.at();
      xPathLexer4.slashes();
      xPathLexer4.nextToken();
      xPathLexer0.equals();
      xPathLexer5.star();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2630293383490003
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.rightParen();
      xPathLexer1.identifier();
      xPathLexer1.and();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.and();
      xPathLexer1.comma();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer2.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer2.plus();
      xPathLexer1.nextToken();
      xPathLexer1.slashes();
      xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer2.setXPath("aE~ 8");
      xPathLexer2.nextToken();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer3.equals();
      xPathLexer1.literal();
      xPathLexer0.colon();
      xPathLexer1.not();
      Token token1 = xPathLexer3.div();
      assertNull(token1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1162084897516524
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.number();
      xPathLexer1.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token3 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.not();
      assertEquals("z", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("pVn", token6.getTokenText());
      
      xPathLexer1.setPreviousToken(token3);
      assertEquals("7", token3.getTokenText());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer3.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer4.getXPath();
      xPathLexer0.consume(1486);
      Token token11 = xPathLexer4.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.016895507872656
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.comma();
      xPathLexer1.number();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.number();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token1 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.not();
      xPathLexer3.at();
      xPathLexer0.nextToken();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.leftParen();
      xPathLexer3.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.equals();
      xPathLexer4.plus();
      xPathLexer4.operatorName();
      xPathLexer5.pipe();
      XPathLexer xPathLexer6 = new XPathLexer("dz");
      Token token2 = xPathLexer6.div();
      assertNull(token2);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.04076519163836
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.getPreviousToken();
      xPathLexer1.or();
      Token token1 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.setXPath("");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.at();
      xPathLexer2.nextToken();
      xPathLexer2.setPreviousToken(token2);
      xPathLexer3.leftParen();
      xPathLexer0.dots();
      xPathLexer1.doubleColon();
      xPathLexer2.dots();
      xPathLexer1.nextToken();
      xPathLexer3.pipe();
      xPathLexer2.leftBracket();
      Token token3 = xPathLexer1.rightBracket();
      xPathLexer0.star();
      xPathLexer1.or();
      xPathLexer1.comma();
      xPathLexer1.plus();
      Token token4 = xPathLexer0.notEquals();
      assertNotSame(token4, token3);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7136632972934622
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.setXPath("FKj93Y}vg_zU~B#E");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer0.dots();
      xPathLexer1.doubleColon();
      xPathLexer0.plus();
      xPathLexer1.operatorName();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6431886997296608
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("/[G~NH6\"1");
      xPathLexer0.relationalOperator();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("/[G~NH6\"1");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token3 = xPathLexer4.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer2.comma();
      assertEquals("[", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("/", token7.getTokenText());
      
      xPathLexer2.setPreviousToken(token6);
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("/[G~NH6\"1");
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer2.star();
      assertEquals("G", token12.getTokenText());
      
      xPathLexer3.or();
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9350181220174076
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.LA(10);
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      token0.toString();
      token0.toString();
      xPathLexer1.consume((-2670));
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer1.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9775927850209771
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (26) (z)", string0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (15) (j7pVn)", string1);
      
      Token token3 = xPathLexer0.colon();
      assertEquals("]", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("5PUG@kniq.");
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("J", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("L", token8.getTokenText());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9721130417583168
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.number();
      token2.toString();
      token2.toString();
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightBracket();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      token0.toString();
      xPathLexer1.consume((-1500));
      xPathLexer1.plus();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer2.at();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.119128092115014
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLe}er");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("8'y");
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("pnfr");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.mod();
      Token token2 = xPathLexer2.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer3.dots();
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      int int0 = xPathLexer2.endPosition();
      assertEquals(4, int0);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer1.at();
      xPathLexer1.at();
      xPathLexer0.plus();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("8'y");
      Token token5 = xPathLexer5.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("8", token5.getTokenText());
      
      Token token6 = xPathLexer5.plus();
      assertEquals("'", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.relationalOperator();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer2.at();
      assertEquals("n", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer8.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer8.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer4.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.171594520082188
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("g", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.or();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (A)", string0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("d", token3.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.notEquals();
      token4.toString();
      String string1 = token4.toString();
      assertEquals("[ (22) (=*)", string1);
      
      Token token5 = xPathLexer0.colon();
      assertEquals("|", token5.getTokenText());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer1.and();
      xPathLexer3.div();
      xPathLexer2.setPreviousToken(token4);
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (22) (=*)");
      XPathLexer xPathLexer5 = new XPathLexer("?M1-%gW;,g");
      Token token12 = xPathLexer5.nextToken();
      assertEquals("?M1-%gW;,g", token12.getTokenText());
      
      xPathLexer3.equals();
      Token token13 = xPathLexer2.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer4.equals();
      assertEquals(21, token14.getTokenType());
      assertEquals("[", token14.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.104287874108821
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.consume(2);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("I[ 9DEC_f +f");
      Token token6 = xPathLexer2.nextToken();
      assertEquals("I", token6.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer1.leftParen();
      Token token7 = xPathLexer2.dots();
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.nextToken();
      assertEquals("DEC_f +f", token11.getTokenText());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("I[ 9DEC_f +f");
      Token token13 = xPathLexer0.whitespace();
      assertEquals((-2), token13.getTokenType());
      
      Token token14 = xPathLexer1.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.046996290741541
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("7", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("]", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("i", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("A", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("JLEZ", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token10 = xPathLexer0.dots();
      assertEquals(")", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token12 = xPathLexer2.pipe();
      assertEquals("z", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6416686640598628
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("*ko4");
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      Token token0 = xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.927074938546049
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.number();
      xPathLexer0.LA(1);
      token1.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.div();
      xPathLexer0.mod();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.consume(1);
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.consume((-2455));
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken((Token) null);
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.168105783369659
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer1.nextToken();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token5);
      assertEquals("G", token5.getTokenText());
      
      xPathLexer0.setXPath("u^_1G<3])y2[=Ag>");
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("_1G", token6.getTokenText());
      
      xPathLexer1.and();
      Token token7 = xPathLexer1.dollar();
      assertEquals("<", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer1.operatorName();
      xPathLexer2.slashes();
      Token token8 = xPathLexer1.not();
      assertEquals("3", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6817650038310867
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = "L`\\SxPt7a&B|lWo.A^";
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.equals();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("[ (19) (L`)");
      xPathLexer1.operatorName();
      Token token1 = xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer2.setPreviousToken(token1);
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.122406536817238
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(">)hV|:");
      xPathLexer1.setPreviousToken(token1);
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer2.equals();
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.nextToken();
      xPathLexer4.equals();
      xPathLexer1.star();
      Token token2 = xPathLexer4.or();
      assertNull(token2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2162951339057098
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      xPathLexer1.rightParen();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (w)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("`");
      xPathLexer1.colon();
      xPathLexer0.and();
      xPathLexer1.plus();
      XPathLexer xPathLexer5 = new XPathLexer("G$,gV");
      xPathLexer4.relationalOperator();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("`");
      xPathLexer6.rightBracket();
      xPathLexer5.and();
      xPathLexer1.dollar();
      xPathLexer6.at();
      xPathLexer6.slashes();
      xPathLexer4.nextToken();
      xPathLexer5.equals();
      xPathLexer1.star();
      Token token1 = xPathLexer5.or();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9374666388316424
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-485));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5185051782954715
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("C)", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.notEquals();
      assertEquals(",8", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("{k{Ox5&%,,QQ:");
      xPathLexer0.mod();
      xPathLexer2.relationalOperator();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer4.at();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer2.setPreviousToken(token1);
      assertEquals(21, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      Token token6 = xPathLexer4.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer2.dots();
      assertEquals("{", token7.getTokenText());
      
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals("o", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      xPathLexer4.nextToken();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals("+", token11.getTokenText());
      assertEquals(3, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token12 = xPathLexer3.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer3.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8327335174120227
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.getPreviousToken();
      xPathLexer1.or();
      Token token1 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.LA(26);
      xPathLexer1.div();
      xPathLexer0.setXPath("");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume((-1599));
      xPathLexer3.plus();
      xPathLexer2.setPreviousToken(token1);
      // Undeclared exception!
      try { 
        xPathLexer3.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7669382721765505
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("8'y");
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("co", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("pnfr");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.dollar();
      xPathLexer3.mod();
      Token token2 = xPathLexer2.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer3.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      int int0 = xPathLexer2.endPosition();
      assertEquals(4, int0);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("m.", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      xPathLexer1.at();
      xPathLexer1.at();
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("8'y");
      Token token5 = xPathLexer5.dollar();
      assertEquals("8", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.relationalOperator();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      Token token8 = xPathLexer5.nextToken();
      assertEquals((-1), token8.getTokenType());
      assertEquals("", token8.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2960718495411765
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      token1.toString();
      xPathLexer0.consume((-1));
      Token token2 = xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      token2.toString();
      token2.toString();
      xPathLexer1.div();
      xPathLexer0.pipe();
      xPathLexer1.setPreviousToken(token2);
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer("HD");
      xPathLexer2.minus();
      Token token3 = xPathLexer2.or();
      assertNull(token3);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9216858494090243
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer1.leftParen();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      xPathLexer0.nextToken();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer3.equals();
      xPathLexer0.nextToken();
      xPathLexer3.star();
      xPathLexer2.leftParen();
      xPathLexer3.at();
      xPathLexer0.slashes();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1488781968523494
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.consume(2);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.consume(21);
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.087163808625637
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      String string0 = token2.toString();
      assertEquals("[ (26) (w)", string0);
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token6.getTokenText());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("[ (26) (w)");
      xPathLexer5.nextToken();
      Token token7 = xPathLexer6.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("[ (26) (w)");
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("[?iI+91OL");
      xPathLexer8.or();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer3.or();
      Token token9 = xPathLexer4.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token10 = xPathLexer8.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
      
      Token token11 = xPathLexer8.rightBracket();
      assertEquals("?", token11.getTokenText());
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer10.slashes();
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.018873249809344
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.LA(1);
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.notEquals();
      xPathLexer0.div();
      token0.toString();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("ngM9D(>");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer3.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.equals();
      xPathLexer0.star();
      Token token1 = xPathLexer2.or();
      assertNull(token1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2477362827276575
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer0.comma();
      xPathLexer0.setXPath("com.werben.sxpath.XatnLexer");
      Token token0 = xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("i60+fO");
      xPathLexer1.nextToken();
      token0.toString();
      xPathLexer1.setXPath("com.werben.sxpath.XatnLexer");
      xPathLexer0.rightBracket();
      xPathLexer1.not();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer2.leftBracket();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer2.nextToken();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer3.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer1.setXPath("i60+fO");
      xPathLexer1.nextToken();
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("[ (13) (c)");
      xPathLexer4.at();
      xPathLexer3.slashes();
      xPathLexer2.nextToken();
      xPathLexer4.equals();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.star();
      XPathLexer xPathLexer6 = new XPathLexer("V+Lxrq=MN");
      Token token1 = xPathLexer5.or();
      assertNull(token1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.078892634094056
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("6fK23X\tCF'?#kB<0k(");
      xPathLexer1.relationalOperator();
      xPathLexer0.consume();
      xPathLexer1.nextToken();
      xPathLexer0.number();
      xPathLexer1.notEquals();
      xPathLexer1.at();
      token0.toString();
      xPathLexer0.equals();
      token0.toString();
      xPathLexer1.consume(2921);
      xPathLexer1.plus();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer2.not();
      xPathLexer2.dollar();
      xPathLexer2.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer3 = new XPathLexer("[ (19) (co)");
      xPathLexer1.nextToken();
      xPathLexer0.star();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.leftBracket();
      xPathLexer4.at();
      xPathLexer0.slashes();
      xPathLexer2.literal();
      xPathLexer1.or();
      Token token1 = xPathLexer2.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9944697386359689
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      token1.toString();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("C)e,8:+T>9");
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("C)e,8:+T>9");
      xPathLexer3.relationalOperator();
      Token token2 = xPathLexer0.dots();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.endPosition();
      xPathLexer0.pipe();
      xPathLexer3.currentPosition();
      xPathLexer2.doubleColon();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("C)e,8:+T>9");
      xPathLexer0.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.setPreviousToken(token2);
      xPathLexer3.dots();
      XPathLexer xPathLexer8 = new XPathLexer("[ (19) (C))");
      xPathLexer6.at();
      xPathLexer5.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.1102140346410803
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer1.nextToken();
      xPathLexer1.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.slashes();
      xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer0.setXPath("u^_1G<3])y2[=Ag>");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer2.setPreviousToken(token0);
      xPathLexer1.leftParen();
      xPathLexer1.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.doubleColon();
      xPathLexer2.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.at();
      xPathLexer2.nextToken();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token2 = xPathLexer6.notEquals();
      assertNotSame(token2, token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9554183239741727
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("^_", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("u^_1G<3])y2[=Ag>");
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("u", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer3.mod();
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer5.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("+", token11.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.100640540704119
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("p", token2.getTokenText());
      
      xPathLexer0.or();
      String string0 = token1.toString();
      assertEquals("[ (22) (j7)", string0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.colon();
      assertEquals("A", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      assertEquals("Vn", token3.getTokenText());
      
      xPathLexer2.leftParen();
      xPathLexer0.dots();
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("L", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("EZ)UM", token8.getTokenText());
      
      xPathLexer1.pipe();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals("E", token9.getTokenText());
      
      xPathLexer2.rightBracket();
      xPathLexer1.star();
      xPathLexer0.or();
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8227007419416807
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer1.or();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.899098904076217
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.number();
      token1.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.div();
      Token token2 = new Token(1, "L`SxPt7a&B|lWo.A^", 1, 1);
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.consume(1);
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.consume((-2455));
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.963042838236233
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer1.equals();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2216459293718565
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dots();
      token2.toString();
      token2.toString();
      xPathLexer0.consume((-1));
      Token token3 = xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      token3.toString();
      token3.toString();
      xPathLexer1.div();
      xPathLexer1.setPreviousToken(token3);
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.equals();
      xPathLexer0.star();
      xPathLexer1.or();
      xPathLexer0.plus();
      Token token4 = xPathLexer0.rightParen();
      assertNotSame(token4, token1);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.2337170317863375
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token1 = xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      token0.toString();
      token0.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (z)");
      xPathLexer1.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.264557076345061
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      String string0 = token2.toString();
      assertEquals("[ (26) (w)", string0);
      
      xPathLexer0.number();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      Token token5 = xPathLexer1.rightParen();
      assertEquals("[", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(" ", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (w)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("`");
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("(", token7.getTokenText());
      
      xPathLexer0.and();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("2", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("G$,gV");
      xPathLexer4.relationalOperator();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("`");
      Token token9 = xPathLexer6.rightBracket();
      assertEquals("`", token9.getTokenText());
      
      Token token10 = xPathLexer6.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("`");
      xPathLexer7.at();
      Token token11 = xPathLexer4.not();
      assertEquals("`", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer5.nextToken();
      assertEquals(15, token12.getTokenType());
      
      xPathLexer1.div();
      Token token13 = xPathLexer4.number();
      assertEquals(30, token13.getTokenType());
      assertEquals("", token13.getTokenText());
      
      Token token14 = xPathLexer6.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer2.at();
      assertEquals("[", token15.getTokenText());
      
      Token token16 = xPathLexer2.literal();
      assertNotNull(token16);
      assertEquals("(26)", token16.getTokenText());
      assertEquals(27, token16.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0975606276273404
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      Token token2 = xPathLexer0.number();
      token1.toString();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("pVn", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.notEquals();
      assertEquals("]i", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (32) (j)", string0);
      
      Token token5 = xPathLexer0.colon();
      assertEquals("A", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("J", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(",7HRsd&go},");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer2.div();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals(",", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token9 = xPathLexer3.doubleColon();
      assertEquals("zj", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer3.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("7", token10.getTokenText());
      
      Token token11 = xPathLexer3.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("p", token11.getTokenText());
      
      Token token12 = xPathLexer3.not();
      assertEquals("V", token12.getTokenText());
      
      Token token13 = xPathLexer0.at();
      assertEquals("L", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer1.nextToken();
      assertEquals(30, token14.getTokenType());
      assertEquals("7", token14.getTokenText());
      
      xPathLexer3.div();
      Token token15 = xPathLexer1.rightBracket();
      assertEquals(4, token15.getTokenType());
      assertEquals("H", token15.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token16 = xPathLexer4.colon();
      assertEquals(18, token16.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2096309590667333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.notEquals();
      assertEquals("pV", token3.getTokenText());
      
      xPathLexer0.mod();
      String string0 = token1.toString();
      assertEquals("[ (32) (j)", string0);
      
      Token token4 = xPathLexer0.colon();
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token1);
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("A", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("JLEZ", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("U", token9.getTokenText());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      assertEquals("M", token10.getTokenText());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.identifier();
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8989225763280637
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("m.werben.sxpath.XatnLexer", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals("c", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.equals();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer1.comma();
      xPathLexer2.and();
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.slashes();
      Token token6 = xPathLexer1.at();
      assertEquals("m", token6.getTokenText());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer(" X/(]>-E");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.comma();
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer2.literal();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer6.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer7.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.054481202242275
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om\"werbeA.^xpath.XanLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("6fK23X\tCF'?#kB<0k(");
      xPathLexer1.relationalOperator();
      xPathLexer0.consume();
      xPathLexer1.nextToken();
      xPathLexer0.number();
      Token token1 = xPathLexer1.notEquals();
      assertEquals("fK", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer1.at();
      token0.toString();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (o)", string0);
      
      xPathLexer1.consume(2921);
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.pipe();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("om\"werbeA.^xpath.XanLexer");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("^xpath.XanLexer", token7.getTokenText());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer1.consume(2921);
      Token token9 = xPathLexer0.slashes();
      assertEquals("x", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      xPathLexer2.div();
      Token token11 = xPathLexer2.dollar();
      assertEquals("", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1202626847553288
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer2.doubleColon();
      xPathLexer1.at();
      xPathLexer1.equals();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.equals();
      xPathLexer2.rightParen();
      xPathLexer2.star();
      xPathLexer2.or();
      xPathLexer1.colon();
      xPathLexer1.comma();
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.0577534633542363
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.comma();
      xPathLexer1.number();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.number();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.not();
      xPathLexer3.comma();
      xPathLexer3.at();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer3.equals();
      XPathLexer xPathLexer5 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer5.nextToken();
      xPathLexer2.star();
      xPathLexer4.leftBracket();
      xPathLexer4.minus();
      xPathLexer3.slashes();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.3368202940650997
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.rightBracket();
      xPathLexer1.colon();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.equals();
      xPathLexer1.consume((-1991));
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer2.consume((-1991));
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.6892424538911999
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("< ", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      xPathLexer1.relationalOperator();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer("jb!Lk");
      Token token4 = xPathLexer4.doubleColon();
      assertEquals("jb", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer3.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer5.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer4.not();
      assertEquals("L", token12.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8687899260087888
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.comma();
      Token token1 = xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token2 = xPathLexer1.number();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer4 = new XPathLexer("?tJ+*ha");
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("m", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      xPathLexer0.at();
      xPathLexer1.nextToken();
      xPathLexer5.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer5.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.and();
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token9 = xPathLexer9.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token10 = xPathLexer10.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer10.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer10.or();
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.0488446334427697
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sxpath.XathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      String string0 = token3.toString();
      assertEquals("[ (26) (e)", string0);
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer3.pipe();
      assertEquals("c", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer3.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.946571365403026
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("8'y");
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("pnfr");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.mod();
      Token token2 = xPathLexer2.leftParen();
      assertEquals("p", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer3.dots();
      xPathLexer2.relationalOperator();
      xPathLexer2.endPosition();
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer1.at();
      assertEquals("8", token3.getTokenText());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("we", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("n", token6.getTokenText());
      
      xPathLexer2.div();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("r", token7.getTokenText());
      
      xPathLexer1.setPreviousToken((Token) null);
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("y", token8.getTokenText());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("fr", token9.getTokenText());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.4930036864386107
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0e:");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer1.plus();
      xPathLexer0.notEquals();
      xPathLexer1.identifier();
      xPathLexer1.and();
      xPathLexer1.at();
      xPathLexer1.mod();
      xPathLexer1.at();
      xPathLexer1.consume((-3322));
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.1446571038351205
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      xPathLexer0.leftParen();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.dots();
      xPathLexer0.relationalOperator();
      xPathLexer2.endPosition();
      xPathLexer2.doubleColon();
      xPathLexer1.pipe();
      xPathLexer0.currentPosition();
      xPathLexer1.doubleColon();
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("`Ja}l");
      xPathLexer2.number();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierChar('M');
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.consume((-3698));
      // Undeclared exception!
      try { 
        xPathLexer4.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.288229598365458
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(">XT|+(6K");
      xPathLexer1.nextToken();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer2.equals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("aB7_'9+JQ4");
      xPathLexer2.comma();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer2.slashes();
      xPathLexer4.not();
      xPathLexer2.at();
      xPathLexer1.nextToken();
      xPathLexer4.div();
      xPathLexer4.rightBracket();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.210376463031371
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      Token token2 = xPathLexer0.number();
      token1.toString();
      token1.toString();
      xPathLexer0.LA(1);
      token1.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("]i", token3.getTokenText());
      
      xPathLexer0.mod();
      String string0 = token1.toString();
      assertEquals("[ (32) (j)", string0);
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.dots();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(")", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("U", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("M", token8.getTokenText());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2301895094769995
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("< ", token2.getTokenText());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.mod();
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("WO1Y t1U");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer4.at();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer4.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.setXPath("");
      Token token7 = xPathLexer3.identifierOrOperatorName();
      assertEquals("WO1Y", token7.getTokenText());
      assertNotNull(token7);
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer4.doubleColon();
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer6.equals();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("D", token10.getTokenText());
      
      Token token11 = xPathLexer6.nextToken();
      assertEquals(":", token11.getTokenText());
      
      Token token12 = xPathLexer0.equals();
      assertEquals("s", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer2.or();
      Token token14 = xPathLexer3.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer4.colon();
      assertEquals(18, token15.getTokenType());
      
      Token token16 = xPathLexer4.comma();
      assertEquals(32, token16.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8057601619304597
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("nf n]");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      Token token1 = xPathLexer1.notEquals();
      assertEquals("nf", token1.getTokenText());
      
      xPathLexer1.mod();
      Token token2 = xPathLexer1.leftParen();
      assertEquals(" ", token2.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("nf n]");
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setPreviousToken(token4);
      assertEquals(22, token4.getTokenType());
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals(" ", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      xPathLexer3.div();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.393803529005583
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1378));
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.leftParen();
      xPathLexer0.consume(74);
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.106488057221654
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (19) (C))", string0);
      
      Token token2 = xPathLexer0.not();
      xPathLexer0.nextToken();
      String string1 = token1.toString();
      assertEquals("[ (21) (e)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (23) (,)", string2);
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("+", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("T>", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("C)e,8:+T>9");
      Token token7 = xPathLexer2.at();
      assertEquals("C", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (23) (,)");
      Token token8 = xPathLexer0.nextToken();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer3.nextToken();
      assertEquals(3, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
      
      xPathLexer4.literal();
      Token token11 = xPathLexer4.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals(")", token13.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.9467880714666785
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.9676663386852353
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.operatorName();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer2.leftParen();
      xPathLexer0.or();
      xPathLexer3.operatorName();
      xPathLexer1.nextToken();
      xPathLexer0.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer1.equals();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.leftParen();
      xPathLexer3.at();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.926903258634401
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(";/UX#Kz7t,");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.rightParen();
      assertEquals(";", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(";/UX#Kz7t,");
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("%", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer1.dollar();
      Token token4 = xPathLexer0.comma();
      assertEquals("p", token4.getTokenText());
      
      xPathLexer3.and();
      xPathLexer1.star();
      Token token5 = xPathLexer2.slashes();
      assertEquals(";/", token5.getTokenText());
      assertEquals(12, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("V", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer2.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("UX", token10.getTokenText());
      
      xPathLexer0.star();
      xPathLexer4.or();
      XPathLexer xPathLexer7 = new XPathLexer("*{CdM6]h");
      Token token11 = xPathLexer7.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("K", token12.getTokenText());
      
      Token token13 = xPathLexer6.doubleColon();
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8769131471726506
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("`", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      String string0 = token2.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("SxPt7a", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.div();
      Token token4 = new Token(1, "L`SxPt7a&B|lWo.A^", 1, 1);
      token0.toString();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      token4.toString();
      Token token6 = xPathLexer0.pipe();
      String string1 = token6.toString();
      assertEquals("[ (17) (B)", string1);
      
      token4.toString();
      String string2 = token0.toString();
      assertEquals("[ (26) (L)", string2);
      
      xPathLexer0.setPreviousToken(token0);
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("|l", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("W", token9.getTokenText());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer0.literal();
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.1387669279837507
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer1.pipe();
      xPathLexer2.slashes();
      xPathLexer1.currentPosition();
      xPathLexer2.doubleColon();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer2.doubleColon();
      xPathLexer1.isIdentifierChar('M');
      xPathLexer0.consume((-2400));
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("B\"9wyG)GSmm");
      xPathLexer3.nextToken();
      xPathLexer1.rightParen();
      xPathLexer3.isIdentifierChar('!');
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.1526131053372133
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(">XT|+(6K");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer2.equals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.equals();
      assertEquals("g", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer2.dollar();
      assertEquals("9", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("aB7_'9+JQ4");
      Token token6 = xPathLexer2.comma();
      assertEquals("d", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.plus();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("|", token7.getTokenText());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals("6", token8.getTokenText());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("a", token9.getTokenText());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("T", token11.getTokenText());
      
      Token token12 = xPathLexer4.pipe();
      assertEquals("'", token12.getTokenText());
      
      xPathLexer2.consume(108);
      Token token13 = xPathLexer2.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer4.number();
      assertEquals("9", token14.getTokenText());
      assertEquals(30, token14.getTokenType());
      
      xPathLexer2.dollar();
      Token token15 = xPathLexer2.dollar();
      assertEquals(26, token15.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.9173761209305629
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.pipe();
      assertEquals("=", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.LA((-1));
      xPathLexer0.setPreviousToken(token0);
      assertEquals((-2), token0.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("GG", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      token5.toString();
      token5.toString();
      String string0 = token5.toString();
      assertEquals("[ (13) (T)", string0);
      
      xPathLexer0.consume((-1));
      Token token6 = xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      token6.toString();
      String string1 = token6.toString();
      assertEquals("[ (5) (T)", string1);
      
      xPathLexer1.div();
      xPathLexer1.setPreviousToken(token6);
      xPathLexer0.dots();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("^w", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer1.equals();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("&", token10.getTokenText());
      
      xPathLexer1.or();
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1842840495386886
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("j", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (z)", string0);
      
      token3.toString();
      token3.toString();
      String string1 = token3.toString();
      assertEquals("[ (4) (p)", string1);
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("F", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("]i", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("A", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("J", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("LEZ", token9.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("M", token10.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.0579615741800987
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-1032));
      XPathLexer xPathLexer1 = new XPathLexer("qy#Up*^{}iQ*f:(R!Or");
      xPathLexer1.rightParen();
      xPathLexer1.rightBracket();
      xPathLexer1.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7663636285626432
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[s0?Uz");
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.1736292275345814
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      xPathLexer1.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (w)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("`");
      xPathLexer1.colon();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer("G$,gV");
      xPathLexer4.relationalOperator();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("`");
      xPathLexer6.rightBracket();
      xPathLexer6.equals();
      XPathLexer xPathLexer7 = new XPathLexer("`");
      xPathLexer7.at();
      xPathLexer4.not();
      xPathLexer5.nextToken();
      xPathLexer4.notEquals();
      xPathLexer5.slashes();
      xPathLexer6.not();
      xPathLexer1.at();
      xPathLexer7.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer3.LA((-16));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.842938945522732
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.consume((-1118));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.813639122544829
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" xXa}~DW/_g9zn~");
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      boolean boolean0 = xPathLexer0.isIdentifierChar(';');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.233617179555633
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      String string0 = token1.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token2 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("G", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (5) (G)", string1);
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("T", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      char char0 = xPathLexer0.LA(3202);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setXPath("Ag9d=*|F+GGT=^w)&z\"");
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("=", token6.getTokenText());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("Ag", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals("*", token8.getTokenText());
      
      Token token9 = xPathLexer0.equals();
      assertEquals("|", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer2.equals();
      Token token11 = xPathLexer1.star();
      assertEquals("d", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      xPathLexer0.or();
      Token token12 = xPathLexer1.literal();
      assertEquals("*|F+GGT", token12.getTokenText());
      assertEquals(27, token12.getTokenType());
      assertNotNull(token12);
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8949768066210808
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("/[G~NH6\"1");
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      xPathLexer0.relationalOperator();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("/[G~NH6\"1");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("/", token6.getTokenText());
      
      xPathLexer2.and();
      Token token7 = xPathLexer2.dollar();
      assertEquals("[", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer5.star();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer(") (");
      Token token8 = xPathLexer7.nextToken();
      assertEquals(2, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("G", token9.getTokenText());
      
      Token token10 = xPathLexer5.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer4.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer8.notEquals();
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token12 = xPathLexer9.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer8.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer2.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer6.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.711894058340715
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("+\"^@Z&GmhQJOR");
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer1.pipe();
      assertEquals("", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.currentPosition();
      xPathLexer2.doubleColon();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer("Z.t2");
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("L/WZW5jl_r82");
      xPathLexer6.literal();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("+\"", token3.getTokenText());
      
      Token token4 = xPathLexer3.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.at();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("^@Z&GmhQJOR", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer3.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer5.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer6.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer7.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.minus();
      assertEquals("^", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.295339910889756
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer1.pipe();
      xPathLexer2.slashes();
      xPathLexer1.currentPosition();
      xPathLexer2.doubleColon();
      xPathLexer2.minus();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer2.doubleColon();
      xPathLexer1.isIdentifierChar('M');
      xPathLexer0.consume((-2400));
      xPathLexer0.at();
      xPathLexer1.number();
      xPathLexer1.doubleColon();
      xPathLexer1.isIdentifierChar('M');
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.4464933677867333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(".;V)s@");
      XPathLexer xPathLexer2 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer2.nextToken();
      assertEquals("L", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer3.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer3.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer2.slashes();
      assertEquals("`", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer2.dollar();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8621310981928227
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (19) (C))", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (21) (e)", string1);
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("+", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("C)e,8:+T>9");
      Token token8 = xPathLexer2.at();
      assertEquals("C", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (21) (e)");
      Token token9 = xPathLexer0.nextToken();
      assertEquals("9", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer2.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals("e", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer2.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.918729182385594
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer2.equals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer2.dollar();
      xPathLexer2.comma();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer2.slashes();
      xPathLexer3.not();
      xPathLexer2.at();
      xPathLexer1.nextToken();
      xPathLexer1.div();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.09055177648962
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("g", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      String string0 = token4.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token5 = xPathLexer0.dots();
      String string1 = token5.toString();
      assertEquals("[ (13) (F)", string1);
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      String string2 = token0.toString();
      assertEquals("[ (-2) ()", string2);
      
      xPathLexer1.consume(0);
      Token token7 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token7);
      assertEquals("+", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.9819957538586837
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.number();
      token1.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.div();
      Token token2 = new Token(1, "L`SxPt7a&B|lWo.A^", 1, 1);
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.consume(1);
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.consume((-2455));
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.plus();
      xPathLexer1.pipe();
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.0574284260833355
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.number();
      token0.toString();
      Token token1 = xPathLexer0.at();
      assertEquals("j", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (z)", string0);
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token2);
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (30) (7)", string1);
      
      Token token4 = xPathLexer0.colon();
      assertEquals("p", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.pipe();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer0.equals();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("i", token7.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("AJLEZ)UM", token9.getTokenText());
      
      xPathLexer1.getXPath();
      xPathLexer0.consume(1486);
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.3477968224609875
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      String string0 = token2.toString();
      assertEquals("[ (26) (w)", string0);
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      Token token5 = xPathLexer1.rightParen();
      assertEquals("[", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (w)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("`");
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("(", token6.getTokenText());
      
      xPathLexer0.and();
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("G$,gV");
      xPathLexer4.relationalOperator();
      xPathLexer4.relationalOperator();
      Token token8 = xPathLexer5.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("6", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.div();
      Token token10 = xPathLexer6.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.equals();
      assertEquals("[", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("G$,gV");
      Token token12 = xPathLexer7.star();
      assertEquals("G", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer5.not();
      assertEquals("$", token13.getTokenText());
      
      Token token14 = xPathLexer7.at();
      assertEquals("$", token14.getTokenText());
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer2.nextToken();
      assertEquals("(", token15.getTokenText());
      
      Token token16 = xPathLexer0.leftBracket();
      assertEquals(3, token16.getTokenType());
      
      Token token17 = xPathLexer4.rightBracket();
      assertEquals(4, token17.getTokenType());
      assertEquals("`", token17.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.3042399904421265
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      Token token0 = xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("< ", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("T,.}FV,pH[E-;:b>\",$");
      Token token3 = xPathLexer2.rightBracket();
      assertEquals("T", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.at();
      Token token5 = xPathLexer2.nextToken();
      assertEquals(",", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("2|<!5I'$B+E");
      Token token6 = xPathLexer4.leftParen();
      assertEquals("2", token6.getTokenText());
      
      xPathLexer2.dots();
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer4.literal();
      Token token8 = xPathLexer0.dots();
      assertEquals("D", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals("}", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("s", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer1.star();
      assertEquals(20, token14.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token15 = xPathLexer5.comma();
      assertEquals(32, token15.getTokenType());
      
      Token token16 = xPathLexer3.plus();
      assertEquals(5, token16.getTokenType());
      
      Token token17 = xPathLexer1.doubleColon();
      assertEquals(19, token17.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.9191432592110484
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.comma();
      xPathLexer1.number();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.number();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token1 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.not();
      xPathLexer3.at();
      xPathLexer0.nextToken();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer2.identifierOrOperatorName();
      xPathLexer3.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      xPathLexer4.nextToken();
      xPathLexer2.not();
      XPathLexer xPathLexer5 = new XPathLexer("_T4J,eZjem+;`ljMv)c");
      xPathLexer0.at();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("");
      assertFalse(xPathLexer6.equals((Object)xPathLexer2));
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.2357600294249913
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dots();
      assertEquals("m.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      String string0 = token1.toString();
      assertEquals("[ (26) (w)", string0);
      
      xPathLexer0.number();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(" ", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (w)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("`");
      Token token5 = xPathLexer1.colon();
      assertEquals("(", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("G$,gV");
      xPathLexer4.relationalOperator();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("`");
      Token token7 = xPathLexer6.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer6.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("`");
      Token token9 = xPathLexer7.at();
      assertEquals("`", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer4.not();
      assertEquals("`", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer5.nextToken();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer4.notEquals();
      assertEquals(22, token12.getTokenType());
      
      xPathLexer3.minus();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token13 = xPathLexer8.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer3.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      Token token15 = xPathLexer1.comma();
      assertEquals("6", token15.getTokenText());
      assertEquals(32, token15.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.1507382063832186
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("J$g}qu");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.star();
      assertEquals("g", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("q", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("u", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("uO#q6J{?'|t");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals("q", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.currentPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
      
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2227));
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.currentPosition();
      int int1 = xPathLexer0.currentPosition();
      assertEquals((-2222), int1);
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.08380900187931
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer1.leftParen();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      xPathLexer0.nextToken();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer3.star();
      xPathLexer3.at();
      xPathLexer0.slashes();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.972662691967708
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("V*");
      Token token1 = xPathLexer0.dots();
      assertEquals("V", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      String string0 = token2.toString();
      assertEquals("[ (20) (*)", string0);
      
      xPathLexer0.setXPath("[ (20) (*)");
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("[", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      xPathLexer0.at();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      String string1 = token5.toString();
      assertEquals("[ (15) (20)", string1);
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals(23, token4.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals(") ", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals("(", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("*", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.or();
      Token token11 = xPathLexer0.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.427669231039281
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("g9", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("d", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(">XT|+(6K");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      Token token5 = xPathLexer2.equals();
      assertEquals("A", token5.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("aB7_'9+JQ4");
      xPathLexer2.comma();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("*", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals("|", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("6", token9.getTokenText());
      
      Token token10 = xPathLexer4.not();
      assertEquals("a", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals("*", token11.getTokenText());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals(15, token12.getTokenType());
      
      xPathLexer4.div();
      Token token13 = xPathLexer4.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token14 = xPathLexer0.dollar();
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer0.notEquals();
      assertEquals(22, token15.getTokenType());
      
      xPathLexer5.literal();
      Token token16 = xPathLexer5.colon();
      assertEquals(18, token16.getTokenType());
      
      Token token17 = xPathLexer2.comma();
      assertEquals(32, token17.getTokenType());
      
      Token token18 = xPathLexer1.dots();
      assertEquals(13, token18.getTokenType());
      assertEquals("|", token18.getTokenText());
      
      Token token19 = xPathLexer4.pipe();
      assertEquals("7", token19.getTokenText());
      assertEquals(17, token19.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.467779417666863
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0e:");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("0e:");
      xPathLexer1.leftBracket();
      xPathLexer1.plus();
      xPathLexer0.notEquals();
      xPathLexer1.identifier();
      xPathLexer1.and();
      xPathLexer1.at();
      xPathLexer1.mod();
      xPathLexer1.at();
      xPathLexer1.consume((-3322));
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.4471671501804844
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("PyL.O<cI?_r");
      xPathLexer2.not();
      Token token0 = xPathLexer2.slashes();
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer2.doubleColon();
      assertEquals("L.", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer2.not();
      assertEquals("O", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      xPathLexer2.literal();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.057628395223974
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.at();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.consume(2);
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.consume(21);
      Token token5 = xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token5);
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("PyL.O<cI?_r");
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("yL", token7.getTokenText());
      
      Token token8 = xPathLexer3.not();
      assertEquals(".", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer3.nextToken();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer3.leftBracket();
      assertEquals("<", token11.getTokenText());
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer2.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6260515001959885
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("PyL.O<cI?_r");
      xPathLexer2.slashes();
      xPathLexer2.doubleColon();
      xPathLexer2.not();
      xPathLexer0.at();
      xPathLexer2.nextToken();
      xPathLexer2.leftBracket();
      xPathLexer2.literal();
      xPathLexer0.rightBracket();
      xPathLexer2.slashes();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.066604854597651
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (19) (C))", string0);
      
      Token token2 = xPathLexer0.not();
      Token token3 = xPathLexer0.nextToken();
      token1.toString();
      xPathLexer0.number();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(":", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (21) (e)", string1);
      
      token3.toString();
      token3.toString();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      String string2 = token3.toString();
      assertEquals("[ (30) (8)", string2);
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(",", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer0.or();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.910235820193063
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      xPathLexer0.star();
      xPathLexer0.consume((-1));
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.consume((-1));
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierStartChar('#');
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.and();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.0284101584778176
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werben.sxpath.XatnLexer");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.getPreviousToken();
      token1.toString();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("[ (13) (.)");
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werben.sxpath.XatnLexer");
      xPathLexer3.nextToken();
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.star();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("SK:';;L]f:[M=pG");
      xPathLexer5.not();
      Token token2 = xPathLexer3.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.000192793696075
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("PyL.O<cI?_r");
      Token token0 = xPathLexer2.slashes();
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer2.doubleColon();
      assertEquals("yL", token1.getTokenText());
      
      Token token2 = xPathLexer2.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer2.nextToken();
      assertEquals("O", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("PyL.O<cI?_r");
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("P", token6.getTokenText());
      
      xPathLexer1.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals("cI?_r", token8.getTokenText());
      
      Token token9 = xPathLexer4.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer0.or();
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("y", token11.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.095835496071414
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (19) (C))", string0);
      
      Token token2 = xPathLexer0.not();
      Token token3 = xPathLexer0.nextToken();
      String string1 = token1.toString();
      assertEquals("[ (21) (e)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (23) (,)", string2);
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("+", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertNotSame(token6, token3);
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("T>", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("C)e,8:+T>9");
      Token token8 = xPathLexer2.at();
      assertEquals("C", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (23) (,)");
      Token token9 = xPathLexer0.nextToken();
      assertEquals("9", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer2.star();
      assertEquals(")", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer2.not();
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String string0 = "< :Ds=@1xa7rbDEdE^o";
      XPathLexer xPathLexer0 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      String string1 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.954678818109076
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.getPreviousToken();
      xPathLexer1.or();
      Token token2 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token2);
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer3.comma();
      xPathLexer3.at();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setPreviousToken(token1);
      xPathLexer3.pipe();
      xPathLexer1.at();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer2.plus();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.equals();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.star();
      Token token3 = xPathLexer3.or();
      assertNull(token3);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.7953809313716937
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.dollar();
      assertEquals("L", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.number();
      xPathLexer0.LA(1);
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("SxPt7a", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.notEquals();
      assertEquals("&B", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("Wo", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer0.colon();
      assertEquals("A", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      char char0 = xPathLexer2.LA(1);
      assertEquals('\uFFFF', char0);
      
      Token token11 = xPathLexer3.leftParen();
      assertEquals(1, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.or();
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer1.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.1155793045374525
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.dollar();
      assertEquals("L", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.not();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      XPathLexer xPathLexer2 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token3 = xPathLexer2.rightParen();
      assertEquals("L", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("q=kxCj;@M$/u!");
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("l", token5.getTokenText());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("`");
      xPathLexer1.relationalOperator();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("G$,gV");
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token9 = xPathLexer8.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer5.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("q", token10.getTokenText());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals("L", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer2.notEquals();
      assertEquals("`S", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer6.minus();
      assertEquals("`", token13.getTokenText());
      assertEquals(6, token13.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token14 = xPathLexer9.star();
      assertEquals(20, token14.getTokenType());
      
      Token token15 = xPathLexer4.doubleColon();
      assertEquals(19, token15.getTokenType());
      
      Token token16 = xPathLexer3.comma();
      assertEquals(32, token16.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.1980843416885545
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("g9", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(">XT|+(6K");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      Token token4 = xPathLexer2.equals();
      assertEquals("A", token4.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.equals();
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("9", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("aB7_'9+JQ4");
      Token token6 = xPathLexer2.comma();
      assertEquals("d", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.star();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer4.and();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("T", token8.getTokenText());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer2.star();
      assertEquals("*", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      xPathLexer4.or();
      xPathLexer4.and();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer5.identifier();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.4693110676716143
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.whitespace();
      token2.toString();
      token1.toString();
      token0.toString();
      Token token3 = xPathLexer1.rightBracket();
      // Undeclared exception!
      try { 
        token3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.2882803775079252
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(">XT|+(6K");
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer2.equals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("aB7_'9+JQ4");
      xPathLexer2.comma();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer2.slashes();
      xPathLexer4.not();
      xPathLexer2.at();
      xPathLexer1.nextToken();
      xPathLexer4.div();
      xPathLexer4.rightBracket();
      XPathLexer xPathLexer5 = new XPathLexer("Ag9d6*|F+GGT=`w)&z5");
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer4.LA((-1010));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.493406692158642
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.not();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.minus();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer0.not();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.1792243700679683
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("j7", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token2 = xPathLexer0.dots();
      assertEquals("V", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertNotNull(token7);
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer1.getXPath();
      xPathLexer0.consume(11);
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.606380847526367
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("PyL.O<cI?_r");
      Token token0 = xPathLexer2.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer2.doubleColon();
      assertEquals("yL", token1.getTokenText());
      
      Token token2 = xPathLexer2.not();
      assertEquals(".", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("O", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      Token token6 = xPathLexer2.comma();
      assertEquals("<", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer2.plus();
      assertEquals("c", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("I?", token8.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.8341645015378123
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj%pVF]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(";/UX#Kz7t,");
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(";/UX#Kz7t,");
      Token token4 = xPathLexer2.equals();
      assertEquals(";", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("%", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer1.dollar();
      Token token7 = xPathLexer0.comma();
      assertEquals("p", token7.getTokenText());
      
      xPathLexer3.and();
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("U", token8.getTokenText());
      
      xPathLexer2.slashes();
      xPathLexer3.at();
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals("V", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer6.whitespace();
      assertEquals((-2), token12.getTokenType());
      
      xPathLexer6.comma();
      Token token13 = xPathLexer2.notEquals();
      assertEquals("UX", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.literal();
      assertNull(token14);
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token15 = xPathLexer7.colon();
      assertEquals(18, token15.getTokenType());
      
      Token token16 = xPathLexer3.comma();
      assertEquals(32, token16.getTokenType());
      
      Token token17 = xPathLexer0.minus();
      assertEquals(6, token17.getTokenType());
      assertEquals("F", token17.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8362392157487983
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)e,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (19) (C))", string0);
      
      Token token2 = xPathLexer0.not();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (21) (e)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (23) (,)", string2);
      
      xPathLexer0.minus();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer0.minus();
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('j');
      assertTrue(boolean0);
      
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token5);
      assertEquals(6, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.9930136045094393
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.LA(2921);
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.number();
      xPathLexer0.LA(94);
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.pipe();
      assertNotSame(token2, token1);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.1456795648646265
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("V", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("]", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("]i", token8.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("AJLEZ", token10.getTokenText());
      
      xPathLexer1.getXPath();
      xPathLexer1.consume(7);
      Token token11 = xPathLexer1.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.4680208352710347
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.2435830993734243
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("V*");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.leftParen();
      token1.toString();
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.1387912037086205
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dots();
      assertEquals("m.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      String string0 = token1.toString();
      assertEquals("[ (26) (w)", string0);
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer1.comma();
      assertEquals("[", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals(" (", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer4.dots();
      assertEquals("c", token9.getTokenText());
      
      Token token10 = xPathLexer4.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("o", token10.getTokenText());
      
      Token token11 = xPathLexer2.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer3.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer2.literal();
      assertNull(token14);
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token15 = xPathLexer6.colon();
      assertEquals(18, token15.getTokenType());
      
      Token token16 = xPathLexer2.not();
      assertEquals(23, token16.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.3405277035567447
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (w)");
      xPathLexer1.rightParen();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (w)");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.colon();
      xPathLexer2.whitespace();
      xPathLexer1.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.not();
      xPathLexer5.at();
      xPathLexer0.nextToken();
      xPathLexer3.div();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.at();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.relationalOperator();
      xPathLexer0.star();
      xPathLexer4.slashes();
      xPathLexer1.not();
      xPathLexer0.at();
      xPathLexer5.plus();
      xPathLexer6.equals();
      xPathLexer1.comma();
      int int0 = xPathLexer4.endPosition();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.9190736839496063
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.isIdentifierChar('H');
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.equals();
      Token token1 = xPathLexer0.leftParen();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.258520122135668
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.818425934229086
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|v}3Bb{#K<MAvj");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (|v)", string0);
      
      Token token2 = xPathLexer0.not();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("Bb", token3.getTokenText());
      
      String string1 = token2.toString();
      assertEquals("[ (23) (3)", string1);
      
      Token token4 = xPathLexer0.minus();
      assertEquals("{", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("K<", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("|v}3Bb{#K<MAvj");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("[ (23) (3)");
      Token token8 = xPathLexer0.nextToken();
      assertEquals("MAvj", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer2.star();
      assertEquals("v", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer2.not();
      Token token12 = xPathLexer2.at();
      assertEquals("3", token12.getTokenText());
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.043396280760883
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("g", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.or();
      Token token2 = xPathLexer0.number();
      assertEquals("9", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (A)", string0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.notEquals();
      String string1 = token4.toString();
      assertEquals("[ (22) (=*)", string1);
      
      Token token5 = xPathLexer0.whitespace();
      Token token6 = xPathLexer1.number();
      String string2 = token6.toString();
      assertEquals("[ (30) ()", string2);
      
      String string3 = token3.toString();
      assertEquals("[ (15) (d)", string3);
      
      xPathLexer1.identifierOrOperatorName();
      String string4 = token5.toString();
      assertEquals("[ (-2) ()", string4);
      
      xPathLexer1.plus();
      Token token7 = xPathLexer1.identifier();
      xPathLexer0.setPreviousToken(token7);
      Token token8 = xPathLexer0.dots();
      assertEquals("F", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(5, token9.getTokenType());
      assertEquals("+", token9.getTokenText());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("G", token10.getTokenText());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.813379063524758
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.not();
      Token token1 = xPathLexer0.number();
      token1.toString();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer1.div();
      Token token2 = new Token(1, "L`SxPt7a&B|lWo.A^", 1, 1);
      token0.toString();
      Token token3 = xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        token3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
