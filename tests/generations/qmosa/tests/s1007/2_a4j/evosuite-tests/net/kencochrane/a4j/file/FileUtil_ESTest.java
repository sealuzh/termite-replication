/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:55:46 GMT 2019
 */

package net.kencochrane.a4j.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import net.kencochrane.a4j.file.FileUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&=&mode=? ToASzh\"%LQptUps&type=ta_&page=.0123456789&offer=t=&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.andThen((Function<? super String, ? extends String>) unaryOperator1);
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      unaryOperator3.apply(unaryOperator0);
      UnaryOperator.identity();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadGenericSearchFile("", "", "? ToASzh\"%LQptUps", "ta_", ".0123456789", "t=");
      System.setCurrentTimeMillis(127L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5937191065066494
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/_&CARTID=__&CARTID=.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "C'BTtan)tXyg3thzN~`");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getASINFile("8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S", (String) null, "&CartId=");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/NULL_8{@J#RLB2,MKVADHP#S_.XML");
      fileUtil0.getASINFile("", "", "&CartId=", "&CartId=");
      FileSystemHandling.createFolder(evoSuiteFile1);
      fileUtil0.downloadThirdPartySearchFile("", "'5&S@1R8ptX5Q4Aq", "8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S");
      fileUtil0.getBrowseNodeFile((String) null, "8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S");
      Random.setNextRandom(1449);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      System.setCurrentTimeMillis(1L);
      File file0 = fileUtil0.getSimilarItems("", "&CartId=");
      assertNull(file0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.646238822650641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=null,_RXid+lBBpA^&type=lite&offerpage=1&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "t_");
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-1);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.oldestAge = (-1L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      fileUtil0.fetchASINFile("&CartId=", "_RXid+lBBpA^", "associateID", (String) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "_RXid+lBBpA^");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      arrayList0.add((Object) null);
      UnaryOperator.identity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      arrayList0.add((Object) "_RXid+lBBpA^");
      fileUtil0.fetchAccessories("", arrayList0);
      fileUtil0.fetchSimilarItems("t_", "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5403304108653817
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getASINFile("8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S", (String) null, "&CartId=");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_8{@J#RLB2,MKVADHP#S_.XML");
      fileUtil0.getASINFile("", "", "&CartId=", "&CartId=");
      FileSystemHandling.createFolder(evoSuiteFile0);
      fileUtil0.getBrowseNodeFile((String) null, "8{@j#rLB2,mkVaDhP#S", "");
      Random.setNextRandom(1449);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      System.setCurrentTimeMillis(1L);
      File file0 = fileUtil0.getSimilarItems("", "&CartId=");
      assertNull(file0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function3 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(function3).apply(any());
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function5 = unaryOperator2.andThen((Function<? super Object, ? extends String>) function4);
      Function<Object, String> function6 = unaryOperator0.compose((Function<? super Object, ? extends String>) function5);
      Function<Object, String> function7 = unaryOperator2.andThen((Function<? super Object, ? extends String>) function6);
      Function<Object, String> function8 = unaryOperator0.compose((Function<? super Object, ? extends String>) function4);
      Function<Object, String> function9 = function7.compose((Function<? super Object, ?>) function6);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function8);
      Function<Object, String> function10 = unaryOperator0.compose((Function<? super Object, ? extends String>) function6);
      unaryOperator0.compose((Function<? super String, ? extends String>) function10);
      UnaryOperator.identity();
      Function<Object, String> function11 = unaryOperator2.andThen((Function<? super Object, ? extends String>) function6);
      Function<Object, String> function12 = unaryOperator0.compose((Function<? super Object, ? extends String>) function5);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=lite&type=2eN;&offerpage=&offer=&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "R%J7T");
      Function<Object, String> function13 = unaryOperator0.compose((Function<? super Object, ? extends String>) function8);
      Integer integer0 = new Integer(3);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function4);
      function9.apply(function13);
      Function<String, Object> function14 = (Function<String, Object>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<String, String> function15 = function11.compose((Function<? super String, ?>) function14);
      function12.andThen((Function<? super String, ?>) function15);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function7);
      File file0 = fileUtil0.getASINFile("lite", "2eN;", "", "");
      assertNull(file0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5294971533842068
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      function3.apply(arrayList0);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function.identity();
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function4);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function1);
      fileUtil0.deleteFile("z]");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) function2);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      predicate1.and(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate3.or(predicate1);
      Function<String, Object> function5 = (Function<String, Object>) mock(Function.class, new ViolatedAssumptionAnswer());
      function1.andThen((Function<? super String, ?>) function5);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Predicate<Object> predicate4 = predicate1.negate();
      predicate4.and(predicate1);
      arrayList1.removeIf(predicate4);
      fileUtil0.fetchAccessories("", arrayList1);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems("", "z]");
      assertNotNull(fileInputStream0);
      
      File file0 = fileUtil0.getSimilarItems("", "");
      assertTrue(file0.isFile());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.796812171927
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_T_.XML");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.oldestAge = (-1L);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/A_.XML");
      fileUtil0.fetchASINFile("&CartId=", "_RXid+lBBpA^", "associateID", (String) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "_RXid+lBBpA^");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "_RXid+lBBpA^");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      UnaryOperator.identity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      fileUtil0.fetchSimilarItems("t_", "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(6L);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      fileUtil0.fetchAccessories("", arrayList0);
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("2^m#:YoO9\"D", "2^m#:YoO9\"D", "", "~Ev");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator2.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      unaryOperator1.compose((Function<? super String, ?>) function3);
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function5 = unaryOperator0.compose((Function<? super Object, ? extends String>) function4);
      function5.compose((Function<? super Object, ?>) unaryOperator1);
      Object object0 = new Object();
      function5.apply(object0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SimilaritySearch=&type=lite&offerpage=0KK&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "E|,$-}gi@z");
      Function.identity();
      String string0 = fileUtil0.cacheDir;
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      Function<Object, String> function6 = unaryOperator0.compose((Function<? super Object, ? extends String>) function4);
      unaryOperator3.andThen((Function<? super Object, ? extends String>) function6);
      unaryOperator0.andThen((Function<? super String, ?>) unaryOperator3);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function4);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems("", "0KK");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=Log+file+isn%27t+there+Setting+default+properties&type=net.kencochrane.a4j.util.LoadProperties&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Log file isn't there Setting default properties");
      FileInputStream fileInputStream0 = fileUtil0.fetchBlendedSearchFile("Log file isn't there Setting default properties", "net.kencochrane.a4j.util.LoadProperties");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8663326769786353
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_8{@J#RLB2,MKVADHP#S_8{@J#RLB2,MKVADHP#S.XML");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getASINFile("8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S", (String) null, "oSx+v|/z*T@(");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/NULL_8{@J#RLB2,MKVADHP#S_.XML");
      fileUtil0.getASINFile((String) null, (String) null, "oSx+v|/z*T@(", "oSx+v|/z*T@(");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      fileUtil0.downloadThirdPartySearchFile("", "'5&S@1R8ptX5Q4Aq", "8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=8{@j#rLB2,mkVaDhP#S&mode=null&type=lite&page=8{@j#rLB2,mkVaDhP#S&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "8{@j#rLB2,mkVaDhP#S");
      fileUtil0.fetchSimilarItems("oSx+v|/z*T@(", (String) null);
      fileUtil0.getBrowseNodeFile((String) null, "8{@j#rLB2,mkVaDhP#S", "8{@j#rLB2,mkVaDhP#S");
      Random.setNextRandom(1449);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      fileUtil0.deleteFile("oSx+v|/z*T@(");
      System.setCurrentTimeMillis(1L);
      fileUtil0.getSimilarItems("", "oSx+v|/z*T@(");
      System.setCurrentTimeMillis(1L);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      File file0 = fileUtil0.getAccessories("", arrayList0);
      assertNull(file0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.481240517964154
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=t_&mode=_%77RXdlBBpA^&type=lite&page=t_&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "t_");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadBrowseNodeFile("_%77RXdlBBpA^", "t_", "t_", "_%77RXdlBBpA^");
      fileUtil0.fetchBNFile("_%77RXdlBBpA^", "t_", "_%77RXdlBBpA^");
      fileUtil0.fetchThirdPartySearchFile("t_", "^E?`>%K", "_%77RXdlBBpA^", "_%77RXdlBBpA^");
      fileUtil0.downloadKeywordSearchFile("t_", "(Z5`5F4>}2.`{T1N]", "_%77RXdlBBpA^", "t_");
      fileUtil0.downloadCart("^E?`>%K");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "t_");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      Predicate<Object> predicate5 = predicate3.negate();
      predicate3.and(predicate4);
      Object object0 = new Object();
      Predicate<Object> predicate6 = predicate1.negate();
      predicate0.negate();
      Predicate<Object> predicate7 = Predicate.isEqual(object0);
      predicate7.or(predicate0);
      predicate6.negate();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      predicate2.and(predicate5);
      predicate1.negate();
      arrayList0.removeIf(predicate5);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/BN_OFFER=_OFFER=_OFFER=.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileUtil fileUtil0 = new FileUtil();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("bn", "offer=", "offer=", "offer=");
      assertNotNull(fileInputStream0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.compose((Function<? super Object, ? extends String>) function2);
      unaryOperator1.apply((String) null);
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      Function<String, String> function4 = unaryOperator1.compose((Function<? super String, ? extends String>) function3);
      Function.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) function4);
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) function3);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super String, ? extends String>) function3);
      UnaryOperator<Object> unaryOperator5 = UnaryOperator.identity();
      unaryOperator5.compose((Function<? super Integer, ?>) function2);
      unaryOperator3.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function1);
      function2.andThen((Function<? super String, ?>) unaryOperator4);
      FileUtil fileUtil0 = new FileUtil();
      // Undeclared exception!
      try { 
        fileUtil0.renameFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator3.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator2.andThen((Function<? super Object, ? extends String>) function1);
      function2.compose((Function<? super Object, ?>) unaryOperator1);
      function1.apply(unaryOperator0);
      UnaryOperator<Object> unaryOperator4 = UnaryOperator.identity();
      unaryOperator4.andThen((Function<? super Object, ? extends String>) function1);
      unaryOperator3.andThen((Function<? super String, ?>) function1);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function1);
      // Undeclared exception!
      try { 
        fileUtil0.deleteFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-59);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("+dVV(</iD-");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "]b 3Q ");
      MockFile mockFile0 = new MockFile("+dVV(<", "iD-");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "+dVV(<");
      mockFile0.toURI();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      fileUtil0.isAgeGood((File) null);
      Random.setNextRandom((-2433));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-59);
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("+dVV(<", "iD-");
      mockFile0.setReadOnly();
      mockFile0.deleteOnExit();
      mockFile0.toURI();
      boolean boolean0 = fileUtil0.isAgeGood(mockFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=null,_RXid+lBBpA^&type=lite&offerpage=1&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "t_");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=Log+file+isn%27t+there+Setting+default+properties&type=net.kencochrane.a4j.util.LoadProperties&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      FileUtil fileUtil0 = new FileUtil();
      boolean boolean0 = fileUtil0.downloadOneASINFile("t_", "(H|j^.]4", "", "(H|j^.]4", "(H|j^.]4");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator4);
      Function.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator4);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator3);
      unaryOperator4.apply("");
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator6 = UnaryOperator.identity();
      unaryOperator4.andThen((Function<? super String, ? extends String>) unaryOperator5);
      UnaryOperator<Object> unaryOperator7 = UnaryOperator.identity();
      Function<Object, Object> function0 = unaryOperator2.compose((Function<? super Object, ?>) unaryOperator0);
      unaryOperator7.compose((Function<? super Object, ?>) function0);
      Integer integer0 = new Integer(2234);
      UnaryOperator.identity();
      unaryOperator7.apply(unaryOperator6);
      unaryOperator3.apply("cacheDir");
      UnaryOperator.identity();
      unaryOperator3.andThen((Function<? super String, ?>) unaryOperator2);
      FileUtil fileUtil0 = new FileUtil();
      unaryOperator4.andThen((Function<? super String, ?>) unaryOperator2);
      Random.setNextRandom((-2145307878));
      System.setCurrentTimeMillis(1157L);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      boolean boolean0 = fileUtil0.downloadAccessoriesFile("9/)XuTB]8", arrayList0, "WZ&iO9");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator2);
      Function.identity();
      Function<String, String> function0 = unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator2);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super String, ? extends String>) unaryOperator1);
      unaryOperator2.apply("");
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator4);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      unaryOperator3.andThen((Function<? super String, ? extends String>) unaryOperator4);
      UnaryOperator.identity();
      Object object0 = new Object();
      UnaryOperator.identity();
      unaryOperator5.andThen((Function<? super String, ?>) function0);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.deleteFile("");
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=Log+file+isn%27t+there+Setting+default+properties&type=net.kencochrane.a4j.util.LoadProperties&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Log file isn't there Setting default properties");
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      fileUtil0.fetchThirdPartySearchFile("kQs", "1", "kQs", "Log file isn't there Setting default properties");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=Log+file+isn%27t+there+Setting+default+properties&type=net.kencochrane.a4j.util.LoadProperties&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "1");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("1", "Z", "Z");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      unaryOperator0.apply("Q'h]N");
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      Function<String, String> function0 = unaryOperator0.compose((Function<? super String, ? extends String>) unaryOperator2);
      Function<String, String> function1 = Function.identity();
      Function<String, String> function2 = unaryOperator4.compose((Function<? super String, ? extends String>) function0);
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator6 = UnaryOperator.identity();
      Function<String, String> function3 = unaryOperator5.compose((Function<? super String, ? extends String>) unaryOperator6);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator7 = UnaryOperator.identity();
      unaryOperator7.andThen((Function<? super String, ? extends String>) function3);
      UnaryOperator<Object> unaryOperator8 = UnaryOperator.identity();
      Function<Object, String> function4 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function4).apply(any());
      Function<Object, String> function5 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function4);
      Function<Object, String> function6 = unaryOperator2.compose((Function<? super Object, ? extends String>) function5);
      function6.andThen((Function<? super String, ?>) function1);
      fileUtil0.renameFile("&Af@f[N", "Q'h]N");
      UnaryOperator.identity();
      Function.identity();
      Function<Object, String> function7 = unaryOperator8.andThen((Function<? super Object, ? extends String>) function6);
      function7.apply(function2);
      unaryOperator6.compose((Function<? super Object, ? extends String>) function6);
      UnaryOperator.identity();
      unaryOperator3.andThen((Function<? super Object, ? extends String>) function7);
      unaryOperator0.andThen((Function<? super String, ?>) unaryOperator3);
      Random.setNextRandom(4);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.renameFile("", "");
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function5 = function3.compose((Function<? super Object, ?>) function2);
      Function<String, String> function6 = unaryOperator0.compose((Function<? super String, ? extends String>) function5);
      Function.identity();
      Function<Object, String> function7 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      function7.apply("R`i_NH`;}:E9T&");
      UnaryOperator.identity();
      Function<Object, String> function8 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      function1.apply(unaryOperator0);
      function3.apply("^a!hDD9UJfrzTS<n;O4");
      Function<Object, String> function9 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function10 = unaryOperator0.compose((Function<? super Object, ? extends String>) function4);
      Integer integer0 = new Integer(50);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      function9.andThen((Function<? super String, ?>) function6);
      function5.apply(function10);
      Function<String, Object> function11 = (Function<String, Object>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<String, String> function12 = function8.compose((Function<? super String, ?>) function11);
      function3.andThen((Function<? super String, ? extends String>) function12);
      function9.andThen((Function<? super String, ?>) function12);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function2);
      function2.apply(function12);
      File file0 = fileUtil0.getASINFile("", (String) null, "", "=s8uz");
      assertNull(file0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=null,_RXid+lBBpA^&type=lite&offerpage=1&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "t_");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=Log+file+isn%27t+there+Setting+default+properties&type=net.kencochrane.a4j.util.LoadProperties&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "iVbi/Pg^q!g");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadSimilaritesFile("", "{&fhd[:JHEGLz'/yw`", "t_");
      Random.setNextRandom(1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&mA4Ql$OLIQius=iE%28%7F%21%28&mode=Zyn&type=iE(!(&page=C9!)):&Xn&offer=Zyn&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "8{@j#rLB2,mkVaDhP#S");
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadGenericSearchFile("mA4Ql$OLIQius", "99UiI/", "Zyn", "99UiI/", "C9!)):&Xn", "Zyn");
      assertNull(file0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile(";i(XmOzb%9&&O$", "ZY74ikSF", "qiET4)", ";vVf$zws#'B");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Random.setNextRandom(127);
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadKeywordSearchFile("U;KSNQKab~", "'NeO4p-tb{o4", "'NeO4p-tb{o4", "'NeO4p-tb{o4");
      assertNull(file0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getBrowseNodeFile((String) null, "8{@j#rLB2,mkVaDhP#S", "eFm)-C(r{:B\"Dd0K");
      assertNull(file0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function4 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function5 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function6 = function4.compose((Function<? super Object, ?>) function3);
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super String, ? extends String>) function6);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function5);
      Function<Object, String> function7 = unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      unaryOperator2.compose((Function<? super String, ? extends String>) function7);
      UnaryOperator.identity();
      Function<Object, String> function8 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function9 = unaryOperator2.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function10 = unaryOperator0.compose((Function<? super Object, ? extends String>) function5);
      Integer integer0 = new Integer(3);
      function8.compose((Function<? super Integer, ?>) function5);
      Function<Object, String> function11 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      function10.andThen((Function<? super String, ? extends String>) function5);
      function11.apply(function7);
      function10.compose((Function<? super String, ?>) function8);
      function10.andThen((Function<? super String, ?>) function1);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function12 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function9);
      unaryOperator2.andThen((Function<? super String, ?>) unaryOperator0);
      unaryOperator2.compose((Function<? super Integer, ? extends String>) function12);
      fileUtil0.fetchThirdPartySearchFile("BrowseNodeSearch=", "?", "?", "");
      System.setCurrentTimeMillis((-524L));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&mA4Ql$OLIQius=iE%28%7F%21%28&mode=Zyn&type=iE(!(&page=C9!)):&Xn&offer=Zyn&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "8{@j#rLB2,mkVaDhP#S");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("ln%'!sih2bnE[f", "cacheLife", "{87hE1N-\"v7)}67:", "Zyn", "}_KWj7a^;h12t|R", "&t=");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBlendedSearchFile("Log file isn't there Setting default properties", "net.kencochrane.a4j.util.LoadProperties");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadBlendedSearchFile("qr'au%5(][+|S", "");
      assertNull(file0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function4 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function5 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function6 = function4.compose((Function<? super Object, ?>) function3);
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super String, ? extends String>) function6);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function5);
      Function<Object, String> function7 = unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      unaryOperator2.compose((Function<? super String, ? extends String>) function7);
      UnaryOperator.identity();
      Function<Object, String> function8 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function9 = unaryOperator2.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function10 = unaryOperator0.compose((Function<? super Object, ? extends String>) function5);
      Integer integer0 = new Integer(3);
      function8.compose((Function<? super Integer, ?>) function5);
      Function<Object, String> function11 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      function11.apply(function7);
      function10.compose((Function<? super String, ?>) function8);
      function10.andThen((Function<? super String, ?>) function1);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function12 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function9);
      unaryOperator2.andThen((Function<? super String, ?>) unaryOperator0);
      unaryOperator2.compose((Function<? super Integer, ? extends String>) function12);
      fileUtil0.fetchThirdPartySearchFile("all", "?", "?", "");
      System.setCurrentTimeMillis((-524L));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadThirdPartySearchFile("I8|D[$d/?pAdA!M", "CbNry+G 3~xXJ=*D]", "&CartId=", "");
      Random.setNextRandom((-2145336163));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=null,_RXid+lBBpA^&type=lite&offerpage=1&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "t_");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=Log+file+isn%27t+there+Setting+default+properties&type=net.kencochrane.a4j.util.LoadProperties&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "iVbi/Pg^q!g");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile("t_", ";vVf$zws#'B", "", "jE{$v!");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super String, ? extends String>) unaryOperator4);
      UnaryOperator.identity();
      Integer integer0 = new Integer(1503);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer1 = new Integer((-1939));
      UnaryOperator.identity();
      unaryOperator2.apply(unaryOperator1);
      UnaryOperator.identity();
      unaryOperator3.apply(", ");
      UnaryOperator.identity();
      unaryOperator5.andThen((Function<? super String, ?>) unaryOperator1);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadBlendedSearchFile("[", "ShoppingCart=clear&f=xml&dev-t=");
      Random.setNextRandom(2212);
  }
}
