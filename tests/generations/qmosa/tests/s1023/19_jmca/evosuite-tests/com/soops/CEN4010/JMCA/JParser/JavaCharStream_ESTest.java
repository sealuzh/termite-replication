/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:45:44 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1337, (-1458), 1337);
      javaCharStream0.line = (-390);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 4069, 1337);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7156878121131105
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oihaj?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1313, (-1054));
      javaCharStream0.backup(1);
      javaCharStream0.line = 770;
      javaCharStream1.tokenBegin = (int) '2';
      javaCharStream1.tokenBegin = 13;
      javaCharStream0.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(13);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream2.getBeginLine();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-1436), javaCharStream0.getBeginLine());
      assertEquals((-1435), int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4749109444676747
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.FillBuff();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'Z';
      charArray0[2] = 'V';
      charArray0[3] = '?';
      stringReader0.read(charArray0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-90);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read();
      byteArrayInputStream1.mark(1531);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getColumn();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1433), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2705), 0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      dataInputStream0.mark(0);
      byteArrayInputStream0.mark(0);
      byteArrayInputStream0.skip((-2130L));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1), 3152);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1526), (-1526));
      javaCharStream0.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3860871689615393
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      StringReader stringReader0 = new StringReader("+*]:SDm C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)26, (byte) (-82));
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream1.BeginToken();
      javaCharStream0.getEndColumn();
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7924581769197978
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D/Pqn/'n;B$k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("D/Pqn/'n;B$k");
      stringReader1.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 0, (byte)96);
      javaCharStream1.inBuf = (int) (byte)96;
      JavaCharStream.hexval('D');
      javaCharStream1.readChar();
      javaCharStream1.backup(1);
      javaCharStream1.BeginToken();
      javaCharStream0.readChar();
      javaCharStream1.ExpandBuff(false);
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3520071531417366
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1), 356, 50);
      javaCharStream0.BeginToken();
      byteArrayInputStream0.markSupported();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(true);
      char char0 = javaCharStream0.readChar();
      assertEquals(4097, javaCharStream0.bufpos);
      assertEquals('\u0001', char0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.470689178534726
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4098, javaCharStream0.bufpos);
      assertEquals((-1436), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4407945633063415
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oihaj?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1313, (-1054));
      javaCharStream1.tokenBegin = 97;
      javaCharStream0.backup(1);
      javaCharStream1.tokenBegin = (int) '2';
      javaCharStream0.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(50);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.588783565168577
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-7);
      javaCharStream0.getLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile((File) null, "");
      mockFile0.delete();
      MockFile mockFile1 = new MockFile("", "");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)11;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)11;
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)11;
      byteArray1[4] = (byte)11;
      byteArray1[5] = (byte)11;
      byteArray1[6] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
      
      int int1 = JavaCharStream.hexval('A');
      assertEquals(10, int1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.551253973304386
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(4063, 1007);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0711833848822674
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oihaj?_PEPqO");
      StringReader stringReader1 = new StringReader("2Oihaj?_PEPqO");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 95, 245, 95);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.tokenBegin = 59;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("2Oihaj?_PEPqO");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.689927930768379
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)26, (byte)26);
      javaCharStream0.backup((byte)26);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("Pf1-D(F+{y");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(241);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      javaCharStream1.BeginToken();
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      pipedInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, 4071, (-1054), 2018);
      javaCharStream0.AdjustBuffSize();
      assertEquals(4071, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7582385798915983
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "2\\{iha?FP\\7PqO";
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436), 0);
      javaCharStream0.bufsize = 264;
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.661472805743988
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D/Pqn/'n;B$k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("D/Pqn/'n;B$k");
      stringReader1.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(834);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)96);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 91, 4077);
      bufferedInputStream0.read(byteArray0);
      javaCharStream0.readChar();
      javaCharStream1.backup(362);
      javaCharStream1.BeginToken();
      javaCharStream0.readChar();
      javaCharStream1.ExpandBuff(true);
      assertEquals(4096, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.568466416899643
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      String string0 = "\\cNbB<b)uDqMDe?o3w";
      StringReader stringReader0 = new StringReader("cNbB<b)uDqMDe?o3w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)26, (byte)26, (byte)26);
      javaCharStream0.adjustBeginLineColumn((byte)26, (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      File file0 = null;
      String string1 = "g\\vS/JvueM0CH|Hm";
      MockFile mockFile0 = new MockFile((File) null, "gvS/JvueM0CH|Hm");
      URI uRI0 = null;
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        MockURI.resolve((URI) null, "Invalid escape character at line ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.336724853660327
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&BHLV)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.BeginToken();
      String string0 = "]H61|8|";
      MockFile mockFile0 = new MockFile((File) null, "]H61|8|");
      // Undeclared exception!
      try { 
        MockURI.resolve((URI) null, "@@*'(&-?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.427553308409804
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&BHLV)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      File file0 = null;
      String string0 = "";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String string1 = "";
      File file1 = MockFile.createTempFile("_&BHLV)}", "");
      MockFile mockFile0 = new MockFile(file1, "+Cxwx/Gp");
      MockFile mockFile1 = new MockFile(mockFile0, "_&BHLV)}");
      try { 
        MockFile.createTempFile("_&BHLV)}", "+Cxwx/Gp", (File) mockFile1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 22);
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)118;
      byteArray0[6] = (byte)117;
      javaCharStream0.adjustBeginLineColumn((byte)117, (-3044));
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-118);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3U'pakcQNn/ 4");
      byteArray0[1] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.mark((-673));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)99, (byte)99, 123);
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '>';
      charArray0[2] = 'o';
      charArray0[3] = 'I';
      charArray0[4] = '`';
      charArray0[5] = '';
      charArray0[6] = 'E';
      charArray0[7] = 'c';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.292167373538681
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      stringReader0.read();
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.backup(3);
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      javaCharStream0.readChar();
      char[] charArray0 = new char[15];
      charArray0[0] = '\u0000';
      javaCharStream0.nextCharBuf = charArray0;
      charArray0[1] = '\u0000';
      charArray0[2] = '\u0000';
      charArray0[3] = '\u0000';
      charArray0[4] = '\u0000';
      charArray0[5] = '\u0000';
      charArray0[6] = '\u0000';
      javaCharStream0.backup((-1));
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7427761789293212
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D/Pqn/'n;B$k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = 'O';
      charArray0[2] = 'D';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 0, (byte)96);
      javaCharStream1.inBuf = (int) (byte)96;
      bufferedInputStream0.read(byteArray0);
      javaCharStream1.readChar();
      javaCharStream1.backup(1);
      javaCharStream1.BeginToken();
      javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.bufsize = 2853;
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.AdjustBuffSize();
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9241124223261477
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 14);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream.hexval('4');
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = '!';
      charArray0[2] = '6';
      charArray0[3] = '\\';
      charArray0[4] = '@';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      StringReader stringReader1 = new StringReader("=gXH2");
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1k{x~DIbAmMxr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1542, 1, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      javaCharStream0.bufcolumn = intArray0;
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte) (-25);
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)15, (byte) (-1));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3507304559012234
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&BHLV)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      char char0 = javaCharStream0.readChar();
      assertEquals(6, javaCharStream0.getEndColumn());
      assertEquals('V', char0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char char0 = ':';
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2295675349872788
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2{iha?FPEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1475), 0, 3);
      stringReader0.mark(603);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("");
      javaCharStream0.adjustBeginLineColumn(3, (-1475));
      javaCharStream0.adjustBeginLineColumn((-1475), 0);
      assertEquals((-1475), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1k{x~DIbAmMxr");
      StringReader stringReader1 = new StringReader("U /s,WS5q$: ");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("k!Y_|;\"");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8269107173500876
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      StringReader stringReader0 = new StringReader("q2<?1d~.~?(]Yd4|X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)12, 0, 1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 15);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      javaCharStream0.available = 2048;
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark((-2482));
      char char0 = javaCharStream0.readChar();
      assertEquals(12, javaCharStream0.getBeginLine());
      assertEquals('q', char0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 59, 63, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5059175398784443
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D/Pqn/'n;B$k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("D/Pqn/'n;B$k");
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      stringReader1.read(charBuffer0);
      char[] charArray0 = new char[10];
      charArray0[0] = 'D';
      charArray0[1] = 'O';
      charArray0[2] = 'D';
      stringReader0.read(charArray0);
      stringReader1.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 0, (byte)96);
      javaCharStream1.inBuf = (int) (byte)96;
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kt2%[=w");
      StringReader stringReader0 = new StringReader("1k{x~DIbAmMxr");
      StringReader stringReader1 = new StringReader("U /s,WS5q$: ");
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=C4(<o dZku8`");
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.398552374132451
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(98, (-4939));
      javaCharStream0.GetSuffix(0);
      assertEquals(98, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.close();
      StringReader stringReader0 = new StringReader("Buz6err4xWq");
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaCharStream.hexval('d');
      String string0 = null;
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "2\\{iha?FP\\EPqO";
      StringReader stringReader0 = new StringReader("2{iha?FPEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-647), (-1), 0);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("<wMFKJgkY+KGZ,i?os");
      stringReader0.skip(2900L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2709));
      javaCharStream0.backup((-2709));
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)11;
      byteArray1[1] = (byte)11;
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)11;
      byteArray1[4] = (byte)11;
      byteArray1[5] = (byte)11;
      byteArray1[6] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      JavaCharStream.hexval('c');
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = 0;
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 0);
      int int1 = 645;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 645, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream1.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kt2%[=w");
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.123178458595985
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = "2\\{iha?FP\\EPqO";
      StringReader stringReader0 = new StringReader("2{iha?FPEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5983, 83, 0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.542920468684812
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-90);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(1531);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      int int0 = (-2097);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-2097), 11);
      // Undeclared exception!
      try { 
        javaCharStream2.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2048, 4078);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 4078, 1, 2048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)26, 230, 12);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2Oiha?_PEPqO");
      StringReader stringReader1 = new StringReader("*+kw,nE$%J(:FcP%g)");
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark(1314);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.613667793868907
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.FillBuff();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'Z';
      charArray0[2] = 'V';
      charArray0[3] = '?';
      stringReader0.read(charArray0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-90);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(1531);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 4077, (-4002));
      bufferedInputStream0.read(byteArray0);
      javaCharStream0.readChar();
      javaCharStream1.backup(4);
      javaCharStream1.BeginToken();
      javaCharStream1.readChar();
      javaCharStream0.ExpandBuff(true);
      int int0 = javaCharStream0.getColumn();
      assertEquals((-1436), javaCharStream0.getBeginColumn());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1k{x~DIbAmMxr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, (byte)62);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9426574819861131
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 71, 9, 71);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 9, 65);
      javaCharStream1.backup(1416);
      JavaCharStream.hexval('B');
      PipedInputStream pipedInputStream0 = new PipedInputStream(71);
      JavaCharStream.hexval('B');
      javaCharStream1.BeginToken();
      assertEquals(2680, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[';SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int[] intArray0 = new int[4];
      stringReader0.read();
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "</VhsOB[';SS5");
      StringReader stringReader1 = new StringReader("+R>sPKC");
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup((-2303));
      javaCharStream0.getEndLine();
      assertEquals(2302, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.518742300593211
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      dataInputStream0.close();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(6188);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1);
      javaCharStream0.adjustBeginLineColumn(301, 301);
      assertEquals(301, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-3568), (-1441));
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k\"/]}kc_h3o\",]6q");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2850), (byte)11, (byte)11);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.176645350936787
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark(1314);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[n!02hSl4CBD k");
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = (int) '<';
      intArray0[2] = (-1);
      intArray0[3] = (int) '<';
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream.hexval('5');
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kt2%[=w");
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 36;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 36, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1k{x~DIbAmMxr");
      StringReader stringReader1 = new StringReader("U /s,WS5q$: ");
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('f');
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)38);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark(1314);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u000B', char0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 14, (byte)11);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      dataInputStream0.mark((-307));
      byteArrayInputStream0.mark(1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 14, 4);
      byteArrayInputStream1.skip((byte) (-82));
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      StringReader stringReader1 = new StringReader(")\"[");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[5] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-82), (byte)26);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 87, 589, (-2367));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("<wMFKJgkY+KGZ,i?os");
      stringReader0.skip(2900L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2709));
      javaCharStream0.backup((-2709));
      stringReader0.ready();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[';SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      stringReader0.read();
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.backup(3);
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.backup(1881);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-1320));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.521357819337762
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "2\\Oihaj?_P\\EPqO";
      StringReader stringReader0 = new StringReader("2Oihaj?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      String string1 = "";
      String string2 = "";
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[5] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.markSupported();
      dataInputStream0.close();
      dataInputStream0.mark((byte)61);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.mark(1314);
      byteArrayInputStream0.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.adjustBeginLineColumn((-5), (byte)61);
      assertEquals(61, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      JavaCharStream.hexval('2');
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1850), 0, 658);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 245, 95);
      javaCharStream0.inBuf = 9;
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream1.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark((byte)1);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.049821369905457
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark(1314);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('\u000B');
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark(1314);
      StringReader stringReader0 = new StringReader("\"|W,/O3\";_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.0172089238352386
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark(1314);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0001', char0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.1073016318123377
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W'I");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 83, (-960), 3008);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("W'I");
      stringReader1.close();
      javaCharStream0.BeginToken();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      try { 
        stringReader1.mark((byte)12);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.8184506609563127
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J?N!V}x; 7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      stringReader0.ready();
      stringReader0.reset();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'U';
      charArray0[2] = 'c';
      charArray0[3] = '/';
      charArray0[4] = 'l';
      charArray0[5] = '$';
      charArray0[6] = ':';
      charArray0[7] = 'I';
      charArray0[8] = 'm';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.adjustBeginLineColumn(4088, 4088);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)52;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("Ag}y2pHPENj/l)[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 321, 0, 321);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[5] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.markSupported();
      dataInputStream0.close();
      dataInputStream0.mark((byte)61);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.mark(1314);
      byteArrayInputStream0.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, (byte)61);
      assertEquals(61, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kt2%[=w");
      StringReader stringReader0 = new StringReader("kt2%[=w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[2];
      intArray0[0] = 86;
      intArray0[1] = 86;
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(86, 86);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.44013885795825
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      stringReader0.read();
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      javaCharStream0.BeginToken();
      int int0 = 14;
      javaCharStream0.adjustBeginLineColumn(14, 60);
      javaCharStream0.backup((-1));
      javaCharStream0.getEndLine();
      javaCharStream0.backup(14);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 44);
      javaCharStream0.backup(44);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.6891690788244045
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), (-1436));
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-90);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(1531);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 4077, (-4002));
      bufferedInputStream0.read(byteArray0);
      javaCharStream1.GetImage();
      javaCharStream0.getBeginLine();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      javaCharStream1.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('i', char0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.3975748570259015
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "2\\{iha?FP\\7PqO";
      StringReader stringReader0 = new StringReader("2{iha?FP\u0007PqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(98, (-4939));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1436));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.664089916642415
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D/Pqn/'n;B$k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      CharBuffer.allocate(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = 'O';
      charArray0[2] = 'D';
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 0, (byte)96);
      javaCharStream1.inBuf = (int) (byte)96;
      bufferedInputStream0.read(byteArray0);
      javaCharStream1.readChar();
      javaCharStream1.BeginToken();
      javaCharStream0.readChar();
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.AdjustBuffSize();
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)26;
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, (byte) (-82), (byte)26);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("lPNL*");
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      int int0 = (-386);
      javaCharStream0.available = (-386);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup(0);
      int int1 = (-3613);
      javaCharStream0.nextCharInd = (-321);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.367695772094331
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2{iha?FPEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1436), 0, 3);
      javaCharStream0.nextCharInd = 1;
      stringReader0.mark(4083);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("2{iha?FPEPqO");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.6348520971250795
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 22);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix((byte)91);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(1040);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginColumn();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(23, javaCharStream0.getBeginColumn());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "2\\{iha?FP2\\7vqO";
      StringReader stringReader0 = new StringReader("2{iha?FP2\u0007vqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("$", "$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-42);
      byteArray0[5] = (byte)11;
      byteArray0[5] = (byte)1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("(wWiBF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-82), 5);
      javaCharStream0.BeginToken();
      File file0 = MockFile.createTempFile("}/HN5^9>=g(\"1*!OE", "");
      String string0 = "vrAhQBSzYT";
      MockFile mockFile0 = new MockFile(file0, "}/HN5^9>=g(\"1*!OE");
      MockFile mockFile1 = new MockFile(file0, "vrAhQBSzYT");
      URI uRI0 = null;
      // Undeclared exception!
      try { 
        MockURI.resolve((URI) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<&vyM/Gk20t%@{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-565), (-565));
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      char char0 = '}';
      charArray0[1] = '}';
      char char1 = 'a';
      charArray0[2] = 'a';
      char char2 = 'D';
      charArray0[3] = 'D';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.7250829733914482
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 2586);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('5');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Oiha?_PEPqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      stringReader0.read();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      bufferedInputStream0.skip(795L);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 2213, (-103));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.8241795874287239
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)12, (byte)26);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream1.mark(1);
      StringReader stringReader0 = new StringReader("ggD-cI88@)w#8H!A#f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3513), 1891, 5318);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(1891, javaCharStream0.getBeginColumn());
      assertEquals('g', char0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.7964317937151746
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      stringReader0.markSupported();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 0, 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 0, 0);
      javaCharStream1.getBeginLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte)11, 1557);
      javaCharStream2.ExpandBuff(false);
      assertEquals((-1), javaCharStream2.bufpos);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V");
      stringReader0.close();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.GetImage();
      int int1 = (-801);
      javaCharStream0.inBuf = (-801);
      // Undeclared exception!
      try { 
        stringReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.backup(3);
      assertEquals(4093, javaCharStream0.bufpos);
      
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1, 0, (-841), 14);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.2401641602862914
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      StringReader stringReader0 = new StringReader("q2<?1dP~.~?(]Yd4|X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)12, 0, 1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 15);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark((-2482));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('q', char0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      int int1 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.reset();
      stringReader0.read();
      int[] intArray0 = new int[1];
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.inputStream = (Reader) stringReader1;
      stringReader1.mark(578);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kt2%[=w");
      StringReader stringReader0 = new StringReader("1k{x~DIbAmMxr");
      StringReader stringReader1 = new StringReader("U /s,WS5q$: ");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 0, (-3826));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2{iha?FPEPqO");
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.mark(63);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3900, 3900);
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('I', char0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.2401641602862914
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      StringReader stringReader0 = new StringReader("q2<?1dP~.~?(]Yd4|X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)12, 0, 1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 15);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read();
      dataInputStream0.close();
      byteArrayInputStream0.mark((-2482));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('q', char0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)39, 1204, (byte)26);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-2366), (-336), 2191);
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      charArray0[1] = 'r';
      charArray0[2] = ')';
      charArray0[3] = 'I';
      charArray0[4] = 'n';
      charArray0[5] = '%';
      charArray0[6] = 'O';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-336));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CC:w7|I$");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('C', char0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mqZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2566, 2566, 7);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(1831);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      StringReader stringReader0 = new StringReader("Ge3Z*Y%WuKrwF*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2067, (-1), (byte)26);
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader1, 1, (int) (byte) (-42), 3383);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader0, 94, 1890, (-2453));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1923, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)11;
      byteArray0[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      dataInputStream0.close();
      byteArrayInputStream0.mark(1314);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (byte) (-1), 83);
      javaCharStream1.ExpandBuff(false);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      MockFile mockFile0 = new MockFile("");
      StringReader stringReader0 = new StringReader("0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, (-1736), 859);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 700, (-375), 4096);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)11;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[3] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.9738768836771161
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 8192, 5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      String string1 = "";
      try { 
        MockFile.createTempFile("Invalid escape character at line ", "Invalid escape character at line ");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[5] = (byte)11;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      dataInputStream0.mark((byte)61);
      byteArrayInputStream0.mark(1314);
      byteArrayInputStream0.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 95, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.bufsize = 245;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{<3");
      StringReader stringReader1 = new StringReader("{<3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 14, 521);
      StringReader stringReader2 = new StringReader("8eO^eEgut");
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("76_ XOT1FcPG");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 101, (-1));
      javaCharStream1.ReInit((Reader) stringReader1, 1, (int) (byte)26, 101);
      stringReader0.mark(521);
      StringReader stringReader4 = new StringReader("#bkNKF}3OtbK/E");
      javaCharStream1.ReInit((Reader) stringReader0, 324, 17, 14);
      assertEquals(0, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("q&&0Lm#r~4Ih@ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 96);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)81;
      byteArray0[6] = (byte) (-79);
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte) (-25);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-84), (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      assertEquals(9, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte byte0 = (byte)26;
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 616, (-1), (byte) (-42));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)12;
      StringReader stringReader0 = new StringReader("*k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-604), (byte)26);
      StringReader stringReader1 = new StringReader("76_ XOT1FcPG");
      javaCharStream0.ReInit((Reader) stringReader1, (-1), 0, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 815, (int) (byte)12, 1);
      javaCharStream0.ReInit((Reader) null, 15, (int) (byte) (-42), (int) (byte)26);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-82);
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      dataInputStream0.mark((byte)61);
      byteArrayInputStream0.mark((byte) (-42));
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.inBuf = (-2428);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte)26;
      byteArray0[2] = (byte)37;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.markSupported();
      dataInputStream0.available();
      dataInputStream0.close();
      dataInputStream0.mark((byte)61);
      byteArrayInputStream0.mark((byte)1);
      dataInputStream0.close();
      byteArrayInputStream0.mark((-426));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (byte)61);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u001A', char0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)11, (-1974));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      byteArrayInputStream0.markSupported();
      dataInputStream0.mark((-7621));
      byteArrayInputStream0.mark(1951);
      byteArrayInputStream0.skip(0L);
      PipedInputStream pipedInputStream0 = new PipedInputStream(66);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn((byte)1, (-1364));
      assertEquals(2, javaCharStream0.getBeginLine());
      assertEquals((-1364), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 92);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-32), 1);
      sequenceInputStream0.read();
      sequenceInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-1620), (-1), 1);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D/Pqn/'n;B$k");
      byte byte0 = (byte)26;
      byte byte1 = (byte)12;
      StringReader stringReader1 = new StringReader("#bkNKF}3OtbK/E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-132), 1733, 1);
      StringReader stringReader2 = new StringReader(",fIPcJ");
      stringReader1.reset();
      StringReader stringReader3 = new StringReader("76_ XOT1FcPG");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, 970, (-604), (-475));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
