/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 07:24:25 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6681466246572203
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-inntSize");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-inntSize";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(953);
      outputFormat0.setIndentSize((-1134851349));
      outputFormat0.setIndentSize(2);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(953);
      assertEqualsoutputFormat0.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5758901113292625
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpt=72:Kd^G~m", true, "CX}Kya2ROu|Fdw\"mAw5");
      String[] stringArray0 = new String[5];
      outputFormat0.setIndent((String) null);
      stringArray0[1] = "-indent";
      stringArray0[3] = "-expandEmpt=72:Kd^G~m";
      outputFormat0.setIndent(stringArray0[2]);
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(2417);
      outputFormat0.setIndent("-expandEmpt=72:Kd^G~m");
      outputFormat0.setIndentSize((-346));
      outputFormat0.setIndentSize(2417);
      outputFormat0.setIndentSize(2407);
      outputFormat0.setIndentSize(2417);
      // Undeclared exception!
      outputFormat0.setIndentSize(2509);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5376787886757994
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = "-inntSize";
      outputFormat0.setIndentSize((-50));
      outputFormat0.setIndentSize((-50));
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(1774);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("-idfnt");
      outputFormat0.setIndentSize(1774);
      outputFormat0.setIndentSize((-50));
      outputFormat0.setIndentSize(1774);
      outputFormat0.setIndentSize(2065);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(2065);
      // Undeclared exception!
      outputFormat0.setIndentSize(2065);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8924351255470242
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-expandEmptyxhml-htl");
      outputFormat0.setIndent("-expandEmptyxhml-htl");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Hl%l08\"%";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "Hl%l08\"%";
      stringArray0[3] = "-padText";
      stringArray0[4] = "-inntSize";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize((-1));
      OutputFormat outputFormat1 = new OutputFormat("-xhtml");
      outputFormat1.setIndentSize(1);
      outputFormat0.setIndentSize(1);
      outputFormat1.setIndentSize((-698));
      outputFormat1.setIndentSize(928);
      assertEqualsoutputFormat1.getIndent());
      
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setIndentSize(928);
      assertEqualsoutputFormat2.getIndent());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.460864936956537
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("b^zn:6QmPo", false, (String) null);
      outputFormat1.getEncoding();
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "FgaGhCC";
      stringArray0[1] = "b^zn:6QmPo";
      stringArray0[2] = null;
      stringArray0[3] = null;
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      outputFormat0.getEncoding();
      outputFormat2.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1937264155));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1937264155
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3917013076111555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-expandEmptyxhml-htl");
      outputFormat0.setIndent("-inntSize");
      outputFormat0.setIndent(true);
      int int0 = 1;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4107638016531965
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string0 = "-newlines";
      outputFormat0.setIndent("-newlines");
      OutputFormat.createCompactFormat();
      String string1 = "g{-:$";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "g{-:$";
      stringArray0[1] = "-newlines";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String string0 = outputFormat0.getIndent();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("", string0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3193719538867006
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-expandEmpty__U+5gbXcv{");
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty__U+5gbXcv{";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-expandEmpty__U+5gbXcv{";
      stringArray0[3] = "-expandEmpty__U+5gbXcv{";
      stringArray0[4] = "$4@igA1j?i/m)\"yprd";
      stringArray0[5] = "b=gFXz_@Ft";
      stringArray0[6] = "-expandEmpty__U+5gbXcv{";
      int int0 = outputFormat1.parseOptions(stringArray0, 1);
      assertEquals("-expandEmpty__U+5gbXcv{", outputFormat1.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0165442862862246
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("=ZCVd^G)mT");
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[5];
      outputFormat0.setIndent("-newlines");
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      stringArray0[0] = "=ZCVd^G)mT";
      outputFormat0.setIndentSize(39);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = new OutputFormat("'/~]%Ov^jUAn~cu8", true, "");
      outputFormat1.getEncoding();
      outputFormat1.setTrimText(true);
      outputFormat1.getEncoding();
      outputFormat1.parseOptions(stringArray0, 39);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setPadText(true);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat3.setIndent("_ja/Z.JE,F u");
      assertEquals("_ja/Z.JE,F u", outputFormat3.getIndent());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7403440760878386
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[5];
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterNTags((-1842));
      outputFormat0.setLineSeparator((String) null);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("-newlines");
      outputFormat0.getLineSeparator();
      assertEquals((-1842), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8644316246451718
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlxhtml";
      stringArray0[1] = "-xhtmlxhtml";
      stringArray0[2] = "-xhtmlxhtml";
      outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7152194966275616
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndent("-omitEncoding");
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.setIndentSize((-1));
      outputFormat1.setIndentSize(2);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent("FgaGhC");
      outputFormat1.setIndent("-xhtml-xhtml-xhtml");
      assertEquals("-xhtml-xhtml-xhtml", outputFormat1.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0934195741586183
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("UTF-8");
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat.createCompactFormat();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setOmitEncoding(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.isOmitEncoding();
      outputFormat0.getEncoding();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat2.isOmitEncoding();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("UTF-8", outputFormat0.getIndent());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6407912475442488
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtmlxhtml";
      stringArray0[1] = "-xhtmlxhtml";
      stringArray0[3] = "|-xhtml-xhtml";
      stringArray0[4] = "-xhtmlxhtml";
      stringArray0[5] = "-xhtmlxhtml";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.732340976816887
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[1];
      outputFormat0.setLineSeparator("");
      stringArray0[0] = "";
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      outputFormat0.setIndent(true);
      String string0 = OutputFormat.STANDARD_INDENT;
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("", outputFormat0.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(true);
      outputFormat0.setLineSeparator("MMr%sn\" av(3\"ZFG?\"@");
      outputFormat0.setNewLineAfterNTags((-1925));
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setSuppressDeclaration(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.089097845467142
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(false);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat1.setIndent("\n");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.isTrimText();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "4c";
      stringArray0[3] = "6>nGI'";
      outputFormat0.parseOptions(stringArray0, 2259);
      outputFormat0.setIndent("\n");
      outputFormat1.setIndent("HJjBoPozOsx/$T");
      outputFormat0.getAttributeQuoteCharacter();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("\n", outputFormat0.getIndent());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1287022893600915
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat0.isNewlines();
      outputFormat0.isPadText();
      outputFormat0.getIndent();
      outputFormat0.setNewlines(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.isNewlines();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3979757047700243
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags((-14));
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("4");
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent("-expandEmptyUTF-8");
      outputFormat0.setTrimText(false);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Invalid attribute quote character (";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-expandEmptyUTF-8", outputFormat0.getIndent());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.053085404600997
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expan", false, "-expan");
      outputFormat0.setIndent("");
      outputFormat0.setTrimText(false);
      outputFormat0.setEncoding("ma|xp");
      outputFormat0.setLineSeparator("vwAKXSc:J");
      outputFormat0.setIndent("8bUEL^");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getLineSeparator();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("-expan");
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("-omitEncoding");
      assertEquals("8bUEL^", outputFormat0.getIndent());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isPadText();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "FgO$u~";
      stringArray0[1] = "e";
      stringArray0[2] = "";
      stringArray0[3] = "i2Ld@Qd5Vz?";
      outputFormat0.setPadText(false);
      stringArray0[4] = "-indent";
      stringArray0[5] = "";
      stringArray0[6] = "V";
      outputFormat0.setNewlines(true);
      stringArray0[7] = "m-#<L*>/?a`DFO";
      stringArray0[8] = "!T^#yTIa";
      outputFormat0.parseOptions(stringArray0, 2679);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setEncoding("V");
      outputFormat0.setIndent("-padText");
      assertEquals("V", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6412545966314513
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlxhtml";
      stringArray0[1] = "-xhtmlxhtml";
      stringArray0[1] = "-xhtmlxhtml";
      stringArray0[4] = "-xhtmlxhtml";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('%');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (%)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1168514374210643
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterNTags(296);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 3685);
      outputFormat0.setLineSeparator("-omitEncoding");
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(true);
      outputFormat1.setNewlines(false);
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator("-omitEncoding");
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.setIndent(".n|6Zw0Ezi}R");
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7504562290571344
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[2] = "__U+5gbXcv{";
      stringArray0[1] = "|-xhtml-xhtml";
      stringArray0[2] = "YO<8KV8y,W";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("__U+5gbXcv{");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1553840668399755
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "qM\u00049^_`S-";
      stringArray0[1] = "4";
      stringArray0[2] = "qM\u00049^_`S-";
      stringArray0[5] = "qM\u00049^_`S-";
      stringArray0[7] = "qM\u00049^_`S-";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isPadText());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isNewlines());
      
      outputFormat0.isOmitEncoding();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isPadText());
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isTrimText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(">/s~-:m|mS,`e7e,M6y", true, "$O");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("$O", outputFormat0.getEncoding());
      assertEquals(">/s~-:m|mS,`e7e,M6y", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(boolean0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1720384323253468
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("l4", false);
      outputFormat0.setLineSeparator("-xhtml");
      outputFormat0.setPadText(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("-xhtml");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isPadText();
      outputFormat0.isPadText();
      outputFormat0.setIndentSize((-341));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "l4";
      stringArray0[1] = "-expandEmptyFA4z7(hv:+<Fbbh~>";
      stringArray0[2] = "-xhtml";
      outputFormat0.setIndent("MwcD #P:[$)SH");
      stringArray0[3] = "D<K {BN1z=Gqg%,oe4qq";
      stringArray0[4] = "-expandEmptyFA4z7(hv:+<Fbbh~>";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.setLineSeparator("Invalid attribute quote character (");
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.setIndent("Invalid attribute quote character (");
      assertEquals("Invalid attribute quote character (", outputFormat0.getIndent());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4239547497595506
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("l4x}d_^Kpm3Ar");
      outputFormat0.setIndent("OZT~~Q#_~'g[");
      outputFormat0.setIndent("OZT~~Q#_~'g[");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("l4x}d_^Kpm3Ar");
      outputFormat0.setIndent("-expandEmpt=72:Kd^G~m");
      assertEquals("-expandEmpt=72:Kd^G~m", outputFormat0.getIndent());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = new OutputFormat("b*Bwjl<' ", true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-inntSize";
      stringArray0[1] = "-inntSize";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "-inntSize";
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8096613488547582
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-expandEmptyxhml-htl");
      outputFormat0.setIndent("-inntSize");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyxhml-htl";
      stringArray0[1] = "-expandEmptyxhml-htl";
      stringArray0[2] = "-inntSize";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(2065);
      outputFormat0.setIndentSize(1705);
      outputFormat0.setIndentSize(1705);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(2065);
      outputFormat0.setIndentSize(2065);
      outputFormat0.setIndent("HX)Rj)E[%+'<6r+!>z");
      assertEquals("HX)Rj)E[%+'<6r+!>z", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getIndent();
      outputFormat0.setIndent("08qgu?b/L]O(c");
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("08qgu?b/L]O(c", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.61952596312107
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtml-xhtml";
      stringArray0[1] = "-xhtml-xhtml";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("-xhtml-xhtml");
      outputFormat0.setIndent("");
      outputFormat0.getLineSeparator();
      assertEquals("-xhtml-xhtml", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3412474390077769
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpt=72:Kd^G~m");
      outputFormat0.setIndent("-expandEmpt=72:Kd^G~m");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("[?y.y6N@w?YS~7Pb");
      outputFormat0.setIndent("#EjyS[~g?/^n4");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("OZT~~Q#_~'g[");
      outputFormat0.setIndent("-expandEmpt=72:Kd^G~m");
      assertEquals("-expandEmpt=72:Kd^G~m", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", false, "-xhtmlhM]M1n99YKl=he~|");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlhM]M1n99YKl=he~|";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-xhtmlSA@,Bg_Q";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty/1s\";.X\"(Nw", false);
      String string0 = outputFormat0.getIndent();
      assertEquals("-expandEmpty/1s\";.X\"(Nw", string0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty-expandEmptyxhml-htl";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "l#)609@LmGY)AH@=";
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("-xhtml-xhtml");
      assertEquals("-xhtml-xhtml", outputFormat1.getLineSeparator());
      
      String string0 = OutputFormat.STANDARD_INDENT;
      String string1 = outputFormat0.getLineSeparator();
      assertEquals("", string1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6858900691152602
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "9 %nJh:L&ZDu+";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 486);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Y!^v(pX}$eZS.fF<a", false, " ");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('n');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (n)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyxhml-htl";
      stringArray0[1] = "-inntSize";
      stringArray0[2] = "-inntSize";
      stringArray0[3] = "-ineSeparato";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-inntSize");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("-xhtml-inntSize", outputFormat0.getIndent());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.972436007854526
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("FgaGhCC");
      outputFormat0.setIndent("FgaGhCC");
      outputFormat0.setIndent(true);
      outputFormat0.setLineSeparator("-xhtmlxhtml");
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(659);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndent("FgaGhCC");
      outputFormat0.setIndent("ytY_1!Z");
      outputFormat0.setIndent("");
      assertEquals("-xhtmlxhtml", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "=ZCCd^G)mr";
      stringArray0[2] = "=ZCCd^G)mr";
      stringArray0[3] = "=ZCCd^G)mr";
      stringArray0[4] = "=ZCCd^G)mr";
      OutputFormat outputFormat0 = new OutputFormat("=ZCCd^G)mr", true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
      
      outputFormat0.setPadText(false);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("=ZCCd^G)mr", outputFormat0.getIndent());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Zk$u3U|{-0Q~j#kZ", true);
      outputFormat0.setLineSeparator("Zk$u3U|{-0Q~j#kZ");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.isPadText();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Zk$u3U|{-0Q~j#kZ";
      outputFormat0.setTrimText(true);
      stringArray0[1] = "D<K{N1z=GqV%,oe4qq";
      stringArray0[3] = "Zk$u3U|{-0Q~j#kZ";
      outputFormat0.setIndent("0;u*LQ!n#@UT");
      outputFormat0.setLineSeparator("-xhtml4");
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = new OutputFormat("H@qlyfS8lM=(eYF{?", false, "Zk$u3U|{-0Q~j#kZ");
      outputFormat1.setTrimText(false);
      outputFormat1.setTrimText(true);
      assertTrue(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", false, "-xhtmlhM]M1n99YKl=he~|");
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlhM]M1n99YKl=he~|";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "FbV:int{hc2";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8917395804888772
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-expandEmptyxhml-htl");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyxhml-htl";
      stringArray0[1] = "-expandEmptyxhml-htl";
      stringArray0[2] = "OF~@xVk~Uy->";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.setIndent(true);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-lineSeparator";
      stringArray1[1] = "-lineSeparator";
      stringArray1[2] = "-indent";
      stringArray1[3] = "-lineSeparator";
      stringArray1[4] = "-expandEmptyxhml-htl";
      stringArray1[5] = "-expandEmptyxhml-htl";
      stringArray1[6] = "-lineSeparator";
      stringArray1[7] = "-indent";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.setIndentSize(8);
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent("-lineSeparator");
      assertEquals("-lineSeparator", outputFormat0.getIndent());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "|Q&\"iSwT`54 %";
      stringArray0[1] = "0,h3]MLksiIdsiQ7";
      stringArray0[2] = "";
      stringArray0[3] = null;
      stringArray0[4] = "IBGoIp*cGfyZ";
      stringArray0[5] = "Th:z[|&(Y4V\"?E";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(1, int0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Zk$u3U|{-0Q~j#kZ", true);
      outputFormat0.setLineSeparator("Zk$u3U|{-0Q~j#kZ");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(4064);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "x_p-M$L){@Z9wN'YL";
      stringArray0[1] = "\"LZ!w5/=Kk32";
      stringArray0[2] = "-xhtml)";
      stringArray0[3] = "<'wq@B;`";
      stringArray0[4] = "\"LZ!w5/=Kk32";
      stringArray0[5] = "Zk$u3U|{-0Q~j#kZ";
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2416));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2416
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.649669942596342
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("");
      assertEquals("", outputFormat0.getEncoding());
      
      String[] stringArray0 = new String[8];
      stringArray0[1] = "-lineSepazato";
      stringArray0[3] = "-lxpandEmpt=72:Kd^G~m";
      stringArray0[4] = "h0 u<WKeFXU";
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("UTF-8", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.654864747791147
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding((String) null);
      String[] stringArray0 = new String[0];
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isNewlines());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals("  ", outputFormat2.getIndent());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertTrue(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isPadText());
  }
}
