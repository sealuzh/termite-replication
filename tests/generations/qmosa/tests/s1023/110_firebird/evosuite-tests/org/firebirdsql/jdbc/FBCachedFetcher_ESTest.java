/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 08:23:45 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3706127656140428
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl2.statement = null;
      isc_stmt_handle_impl4.getRsr_rdb();
      isc_stmt_handle_impl0.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl12.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl5.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(400);
      fBCachedFetcher0.first();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      fBCachedFetcher0.getFetchSize();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = null;
      try {
        scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((-2), (ThreadFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<byte[][]> predicate7 = predicate0.or(predicate6);
      predicate2.or(predicate3);
      Predicate<Object> predicate8 = predicate2.negate();
      Predicate<byte[][]> predicate9 = predicate0.or(predicate3);
      Predicate.isEqual((Object) predicate2);
      Predicate<byte[][]> predicate10 = predicate0.or(predicate2);
      Predicate<byte[][]> predicate11 = predicate0.and(predicate2);
      predicate10.negate();
      Predicate<byte[][]> predicate12 = predicate11.negate();
      Predicate<byte[][]> predicate13 = predicate0.negate();
      predicate11.negate();
      Predicate<byte[][]> predicate14 = predicate9.or(predicate6);
      predicate14.or(predicate1);
      Predicate<byte[][]> predicate15 = predicate7.and(predicate11);
      predicate12.and(predicate2);
      predicate15.or(predicate14);
      Predicate<byte[][]> predicate16 = predicate1.or(predicate8);
      predicate16.or(predicate13);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 0, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsInt((-1));
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.hasArgument((-2297));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.hasArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.getArgumentAsString((-1));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(0);
      int[] intArray0 = new int[0];
      xSQLDA0.ioLength = intArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 18, isc_stmt_handle_impl0, fBResultSet0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsInt((-1));
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.hasArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.getArgumentAsString((-1));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, (-2), 18, isc_stmt_handle_impl0, fBResultSet0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setAllRowsFetched(true);
      isc_stmt_handle_impl0.setExecutionPlan((String) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl2.statement = null;
      isc_stmt_handle_impl4.getRsr_rdb();
      isc_stmt_handle_impl0.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl12.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.471346413410988
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl5.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.removeRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl7.getInSqlda();
      isc_stmt_handle_impl9.setInSqlda((XSQLDA) null);
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl11.setOutSqlda((XSQLDA) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl9.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl14.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.738493768484992
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.addFirst((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.last();
      fBCachedFetcher0.deleteRow();
      linkedList0.pollLast();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isAfterLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[8];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[1] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      FBLongVarCharField[] fBLongVarCharFieldArray1 = new FBLongVarCharField[2];
      fBLongVarCharFieldArray1[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[1] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray1);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      System.setCurrentTimeMillis((-753L));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      LinkedHashSet<FBBlobField> linkedHashSet0 = new LinkedHashSet<FBBlobField>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.add(fBBlobField0);
      PriorityBlockingQueue<FBCachedBlobField> priorityBlockingQueue0 = new PriorityBlockingQueue<FBCachedBlobField>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.removeAll(linkedList1);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.clone();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList4.add((byte[][]) null);
      linkedList3.add((byte[][]) null);
      linkedList3.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((byte)2);
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5555666420118905
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(69);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      databaseParameterBufferImp0.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.getLength();
      databaseParameterBufferImp1.removeArgument(69);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeArgument(1163);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeArgument(731);
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp14.getLength();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3228823459307204
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl6 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_stmt_handle_impl3.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl7.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl10 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl11 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl15.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl18.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl20 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl17.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl21 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedHashSet<FBBlobField> linkedHashSet0 = new LinkedHashSet<FBBlobField>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.add(fBBlobField0);
      PriorityBlockingQueue<FBCachedBlobField> priorityBlockingQueue0 = new PriorityBlockingQueue<FBCachedBlobField>();
      linkedList0.removeAll(linkedHashSet0);
      linkedList0.clone();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      boolean boolean0 = fBCachedFetcher0.absolute(69);
      assertEquals(4, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1543538987109097
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl6 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_stmt_handle_impl3.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl7.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl10 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl11 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl15.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl18.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl20 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl17.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl21 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6923197717808307
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.548406068136757
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("SYV8=Fc,<:[w1x");
      Integer integer0 = new Integer((-1));
      Integer.compare(1600, 512);
      jMXPrincipal0.equals((Object) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("IG");
      Subject subject0 = new Subject();
      jMXPrincipal1.implies(subject0);
      linkedList0.removeFirstOccurrence(jMXPrincipal1);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.replaceAll(unaryOperator0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.absolute((-1319));
      fBCachedFetcher0.first();
      linkedList2.addFirst((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute((-1319));
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(381L);
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher1.last();
      fBCachedFetcher1.isFirst();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6591868790734297
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl1.unregisterTransaction();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte)73;
      byteArray0[5] = (byte)123;
      byteArray0[6] = (byte) (-100);
      byteArray0[7] = (byte)118;
      byteArray0[8] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(1);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.spliterator();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.last();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3804082708178105
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl2.statement = null;
      isc_stmt_handle_impl4.getRsr_rdb();
      isc_stmt_handle_impl0.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl12.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl5.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3804082708178105
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setExecutionPlan((String) null);
      isc_stmt_handle_impl5.getTransaction();
      isc_stmt_handle_impl4.getRsr_rdb();
      isc_stmt_handle_impl0.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl10 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl11.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.unregisterTransaction();
      isc_stmt_handle_impl16.setSingletonResult(false);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.getRsr_rdb();
      isc_stmt_handle_impl5.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2014023220140038
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(2668);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeArgument(73);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.getLength();
      System.setCurrentTimeMillis((-188L));
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9935433028254361
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl1.unregisterTransaction();
      System.setCurrentTimeMillis(1);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getOutSqlda();
      isc_stmt_handle_impl1.removeRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl4 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl3.setOutSqlda((XSQLDA) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3539190349214616
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl2.statement = null;
      isc_stmt_handle_impl4.getRsr_rdb();
      isc_stmt_handle_impl0.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl12.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl5.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl6.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      linkedList0.add((byte[][]) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl10 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl11 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl12 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl6.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl15 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl16 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl16.getInSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl19 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl17.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl20 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl21 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl22 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((-2775));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedHashSet<FBBlobField> linkedHashSet0 = new LinkedHashSet<FBBlobField>();
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl0.setExecutionPlan("8hBgnZ1d");
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[8];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      linkedList1.toArray(fBLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][7];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte)44;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)44;
      byteArray2[1] = (byte)44;
      byteArray2[2] = (byte) (-9);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-9);
      byteArray3[1] = (byte)44;
      byteArray3[2] = (byte) (-9);
      byteArray3[3] = (byte) (-9);
      byteArray3[4] = (byte) (-9);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-9);
      byteArray4[1] = (byte) (-9);
      byteArray4[2] = (byte) (-9);
      byteArray4[3] = (byte)44;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-9);
      byteArray5[1] = (byte) (-9);
      byteArray5[2] = (byte) (-9);
      byteArray5[3] = (byte)44;
      byteArray5[4] = (byte)44;
      byteArray5[5] = (byte) (-9);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte) (-9);
      byteArray6[1] = (byte)72;
      byteArray6[2] = (byte)44;
      byteArray6[3] = (byte) (-105);
      byteArray6[4] = (byte)44;
      byteArray6[5] = (byte)44;
      byteArray6[6] = (byte) (-9);
      byteArray6[7] = (byte) (-9);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-105);
      byteArray7[1] = (byte) (-9);
      byteArray7[2] = (byte) (-9);
      byteArray7[3] = (byte) (-105);
      byteArray7[4] = (byte)72;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[7];
      byteArray8[0] = (byte) (-105);
      byteArray8[1] = (byte)44;
      byteArray8[2] = (byte)44;
      byteArray8[3] = (byte)72;
      byteArray8[4] = (byte) (-105);
      byteArray8[5] = (byte) (-105);
      byteArray8[6] = (byte)72;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      fBCachedFetcher0.isEmpty();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      int int0 = databaseParameterBufferImp3.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.getArgumentAsString(5);
      databaseParameterBufferImp1.removeArgument(2003);
      databaseParameterBufferImp4.removeArgument((-2548));
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.removeArgument(29);
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      int int1 = databaseParameterBufferImp6.getLength();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.290804340273652
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][8];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-20);
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte) (-20);
      byteArray1[3] = (byte) (-100);
      byteArray1[4] = (byte) (-100);
      byteArray1[5] = (byte) (-100);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-100);
      byteArray2[1] = (byte) (-20);
      byteArray2[2] = (byte) (-20);
      byteArray2[3] = (byte) (-20);
      byteArray2[4] = (byte) (-20);
      byteArray2[5] = (byte)93;
      byteArray2[6] = (byte) (-20);
      byteArray2[7] = (byte) (-20);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher3 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher3.isBeforeFirst();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher1.isFirst();
      long long0 = 255L;
      // Undeclared exception!
      try { 
        fBCachedFetcher2.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate3.or(predicate4);
      predicate3.negate();
      Predicate<byte[][]> predicate10 = predicate1.or(predicate4);
      Predicate<byte[][]> predicate11 = predicate10.negate();
      Predicate<byte[][]> predicate12 = predicate11.or(predicate5);
      predicate12.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate3);
      Predicate<byte[][]> predicate14 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate15 = predicate13.negate();
      Predicate<byte[][]> predicate16 = predicate14.negate();
      Predicate<byte[][]> predicate17 = predicate1.negate();
      predicate14.negate();
      Predicate<byte[][]> predicate18 = predicate13.negate();
      predicate18.or(predicate12);
      Predicate<byte[][]> predicate19 = predicate8.and(predicate14);
      Predicate<byte[][]> predicate20 = predicate16.and(predicate9);
      predicate19.or(predicate18);
      predicate11.test(byteArray0);
      predicate17.and(predicate6);
      predicate2.or(predicate11);
      predicate15.negate();
      predicate20.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getOutSqlda();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[7];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      FBLongVarCharField[] fBLongVarCharFieldArray1 = new FBLongVarCharField[5];
      fBLongVarCharFieldArray1[0] = fBLongVarCharField0;
      linkedList0.add((byte[][]) null);
      fBLongVarCharFieldArray1[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[4] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      predicate2.or(predicate4);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate7.negate();
      Predicate<byte[][]> predicate11 = predicate1.or(predicate9);
      Predicate<byte[][]> predicate12 = predicate11.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate5);
      Predicate<byte[][]> predicate14 = predicate2.negate();
      Predicate<byte[][]> predicate15 = predicate13.or(predicate3);
      Predicate<byte[][]> predicate16 = predicate14.negate();
      predicate15.negate();
      predicate11.and(predicate10);
      Predicate<byte[][]> predicate17 = predicate16.negate();
      Predicate<byte[][]> predicate18 = predicate2.negate();
      predicate12.negate();
      predicate16.negate();
      Predicate<byte[][]> predicate19 = predicate18.negate();
      Predicate<byte[][]> predicate20 = predicate19.or(predicate13);
      Predicate<byte[][]> predicate21 = predicate8.and(predicate16);
      Predicate<byte[][]> predicate22 = predicate17.and(predicate3);
      predicate21.negate();
      predicate16.and(predicate6);
      predicate15.and(predicate21);
      Predicate.isEqual((Object) predicate22);
      predicate20.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.280191375787985
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-97));
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[3];
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)0, threadFactory0);
      MockThread mockThread0 = new MockThread();
      MockThread.dumpStack();
      Thread[] threadArray0 = new Thread[1];
      threadArray0[0] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) (byte)0, timeUnit0);
      scheduledThreadPoolExecutor0.getQueue();
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      scheduledThreadPoolExecutor0.getCompletedTaskCount();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(351, threadFactory1);
      scheduledThreadPoolExecutor1.shutdownNow();
      scheduledThreadPoolExecutor1.getExecuteExistingDelayedTasksAfterShutdownPolicy();
      scheduledThreadPoolExecutor1.getTaskCount();
      XSQLDA xSQLDA0 = new XSQLDA(1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, 1, (-1327), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.field.FBField", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      predicate3.or(predicate4);
      predicate3.negate();
      Predicate<byte[][]> predicate9 = predicate1.or(predicate4);
      Predicate<byte[][]> predicate10 = predicate9.negate();
      Predicate<byte[][]> predicate11 = predicate10.or(predicate5);
      Predicate.isEqual((Object) predicate3);
      Predicate<byte[][]> predicate12 = predicate11.or(predicate3);
      Predicate<byte[][]> predicate13 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate14 = predicate12.negate();
      Predicate<byte[][]> predicate15 = predicate13.negate();
      Predicate<byte[][]> predicate16 = predicate1.negate();
      predicate13.negate();
      Predicate<byte[][]> predicate17 = predicate9.or(predicate7);
      predicate17.or(predicate11);
      Predicate<byte[][]> predicate18 = predicate8.and(predicate13);
      Predicate<byte[][]> predicate19 = predicate15.and(predicate3);
      predicate18.or(predicate17);
      predicate10.test(byteArray0);
      predicate16.and(predicate6);
      predicate2.or(predicate10);
      predicate14.negate();
      predicate19.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(258);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[23];
      byteArray1[0] = (byte) (-16);
      byteArray1[1] = (byte)38;
      byteArray1[2] = (byte)0;
      byteArray1[15] = (byte) (-54);
      byteArray1[4] = (byte)1;
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setOutSqlda(xSQLDA0);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<byte[][]> predicate7 = predicate0.or(predicate6);
      predicate2.or(predicate3);
      predicate2.negate();
      Predicate<byte[][]> predicate8 = predicate0.or(predicate3);
      Predicate<byte[][]> predicate9 = Predicate.isEqual((Object) predicate2);
      Predicate<byte[][]> predicate10 = predicate0.or(predicate2);
      Predicate<byte[][]> predicate11 = predicate0.and(predicate2);
      Predicate<byte[][]> predicate12 = predicate10.negate();
      Predicate<byte[][]> predicate13 = predicate11.negate();
      Predicate<byte[][]> predicate14 = predicate0.negate();
      predicate9.negate();
      Predicate<byte[][]> predicate15 = predicate8.or(predicate6);
      predicate15.or(predicate1);
      Predicate<byte[][]> predicate16 = predicate7.and(predicate11);
      Predicate<byte[][]> predicate17 = predicate13.and(predicate2);
      predicate10.and(predicate11);
      predicate16.or(predicate15);
      predicate8.test(byteArray0);
      predicate14.and(predicate5);
      predicate1.or(predicate8);
      predicate12.negate();
      predicate17.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative((-4359));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[3];
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)0, threadFactory0);
      MockThread mockThread0 = new MockThread();
      MockThread.dumpStack();
      Thread[] threadArray0 = new Thread[1];
      threadArray0[0] = (Thread) mockThread0;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = mockThread0.getUncaughtExceptionHandler();
      mockThread0.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.enumerate(threadArray0);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      mockThread0.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.prestartCoreThread();
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) (byte)0, timeUnit0);
      scheduledThreadPoolExecutor0.getQueue();
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      scheduledThreadPoolExecutor0.getCompletedTaskCount();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(1, threadFactory1);
      scheduledThreadPoolExecutor1.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);
      scheduledThreadPoolExecutor1.shutdownNow();
      TimeUnit timeUnit1 = TimeUnit.HOURS;
      scheduledThreadPoolExecutor0.setKeepAliveTime(4263L, timeUnit1);
      scheduledThreadPoolExecutor1.setKeepAliveTime(0L, timeUnit0);
      scheduledThreadPoolExecutor0.prestartCoreThread();
      scheduledThreadPoolExecutor1.getExecuteExistingDelayedTasksAfterShutdownPolicy();
      scheduledThreadPoolExecutor0.getTaskCount();
      XSQLDA xSQLDA0 = new XSQLDA(1);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<byte[][]> predicate7 = predicate2.or(predicate4);
      Predicate<Object> predicate8 = predicate6.negate();
      predicate1.or(predicate8);
      Predicate<Object> predicate9 = predicate5.negate();
      predicate8.negate();
      Predicate<byte[][]> predicate10 = predicate1.or(predicate9);
      Predicate<byte[][]> predicate11 = predicate10.negate();
      Predicate<byte[][]> predicate12 = predicate11.or(predicate5);
      predicate2.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate3);
      Predicate<byte[][]> predicate14 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate15 = predicate7.negate();
      Predicate<byte[][]> predicate16 = predicate14.negate();
      Predicate<byte[][]> predicate17 = predicate1.negate();
      predicate11.negate();
      predicate14.negate();
      Predicate<byte[][]> predicate18 = predicate17.negate();
      Predicate<byte[][]> predicate19 = predicate18.or(predicate12);
      Predicate<byte[][]> predicate20 = predicate16.and(predicate3);
      predicate15.negate();
      predicate14.and(predicate6);
      predicate13.and(predicate10);
      Predicate.isEqual((Object) predicate20);
      predicate19.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0108940605206342
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getArgumentAsString((-2));
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeArgument((-5520));
      databaseParameterBufferImp1.addArgument(69, "y");
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp1.hasArgument(0);
      databaseParameterBufferImp0.getArgumentAsString((-1241));
      databaseParameterBufferImp0.getArgumentAsString(693);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      System.setCurrentTimeMillis(2180L);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate6.negate();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      predicate3.or(predicate4);
      predicate3.negate();
      Predicate<byte[][]> predicate9 = predicate1.or(predicate4);
      Predicate.isEqual((Object) predicate3);
      Predicate<byte[][]> predicate10 = predicate1.or(predicate3);
      Predicate<byte[][]> predicate11 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate12 = predicate10.negate();
      Predicate<byte[][]> predicate13 = predicate11.negate();
      Predicate<byte[][]> predicate14 = predicate1.negate();
      predicate11.negate();
      Predicate<byte[][]> predicate15 = predicate9.or(predicate7);
      predicate15.or(predicate2);
      Predicate<byte[][]> predicate16 = predicate8.and(predicate11);
      Predicate<byte[][]> predicate17 = predicate13.and(predicate3);
      predicate16.or(predicate15);
      predicate9.test(byteArray0);
      predicate14.and(predicate6);
      predicate2.or(predicate9);
      predicate12.negate();
      predicate17.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-4359));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate3.or(predicate4);
      predicate3.negate();
      Predicate<byte[][]> predicate10 = predicate1.or(predicate4);
      Predicate<byte[][]> predicate11 = predicate10.negate();
      Predicate<byte[][]> predicate12 = predicate11.or(predicate5);
      predicate12.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate3);
      Predicate<byte[][]> predicate14 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate15 = predicate13.negate();
      Predicate<byte[][]> predicate16 = predicate14.negate();
      Predicate<byte[][]> predicate17 = predicate1.negate();
      predicate14.negate();
      Predicate<byte[][]> predicate18 = predicate13.negate();
      predicate18.or(predicate12);
      Predicate<byte[][]> predicate19 = predicate8.and(predicate14);
      Predicate<byte[][]> predicate20 = predicate16.and(predicate9);
      predicate19.or(predicate18);
      predicate11.test(byteArray0);
      predicate17.and(predicate6);
      predicate2.or(predicate11);
      predicate15.negate();
      predicate20.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(258);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate3.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate3.or(predicate4);
      predicate3.negate();
      Predicate<byte[][]> predicate10 = predicate1.or(predicate4);
      Predicate<byte[][]> predicate11 = predicate10.negate();
      Predicate<byte[][]> predicate12 = predicate11.or(predicate5);
      predicate12.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate3);
      Predicate<byte[][]> predicate14 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate15 = predicate13.negate();
      Predicate<byte[][]> predicate16 = predicate8.negate();
      Predicate<byte[][]> predicate17 = predicate1.negate();
      predicate14.negate();
      Predicate<byte[][]> predicate18 = predicate13.negate();
      predicate18.or(predicate12);
      Predicate<byte[][]> predicate19 = predicate8.and(predicate14);
      Predicate<byte[][]> predicate20 = predicate16.and(predicate9);
      predicate19.or(predicate18);
      predicate11.test(byteArray0);
      predicate17.and(predicate6);
      predicate2.or(predicate11);
      predicate15.negate();
      predicate20.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(258);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5555666420118905
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(69);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      databaseParameterBufferImp0.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.getLength();
      databaseParameterBufferImp1.removeArgument(69);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeArgument(1163);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeArgument(731);
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp14.getLength();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<byte[][]> predicate7 = predicate1.or(predicate6);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<byte[][]> predicate9 = predicate1.or(predicate8);
      Predicate<byte[][]> predicate10 = predicate9.negate();
      Predicate<byte[][]> predicate11 = Predicate.isEqual((Object) predicate2);
      predicate9.or(predicate2);
      Predicate<byte[][]> predicate12 = predicate0.and(predicate2);
      predicate1.or(predicate12);
      Predicate<byte[][]> predicate13 = predicate12.negate();
      predicate12.negate();
      Predicate<byte[][]> predicate14 = predicate9.negate();
      predicate14.or(predicate0);
      Predicate<byte[][]> predicate15 = predicate7.and(predicate12);
      Predicate<byte[][]> predicate16 = predicate13.and(predicate2);
      Predicate<byte[][]> predicate17 = predicate15.or(predicate14);
      predicate0.or(predicate10);
      predicate17.and(predicate15);
      Predicate.isEqual((Object) predicate16);
      predicate11.negate();
      linkedList0.clear();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate3.or(predicate4);
      predicate3.negate();
      Predicate<byte[][]> predicate10 = predicate1.or(predicate4);
      Predicate<byte[][]> predicate11 = predicate10.negate();
      Predicate<byte[][]> predicate12 = predicate11.or(predicate5);
      predicate12.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate3);
      Predicate<byte[][]> predicate14 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate15 = predicate13.negate();
      Predicate<byte[][]> predicate16 = predicate14.negate();
      Predicate<byte[][]> predicate17 = predicate1.negate();
      predicate14.negate();
      Predicate<byte[][]> predicate18 = predicate13.negate();
      predicate18.or(predicate12);
      Predicate<byte[][]> predicate19 = predicate8.and(predicate14);
      Predicate<byte[][]> predicate20 = predicate16.and(predicate9);
      predicate19.or(predicate18);
      predicate11.test(byteArray0);
      predicate17.and(predicate6);
      predicate2.or(predicate11);
      predicate15.negate();
      predicate20.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      boolean boolean0 = linkedList0.removeFirstOccurrence((Object) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getOutSqlda();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      FBLongVarCharField[] fBLongVarCharFieldArray1 = new FBLongVarCharField[5];
      fBLongVarCharFieldArray1[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[4] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)39;
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)39, threadFactory0);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      databaseParameterBufferImp1.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.getLength();
      databaseParameterBufferImp0.removeArgument(3);
      databaseParameterBufferImp4.removeArgument((byte)109);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeArgument((-779));
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getLength();
      byte[][] byteArray1 = new byte[2][9];
      byteArray1[0] = null;
      byteArray1[1] = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)39;
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)39, threadFactory0);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      databaseParameterBufferImp1.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.getLength();
      databaseParameterBufferImp0.removeArgument(3);
      databaseParameterBufferImp4.removeArgument((byte)109);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeArgument((-779));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp11.getLength();
      byte[][] byteArray1 = new byte[2][9];
      byteArray1[0] = null;
      byteArray1[1] = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[3];
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)0, threadFactory0);
      MockThread mockThread0 = new MockThread();
      scheduledThreadPoolExecutor0.setContinueExistingPeriodicTasksAfterShutdownPolicy(false);
      MockThread.dumpStack();
      Thread[] threadArray0 = new Thread[1];
      threadArray0[0] = (Thread) mockThread0;
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) (byte)0, timeUnit0);
      scheduledThreadPoolExecutor0.getQueue();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.removeArgument((-166));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      int int0 = databaseParameterBufferImp5.getLength();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      predicate2.or(predicate4);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate7.negate();
      Predicate<byte[][]> predicate11 = predicate1.or(predicate9);
      Predicate<byte[][]> predicate12 = predicate11.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate5);
      Predicate<byte[][]> predicate14 = predicate2.negate();
      Predicate<byte[][]> predicate15 = predicate13.or(predicate3);
      Predicate<byte[][]> predicate16 = predicate14.negate();
      Predicate<byte[][]> predicate17 = predicate15.negate();
      predicate11.and(predicate10);
      Predicate<byte[][]> predicate18 = predicate16.negate();
      Predicate<byte[][]> predicate19 = predicate1.negate();
      predicate12.negate();
      predicate16.negate();
      Predicate<byte[][]> predicate20 = predicate19.negate();
      Predicate<byte[][]> predicate21 = predicate20.or(predicate13);
      Predicate<byte[][]> predicate22 = predicate8.and(predicate16);
      Predicate<byte[][]> predicate23 = predicate18.and(predicate3);
      predicate17.negate();
      predicate16.and(predicate6);
      predicate15.and(predicate22);
      Predicate.isEqual((Object) predicate23);
      predicate21.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[3];
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)0, threadFactory0);
      MockThread mockThread0 = new MockThread();
      MockThread.dumpStack();
      Thread[] threadArray0 = new Thread[1];
      MockThread.interrupted();
      threadArray0[0] = (Thread) mockThread0;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = mockThread0.getUncaughtExceptionHandler();
      mockThread0.getStackTrace();
      mockThread0.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.enumerate(threadArray0);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.schedule((Runnable) threadArray0[0], 180L, timeUnit0);
      scheduledThreadPoolExecutor0.getQueue();
      scheduledThreadPoolExecutor0.getCompletedTaskCount();
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(739, threadFactory1);
      scheduledThreadPoolExecutor0.shutdownNow();
      scheduledThreadPoolExecutor1.getCompletedTaskCount();
      scheduledThreadPoolExecutor0.setKeepAliveTime(180L, timeUnit0);
      scheduledThreadPoolExecutor0.prestartCoreThread();
      scheduledThreadPoolExecutor0.getExecuteExistingDelayedTasksAfterShutdownPolicy();
      scheduledThreadPoolExecutor1.shutdownNow();
      scheduledThreadPoolExecutor1.getContinueExistingPeriodicTasksAfterShutdownPolicy();
      TimeUnit timeUnit1 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor1.isTerminating();
      scheduledThreadPoolExecutor0.getKeepAliveTime(timeUnit1);
      TimeUnit timeUnit2 = TimeUnit.NANOSECONDS;
      scheduledThreadPoolExecutor1.setKeepAliveTime(1, timeUnit2);
      scheduledThreadPoolExecutor1.prestartCoreThread();
      scheduledThreadPoolExecutor0.getExecuteExistingDelayedTasksAfterShutdownPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor2 = new ScheduledThreadPoolExecutor(739);
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)54;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.relative((byte)54);
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-2836L));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][7];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)47;
      byteArray1[1] = (byte)78;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)47;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)78;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte)47;
      byteArray4[1] = (byte)78;
      byteArray4[2] = (byte)78;
      byteArray4[4] = (byte)47;
      byteArray4[5] = (byte) (-114);
      byteArray4[6] = (byte)47;
      byteArray4[7] = (byte)70;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[17];
      byteArray5[0] = (byte)47;
      byteArray5[1] = (byte) (-114);
      byteArray5[2] = (byte) (-114);
      byteArray5[3] = (byte)70;
      byteArray5[4] = (byte)78;
      byteArray5[5] = (byte)70;
      byteArray5[6] = (byte)70;
      byteArray5[7] = (byte)70;
      byteArray5[8] = (byte) (-114);
      byteArray0[4] = byteArray5;
      byteArray0[5] = byteArray5;
      linkedList1.offerFirst(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.retainAll(linkedList1);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList4.addFirst((byte[][]) null);
      linkedList2.add((byte[][]) null);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList6);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList4, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[3];
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)0, threadFactory0);
      MockThread mockThread0 = new MockThread();
      Thread[] threadArray0 = new Thread[1];
      threadArray0[0] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) (byte)0, timeUnit0);
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      scheduledThreadPoolExecutor0.getCompletedTaskCount();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(351, threadFactory1);
      scheduledThreadPoolExecutor1.getExecuteExistingDelayedTasksAfterShutdownPolicy();
      scheduledThreadPoolExecutor1.getMaximumPoolSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor2 = new ScheduledThreadPoolExecutor(350);
      TimeUnit timeUnit1 = TimeUnit.NANOSECONDS;
      scheduledThreadPoolExecutor2.getKeepAliveTime(timeUnit1);
      scheduledThreadPoolExecutor0.shutdownNow();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      scheduledThreadPoolExecutor1.shutdownNow();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-3876), 350, Integer.MAX_VALUE, (-1), 877);
      databaseParameterBufferImp1.getLength();
      byte[][] byteArray1 = new byte[6][0];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.clearRows();
      isc_stmt_handle_impl1.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl4 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl3.getRsr_rdb();
      isc_stmt_handle_impl0.setRsr_rdb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl6.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl8 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl9 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl11 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl12 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl13 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl5.clearRows();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl14 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl15 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl16 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl17 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl12.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_stmt_handle_impl13.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl18 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.addFirst(byteArray0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) byteArray0[5]);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      predicate2.or(predicate4);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<byte[][]> predicate8 = predicate1.or(predicate7);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate7.negate();
      Predicate<byte[][]> predicate11 = predicate1.or(predicate9);
      Predicate<byte[][]> predicate12 = predicate11.negate();
      Predicate<byte[][]> predicate13 = predicate12.or(predicate5);
      predicate2.negate();
      Predicate<byte[][]> predicate14 = predicate13.or(predicate3);
      Predicate<byte[][]> predicate15 = predicate0.and(predicate3);
      predicate14.negate();
      predicate11.and(predicate10);
      Predicate<byte[][]> predicate16 = predicate15.negate();
      Predicate<byte[][]> predicate17 = predicate1.negate();
      predicate12.negate();
      predicate15.negate();
      Predicate<byte[][]> predicate18 = predicate17.negate();
      Predicate<byte[][]> predicate19 = predicate18.or(predicate13);
      Predicate<byte[][]> predicate20 = predicate8.and(predicate15);
      Predicate<byte[][]> predicate21 = predicate16.and(predicate3);
      predicate0.or(predicate12);
      predicate15.and(predicate6);
      predicate14.and(predicate20);
      Predicate.isEqual((Object) predicate21);
      predicate19.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
