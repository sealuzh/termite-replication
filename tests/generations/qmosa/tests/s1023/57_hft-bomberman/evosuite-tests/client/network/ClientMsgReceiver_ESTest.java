/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:30:48 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.components.MyButton;
import client.network.ClientMsgReceiver;
import java.awt.DefaultFocusTraversalPolicy;
import java.awt.HeadlessException;
import java.beans.PropertyChangeListener;
import java.net.Socket;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientConnectionException;
import java.util.HashMap;
import java.util.function.Consumer;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.plaf.basic.BasicRootPaneUI;
import javax.swing.plaf.basic.BasicToggleButtonUI;
import javax.swing.plaf.metal.MetalRootPaneUI;
import messages.global.GlobalStateMsg;
import messages.global.LoginMsg;
import messages.round.CountdownMsg;
import messages.round.PowerUpHitMsg;
import messages.round.RoundScoreMsg;
import messages.session.SessionChatMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement("usertype", "fxyH).@#", "", 875);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "", (-1336));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "uF}[+<-+c>zFwB", ",", 875);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("g89px%56%", "", "g89px%56%", 0);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", "", 1941);
      stackTraceElementArray0[4] = stackTraceElement2;
      StackTraceElement stackTraceElement5 = new StackTraceElement("", "", "", 875);
      stackTraceElementArray0[5] = stackTraceElement5;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      int int0 = (-1843);
      LoginMsg loginMsg0 = new LoginMsg("f=+$YvpGWZwPt1r+u", ":cXU/{", (-1843));
      LoginMsg loginMsg1 = new LoginMsg("f=+$YvpGWZwPt1r+u", 3);
      loginMsg0.GUEST_LOGIN = 3;
      loginMsg1.setAction(3460);
      Integer.getInteger(";$'FZ!t;)n", 2);
      CountdownMsg countdownMsg0 = new CountdownMsg(3);
      hashMap0.remove((Object) "f=+$YvpGWZwPt1r+u", (Object) ":cXU/{");
      loginMsg1.setAction(2);
      LoginMsg loginMsg2 = new LoginMsg("f=+$YvpGWZwPt1r+u", 2);
      LoginMsg.LOGIN = (-1503);
      loginMsg2.setUsername("Couldn't close input stream");
      LoginMsg loginMsg3 = new LoginMsg("Couldn't close input stream", (-1503));
      loginMsg3.setAction((-3672));
      loginMsg2.setUsername("f=+$YvpGWZwPt1r+u");
      RoundScoreMsg roundScoreMsg0 = new RoundScoreMsg((HashMap<String, Integer>) null);
      PowerUpHitMsg powerUpHitMsg0 = new PowerUpHitMsg(3, 3, 0);
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      LoginMsg loginMsg4 = new LoginMsg("", "f=+$YvpGWZwPt1r+u", 3);
      LoginMsg loginMsg5 = new LoginMsg("", (String) null, 0);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(3);
      SessionChatMsg sessionChatMsg0 = new SessionChatMsg((String) null, "f=+$YvpGWZwPt1r+u");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-128);
      MockURL.getFileExample();
      MockThread mockThread0 = new MockThread("t9mZ*L");
      ClassLoader classLoader0 = clientMsgReceiver0.getContextClassLoader();
      classLoader0.getParent();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, clientMsgReceiver0, "", (byte) (-128));
      mockThread1.setContextClassLoader(classLoader0);
      Thread[] threadArray0 = new Thread[5];
      threadArray0[0] = (Thread) mockThread1;
      MockThread mockThread2 = new MockThread(mockThread0, "t9mZ*L");
      threadArray0[1] = (Thread) mockThread2;
      threadArray0[2] = (Thread) mockThread1;
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread3 = new MockThread(threadGroup1, mockThread0, "t9mZ*L");
      threadArray0[3] = (Thread) mockThread3;
      threadArray0[4] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThrowable mockThrowable0 = new MockThrowable("t9mZ*L");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      MetalRootPaneUI metalRootPaneUI1 = new MetalRootPaneUI();
      MetalRootPaneUI metalRootPaneUI2 = new MetalRootPaneUI();
      metalRootPaneUI2.getMinimumSize(defaultListCellRenderer_UIResource0);
      MetalRootPaneUI.createUI(defaultListCellRenderer_UIResource0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.setIcon((Icon) null);
      BasicRootPaneUI basicRootPaneUI0 = new BasicRootPaneUI();
      defaultListCellRenderer_UIResource1.removePropertyChangeListener((PropertyChangeListener) basicRootPaneUI0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThrowable mockThrowable0 = new MockThrowable("t9mZ*L");
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("Unknown message type: ", "t9mZ*L", sQLTransactionRollbackException0);
      SQLTransactionRollbackException sQLTransactionRollbackException1 = new SQLTransactionRollbackException("", "4G9<!pyv.][Gwdpy5[", sQLTransientConnectionException0);
      SQLTransientConnectionException sQLTransientConnectionException1 = new SQLTransientConnectionException(sQLTransactionRollbackException1);
      SQLTransactionRollbackException sQLTransactionRollbackException2 = new SQLTransactionRollbackException((String) null, "", sQLTransactionRollbackException1);
      SQLTransactionRollbackException sQLTransactionRollbackException3 = new SQLTransactionRollbackException("", "", sQLTransactionRollbackException0);
      SQLTransientConnectionException sQLTransientConnectionException2 = new SQLTransientConnectionException(sQLTransactionRollbackException2);
      System.setCurrentTimeMillis(0L);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(sQLTransactionRollbackException3);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTransactionRollbackException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      MetalRootPaneUI metalRootPaneUI1 = new MetalRootPaneUI();
      MetalRootPaneUI metalRootPaneUI2 = new MetalRootPaneUI();
      metalRootPaneUI1.getMinimumSize(defaultListCellRenderer_UIResource0);
      BasicToggleButtonUI basicToggleButtonUI0 = new BasicToggleButtonUI();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      metalRootPaneUI0.getMinimumSize(defaultListCellRenderer_UIResource0);
      BasicToggleButtonUI basicToggleButtonUI1 = new BasicToggleButtonUI();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource3 = new DefaultListCellRenderer.UIResource();
      MyButton myButton0 = new MyButton("Couldn't m%ave (ame sesmion (null)!");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource4 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource5 = new DefaultListCellRenderer.UIResource();
      MyButton myButton1 = new MyButton("YW#qz'*=W[30Q");
      defaultListCellRenderer_UIResource5.getGraphicsConfiguration();
      defaultListCellRenderer_UIResource2.getFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      System.setCurrentTimeMillis((-33L));
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getTcpNoDelay();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("] did not open: ");
      sQLTransientConnectionException0.addSuppressed(sQLTransactionRollbackException0);
      SQLTransactionRollbackException sQLTransactionRollbackException1 = new SQLTransactionRollbackException("] did not open: ", "] did not open: ", sQLTransactionRollbackException0);
      SQLTransientConnectionException sQLTransientConnectionException1 = new SQLTransientConnectionException(sQLTransientConnectionException0);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException();
      SQLTransactionRollbackException sQLTransactionRollbackException2 = new SQLTransactionRollbackException();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(sQLTransactionRollbackException1);
      sQLIntegrityConstraintViolationException0.addSuppressed(sQLTransientConnectionException0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLTransactionRollbackException0.forEach(consumer0);
      SQLTransientConnectionException sQLTransientConnectionException2 = new SQLTransientConnectionException((String) null, "Hndh*ne", sQLTransactionRollbackException0);
      sQLTransientConnectionException2.addSuppressed(sQLTransactionRollbackException1);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException(sQLTransactionRollbackException2);
      SQLTransactionRollbackException sQLTransactionRollbackException3 = new SQLTransactionRollbackException("Vl", "", sQLInvalidAuthorizationSpecException0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("", "d$QN", sQLTransactionRollbackException0);
      SQLTransactionRollbackException sQLTransactionRollbackException4 = new SQLTransactionRollbackException("L|_", "Hndh*ne", sQLTransactionRollbackException1);
      SQLTransactionRollbackException sQLTransactionRollbackException5 = new SQLTransactionRollbackException("R", "`M", sQLTransientConnectionException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement("usertype", "O(,yH).@#", "", 875);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "", (-1336));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "uF}[+<--+c>zFwB", ",", 875);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("g89px%56%", "", "g89px%56%", 5);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", "", 1941);
      stackTraceElementArray0[3] = stackTraceElement1;
      StackTraceElement stackTraceElement5 = new StackTraceElement("me", "a'/AH`4k8TqC%R", "", 875);
      stackTraceElementArray0[5] = stackTraceElement5;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
