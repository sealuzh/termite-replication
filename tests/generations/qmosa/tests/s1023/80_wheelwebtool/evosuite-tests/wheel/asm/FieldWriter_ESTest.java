/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 07:20:25 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(48);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/");
      classWriter0.version = (-18);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      int int0 = 1296;
      ByteVector byteVector1 = new ByteVector();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream3);
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream(pipedInputStream2);
      PipedOutputStream pipedOutputStream6 = null;
      try {
        pipedOutputStream6 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), "+G", "+G", "+G", "+G");
      classWriter0.version = 55;
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byteVector0.putByte((-18));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_\"hvg");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+G");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SourceDebugExtension");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte) (-128);
      byteVector0.data = byteArray0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_\"hvg");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertNotSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4996434954159876
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Insensitive", "F", (String) null, (Object) null);
      classWriter0.newClass("*1/?TIdQv7");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(9);
      byteVector1.putByte(2);
      Attribute attribute0 = new Attribute("Tci]qCj9f\"b<RY");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector2 = byteVector1.put11(8, 9);
      ByteVector byteVector3 = byteVector2.putByte(2);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.440079377496302
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(48);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/");
      classWriter0.version = 48;
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12((-18), (-18));
      classWriter0.visitSource("v6X.abl;wx.SvL-c", "v6X.abl;wx.SvL-c");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 48, "CC#ry;~'^?&V+ o@/=m", "", (String) null, (Object) null);
      fieldWriter1.visitAnnotation("", false);
      fieldWriter0.put(byteVector1);
      fieldWriter1.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter1.put(byteVector0);
      classWriter0.newConstItem("");
      fieldWriter1.visitAnnotation("org.apache.commons.io.IOCase", false);
      fieldWriter0.visitAnnotation("v6X.abl;wx.SvL-c", false);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("CC#ry;~'^?&V+ o@/=m", false);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("#-", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(684);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 684, "", "", "EWEs|q3u/", "|72q2<&vyM/Gk");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 684;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5295787240012249
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 9;
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2345);
      pipedOutputStream0.close();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.flush();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      fieldWriter0.visitAnnotation("kWEsuq3(/", false);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("kWEsuq3(/", true);
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(48);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), "+G", "+G", "+G", "+G");
      classWriter0.version = 48;
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byteVector0.putByte((-18));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_\"hvg");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+G");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Si_nLatre");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.NotFileFilter");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte) (-128);
      byteVector0.data = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.NotFileFilter");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_\"hvg");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ByteVector byteVector1 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2321));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "zZ2F$?xqV>ph|_&kd", "", "java/lang/Throwable", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "StagckFap", "!}WWk:8n", "!}WWk:8n", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 28);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 9;
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/", "kWEsuq3(/");
      classWriter0.version = 9;
      fieldWriter0.visitAnnotation("kWEsuq3(/", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      fieldWriter0.put(byteVector0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2349);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 2335);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.47621155579498
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(48);
      classWriter0.version = 48;
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12((-18), (-18));
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte) (-48);
      byteArray0[2] = (byte) (-50);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)24;
      byteArray0[7] = (byte)21;
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 48, "CC#ry;~'^?&V+ o@/=m", "", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      String string0 = "";
      fieldWriter0.visitAnnotation("", false);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5594867435016257
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1537));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1537), "RuntimeVisibleAnnotations", "P!k", "ConstantValue", "P!k");
      fieldWriter0.getSize();
      classWriter0.newInteger(36);
      ByteVector byteVector0 = new ByteVector(1498);
      ByteVector byteVector1 = byteVector0.putInt(49);
      ByteVector byteVector2 = byteVector1.put12(36, (-1537));
      ByteVector byteVector3 = byteVector1.put12(55, 49);
      ByteVector byteVector4 = byteVector2.putUTF8("DY~m");
      byteVector0.putByte(12);
      fieldWriter0.put(byteVector4);
      fieldWriter0.visitAnnotation("Xgx%", true);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("DY~m", true);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("Signature", true);
      fieldWriter0.put(byteVector3);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("P!k", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1296);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "lE'*zOe+{$:RPd", "?kd", "cD]?\"@:.2", "?kd");
      Attribute attribute0 = new Attribute("ConstantValue");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-730));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1988, "8:<eYyr\"5", "8:<eYyr\"5", "Signature", "Signature");
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("8:<eYyr\"5");
      Attribute attribute1 = attribute0.next;
      MockFile mockFile0 = new MockFile("");
      mockFile0.setReadable(false);
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "vMzPw<1*_N7,TQV5", "org.apache.commons.io.filefilter.AbstractFileFilter", "vMzPw<1*_N7,TQV5", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@50bbff09
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-176), (String) null, (String) null, (String) null, "6S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
