/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 08:24:10 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9348378022835657
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaningStatus("Z");
      User user0 = new User("3!UF=b(s-o.H", ";:~$L&7gke+#L+.ckW");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("3!UF=b(s-o.H", "m4DM/BX,,3+jf/.$]");
      user1.setStatus("G1N{z uh3m<.");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Z", rawVariable0.getCleaningStatus());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable1);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlternativeVariable();
      Variable.detectFieldChanges(user1, rawVariable3, rawVariable4);
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable1.createVariableSummary();
      MacawChangeEvent macawChangeEvent8 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent8.getChangeMessage());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.783191196642293
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = 20;
      derivedVariable0.setIdentifier(20);
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.cloneAttributes(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      arrayList0.add((Variable) rawVariable1);
      rawVariable1.setLabel("{R%sEy~U|iv2$");
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.getForm();
      rawVariable0.getCategory();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getAlias();
      rawVariable0.isCoded();
      rawVariable1.getAvailability();
      derivedVariable0.getYear();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.getAlias();
      rawVariable1.getAlternativeVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9169986404446697
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("UNABLE_TO_GET_AVAILABILITY_STATES");
      String string0 = "Z";
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string1 = ",Un";
      derivedVariable0.setName(",Un");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User(",Un", ",Un");
      user0.setAddressLine2(",Un");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9924430658321493
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "hM1P_c`nLB`b=";
      rawVariable0.setLabel("hM1P_c`nLB`b=");
      rawVariable0.setAlias((String) null);
      rawVariable0.getForm();
      rawVariable0.getColumnStart();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("_o@#yb8&<DZq74CDe", (String) null);
      supportingDocument0.setDocumentCode("hM1P_c`nLB`b=");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDescription("");
      supportingDocument0.getDisplayName();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("*%");
      rawVariable0.questionNumber = "hM1P_c`nLB`b=";
      rawVariable0.setFilePath("D");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("SRLx=7~z<_3g+MLPZlG");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setName("D");
      rawVariable0.getForm();
      rawVariable0.getQuestionNumber();
      rawVariable0.getName();
      rawVariable0.getLabel();
      rawVariable0.getDisplayName();
      RawVariable.validateFields(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getNotes();
      rawVariable0.clone();
      rawVariable0.getColumnEnd();
      assertEquals("D", rawVariable0.getName());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0623551530327875
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(",Un");
      User user0 = new User(",Un", "qw1WYV");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty(",Un");
      Variable.validateFields(derivedVariable1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      User user1 = new User("W|[aW!q+DhI ]`", "W|[aW!q+DhI ]`");
      Variable variable0 = rawVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      variable0.createVariableSummary();
      assertEquals("Z", rawVariable0.getLabel());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList1 = derivedVariable2.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.946880016583525
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      User user1 = new User("KA4Yd_H<-}VoqhR~;(", "W2KGn1aoIG");
      user0.setUserID("Ep[Ie|x");
      user1.setStatus("Ep[Ie|x");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      Variable variable0 = rawVariable1.getAlternativeVariable();
      Variable.detectFieldChanges(user2, variable0, variable0);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      derivedVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable2, variable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable4.getAlternativeVariable();
      assertEquals("Unknown", rawVariable4.getCategory());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9156386484854977
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(",Un", ",Un");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      user0.setStatus((String) null);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, rawVariable0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable0.getLabel();
      assertEquals("Z", rawVariable0.getLabel());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0416462750659607
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel2);
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setIdentifier((-2028178998));
      rawVariable0.form = "variable.availability.label";
      rawVariable0.setLabel("'!");
      rawVariable0.setFilePath("variable.availability.label");
      rawVariable0.getQuestionNumber();
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      System.setCurrentTimeMillis(0L);
      User user0 = new User("'!", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getLabel();
      rawVariable0.getForm();
      assertEquals((-2028178998), rawVariable0.getIdentifier());
      
      User user1 = new User("variable.availability.label", "'!");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7049911369801523
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setDescription("-jiGuGEW_K\"j");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      User user1 = new User("c).", "");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIdentifier((-2045222519));
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable2.createVariableSummary();
      assertEquals("-2045222519", derivedVariable2.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.addSupportingDocument((SupportingDocument) null);
      derivedVariable3.getSourceVariables();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.addSourceVariables(arrayList0);
      assertFalse(derivedVariable4.isCoded());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8942473918449845
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      user0.setStatus("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      rawVariable2.getAlternativeVariable();
      Variable.detectFieldChanges(user1, derivedVariable4, derivedVariable3);
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable2.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      MacawChangeEvent macawChangeEvent8 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, (Variable) null);
      assertEquals(0, (int)macawChangeEvent8.getVariableOwnerID());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertNotNull(macawChangeEvent8);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent8.getChangeMessage());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.861360833848534
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      User user0 = new User();
      User user1 = new User((String) null, "-jiGuGEW_K\"j");
      User user2 = new User("`^T$pqsy[", "`^T$pqsy[");
      rawVariable0.setIdentifier(1);
      user2.clone();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getDisplayName();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.7476417996624614
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("general.fieldValue.blank");
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getAvailability();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      user0.setAddressLine2("Unknown");
      user0.setAddressLine1("");
      user0.setPassword("Unknown");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      assertEquals("general.fieldValue.blank", rawVariable0.getFilePath());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getFilePath();
      rawVariable0.getYear();
      derivedVariable0.isCoded();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.045073072711265
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!|ce\"8hZB(l");
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      ontologyTerm1.setOntologyName("Z");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setDescription((String) null);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setNameSpace((String) null);
      ontologyTerm3.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm6);
      User user0 = new User();
      rawVariable0.setIdentifier((-1));
      user0.clone();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getNotes();
      rawVariable0.getDisplayName();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      arrayList0.add((Variable) derivedVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getFilePath();
      System.setCurrentTimeMillis(1311L);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9341357100487055
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      assertEquals("Z", rawVariable0.getLabel());
      
      Variable.detectFieldChanges(user1, rawVariable3, derivedVariable3);
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      derivedVariable3.createVariableSummary();
      MacawChangeEvent macawChangeEvent8 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable4);
      assertEquals(0, macawChangeEvent8.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9163361606919613
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("3!UF=b(s-f.H", ";:~$L&7gke+#L+.ckW");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("3!UF=b(s-f.H", "m4DM/BX,,3+jf/.$]z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Z", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable1);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      rawVariable1.getAlternativeVariable();
      Variable.detectFieldChanges(user1, rawVariable3, rawVariable3);
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, rawVariable1);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.334266371479499
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      user0.setCounty("m\"iK7~8XGd@=d6)I");
      Variable.validateFields(derivedVariable0);
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIdentifier(1896);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, derivedVariable2);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertEquals(1896, derivedVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.912796191457052
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIdentifier((-166));
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertEquals("-166", derivedVariable2.getDisplayItemIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      assertFalse(derivedVariable5.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7999029934816364
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(",Un", ",Un");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = "Z";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("W`^$o<|rG(9k", "Z");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlternativeVariable();
      Variable.detectFieldChanges(user1, derivedVariable2, rawVariable3);
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      RawVariable rawVariable5 = new RawVariable();
      RawVariable rawVariable6 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, variable0, rawVariable6);
      assertEquals("Z", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "Z";
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7855709210239814
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      User user2 = new User();
      rawVariable0.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0281585398434805
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{(");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("{(");
      Variable.validateFields(derivedVariable2);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      User user1 = new User("variable.isCleaned.saveChanges.changedToNotClean", "{(");
      Variable variable0 = rawVariable0.getAlternativeVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, variable0);
      derivedVariable1.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("{(", derivedVariable0.getName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9005512628394725
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      rawVariable0.setName("KA4Yd_H<-}VoqhR~;(");
      User user1 = new User("KA4Yd_H<-}VoqhR~;(", "W2KGn1aoIG");
      user0.setUserID("Ep[Ie|x");
      user1.setPassword("Ep[Ie|x");
      user0.setStatus("wr)C?]2-TnVh7:");
      user0.setCounty((String) null);
      user1.setStatus("");
      User user2 = new User();
      user1.setStatus("W2KGn1aoIG");
      User.detectFieldChanges(user0, user1, user0);
      User user3 = new User();
      User user4 = new User("bpMsWP}", "");
      User.detectFieldChanges(user1, user3, user4);
      user1.setFirstName("#:-*Bf4h6/V?a(3E5(");
      User user5 = new User();
      user5.setPhone("*>C~1k^WI*");
      user2.setFirstName("EY-#^MUV");
      User user6 = new User();
      RawVariable.detectFieldChanges(user5, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getNotes();
      rawVariable0.getDisplayName();
      assertEquals("KA4Yd_H<-}VoqhR~;(", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9170021743648826
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "Z";
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      try { 
        DerivedVariable.validateFields(derivedVariable4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.45126227595883
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm0.setIdentifier((-1));
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      User user1 = new User();
      User user2 = new User("m\"iK7~8XGd@=d6)I", "m\"iK7~8XGd@=d6)I");
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      arrayList1.spliterator();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setForm("?");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm(":<eYyr\"5I_w0wg4y");
      rawVariable0.setAvailability("");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("(%PVB/]v:-3%l");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList0.add(ontologyTerm0);
      arrayList0.retainAll(linkedList0);
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      arrayList1.addAll(0, (Collection<? extends ValueLabel>) arrayList2);
      arrayList1.parallelStream();
      rawVariable0.setValueLabels(arrayList1);
      rawVariable0.setCleaningDescription("=-6VQGW.w");
      rawVariable0.setIdentifier(4);
      rawVariable0.setForm("/(s7*Rs}s");
      rawVariable0.setAvailability("");
      rawVariable0.setCodeBookNumber(":<eYyr\"5I_w0wg4y");
      assertEquals("", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.getName();
      rawVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.785694393057566
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "'!");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.791114012419545
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm0.clone();
      ontologyTerm2.setNameSpace("&dGo+z5Z*IWKY|");
      rawVariable0.getOntologyTerms();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ontologyTerm2.setIdentifier((-1879048189));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      User user1 = new User();
      User user2 = new User("dV4qVtQ)+<", "dV4qVtQ)+<");
      User user3 = new User("`&T$pqsy", "dV4qVtQ)+<");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2692404415462466
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setTerm("f5LjPi4S&H6|");
      ontologyTerm0.setIdentifier((-2147483645));
      ontologyTerm0.setNameSpace("xF$s&");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      User user0 = new User("xF$s&", "xF$s&");
      User user1 = new User("xF$s&", "ljdL9#-rr 7X:vx");
      User user2 = new User((String) null, "ljdL9#-rr 7X:vx");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.questionNumber = "1`UHCI?Ae^SbcR~9vz";
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.778573572583808
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.codeBookNumber = "hH$cA;1FDDJ6";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setFileName("hH$cA;1FDDJ6");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList3);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAvailability();
      rawVariable1.getYear();
      rawVariable0.clone();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCodeBookNumber();
      System.setCurrentTimeMillis((-118L));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(2419);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.clone();
      rawVariable0.setForm("A");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      arrayList0.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.689026068941394
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("NO_SUPPORTING_DOCUMENT_FILTER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument0.setFileName("}d{A2$0di9*2MM");
      supportingDocument0.setIdentifier((-1));
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.setCleaningDescription("}d{A2$0di9*2MM");
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.removeSourceVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("}d{A2$0di9*2MM", derivedVariable0.getCleaningDescription());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("0V'c|");
      derivedVariable0.setCleaningDescription("X.#e?;Luas");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("X.#e?;Luas");
      supportingDocument0.clone();
      supportingDocument1.setFileName("8qBP;UH");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIdentifier((-1622682391));
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      arrayList4.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList3);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("X.#e?;Luas", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.000193217147124
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("! t", "'!");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("'!");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel1);
      Variable.validateFields(rawVariable0);
      User user1 = new User("'!", "! t");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      derivedVariable0.getCategory();
      derivedVariable1.createVariableSummary();
      assertEquals("'!", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("0V'c|");
      derivedVariable0.setCleaningDescription("NO_SUPPORTING_DOCUMENT_FILTER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("0V'c|");
      supportingDocument1.clone();
      supportingDocument0.setFileName("}d{A2$0di9*2MM");
      supportingDocument1.setIdentifier((-1));
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument2);
      derivedVariable0.setSupportingDocuments(arrayList1);
      assertEquals("0V'c|", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName(".PbV7E#+G");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm1.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      ontologyTerm0.setOntologyName("DUPLICATE_VARIABLE");
      User user0 = new User("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE", "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.493499203019262
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.setForm("UNABLE_TO_GET_USERS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm0.clone();
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      User user1 = new User("ljdL9#-rr 7X:vx", "[G{T0,JHENw");
      User user2 = new User("Jj|Z@E@v(t?)?:P", (String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user2, ontologyTerm2, ontologyTerm2);
      ontologyTerm3.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.getOntologyTerms();
      assertEquals("UNABLE_TO_GET_USERS", rawVariable0.getForm());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7714299682599117
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertNotNull(macawChangeEvent1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      assertFalse(derivedVariable5.isCoded());
      assertFalse(derivedVariable5.isCleaned());
      assertFalse(derivedVariable5.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.857242973981222
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(false);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.isCleaned();
      derivedVariable0.getCleaningDescription();
      ontologyTerm0.setNameSpace("}d{A2$0di9*2MM");
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.getLabel();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6855188118424356
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("O");
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      derivedVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getCodeBookNumber();
      assertEquals("O", rawVariable0.getAlias());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.819059152730687
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      User user1 = new User("KA4Yd_H<-}VoqhR~;(", "W2KGn1aoIG");
      user0.setUserID("Ep[Ie|x");
      user1.setPassword("Ep[Ie|x");
      user0.setStatus("wr)C?]2-TnVh7:");
      user0.setCounty((String) null);
      user1.setStatus("");
      User user2 = new User();
      user1.setStatus("W2KGn1aoIG");
      User.detectFieldChanges(user0, user1, user0);
      User user3 = new User();
      User user4 = new User("bpMsWP}", "");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      rawVariable0.createVariableSummary();
      assertTrue(rawVariable0.isCleaned());
      
      Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable1);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7414488018600394
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("m<|9E#PE&");
      rawVariable0.setName("variable.form.label");
      User user0 = new User("UNABLE_TO_GET_VARIABLE_NAMES", "");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      rawVariable0.notes = "m<|9E#PE&";
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      rawVariable0.isCoded();
      System.setCurrentTimeMillis(466L);
      System.setCurrentTimeMillis((-1803L));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6681000335670535
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.form = "OF<-/:+-";
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7390020227489913
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setFileName("p=gcxc");
      arrayList0.add(supportingDocument4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument5);
      rawVariable0.getAvailability();
      rawVariable0.getYear();
      rawVariable0.clone();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("g-Vf", rawVariable0.getYear());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.929991475390585
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setPassword("-!f8J,H;06CL0z63,");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setOntologyName((String) null);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("F{+B>kmSk");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setNameSpace("gP2(SlLGnZRHC$]o^&$");
      ontologyTerm2.setNameSpace("UNABLE_TO_FILTER_SUMMARIES");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm6);
      User user1 = new User((String) null, "UNABLE_TO_FILTER_SUMMARIES");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.070943132074957
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{(");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("~b");
      derivedVariable0.setName("Jj|Z@E@v(t?)?:P");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setCategory("Jj|Z@E@v(t?)?:P");
      derivedVariable1.setNotes("% *<WUn9D");
      derivedVariable1.getFilePath();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCategory("{(");
      derivedVariable0.setCategory("{(");
      ArrayList<ValueLabel> arrayList0 = derivedVariable2.getValueLabels();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.setValueLabels(arrayList0);
      rawVariable0.setCoded(true);
      User user0 = new User("", "~b");
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertTrue(ontologyTerm0.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setCleaned(false);
      derivedVariable0.codeBookNumber = "4";
      derivedVariable0.setForm((String) null);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.setName("hH$cA;1FDDJ6");
      derivedVariable0.setNotes("4");
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setCategory("O");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9156097425742384
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(",Un", ",Un");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = "Z";
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("W`^$o<|rG(9k", "Z");
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable3.columnStart = "";
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable5.getAlternativeVariable();
      Variable.detectFieldChanges(user1, derivedVariable2, rawVariable4);
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable3.createVariableSummary();
      assertEquals("", rawVariable3.getColumnStart());
      
      Variable.detectChangesInAlternativeVariable(user2, rawVariable6, rawVariable6);
      assertEquals("Unknown", rawVariable6.getCategory());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9155802048397828
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(",Un", ",Un");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = "Z";
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      user0.setPostCode("Z");
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlternativeVariable();
      Variable.detectFieldChanges(user1, rawVariable3, rawVariable2);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable1.createVariableSummary();
      MacawChangeEvent macawChangeEvent5 = Variable.detectChangesInAlternativeVariable(user0, rawVariable3, rawVariable0);
      assertEquals("Z", rawVariable0.getLabel());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent5.getChangeMessage());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.885031462208595
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("0V'c|");
      derivedVariable0.setCleaningDescription("NO_SUPPORTING_DOCUMENT_FILTER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.questionNumber = "9nxiQk8e oS;vS";
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("0V'c|");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setFilePath("A");
      arrayList0.add(supportingDocument0);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      User user0 = new User();
      User user1 = new User("0V'c|", "NO_SUPPORTING_DOCUMENT_FILTER");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      rawVariable0.clone();
      ArrayList<Variable> arrayList5 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList5);
      assertEquals("0V'c|", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.8974805999972775
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "general.fieldValue.blank";
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.864399388173431
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("c,<?!SVmCf");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable4);
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      try { 
        DerivedVariable.validateFields(derivedVariable4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7714299682599117
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertNotNull(macawChangeEvent1);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      assertFalse(derivedVariable5.isCleaned());
      assertFalse(derivedVariable5.isCoded());
      assertFalse(derivedVariable5.isNewRecord());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.838018295885618
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setAvailability("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable2, derivedVariable3);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCleaningDescription((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningDescription("variable.category.label");
      supportingDocument1.clone();
      supportingDocument0.setFileName("");
      supportingDocument1.setIdentifier(1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable2.getCategory();
      assertEquals("variable.category.label", derivedVariable2.getCleaningDescription());
      
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "'!");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.notes = "r'";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.getSourceVariables();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals("r'", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.864339659936907
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("Z");
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      try { 
        DerivedVariable.validateFields(derivedVariable4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.871975975733811
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("~b");
      derivedVariable0.setName("~b");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes("% *<WUn9D");
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCategory("8");
      ArrayList<ValueLabel> arrayList0 = derivedVariable1.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      User user1 = new User("user.addressLine2.label", "");
      user1.setUserID((String) null);
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      rawVariable0.getFilePath();
      derivedVariable2.getName();
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable1.cloneAttributes(rawVariable0);
      derivedVariable2.getOntologyTerms();
      derivedVariable0.createVariableSummary();
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      assertEquals("% *<WUn9D", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.946848453915848
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      user0.setPostCode("");
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getAlternativeVariable();
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable1);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.createVariableSummary();
      MacawChangeEvent macawChangeEvent5 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable0);
      assertEquals("Z", rawVariable0.getLabel());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent5.getChangeMessage());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.0244115380682213
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("Z");
      Variable.validateFields(derivedVariable2);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user1 = new User();
      rawVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("Z", derivedVariable0.getName());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable2.addSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("variable.availability.label", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertTrue(arrayList1.isEmpty());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.9655023742446165
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("3!UF=b(s-f.H", ";:~$L&7gke+#L+.ckW");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("3!UF=b(s-f.H", "m4DM/BX,,3+jf/.$]z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Z", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable1);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable5.getAlternativeVariable();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.setCleaningDescription("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, rawVariable6, derivedVariable3);
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      RawVariable rawVariable7 = new RawVariable();
      rawVariable1.createVariableSummary();
      RawVariable rawVariable8 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable3, rawVariable8);
      assertEquals("Unknown", derivedVariable3.getCategory());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.8491095726219386
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setFileName("p=gcxc");
      arrayList1.add(supportingDocument0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList4);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.getAvailability();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getYear();
      rawVariable0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("g-Vf", rawVariable0.getYear());
      
      rawVariable1.getAvailability();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("/8Lc^W53@h':VEs");
      rawVariable0.cloneAttributes(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertNull(macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.74329692323934
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.notes.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("variable.columnStart.label", "general.fieldValue.unknown");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      assertEquals("variable.notes.label", rawVariable0.getLabel());
      
      User user1 = new User();
      User user2 = new User();
      User user3 = new User("Z", "rNy=DW#0C1Sm}d8?E");
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable2.createVariableSummary();
      RawVariable rawVariable7 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable7, rawVariable7);
      assertEquals("Unknown", rawVariable7.getCleaningStatus());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.754337740914636
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{(");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("{(", "{(");
      rawVariable0.notes = "{(";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable((Variable) null);
      user0.setCounty("{(");
      Variable.validateFields(derivedVariable2);
      User user1 = new User("{(", "{(");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable1.getAlternativeVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.clone();
      assertEquals("{(", derivedVariable0.getDisplayName());
      
      derivedVariable2.getDisplayName();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.9348808519197958
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("Z");
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Z", derivedVariable0.getDisplayName());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      Variable.detectFieldChanges(user1, derivedVariable5, derivedVariable4);
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable2.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, derivedVariable3);
      DerivedVariable derivedVariable6 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable6.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.600492795905894
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("BD*j&~VS5bE");
      derivedVariable0.setCoded(false);
      derivedVariable0.setFilePath("0#Tp$A?Q");
      derivedVariable0.getAlias();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getQuestionNumber();
      rawVariable0.setName("0#Tp$A?Q");
      User user0 = new User("", "pS]v?i");
      user0.setPhone("variable.alias.label");
      user0.setUserID("");
      user0.setPostCode("BD*j&~VS5bE");
      user0.setIdentifier((-1146));
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getName();
      rawVariable0.setCoded(false);
      assertEquals("BD*j&~VS5bE", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.0123380619443823
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(",Un", ",Un");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setFilePath((String) null);
      rawVariable0.removeSupportingDocuments(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      user0.setStatus((String) null);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, rawVariable0);
      assertEquals("Z", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable4 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.6858459711661813
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setColumnEnd("NO_ONTOLOGY_TERM_FILTER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable2, rawVariable3);
      assertEquals("NO_ONTOLOGY_TERM_FILTER", rawVariable2.getColumnEnd());
      assertFalse(arrayList2.equals((Object)arrayList0));
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      User user0 = new User("", "vzriable.alias.lab l");
      assertEquals("0", user0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "blank";
      User user0 = new User();
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getAvailability();
      assertEquals("Unknown", string1);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      User user0 = new User();
      String string0 = "\\'B";
      User user1 = new User("UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE", "'B");
      user1.setUserID("Z");
      user0.setPassword("UNABLE_TO_CREATE_CHANGE_EVENT");
      user0.setStatus("L'zWA:'QS'<T5L");
      User user2 = new User();
      user0.setStatus("gn(QW_09J");
      User.detectFieldChanges(user2, user0, user1);
      user0.setFirstName("Z");
      User user3 = new User();
      user0.setFirstName("Ep[Ie|x");
      User user4 = new User();
      User user5 = new User("'B", "EY-#^MUV");
      User user6 = new User();
      try { 
        User.validateFields(user6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4980758620581636
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("nhe{5gPO:]xBHzI");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("nhe{5gPO:]xBHzI");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setNameSpace("Z");
      ontologyTerm3.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      User user0 = new User("Z", "nhe{5gPO:]xBHzI");
      User user1 = new User("J;0EVIz(6Dej5", "nhe{5gPO:]xBHzI");
      User user2 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm10);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(")[+>h.bHmRGeF]UNh");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals(")[+>h.bHmRGeF]UNh", derivedVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.666476641225991
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      Variable.validateFields(rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.691810598608289
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      User user1 = new User("KA4Yd_H<-}VoqhR~;(", "W2KGn1aoIG");
      user0.setUserID("Ep[Ie|x");
      user1.setPassword("Ep[Ie|x");
      user1.setStatus("");
      User user2 = new User();
      user1.setStatus("W2KGn1aoIG");
      User.detectFieldChanges(user0, user1, user0);
      user1.setFirstName("#:-*Bf4h6/V?a(3E5(");
      User user3 = new User();
      User user4 = new User();
      user4.setFirstName("KA4Yd_H<-}VoqhR~;(");
      User user5 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      user1.setEmail("W~OBjM&wH8");
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.6259304036659956
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "'!");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.7531111334425993
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setStatus("Z");
      User user1 = new User();
      user0.setStatus("Z");
      User.detectFieldChanges(user1, user1, user0);
      User user2 = new User();
      User user3 = new User("bpMsWP}", "bpMsWP}");
      User user4 = new User("", "");
      User.detectFieldChanges(user3, user4, user3);
      user1.setFirstName("bpMsWP}");
      User user5 = new User();
      user0.setPhone("");
      user2.setFirstName("Z");
      User user6 = new User();
      RawVariable.detectFieldChanges(user4, rawVariable0, rawVariable0);
      user6.setEmail("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.062711125700289
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      supportingDocument1.setFileName("Bw8L;3e&AkO");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument1.setTitle("user.postCode.saveChanges");
      User user0 = new User("user.postCode.saveChanges", "+[qjYfz.Jz?");
      rawVariable0.addSupportingDocument(supportingDocument1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.2427276237316462
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(">DpE+CSyk", ">DpE+CSyk");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("}]7mMQ|kHs}n0");
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("Hx)nG&W{3r");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument2.setFilePath("A");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      arrayList0.add(supportingDocument5);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      User user1 = new User("V", (String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals("", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.912796191457052
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("NN_EXISTET_VARIABLE_ASSOCIATION", "'!");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.notes = "r'";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User(";:~$L&7gke+#L+.ckW", ";:~$L&7gke+#L+.ckW");
      User user1 = new User(";:~$L&7gke+#L+.ckW", "EJM\"\"%");
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      rawVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.787287416541117
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("^}", "Niz38wc6Q)&Y~U");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      User user1 = new User("K|])-", "K|])-");
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertNotNull(macawChangeEvent1);
      
      derivedVariable0.getColumnEnd();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.6981285524887935
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("nhe{5gPO:]xBHzI");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setNameSpace("Z");
      ontologyTerm3.clone();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      User user0 = new User("Z", "nhe{5gPO:]xBHzI");
      User user1 = new User("J;0EVIz(6Dej5", "nhe{5gPO:]xBHzI");
      User user2 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = (OntologyTerm)ontologyTerm5.clone();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm9);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.4904032277870636
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("nhe{5gPO:]xBHzI");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setNameSpace("Z");
      ontologyTerm2.clone();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      User user0 = new User("Z", "nhe{5gPO:]xBHzI");
      User user1 = new User("J;0EVIz(6Dej5", "nhe{5gPO:]xBHzI");
      User user2 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = (OntologyTerm)ontologyTerm4.clone();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm7);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList3);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName(".PbV7E#+G");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm1.setNameSpace("FPP9L[@{%s*h6=rk{");
      ontologyTerm7.clone();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      User user0 = new User((String) null, "*9b:M$JR2Mez|a)c\")");
      User user1 = new User("FPP9L[@{%s*h6=rk{", "*9b:M$JR2Mez|a)c\")");
      User user2 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm1.clone();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.7877762104634773
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      
      derivedVariable0.getAlias();
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.688514447186191
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1282);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.setColumnStart("(Q;C)=GbY(QZo1Y");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getCodeBookNumber();
      assertEquals("1282", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("nhe{5gPO:]xBHzI");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.setColumnStart("INVALID_RAW_VARIABLE");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setNameSpace("Z");
      ontologyTerm3.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      User user0 = new User("Z", "nhe{5gPO:]xBHzI");
      User user1 = new User("J;0EVIz(6Dej5", "nhe{5gPO:]xBHzI");
      User user2 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = (OntologyTerm)ontologyTerm5.clone();
      ontologyTerm9.setNameSpace("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm9);
      assertEquals("INVALID_RAW_VARIABLE", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.654151735313429
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{(");
      derivedVariable0.codeBookNumber = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("{(", "{(");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      User user2 = new User();
      User user3 = new User("?j.NZF>.{/g+^V{ sK", "");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName(".PbV7E#+G");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm1.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean1 == boolean0);
      
      ontologyTerm0.setOntologyName("=,v m=:r6-N");
      ontologyTerm0.setNameSpace("I`t?5J88`lRC");
      User user0 = new User((String) null, "FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("macaw.system.MacawMessages");
      ontologyTerm1.clone();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(false);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      User user0 = new User("ljdL9#-rr 7X:vx", "ljdL9#-rr 7X:vx");
      User user1 = new User("stR", "ljdL9#-rr 7X:vx");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      String string0 = rawVariable0.getCleaningStatus();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5803725724750626
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.016758333607584
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User("DUPLICATE_SUPPORTING_DOCUMENT", "p-A)YNwcK/05HPtj");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList1.isEmpty());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable1);
      assertEquals(1, arrayList2.size());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.7868233692556106
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, arrayList0.size());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setCategory("ouY}$naR%");
      rawVariable0.addOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("m\"iK7~8XGd=d6I");
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("ouY}$naR%", rawVariable0.getCategory());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.787287416541117
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "'!");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent1);
      
      derivedVariable2.getForm();
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.99601625699648
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      derivedVariable1.setNotes("s$S}V");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable3, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(false);
      ontologyTerm0.setDescription("macaw.system.MacawMessages");
      ontologyTerm1.clone();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      User user0 = new User();
      User user1 = new User("ljdL9#-rr 7X:vx", "ljdL9#-rr 7X:vx");
      User user2 = new User("stR", "ljdL9#-rr 7X:vx");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.92985624888619
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("Z");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setDescription((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace((String) null);
      ontologyTerm2.clone();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm5);
      assertTrue(boolean0);
      
      User user0 = new User();
      User user1 = new User("FPP9L[@{%s*h6=rk{", "variable.category.label");
      User user2 = new User("c).", "NO_ONTOLOGY_TERM_FILTER");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm3.clone();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.isCoded();
      User user3 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user3, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("m\"iK7~8XGd=d6I");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.9476812808004005
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      user0.setStatus("\"/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      derivedVariable5.setAvailability("variable.saveChanges.valueChanged");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      Variable.detectFieldChanges(user1, derivedVariable2, derivedVariable3);
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.createVariableSummary();
      MacawChangeEvent macawChangeEvent8 = Variable.detectChangesInAlternativeVariable(user1, rawVariable1, derivedVariable5);
      assertEquals("variable.saveChanges.valueChanged", derivedVariable5.getAvailability());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent8.getChangeMessage());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.9962063968851123
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.columnStart = "AB21dCZ!I";
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      derivedVariable1.setCleaningStatus("!Z2HUzX");
      rawVariable2.getAlternativeVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable5);
      MacawChangeEvent macawChangeEvent7 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent8 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.createVariableSummary();
      MacawChangeEvent macawChangeEvent9 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, rawVariable1);
      assertEquals("!Z2HUzX", derivedVariable1.getCleaningStatus());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent9.getChangeMessage());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      User user1 = new User("KA4Yd_H<-}VoqhR~;(", "W2KGn1aoIG");
      user0.setUserID("Ep[Ie|x");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("W2KGn1aoIG");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("Ep[Ie|x");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable1.isCleaned());
      
      User user2 = new User("W2KGn1aoIG", (String) null);
      User user3 = new User("*9b:M$JR2Mez|a)c\")", "user.affiliation.saveChanges");
      User user4 = new User("user.affiliation.saveChanges", ";:~$L&7gke+#L+.ckW");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "*Z";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("*Z", rawVariable0.getNotes());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.7861383935015662
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Z", "Z");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.columnStart = "AB21dCZ!I";
      user0.setStatus("Z");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.790719259400585
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      User user1 = new User("KA4Yd_H<-}VoqhR~;(", "W2KGn1aoIG");
      user0.setUserID("Ep[Ie|x");
      user1.setPassword("Ep[Ie|x");
      user0.setStatus("wr)C?]2-TnVh7:");
      user0.setCounty((String) null);
      user1.setStatus("");
      User user2 = new User();
      user1.setStatus("W2KGn1aoIG");
      User.detectFieldChanges(user0, user1, user0);
      User user3 = new User();
      User user4 = new User("bpMsWP}", "");
      User.detectFieldChanges(user1, user3, user4);
      user1.setFirstName("#:-*Bf4h6/V?a(3E5(");
      User user5 = new User();
      rawVariable0.setLabel("NON_EXISTENT_SUPPORTING_DOCUMENT");
      user5.setPhone("");
      user2.setFirstName("EY-#^MUV");
      User user6 = new User();
      RawVariable.detectFieldChanges(user5, rawVariable0, rawVariable0);
      user5.setEmail("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      derivedVariable0.columnEnd = "[x%_Te/o_xCWV94C<n";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("variable.columnStart.label", "variable.category.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.columnEnd.label");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("variable.columnEnd.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("@rM i6ViA=");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("-jiGuGEW_K\"j");
      ontologyTerm0.clone();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      User user0 = new User();
      User user1 = new User("-jiGuGEW_K\"j", "UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      User user2 = new User("}Fo!Z", "Cdg,]^dlC)M$;?tx");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      assertEquals("@rM i6ViA=", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("=iL1ozzpdK");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setOntologyName("DUPLICATE_SUPPORTING_DOCUMENT");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      ontologyTerm4.setDescription("");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      String string0 = "UNABLE_TO_GET_SOURCE_VARIABLES";
      ontologyTerm0.setNameSpace("variable.saveChanges.valueChanged");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.4574892996358013
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "'!");
      derivedVariable0.setAlias((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.357285019952196
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(".PbV7E#+G");
      ontologyTerm0.setNameSpace("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("nhe{5gPO:]xBHzI");
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setDescription("FPP9L[@{%s*h6=rk{");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setNameSpace("Z");
      User user0 = new User("variable.columnEnd.label", "Z");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm4, ontologyTerm7);
      ontologyTerm3.clone();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      User user1 = new User("Z", "nhe{5gPO:]xBHzI");
      User user2 = new User("J;0EVIz(6Dej5", "nhe{5gPO:]xBHzI");
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = (OntologyTerm)ontologyTerm5.clone();
      ontologyTerm10.getDisplayName();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm10);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }
}
