/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 08:33:52 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.NotActiveException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.nio.CharBuffer;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      String string0 = "";
      int int0 = 3269;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(3269);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setZ(3269);
      player0.setJoinOK(player0, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      float float0 = 0.0F;
      player0.setX(0.0F);
      player0.setY(0.0F);
      player0.isJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-290), 974);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2097014715054515
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      player0.setDead((-633L), false);
      Player player1 = new Player((short)4919, "C7", "state.Party", (short)4919, (short)4919);
      player1.setX(2437.9355F);
      player1.setConnected(false);
      player0.setJoinOK(player1, false);
      player1.setY((-633L));
      player0.isJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(992, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "state.Party", (-2035), 945);
      player2.setY(0.2F);
      Player player3 = new Player(945, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (short)4919);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      player3.setMoney((byte)109);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player3.unpack(dataInputStream0);
      player3.setX(0.1F);
      player3.pack();
      player3.getMoney();
      boolean boolean0 = player0.isJoinOK(player3, false);
      assertEquals(0.1F, player3.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.129966420524349
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      Player player1 = new Player((short)4919, "C7", "", (short)4919, (short)4919);
      player1.setX(2435.133F);
      Player player2 = new Player((short)4919, "@\"#mYjxE'g;1M_{]on%", (short)4919);
      player2.setX((short)4919);
      player0.setConnected(true);
      player2.setJoinOK(player1, true);
      player2.setY(0.1F);
      player1.isJoinOK(player0, false);
      Player player3 = new Player(5, "@\"#mYjxE'g;1M_{]on%", (String) null, (-115), (-570));
      player2.setConnected(true);
      assertEquals(0.1F, player2.getY(), 0.01F);
      
      player3.setY(0.2F);
      player0.pack();
      Player player4 = new Player();
      player4.setConnected(false);
      System.setCurrentTimeMillis((-115));
      player3.getName();
      assertEquals((-570), player3.getStrength());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(8722, (String) null, "", 8722, (-356));
      player0.setDead();
      Player player1 = new Player(186, (String) null, (String) null, (-2094), (-2094));
      player1.setZ(4346.0F);
      player0.head = (Party) player1;
      player1.setY(1803.55F);
      player1.setZ((-1.0F));
      player0.isBoss();
      player1.getIP();
      player0.getName();
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      try { 
        bufferedInputStream1.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1313650219229507
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      player0.setDead((-633L), false);
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player1.setX(2435.133F);
      byte[] byteArray0 = player1.pack();
      player1.setConnected(false);
      player0.isJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(945, "V?YgD$/WPs5^0,e", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (short)4919, (-2364));
      player2.setY(0.0F);
      Player player3 = new Player((-2364), "", (-1));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player2.setX((byte) (-33));
      player0.pack();
      player0.getMoney();
      player3.isJoinOK(player1, false);
      Player player4 = new Player(945, "V?YgD$/WPs5^0,e", "1rxLreEtG*YAU?Q", (short)4919);
      player1.isJoinOK(player4, true);
      assertEquals(2435.133F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g=Bq!ta:'");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kYvlk/&{279e9K)");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-5044), "kYvlk/&{279e9K)", "", (-5044), 0);
      Player player1 = new Player();
      player0.pack();
      player1.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
      assertEquals(1, player1.getStrength());
      
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      int int1 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals((-5044), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(5, int1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+L_DY=");
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream1);
      sequenceInputStream0.markSupported();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.unread(2157);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1, 10);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      Player player0 = new Player();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream1);
      Player player1 = new Player();
      player0.setX((byte)0);
      player0.pack();
      player0.getX();
      System.setCurrentTimeMillis(1917L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("IO,'}(`w^JXs+bo");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "IO,'}(`w^JXs+bo");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) charBuffer0);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) charBuffer0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) charBuffer1;
      objectArray0[4] = (Object) "";
      objectArray0[6] = (Object) mockFileOutputStream0;
      PrintStream printStream1 = mockPrintStream0.printf(locale0, "", objectArray0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream1, false);
      printStream1.println((Object) charBuffer0);
      printStream0.println(2266);
      mockPrintStream1.println(2266);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      printStream1.println(2266);
      printStream1.println('Y');
      printStream1.flush();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("IO,'}(`w^JXs+bo");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Player player0 = new Player(2, "state.Party", "", 1, 2657);
      System.setCurrentTimeMillis(2);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9785238217999606
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      player0.setDead((-595L), false);
      Player player1 = new Player((short)4919, "C7", "state.Party", (short)4919, (short)4919);
      player1.setX(2437.9355F);
      player1.setConnected(false);
      player0.setJoinOK(player1, true);
      player1.setY((-595L));
      player0.isJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(0, "Player.unpck(): *** WARNING *** [IO] failed to unpack data: ", "state.Party", (-2035), 945);
      player2.setY(0.2F);
      Player player3 = new Player(945, "Player.unpck(): *** WARNING *** [IO] failed to unpack data: ", (short)4919);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-33);
      byteArray0[3] = (byte) (-33);
      player1.isConnected();
      player3.setX(0.1F);
      assertEquals(0.1F, player3.getX(), 0.01F);
      
      Player player4 = new Player(1102, "state.Party", (-1327));
      assertEquals((-1327), player4.getPictureId());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-768));
      byte[] byteArray0 = new byte[2];
      player0.setZ(0.0F);
      byteArray0[1] = (byte) (-93);
      player0.getSubparty();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray1[4] = (byte) (-93);
      byteArray1[6] = (byte) (-93);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(5, byteArrayInputStream0.available());
      
      player0.setX((byte) (-1));
      player0.pack();
      player0.getX();
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'=OiEE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3269, "'=OiEE", "'=OiEE", 3269);
      Player player1 = new Player(3269, "'=OiEE", 3269);
      player0.remove(player1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setZ(3269);
      player0.setJoinOK(player0, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player0.setX(0.0F);
      player0.setY(0.0F);
      player0.isJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^$Bi7tX@q");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DGZ%x&{:c{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DGZ%x&{:c{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(3269.0F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'=OiEE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3269, "'=OiEE", "'=OiEE", 3269);
      player0.remove(player0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setZ(3269);
      player0.setJoinOK(player0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player0.setX(0.0F);
      player0.setY(0.0F);
      player0.isJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^$Bi7tX@q");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DGZ%x&{:c{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DGZ%x&{:c{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      assertFalse(fileSystemHandling3.equals((Object)fileSystemHandling2));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.127429422638514
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((byte) (-44), "0aYk;PVN@U9cpA", "", (byte) (-44));
      player0.setZ(1.0F);
      player0.setX(1.0F);
      Player player1 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.setX((-1248.687F));
      player1.setJoinOK(player0, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setX(0.0F);
      player1.setY(0.0F);
      player0.isJoinOK(player1, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis((-2005L));
      player0.pack();
      assertEquals(0.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.048702951016823
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      Player player1 = new Player((short)4919, "[C7", "", (short)4919, (short)4919);
      player1.setX(2435.133F);
      player1.setConnected(false);
      player0.setJoinOK(player1, false);
      player1.setY((-633L));
      player0.isJoinOK(player1, true);
      Player player2 = new Player(2, "[C7", "", 4, (short)4919);
      player2.prev = (Party) player1;
      player0.setConnected(true);
      player2.setY(1272.516F);
      player2.add(player1);
      assertFalse(player1.isConnected());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^8A]w7tw#%");
      Player player3 = new Player((short)4919, "", ";|{hkh3-[5-X_)cS", (-1455), (byte)0);
      player2.pack();
      player3.gangStrength();
      player2.pack();
      assertEquals(0L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.916924222868899
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      Player player1 = new Player((short)4919, "[C7", "", (short)4919, (short)4919);
      player1.setX(2435.133F);
      player1.setConnected(false);
      player0.setJoinOK(player1, false);
      player1.setY((-633L));
      player0.isJoinOK(player1, true);
      Player player2 = new Player(2, "[C7", "", 4, (short)4919);
      player0.setConnected(true);
      player2.setY(1272.516F);
      Player player3 = new Player((byte)0, "[C7", "ywr+G8^-\"#", (short)4919, (byte)34);
      player3.setZ((short)4919);
      player2.setZ((-986.07F));
      player3.setConnected(true);
      System.setCurrentTimeMillis((short)4919);
      player2.getName();
      boolean boolean0 = player3.isJoinOK(player0, true);
      assertEquals(4919.0F, player3.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, "", "wGB.w;bU6&v<=,pz", 0, (-1794));
      player0.getZ();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)5;
      player0.unpack(byteArray0);
      player0.setDead(1001L);
      Player player1 = new Player((byte) (-5), "icu@KqB0W$%8Rk`Z", "", 265, (-33));
      player1.isDead();
      player0.type();
      player0.getIP();
      player1.getName();
      int int0 = player0.type();
      assertEquals(1001L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte) (-33);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte) (-33);
      byteArray0[7] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte) (-99));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readDouble();
      Player player0 = new Player((-2418), "", "", (byte) (-33));
      player0.setX((byte) (-33));
      player0.toString();
      int int0 = player0.type();
      assertEquals((-33.0F), player0.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "";
      int int0 = 3269;
      Player player0 = new Player(3269);
      player0.setZ(3269);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(563);
      Party party0 = new Party(3840);
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-2559), "W`:U!YnOHA", (-895));
      String string0 = player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-895), player0.getPictureId());
      assertEquals("0.0.0.0", string0);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+L_DY=");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream1);
      sequenceInputStream0.markSupported();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      byteArrayInputStream0.mark((byte)15);
      pushbackInputStream1.unread(2157);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1, 10);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      Player player0 = new Player();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream1);
      Player player1 = new Player();
      player0.setX((byte)15);
      player0.pack();
      player0.getX();
      System.setCurrentTimeMillis(1917L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getSubparty();
      player0.setDead((-633L), false);
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player1.setX(2435.133F);
      player0.isDead();
      Player player2 = new Player((short)4919);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player2.setZ(0.1F);
      player0.setJoinOK(player2, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player1.setX(0.2F);
      player1.setY((-1.0F));
      player1.isJoinOK(player2, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis(2266L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-33);
      byte byte0 = (byte)54;
      byteArray0[2] = (byte)54;
      Player player0 = new Player((byte)5);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setZ((byte)54);
      player0.setX((byte) (-33));
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g=q!ta:'");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[3] = (byte)15;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g=q!ta:'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((byte)15, "g=q!ta:'", "", 980, 16384);
      float float0 = player0.getX();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("g=q!ta:'", player0.getIP());
      assertEquals(16384, player0.getStrength());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(980, player0.getPictureId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      Player player0 = new Player(5, "", 1);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(1, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-768));
      byte[] byteArray0 = new byte[2];
      player0.setZ(0.0F);
      player0.getSubparty();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (short)4919);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      player0.unpack(dataInputStream0);
      player0.setX((-2317.6865F));
      assertEquals((-2317.6865F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-1549), "@6P69+1A", "@6P69+1A", (-1549), (-1549));
      player0.setMoney((-1549));
      player0.setDead((long) (short)4919, true);
      player0.getStrength();
      player0.getZ();
      player0.setDead(0L);
      player0.getY();
      player0.getTimeOfDeath();
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(2956, "+mP", ".*[.]class$", 1, 1450);
      Player player1 = new Player((short)4919);
      player1.setY(3305.925F);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)80;
      player1.unpack(byteArray0);
      player1.setZ((byte)9);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)113;
      byteArray1[1] = (byte)113;
      player1.unpack(byteArray1);
      Player player2 = new Player(16384, "0.0.0.0", "state.Party", 1471);
      player1.setConnected(false);
      assertEquals(3305.925F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setZ(1705.3754F);
      Player player1 = new Player(2109);
      Party party0 = player1.head;
      player0.prev = null;
      player0.getZ();
      player0.getPictureId();
      Party party1 = new Party();
      party1.remove(player0);
      party1.getSubparty();
      party1.add(player0);
      party1.next = (Party) player0;
      party1.add(player0);
      player0.add(party1);
      player0.isDead();
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      mockPrintStream0.println(0);
      objectOutputStream0.write(0);
      try { 
        objectOutputStream0.defaultWriteObject();
        fail("Expecting exception: NotActiveException");
      
      } catch(NotActiveException e) {
         //
         // not in call to writeObject
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-3832), (String) null, (-3832));
      Player player1 = new Player();
      player0.head = (Party) player1;
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player0.head.toString());
      
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-3832), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(0, "a|xpC]@]h|?Ayrr}", "*F?=p", 0, 0);
      Player player1 = new Player(10, "a|xpC]@]h|?Ayrr}", "*F?=p", 2516, 3);
      player0.remove(player1);
      player0.setDead();
      player0.setConnected(true);
      player0.isConnected();
      player0.toString();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("IO,'}(`w^JXs+bo");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "IO,'}(`w^JXs+bo");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) charBuffer0);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[1] = (Object) charBuffer0;
      Object object1 = new Object();
      objectArray0[2] = (Object) charBuffer1;
      objectArray0[3] = (Object) charBuffer0;
      objectArray0[4] = (Object) "";
      objectArray0[6] = (Object) mockFileOutputStream0;
      PrintStream printStream1 = mockPrintStream0.printf(locale0, "", objectArray0);
      Player player0 = new Player(99, "", 99);
      printStream1.println((Object) player0);
      printStream1.print('F');
      locale0.getUnicodeLocaleKeys();
      printStream0.println(2266);
      printStream1.println(2266);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream("IO,'}(`w^JXs+bo");
      mockPrintStream1.print((-3867.8306F));
      Player player1 = new Player((-1), "", 25014);
      int int0 = player1.type();
      assertEquals(1, player1.getStrength());
      assertEquals(25014, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(5, int0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = 4115;
      Player player0 = new Player(4115, "=q!tBAa:'", 7302);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "IO,'}(`w^JXs+bo");
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      char[] charArray0 = new char[8];
      charArray0[2] = 'u';
      charArray0[3] = 'M';
      charArray0[4] = '\u0083';
      charArray0[5] = '\u001A';
      objectArray0[1] = (Object) 'Y';
      charArray0[7] = '\'';
      CharBuffer.wrap(charArray0);
      objectArray0[0] = object0;
      charBuffer1.duplicate();
      char[] charArray1 = new char[3];
      charArray1[0] = 'p';
      charBuffer0.asReadOnlyBuffer();
      charArray1[1] = 'R';
      objectArray0[2] = (Object) 'K';
      Object object1 = new Object();
      Player player0 = new Player(1, "gD'0lA", (String) null, 1886, (-1089));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(3269);
      player0.setZ(3269);
      player0.setX(2440);
      Player player1 = new Player();
      player0.setX(0.0F);
      player1.setJoinOK(player0, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.reset(false);
      player0.setX(0.0F);
      player0.setY(0.0F);
      player1.isJoinOK(player0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis(1L);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(3269.0F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "=q!tBAa:'";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      String string1 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(3269);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setZ(3269);
      player0.setJoinOK(player0, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      float float0 = 0.0F;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(1, "module.ModuleBrowserDialog$ModuleFilter", "O<vJz!$|^<v\"jYy4<K", 1);
      float float0 = player0.getZ();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, "t%@{", "", (-1));
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L), true);
      player0.getPictureId();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0721022626813137
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(2817, "", (String) null, 2817);
      player0.setDead((-633L), true);
      Player player1 = new Player((-1), "", "", (short)4919, (-1));
      player1.setConnected(true);
      player0.setJoinOK(player1, true);
      player0.setY(2817);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)34;
      player0.unpack(byteArray0);
      player1.isJoinOK(player0, true);
      player0.setY(0.0F);
      player1.setZ(0.1F);
      player0.unpack(byteArray0);
      player1.setConnected(true);
      player0.getPictureId();
      player1.type();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.isConnected();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"%-");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte) (-57);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte)79;
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W_#c'6Z./. <m$dN");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)15;
      byteArray1[1] = (byte)15;
      byteArray1[2] = (byte)15;
      byteArray1[3] = (byte)15;
      byteArray1[4] = (byte)15;
      byteArray1[5] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Player player1 = new Player((byte)15, "", (byte)15);
      assertEquals(1, player1.getStrength());
      assertEquals(15, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(3);
      Party party0 = player0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[3] = (byte) (-33);
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte) (-33);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharBuffer.allocate(2996);
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'p';
      charArray0[1] = 'R';
      objectArray0[2] = (Object) 'K';
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[4] = (Object) "";
      Player player0 = new Player(2657, "tae.Party", "tae.Party", 2657, 2657);
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(2657, int0);
      assertEquals(2657, player0.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      Locale locale0 = new Locale(" ", "I");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "I";
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "I", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      player0.getSubparty();
      player0.getSubparty();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-1549), "@6P69+1A", "@6P69+1A", (-1549), (-1549));
      player0.setMoney((-1549));
      player0.setDead((long) (short)4919, true);
      player0.getStrength();
      player0.getZ();
      player0.getY();
      player0.getTimeOfDeath();
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      float float0 = player0.getMoney();
      assertEquals(4919L, player0.getTimeOfDeath());
      assertEquals((-1549.0F), float0, 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=q!tBAa:'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'=OiEE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^$Bi7tX@q");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DGZ%x&{:c{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DGZ%x&{:c{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      Player player0 = new Player((-387), "^$Bi7tX@q", "DGZ%x&{:c{", (-981), (-981));
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-981), player0.getPictureId());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("^$Bi7tX@q", player0.getIP());
      assertEquals((-981), int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1218159503049137
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-1549), "@6P69+1A", "@6P69+1A", (-1549), (-1549));
      player0.setMoney((-1549));
      int int0 = Packable.GAME_EVENT;
      player0.getZ();
      player0.setDead(1L);
      player0.getY();
      player0.getTimeOfDeath();
      player0.getName();
      System.setCurrentTimeMillis(1L);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-1549.0F), float0, 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-300), "module.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-300));
      player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-300), player0.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(3);
      Party party0 = player0.next;
      player0.head = null;
      int int0 = player0.gangStrength();
      int int1 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(int1 == int0);
      assertEquals("Player3", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, int1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3, "\"x3<o", "G", (-1017));
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("\"x3<o", player0.getIP());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals((-1017), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(461);
      player0.setDead();
      player0.setDead(5825L);
      Player player1 = new Player(1303, "Player", "xt<) 3;Lg!o~l`nk)r", 1303);
      float float0 = Player.TOLERANCE;
      assertEquals(0.2F, float0, 0.01F);
  }
}
