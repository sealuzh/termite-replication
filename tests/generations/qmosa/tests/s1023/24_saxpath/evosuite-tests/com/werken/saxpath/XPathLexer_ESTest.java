/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:47:52 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2679158250435196
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QE X");
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-656));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.244160478132417
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("vIfmZQY.A+V:");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer("s$r39qb=~XnpwS/Z");
      xPathLexer3.nextToken();
      xPathLexer2.and();
      xPathLexer0.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer3.plus();
      assertEquals("$", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals("v", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("If", token6.getTokenText());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("vIfmZQY.A", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer4.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer2.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer3.whitespace();
      assertEquals((-2), token13.getTokenType());
      
      Token token14 = xPathLexer3.star();
      assertEquals("q", token14.getTokenText());
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1723302685840475
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer1.colon();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer2.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer2.identifier();
      token0.toString();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer2.slashes();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer2.at();
      xPathLexer0.leftBracket();
      xPathLexer1.slashes();
      xPathLexer2.rightParen();
      xPathLexer2.plus();
      xPathLexer2.literal();
      xPathLexer2.consume((-3364));
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      xPathLexer3.notEquals();
      xPathLexer0.nextToken();
      xPathLexer3.comma();
      // Undeclared exception!
      try { 
        xPathLexer2.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7230175446681746
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.at();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (16) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("m.", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.isIdentifierChar('&');
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.comma();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals("n", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(".", token7.getTokenText());
      
      xPathLexer0.comma();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("a", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(30, int0);
      
      xPathLexer0.isIdentifierChar('I');
      xPathLexer0.or();
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3247809388131717
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      XPathLexer xPathLexer1 = new XPathLexer("!gPbw6YzW,M");
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer2.whitespace();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer2.identifier();
      String string0 = token1.toString();
      assertEquals("[ (15) (gPbw6YzW)", string0);
      
      xPathLexer2.setPreviousToken(token1);
      xPathLexer2.slashes();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("P", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer2.nextToken();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("aHoc4W=ZR)K)8$!!:");
      Token token4 = xPathLexer0.notEquals();
      assertEquals("bw", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("aHoc4W=ZR)K)8$!!:");
      Token token5 = xPathLexer5.plus();
      assertEquals("a", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals("P", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer5.nextToken();
      Token token9 = xPathLexer5.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("=", token9.getTokenText());
      
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("a", token10.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer2.number();
      assertEquals("", token11.getTokenText());
      assertEquals(30, token11.getTokenType());
      
      xPathLexer1.whitespace();
      Token token12 = xPathLexer3.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer5.whitespace();
      assertEquals((-2), token13.getTokenType());
      assertEquals("", token13.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.161016166850921
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("vI", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals("f", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y4zXx'S2WFzu@#y");
      xPathLexer1.dollar();
      Token token2 = xPathLexer1.pipe();
      assertEquals("4", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("y4zXx'S2WFzu@#y");
      Token token5 = xPathLexer0.leftParen();
      assertEquals(":", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("W$");
      Token token6 = xPathLexer4.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("W", token6.getTokenText());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer4.rightBracket();
      assertEquals("$", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.leftParen();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer2.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("x", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer4.literal();
      xPathLexer3.mod();
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("'", token13.getTokenText());
      
      xPathLexer4.relationalOperator();
      Token token14 = xPathLexer4.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer4.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8486688673321414
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.setXPath("0#Tp$A2Y");
      xPathLexer0.slashes();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.not();
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.nextToken();
      xPathLexer0.nextToken();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.equals();
      XPathLexer xPathLexer5 = new XPathLexer("0#Tp$A2Y");
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.comma();
      XPathLexer xPathLexer8 = null;
      try {
        xPathLexer8 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.313066320100326
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer1.literal();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("er", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals("ken.saxpath.XPathLexer", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer1.colon();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("?xl%;P#6");
      Token token10 = xPathLexer2.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6666200736898897
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BJWEUnRdq#=[");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer1.notEquals();
      String string0 = null;
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1254037028756962
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Gq", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("u,]9M:Srs(Py");
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("u", token2.getTokenText());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(",", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("e4qq7", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(";,-h*}", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer1.leftParen();
      assertEquals("M", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("u,]9M:Srs(Py");
      Token token10 = xPathLexer3.doubleColon();
      assertEquals("u,", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(",", token12.getTokenText());
      assertEquals(32, token12.getTokenType());
      
      xPathLexer2.whitespace();
      XPathLexer xPathLexer4 = new XPathLexer("u,]9M:Srs(Py");
      Token token13 = xPathLexer4.leftBracket();
      assertEquals("u", token13.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token14 = xPathLexer4.colon();
      assertEquals(18, token14.getTokenType());
      
      xPathLexer1.and();
      Token token15 = xPathLexer1.whitespace();
      assertEquals((-2), token15.getTokenType());
      
      xPathLexer0.or();
      Token token16 = xPathLexer1.star();
      assertEquals(20, token16.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0517668445707846
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer("`/h9p!5?!7");
      Token token0 = xPathLexer1.slashes();
      assertEquals("`/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      xPathLexer1.div();
      Token token1 = xPathLexer1.slashes();
      assertEquals("h", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.dollar();
      assertEquals("`", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.equals();
      Token token3 = xPathLexer3.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer1.nextToken();
      Token token4 = xPathLexer0.at();
      assertEquals("/", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer3.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("G~k]FcH^86k:Sb(zF");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("h", token5.getTokenText());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("!", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      xPathLexer4.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.colon();
      xPathLexer5.notEquals();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer4.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("`/h9p!5?!7");
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      xPathLexer0.mod();
      Token token9 = xPathLexer4.not();
      assertEquals("k", token9.getTokenText());
      
      Token token10 = xPathLexer8.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertEquals("9p", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      xPathLexer3.div();
      Token token13 = xPathLexer3.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer7.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0930783663142485
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.equals();
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.setXPath("pc5<wqrGQrdLoNq&0");
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token1 = xPathLexer1.slashes();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.dollar();
      assertEquals("p", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      xPathLexer1.colon();
      xPathLexer0.comma();
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer4 = new XPathLexer("cJn1a#A9");
      Token token8 = xPathLexer4.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer4.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("1", token10.getTokenText());
      
      Token token11 = xPathLexer2.identifier();
      assertEquals(15, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("0#Tp$A2Y");
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.relationalOperator();
      assertEquals(7, token13.getTokenType());
      assertNotNull(token13);
      assertEquals("<", token13.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("cJn1a#A9");
      Token token14 = xPathLexer6.number();
      assertEquals(30, token14.getTokenType());
      
      xPathLexer1.setXPath(")");
      Token token15 = xPathLexer6.at();
      assertEquals(16, token15.getTokenType());
      assertEquals("c", token15.getTokenText());
      
      Token token16 = xPathLexer3.colon();
      assertEquals(18, token16.getTokenType());
      
      Token token17 = xPathLexer6.star();
      assertEquals(20, token17.getTokenType());
      assertEquals("J", token17.getTokenText());
      
      Token token18 = xPathLexer5.comma();
      assertEquals("0", token18.getTokenText());
      assertEquals(32, token18.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9985559764791048
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.rightParen();
      xPathLexer0.at();
      Token token0 = xPathLexer1.identifier();
      xPathLexer2.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      xPathLexer2.slashes();
      Token token1 = xPathLexer0.equals();
      assertEquals("d", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("`<+", token3.getTokenText());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("Y", token4.getTokenText());
      
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.slashes();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("<", token6.getTokenText());
      
      xPathLexer0.plus();
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("<=", token9.getTokenText());
      assertEquals(8, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer3.plus();
      assertEquals(5, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer2.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer2.number();
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer1.minus();
      assertEquals("o", token15.getTokenText());
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer1.leftParen();
      assertEquals(1, token16.getTokenType());
      assertEquals("", token16.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9178854329074637
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      Token token0 = xPathLexer2.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("'", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("|", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("Y", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("1");
      Token token5 = xPathLexer1.not();
      assertEquals("`", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer("'d`<+");
      Token token6 = xPathLexer3.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("'d`<+");
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer6.minus();
      Token token8 = xPathLexer4.minus();
      assertEquals("1", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer3.colon();
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer4.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.062240385721723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(:gFo,");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("gF", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("o", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer1.leftParen();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer2.notEquals();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("9^DN");
      XPathLexer xPathLexer5 = new XPathLexer("I|");
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer4.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("9", token11.getTokenText());
      
      Token token12 = xPathLexer3.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer4.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      Token token14 = xPathLexer3.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1808738674400905
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer("`/h9p!5?!7");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer2.or();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer1.nextToken();
      xPathLexer0.consume();
      xPathLexer2.setXPath("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      xPathLexer2.comma();
      xPathLexer1.plus();
      xPathLexer0.literal();
      xPathLexer2.leftParen();
      xPathLexer0.dollar();
      xPathLexer1.dots();
      xPathLexer2.not();
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer2.minus();
      xPathLexer3.relationalOperator();
      xPathLexer1.colon();
      XPathLexer xPathLexer5 = new XPathLexer("Oy");
      xPathLexer4.number();
      xPathLexer5.nextToken();
      xPathLexer2.pipe();
      Token token1 = xPathLexer0.not();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.085728778333134
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.rightParen();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("'", token0.getTokenText());
      
      Token token1 = xPathLexer1.identifier();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer3.and();
      Token token4 = xPathLexer1.not();
      assertEquals("|", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer3.plus();
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals("Y", token6.getTokenText());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals("`}", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("<=", token8.getTokenText());
      assertEquals(8, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer3.plus();
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer3.colon();
      assertEquals("m", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer3.number();
      assertEquals(31, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9467951796181662
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      Token token0 = xPathLexer2.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("1");
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("d", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.leftParen();
      Token token6 = xPathLexer5.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("'d`<+");
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token8 = xPathLexer8.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("");
      XPathLexer xPathLexer10 = new XPathLexer("1");
      Token token9 = xPathLexer7.leftBracket();
      assertEquals("'", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer("1");
      xPathLexer11.relationalOperator();
      xPathLexer3.colon();
      XPathLexer xPathLexer12 = new XPathLexer();
      XPathLexer xPathLexer13 = new XPathLexer();
      Token token10 = xPathLexer7.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("d", token10.getTokenText());
      
      Token token11 = xPathLexer8.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8947624983141327
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer1.equals();
      token0.toString();
      xPathLexer1.minus();
      Token token1 = xPathLexer0.equals();
      xPathLexer1.rightBracket();
      xPathLexer1.endPosition();
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.LA(0);
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer0.notEquals();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3061140071164687
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.dots();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("qq7;,-h*}", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("2v1r");
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals(",", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("Gq", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.identifierOrOperatorName();
      Token token11 = xPathLexer3.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer5.colon();
      xPathLexer3.relationalOperator();
      Token token12 = xPathLexer2.colon();
      assertEquals("v", token12.getTokenText());
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer2.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2786567305267966
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      xPathLexer0.equals();
      Token token4 = xPathLexer0.dots();
      assertEquals("e", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("``]r3VAZs");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(21, token7.getTokenType());
      assertEquals("=", token7.getTokenText());
      
      xPathLexer0.and();
      Token token8 = xPathLexer1.not();
      assertEquals("G", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer2.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("`", token10.getTokenText());
      
      Token token11 = xPathLexer3.literal();
      assertNull(token11);
      
      xPathLexer3.comma();
      xPathLexer3.div();
      Token token12 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer3.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      Token token14 = xPathLexer0.comma();
      assertEquals(",", token14.getTokenText());
      assertEquals(32, token14.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      Token token15 = xPathLexer5.at();
      assertEquals(16, token15.getTokenType());
      
      Token token16 = xPathLexer2.notEquals();
      assertEquals("`]", token16.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.983781482393465
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("Io&au#tZ'c_&LV6)}");
      Token token0 = xPathLexer1.slashes();
      token0.toString();
      token0.toString();
      xPathLexer1.minus();
      xPathLexer1.plus();
      xPathLexer0.number();
      xPathLexer0.slashes();
      Token token1 = xPathLexer1.nextToken();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer1.colon();
      xPathLexer1.comma();
      xPathLexer1.currentPosition();
      xPathLexer1.notEquals();
      xPathLexer0.literal();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7404960118623707
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("BJWEUnRdq#=[");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("BJWEUnRdq", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer2.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals("#=", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer3.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.056117791271725
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer0.comma();
      assertEquals("l", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer1.dollar();
      xPathLexer1.equals();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer2.leftParen();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("k9i3", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.leftParen();
      assertEquals("~", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer1.plus();
      assertEquals("Z", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token9 = xPathLexer6.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer8 = new XPathLexer("C^W6Sx");
      xPathLexer8.mod();
      Token token10 = xPathLexer3.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer7.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("l", token11.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer(";G4<vgSu}?`j-");
      xPathLexer9.relationalOperator();
      Token token12 = xPathLexer7.notEquals();
      assertEquals("k9", token12.getTokenText());
      
      Token token13 = xPathLexer6.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      xPathLexer5.div();
      Token token14 = xPathLexer4.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.858062293482411
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("cJn1a#A9");
      Token token2 = xPathLexer2.leftParen();
      assertEquals("c", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer2.notEquals();
      assertEquals("Jn", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer2.dots();
      assertEquals("1", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("0#Tp$A2Y");
      XPathLexer xPathLexer4 = new XPathLexer("cJn1a#A9");
      xPathLexer4.number();
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer3.number();
      assertEquals("0", token7.getTokenText());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("#", token9.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.113871128613651
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.slashes();
      String string0 = token0.toString();
      assertEquals("[ (11) (G)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token1 = xPathLexer1.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer1.nextToken();
      Token token2 = xPathLexer0.not();
      token2.toString();
      xPathLexer1.setPreviousToken(token0);
      token2.toString();
      xPathLexer1.slashes();
      Token token3 = xPathLexer0.star();
      assertEquals("V", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer1.rightBracket();
      Token token4 = xPathLexer0.equals();
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.notEquals();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(";", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer1.leftParen();
      assertEquals(",", token7.getTokenText());
      
      Token token8 = xPathLexer2.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals("-", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.not();
      XPathLexer xPathLexer5 = new XPathLexer("efPmmAJ#FfT");
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.minus();
      Token token12 = xPathLexer2.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer6.colon();
      xPathLexer0.relationalOperator();
      Token token13 = xPathLexer5.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals("e", token13.getTokenText());
      
      Token token14 = xPathLexer6.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8616314484268812
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer1.and();
      xPathLexer0.mod();
      Token token1 = xPathLexer1.dollar();
      assertEquals("k", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer1.operatorName();
      Token token2 = xPathLexer1.pipe();
      assertEquals("9", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("i3", token3.getTokenText());
      
      xPathLexer1.at();
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer2.leftParen();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("%;", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer5 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token7 = xPathLexer5.comma();
      assertEquals("l", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("[+J>Z4;g?a]`Un8");
      XPathLexer xPathLexer7 = new XPathLexer("-~>N]u/;(}hIY[rn");
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer("[+J>Z4;g?a]`Un8");
      Token token8 = xPathLexer9.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer3.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer8.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8282835740717638
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer2.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer1.pipe();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("|Y`}<=oYnY");
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.colon();
      Token token5 = xPathLexer5.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("'d`<+");
      Token token6 = xPathLexer6.plus();
      assertEquals("'", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer8 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer9 = new XPathLexer("X");
      xPathLexer0.literal();
      XPathLexer xPathLexer10 = new XPathLexer("n_V3`^4;(D[");
      Token token7 = xPathLexer10.slashes();
      assertEquals("n", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer("X");
      xPathLexer10.relationalOperator();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer9.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer11.relationalOperator();
      Token token10 = xPathLexer1.at();
      assertEquals("Y", token10.getTokenText());
      
      Token token11 = xPathLexer4.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("|", token11.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.861884911075069
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("`", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1");
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("1");
      Token token5 = xPathLexer4.minus();
      assertEquals("1", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("U=C4(<o dZku8`aV1");
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.239634756841825
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer("`/h9p!5?!7");
      Token token0 = xPathLexer1.slashes();
      assertEquals("`/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      xPathLexer1.div();
      Token token1 = xPathLexer1.slashes();
      assertEquals("h", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("`/h9p!5?!7");
      xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer4.nextToken();
      assertEquals("`/h9p!5?!7", token4.getTokenText());
      
      Token token5 = xPathLexer4.not();
      assertEquals("`", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("`/h9p!5?!7");
      xPathLexer5.colon();
      Token token6 = xPathLexer4.comma();
      assertEquals("/", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer("n_V3`^4;(D[");
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.rightParen();
      Token token8 = xPathLexer8.literal();
      assertNull(token8);
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token9 = xPathLexer9.leftParen();
      assertEquals(1, token9.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("com.werken.saxpath.Token");
      Token token10 = xPathLexer10.rightParen();
      assertEquals("c", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      xPathLexer8.notEquals();
      XPathLexer xPathLexer11 = new XPathLexer("n_V3`^4;(D[");
      Token token11 = xPathLexer10.notEquals();
      assertEquals("om", token11.getTokenText());
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("/", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token13 = xPathLexer4.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals("9", token13.getTokenText());
      
      Token token14 = xPathLexer5.number();
      assertEquals(30, token14.getTokenType());
      assertEquals("", token14.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3107070196298922
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      XPathLexer xPathLexer1 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer1.colon();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("!gPbw6YzW,M");
      Token token0 = xPathLexer2.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer2.identifier();
      String string0 = token2.toString();
      assertEquals("[ (15) (gPbw6YzW)", string0);
      
      xPathLexer2.setPreviousToken(token2);
      xPathLexer2.slashes();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer2.nextToken();
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("M", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("b", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals("P", token7.getTokenText());
      
      Token token8 = xPathLexer2.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer2.plus();
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer2.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer1.plus();
      assertEquals("b", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer0.colon();
      assertEquals("w", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      xPathLexer1.number();
      Token token14 = xPathLexer3.minus();
      assertEquals(6, token14.getTokenType());
      
      Token token15 = xPathLexer2.leftParen();
      assertEquals(1, token15.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5910628543064798
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      xPathLexer2.rightParen();
      Token token0 = xPathLexer0.equals();
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(17, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals("Y", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("`}<=oYnY", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      Token token5 = xPathLexer3.leftParen();
      assertEquals(1, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.notEquals();
      XPathLexer xPathLexer8 = new XPathLexer("");
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token6 = xPathLexer9.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer8.relationalOperator();
      xPathLexer4.notEquals();
      Token token7 = xPathLexer4.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer5.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer8.colon();
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token10 = xPathLexer1.dots();
      assertEquals("`", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.212092272881146
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("&", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token4 = xPathLexer0.slashes();
      assertEquals("Z", token4.getTokenText());
      
      xPathLexer0.plus();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("_&", token6.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals("V", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("6", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("l$vv");
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer1.minus();
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals("l", token12.getTokenText());
      
      Token token13 = xPathLexer0.dots();
      assertEquals("}", token13.getTokenText());
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6824856125321241
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      Token token1 = xPathLexer3.dollar();
      assertEquals(")", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer1.equals();
      Token token3 = xPathLexer2.dots();
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("m", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.leftParen();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.leftParen();
      Token token10 = xPathLexer4.leftParen();
      assertEquals("o", token10.getTokenText());
      
      Token token11 = xPathLexer2.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("om", token11.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer6.comma();
      assertEquals(32, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      XPathLexer xPathLexer8 = new XPathLexer(")");
      xPathLexer7.minus();
      Token token13 = xPathLexer7.minus();
      assertEquals(6, token13.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token14 = xPathLexer4.colon();
      assertEquals("m", token14.getTokenText());
      
      xPathLexer7.relationalOperator();
      Token token15 = xPathLexer6.colon();
      assertEquals(18, token15.getTokenType());
      
      Token token16 = xPathLexer4.dots();
      assertEquals(13, token16.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2917771376349862
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer1.nextToken();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer1.or();
      xPathLexer1.consume();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer1.comma();
      xPathLexer1.at();
      xPathLexer0.literal();
      xPathLexer1.slashes();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("aAW");
      xPathLexer3.div();
      xPathLexer1.at();
      xPathLexer2.colon();
      xPathLexer1.rightBracket();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("aAW");
      xPathLexer4.identifierOrOperatorName();
      xPathLexer4.pipe();
      xPathLexer4.dollar();
      Token token1 = xPathLexer0.plus();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.816377464469718
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P%;qHJ$[Q:x9U'+`U");
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.consume((-283));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.058222423043455
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.dollar();
      assertEquals("Z", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("vIfmZQY.A+V:");
      Token token3 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("vIfmZQY.A", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.not();
      assertEquals("", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer2.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.literal();
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("vIfmZQY.A+V:");
      Token token9 = xPathLexer6.notEquals();
      assertEquals("vI", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer4.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer5.relationalOperator();
      boolean boolean0 = xPathLexer4.isIdentifierStartChar('_');
      assertTrue(boolean0);
      
      xPathLexer4.dots();
      Token token12 = xPathLexer2.equals();
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.128674805340099
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("lk", token1.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.mod();
      Token token2 = xPathLexer1.dollar();
      assertEquals("k", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer1.equals();
      Token token3 = xPathLexer0.dots();
      assertEquals("~", token3.getTokenText());
      
      xPathLexer1.nextToken();
      Token token4 = xPathLexer1.at();
      assertEquals("~", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("Z7llb", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer2.leftParen();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("Z7llb@%;lt", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      Token token9 = xPathLexer0.leftParen();
      assertEquals(";", token9.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("Z", token10.getTokenText());
      
      Token token11 = xPathLexer4.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token13 = xPathLexer1.notEquals();
      assertEquals(22, token13.getTokenType());
      assertEquals("7l", token13.getTokenText());
      
      Token token14 = xPathLexer1.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer2.leftBracket();
      assertEquals(3, token15.getTokenType());
      assertEquals("k", token15.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token16 = xPathLexer3.colon();
      assertEquals(18, token16.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token17 = xPathLexer5.dots();
      assertEquals(13, token17.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.041653062926765
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BJWEUnRdq#=[");
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("BJWEUnRdq#=[");
      xPathLexer2.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer3.plus();
      xPathLexer4.literal();
      xPathLexer2.leftParen();
      xPathLexer2.notEquals();
      xPathLexer0.nextToken();
      xPathLexer1.slashes();
      xPathLexer3.plus();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.colon();
      xPathLexer6.number();
      Token token1 = xPathLexer4.minus();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.107929916404205
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer("`/h9p!5?!7");
      xPathLexer1.slashes();
      xPathLexer1.div();
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      Token token1 = xPathLexer0.at();
      assertEquals("`", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("5", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.and();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer4.plus();
      xPathLexer3.literal();
      xPathLexer5.leftParen();
      Token token6 = xPathLexer1.notEquals();
      assertEquals("?!", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("h9p", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("!", token8.getTokenText());
      
      Token token9 = xPathLexer1.plus();
      assertEquals("7", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer0.colon();
      assertEquals("5", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer6.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer3.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2542587955926923
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      XPathLexer xPathLexer1 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer1.colon();
      Token token0 = xPathLexer1.slashes();
      assertEquals("g", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer2.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer2.identifier();
      String string0 = token2.toString();
      assertEquals("[ (15) (gPbw6YzW)", string0);
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer2.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.and();
      xPathLexer3.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.plus();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.literal();
      xPathLexer1.leftParen();
      Token token6 = xPathLexer3.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("gPbw6YzW,M", token7.getTokenText());
      
      xPathLexer4.slashes();
      Token token8 = xPathLexer2.plus();
      assertEquals("M", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer5.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals("g", token11.getTokenText());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer3.rightBracket();
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0908664732926887
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("u,]9M:Srs(Py");
      xPathLexer1.rightBracket();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token0 = xPathLexer1.leftParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer1.plus();
      xPathLexer4.notEquals();
      xPathLexer1.leftBracket();
      xPathLexer4.relationalOperator();
      xPathLexer2.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token1 = xPathLexer3.notEquals();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8736366598119392
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.setXPath("0#Tp$A?Q");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (0)", string0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals("#", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
      
      xPathLexer0.rightBracket();
      int int0 = xPathLexer0.endPosition();
      assertEquals(8, int0);
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      xPathLexer0.number();
      char char0 = xPathLexer0.LA(8);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("Q", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.colon();
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer3.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer2.setXPath("f/SMt400");
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("f", token10.getTokenText());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer2.comma();
      assertEquals(32, token13.getTokenType());
      assertEquals("/", token13.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9810746139783704
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      Token token0 = xPathLexer2.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("'", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("1");
      Token token5 = xPathLexer1.not();
      assertEquals("`", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer0.minus();
      assertEquals("d", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("}", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer4.number();
      assertEquals("1", token8.getTokenText());
      
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.202711755413375
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      xPathLexer0.equals();
      Token token4 = xPathLexer0.dots();
      assertEquals("e", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.at();
      assertEquals("q", token5.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("``]r3VAZs");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(21, token7.getTokenType());
      assertEquals("=", token7.getTokenText());
      
      xPathLexer0.and();
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("`", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("G", token9.getTokenText());
      
      Token token10 = xPathLexer2.plus();
      assertEquals("`", token10.getTokenText());
      
      Token token11 = xPathLexer3.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer2.leftParen();
      assertEquals("]", token12.getTokenText());
      
      Token token13 = xPathLexer1.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer2.nextToken();
      assertEquals(15, token14.getTokenType());
      assertEquals("r3VAZs", token14.getTokenText());
      
      Token token15 = xPathLexer1.slashes();
      assertEquals(11, token15.getTokenType());
      assertEquals("%", token15.getTokenText());
      
      Token token16 = xPathLexer2.plus();
      assertEquals(5, token16.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token17 = xPathLexer4.colon();
      assertEquals(18, token17.getTokenType());
      
      Token token18 = xPathLexer0.number();
      assertEquals(30, token18.getTokenType());
      
      Token token19 = xPathLexer1.minus();
      assertEquals(6, token19.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2362430032149496
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.colon();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Gq", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dollar();
      assertEquals("V", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.equals();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("e4qq7", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(";", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.leftParen();
      assertEquals(",", token8.getTokenText());
      
      Token token9 = xPathLexer0.equals();
      assertEquals("-", token9.getTokenText());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.rightBracket();
      assertEquals("h", token10.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.comma();
      xPathLexer0.setPreviousToken(token11);
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.setXPath("=GqV%,oe4qq7;,-h*}");
      Token token12 = xPathLexer2.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals("*", token13.getTokenText());
      
      Token token14 = xPathLexer1.star();
      assertEquals("=", token14.getTokenText());
      
      xPathLexer2.mod();
      Token token15 = xPathLexer0.not();
      assertEquals(23, token15.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer1.relationalOperator();
      Token token16 = xPathLexer0.colon();
      assertEquals(18, token16.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token17 = xPathLexer4.dollar();
      assertEquals(26, token17.getTokenType());
      
      xPathLexer4.number();
      Token token18 = xPathLexer4.number();
      assertEquals(30, token18.getTokenType());
      
      Token token19 = xPathLexer2.equals();
      assertEquals(21, token19.getTokenType());
      
      Token token20 = xPathLexer4.rightBracket();
      assertEquals(4, token20.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6983398997987043
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "=GqV%,oe4qq7;,-h*}";
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer2.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer3.equals();
      xPathLexer2.operatorName();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer4.notEquals();
      String string1 = null;
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3067716397093336
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer2.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token2 = xPathLexer2.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      xPathLexer2.notEquals();
      Token token3 = xPathLexer1.comma();
      assertEquals("=", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer2.notEquals();
      assertEquals("oe", token4.getTokenText());
      
      Token token5 = xPathLexer3.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token6 = xPathLexer4.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7865463233569017
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer("`/h9p!5?!7");
      Token token0 = xPathLexer1.slashes();
      assertEquals("`/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      xPathLexer1.div();
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.dollar();
      assertEquals("`", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("9", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("`/h9p!5?!7");
      Token token5 = xPathLexer4.nextToken();
      assertEquals("`/h9p!5?!7", token5.getTokenText());
      
      Token token6 = xPathLexer4.not();
      assertEquals("`", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      Token token7 = xPathLexer4.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer("");
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token9 = xPathLexer5.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token10 = xPathLexer8.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.minus();
      assertEquals("p", token11.getTokenText());
      
      Token token12 = xPathLexer9.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer9.relationalOperator();
      Token token13 = xPathLexer1.colon();
      assertEquals("!", token13.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer("[ (");
      xPathLexer10.relationalOperator();
      Token token14 = xPathLexer5.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer4.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.079167349455221
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Y`}<=oYnY");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("|", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.colon();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (18) (})", string0);
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (})");
      XPathLexer xPathLexer2 = new XPathLexer("[ (18) (})");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("[ (18) (})");
      xPathLexer0.relationalOperator();
      xPathLexer3.consume();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer2.literal();
      assertEquals(27, token7.getTokenType());
      assertNotNull(token7);
      assertEquals("(18)", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.or();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer("E}!nq3=i:Mn%");
      Token token8 = xPathLexer5.star();
      assertEquals("E", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer5.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("}!", token9.getTokenText());
      
      xPathLexer2.div();
      xPathLexer4.comma();
      XPathLexer xPathLexer6 = new XPathLexer("E}!nq3=i:Mn%");
      xPathLexer1.leftBracket();
      Token token10 = xPathLexer1.leftBracket();
      assertEquals("(", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("1", token11.getTokenText());
      
      xPathLexer2.colon();
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
      assertEquals("8", token12.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9109700952618172
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("b8y<");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token0 = xPathLexer1.dots();
      assertEquals("b", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.and();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("b8y<");
      Token token2 = xPathLexer2.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals("8", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.colon();
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer5.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifier();
      assertEquals("y", token6.getTokenText());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals("<", token8.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.and();
      xPathLexer0.and();
      xPathLexer6.dots();
      Token token10 = xPathLexer1.identifier();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.9009041410599945
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer1.colon();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer1.whitespace();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer2.identifier();
      String string0 = token1.toString();
      assertEquals("[ (15) ()", string0);
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token2 = xPathLexer3.whitespace();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer("[ (15) ()");
      Token token4 = xPathLexer5.not();
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer6.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(") (");
      xPathLexer4.plus();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer8.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer5.nextToken();
      assertEquals("(", token8.getTokenText());
      
      Token token9 = xPathLexer7.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer6.plus();
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer("com.werken.saxpath.Token");
      Token token11 = xPathLexer10.colon();
      assertEquals("c", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer7.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer0.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8718298090055336
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.setXPath("0#Tp$A2Y");
      Token token0 = xPathLexer0.slashes();
      assertEquals("0", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("p", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("$", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.literal();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("A", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("co", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer5.number();
      assertEquals(30, token8.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9693149726678958
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifier();
      xPathLexer0.not();
      xPathLexer1.consume();
      xPathLexer1.slashes();
      xPathLexer0.plus();
      xPathLexer1.literal();
      xPathLexer1.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer1.plus();
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer("mf}ge>!^i|u6");
      Token token0 = xPathLexer3.or();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.9837465326337442
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("Io&au#tZ'c_&LV6)}");
      Token token0 = xPathLexer1.slashes();
      token0.toString();
      xPathLexer1.consume(1);
      token0.toString();
      xPathLexer1.minus();
      xPathLexer1.plus();
      xPathLexer0.number();
      xPathLexer0.slashes();
      Token token1 = xPathLexer1.nextToken();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer1.colon();
      xPathLexer1.currentPosition();
      xPathLexer1.notEquals();
      xPathLexer0.literal();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer2.relationalOperator();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9200589259923875
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(:gFo,");
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("(:gFo,");
      xPathLexer1.mod();
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      xPathLexer1.equals();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("gFo", token1.getTokenText());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("]O#oJs ");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.leftParen();
      assertEquals("]", token3.getTokenText());
      
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("g", token4.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer5.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.literal();
      xPathLexer4.mod();
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("O", token8.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.relationalOperator();
      xPathLexer2.colon();
      Token token9 = xPathLexer6.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token10 = xPathLexer6.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("o", token10.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.1319355468833874
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer1.leftParen();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer4 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer3.literal();
      xPathLexer3.mod();
      xPathLexer3.not();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer3.relationalOperator();
      xPathLexer0.colon();
      xPathLexer5.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.076150192591175
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Io", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("c_", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("&LV6)}", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      Token token6 = xPathLexer0.plus();
      assertEquals("L", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.relationalOperator();
      xPathLexer1.colon();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer2.at();
      assertEquals("I", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.390671776625607
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("vI", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals("f", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      xPathLexer0.setXPath("vIfmZQY.A+V:");
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(365);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setXPath("a*;v");
      xPathLexer0.and();
      Token token3 = xPathLexer0.equals();
      assertEquals("a", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(";", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("v", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token7 = new Token('\uFFFF', "vIfmZQY.A+V:", 365, '\uFFFF');
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer3.div();
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer3.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.857538796591018
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer1.colon();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer2.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer3.pipe();
      xPathLexer3.rightBracket();
      xPathLexer1.dots();
      xPathLexer3.nextToken();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.operatorName();
      xPathLexer0.leftParen();
      xPathLexer5.equals();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer3.notEquals();
      xPathLexer4.div();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("");
      xPathLexer9.comma();
      XPathLexer xPathLexer10 = new XPathLexer("vIfmZQY.A+V:");
      XPathLexer xPathLexer11 = null;
      try {
        xPathLexer11 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9399454774346179
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer1.or();
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("-#=B(f.uIJ}_~JYGU");
      xPathLexer2.identifier();
      xPathLexer2.rightBracket();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8545627037844041
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals("u", token2.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("8(P+3'WU3dV.`");
      Token token3 = xPathLexer1.notEquals();
      assertEquals("8(", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer1.hasMoreChars();
      XPathLexer xPathLexer2 = new XPathLexer("U~/Gt7wNEh<ab");
      xPathLexer0.and();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("U", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.293926100979991
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-496));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.066877758629145
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Y`}<=oYnY");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("`", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.minus();
      Token token3 = xPathLexer0.minus();
      assertEquals("<", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      token4.toString();
      token4.toString();
      String string0 = token4.toString();
      assertEquals("[ (18) (=)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.LA(1);
      xPathLexer1.setXPath("");
      xPathLexer0.and();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("o", token5.getTokenText());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals("Y", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      xPathLexer0.mod();
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer2.colon();
      Token token11 = xPathLexer2.number();
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.132711728507588
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      XPathLexer xPathLexer1 = new XPathLexer("!gPbw6YzW,M");
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("6", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("Y", token6.getTokenText());
      
      Token token7 = xPathLexer1.identifier();
      assertEquals("Pbw6YzW", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("``]r3VAZs");
      Token token9 = xPathLexer1.nextToken();
      assertEquals(",", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.and();
      Token token10 = xPathLexer0.not();
      assertEquals("W", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals(",", token11.getTokenText());
      
      Token token12 = xPathLexer4.plus();
      assertEquals(5, token12.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.div();
      Token token13 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer1.leftBracket();
      assertEquals(3, token14.getTokenType());
      assertEquals("M", token14.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer4.comma();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token15 = xPathLexer0.at();
      assertEquals(16, token15.getTokenType());
      
      Token token16 = xPathLexer4.notEquals();
      assertEquals(22, token16.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.252848465023265
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      assertEquals("V", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("%", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(",", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer2.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
      
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer3.leftParen();
      xPathLexer1.notEquals();
      xPathLexer3.div();
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token7 = xPathLexer4.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("=G", token7.getTokenText());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer0.colon();
      assertEquals("-", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer4.number();
      assertEquals(30, token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.2823240801139812
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.mod();
      Token token0 = xPathLexer0.dollar();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer1.pipe();
      assertEquals("c", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer1.equals();
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer1.dots();
      assertEquals("m.", token3.getTokenText());
      assertEquals(14, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("(", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("G~k]FcH^86k:Sb(zF");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("G", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer5.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("G~k]FcH^86k:Sb(zF");
      Token token9 = xPathLexer1.literal();
      assertEquals("rk", token9.getTokenText());
      assertEquals(27, token9.getTokenType());
      assertNotNull(token9);
      
      xPathLexer1.mod();
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer4.dollar();
      assertEquals(26, token11.getTokenType());
      
      xPathLexer6.relationalOperator();
      Token token12 = xPathLexer6.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token13);
      assertEquals(15, token13.getTokenType());
      
      xPathLexer1.div();
      Token token14 = xPathLexer6.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7011780454216727
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer4.equals();
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token2 = xPathLexer5.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("!gPbw6YzW,M");
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("QZy$-");
      XPathLexer xPathLexer9 = new XPathLexer("");
      xPathLexer1.not();
      XPathLexer xPathLexer10 = new XPathLexer("o]KyCaIM3b#sS");
      Token token5 = xPathLexer6.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      xPathLexer11.relationalOperator();
      Token token6 = xPathLexer6.colon();
      assertEquals("g", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer12 = new XPathLexer("");
      Token token7 = xPathLexer7.number();
      assertEquals(30, token7.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.132626813659188
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.setXPath("0#Tp$A2Y");
      xPathLexer0.slashes();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer0.pipe();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer1.not();
      xPathLexer1.colon();
      xPathLexer0.comma();
      xPathLexer1.plus();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer1.dots();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer0.colon();
      xPathLexer1.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("0#Tp$A2Y");
      xPathLexer1.number();
      // Undeclared exception!
      try { 
        xPathLexer3.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5573559490019422
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      XPathLexer xPathLexer1 = new XPathLexer("`/h9p!5?!7");
      xPathLexer1.slashes();
      xPathLexer1.div();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer2.dots();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.notEquals();
      xPathLexer0.leftParen();
      xPathLexer4.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("");
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer6.not();
      XPathLexer xPathLexer9 = new XPathLexer("r`%k<at`'9G");
      xPathLexer6.dollar();
      xPathLexer2.minus();
      xPathLexer3.minus();
      xPathLexer0.relationalOperator();
      xPathLexer5.colon();
      xPathLexer4.relationalOperator();
      xPathLexer0.colon();
      XPathLexer xPathLexer10 = null;
      try {
        xPathLexer10 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0681943290610394
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.operatorName();
      xPathLexer2.rightParen();
      xPathLexer0.at();
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer4.nextToken();
      assertEquals("com.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer3.and();
      Token token2 = xPathLexer4.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer3.plus();
      xPathLexer0.literal();
      Token token4 = xPathLexer1.leftParen();
      assertEquals("|", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("Y`", token5.getTokenText());
      
      xPathLexer1.nextToken();
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.plus();
      assertEquals("o", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("}", token8.getTokenText());
      
      Token token9 = xPathLexer5.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.9477594026335927
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(:gFo,");
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("(:gFo,");
      xPathLexer1.mod();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer1.equals();
      Token token2 = xPathLexer0.dots();
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Fo", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("]O#oJs ");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.leftParen();
      assertEquals("]", token6.getTokenText());
      
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("g", token7.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer3.leftParen();
      assertEquals(1, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer5.plus();
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer5.literal();
      assertNull(token11);
      
      xPathLexer4.mod();
      Token token12 = xPathLexer3.not();
      assertEquals(23, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.relationalOperator();
      xPathLexer2.colon();
      xPathLexer6.relationalOperator();
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      assertEquals("o", token14.getTokenText());
      
      Token token15 = xPathLexer0.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9065608827249845
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("G~k]FcH^86k:Sb(zF");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("G", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer4.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertEquals(27, token6.getTokenType());
      assertNotNull(token6);
      assertEquals("rk", token6.getTokenText());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token9 = xPathLexer5.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.1745283372449533
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dollar();
      assertEquals("%", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(";", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(",", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("-", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.notEquals();
      xPathLexer1.leftParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.relationalOperator();
      xPathLexer3.notEquals();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer4.colon();
      assertEquals("=", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.2588488262646003
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      XPathLexer xPathLexer3 = new XPathLexer("5!D");
      xPathLexer3.not();
      XPathLexer xPathLexer4 = new XPathLexer("hm(xCq4RKM");
      xPathLexer2.minus();
      xPathLexer3.relationalOperator();
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer("hm(xCq4RKM");
      xPathLexer0.number();
      xPathLexer2.dollar();
      Token token0 = xPathLexer3.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.114937672537895
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "!gPbw6YzW,M";
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      String string1 = "[ (";
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.equals();
      xPathLexer1.consume((-1618));
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer1.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.775602077477645
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("y4zXx'S2WFzu@#y");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.operatorName();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer2.rightBracket();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("7-$sz:W><$`J");
      XPathLexer xPathLexer6 = new XPathLexer("1");
      xPathLexer5.not();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.07515339730972
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Y`}<=oYnY");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.colon();
      token2.toString();
      token2.toString();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (18) (=)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("oYnY", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (=)");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      xPathLexer3.minus();
      Token token7 = xPathLexer2.minus();
      assertEquals("o", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer2.colon();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer3.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer2.colon();
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer2.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("w", token11.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1903183377248667
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.consume((-1955));
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.2560169367590874
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (`)");
      xPathLexer1.not();
      xPathLexer0.slashes();
      token0.toString();
      xPathLexer1.slashes();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("[ (13) (`)");
      xPathLexer1.whitespace();
      xPathLexer1.leftBracket();
      xPathLexer1.relationalOperator();
      xPathLexer2.colon();
      xPathLexer1.leftBracket();
      xPathLexer1.dollar();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.number();
      // Undeclared exception!
      try { 
        xPathLexer4.LA((-3596));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9667980814523471
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#WaU}d|wG6dm;R*");
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("#WaU}d|wG6dm;R*");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.setXPath("");
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-986));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9325806317508833
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("o", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("e", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("u,]9M:Srs(Py");
      Token token5 = xPathLexer1.dots();
      assertEquals("u", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(",", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer1.equals();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("9", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token8 = xPathLexer1.leftParen();
      assertEquals("S", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer1.equals();
      assertEquals("(", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token10 = xPathLexer4.minus();
      assertEquals("=", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("P", token11.getTokenText());
      
      Token token12 = xPathLexer4.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("Gq", token12.getTokenText());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("y", token13.getTokenText());
      
      xPathLexer4.relationalOperator();
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token15 = xPathLexer4.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.890074692067905
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.hasMoreChars();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.4812751438240865
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.consume((-1955));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5759652759084664
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "=GqV%,oe4qq7;,-h*}";
      XPathLexer xPathLexer0 = new XPathLexer("BJWEUnRdq#=[");
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("BJWEUnRdq#=[");
      xPathLexer2.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer4.notEquals();
      String string1 = null;
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.168604884487561
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.not();
      assertEquals("v", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      xPathLexer0.div();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.rightParen();
      assertEquals("+", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      Token token6 = xPathLexer1.equals();
      assertEquals("v", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("IfmZQY.A", token7.getTokenText());
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("+", token8.getTokenText());
      
      xPathLexer1.setPreviousToken(token1);
      assertEquals(13, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      xPathLexer1.setXPath("vIfmZQY.A+V:");
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer1.colon();
      assertEquals("v", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7894216587392822
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer0.or();
      Token token0 = xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("bw6YzW", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(",M", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7627776036056533
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.consume((-2138));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.4903368533234533
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (-2) ()");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer3.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals("[", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer2.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer2.leftParen();
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[ (-2) ()");
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.minus();
      Token token9 = xPathLexer5.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token10 = xPathLexer6.colon();
      assertEquals("[", token10.getTokenText());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer8.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer4.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.875532382560699
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.colon();
      assertEquals("v", token0.getTokenText());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer2.identifier();
      xPathLexer2.mod();
      Token token1 = xPathLexer2.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer2.equals();
      Token token2 = xPathLexer1.dots();
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer3.identifier();
      XPathLexer xPathLexer4 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.leftParen();
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("ZQY.A", token6.getTokenText());
      
      Token token7 = xPathLexer2.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.leftParen();
      Token token8 = xPathLexer0.leftParen();
      assertEquals("f", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer4.notEquals();
      assertEquals("vI", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token10 = xPathLexer4.comma();
      assertEquals("f", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer7.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer3.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer6.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer6.colon();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token16 = xPathLexer8.dots();
      assertEquals(13, token16.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.161529985907131
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-899));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9087660978171819
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("lk", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer4.literal();
      Token token3 = xPathLexer4.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("3", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("~Z", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("L;C");
      XPathLexer xPathLexer7 = new XPathLexer("L;C");
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("vWW0IS3`l]q");
      Token token7 = xPathLexer7.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("L", token7.getTokenText());
      
      xPathLexer3.minus();
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer8.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer("_3MIy6=ki IwtbDe1");
      Token token9 = xPathLexer9.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("_", token9.getTokenText());
      
      Token token10 = xPathLexer9.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("3", token10.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.917325530267099
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BJWEUnRdq#=[");
      xPathLexer0.or();
      Token token0 = xPathLexer0.star();
      assertEquals("B", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dollar();
      assertEquals("J", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("W", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("EUnRdq", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      Token token4 = xPathLexer0.dots();
      assertEquals("=", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(3, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("!9i+u +");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer1.leftParen();
      assertEquals("!", token10.getTokenText());
      
      xPathLexer3.leftParen();
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("!9i+u +");
      XPathLexer xPathLexer5 = new XPathLexer("MQ}=");
      Token token13 = xPathLexer4.minus();
      assertEquals("!", token13.getTokenText());
      
      xPathLexer3.minus();
      xPathLexer2.relationalOperator();
      xPathLexer0.colon();
      xPathLexer4.relationalOperator();
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer2.dots();
      assertEquals(13, token15.getTokenType());
      
      Token token16 = xPathLexer5.slashes();
      assertEquals("M", token16.getTokenText());
      assertEquals(11, token16.getTokenType());
      
      Token token17 = xPathLexer3.minus();
      assertEquals(6, token17.getTokenType());
      
      char char0 = xPathLexer0.LA(113);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.00864845450944
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.1322659426443153
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("~Z", token1.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.mod();
      xPathLexer1.dollar();
      Token token2 = xPathLexer1.pipe();
      assertEquals("9", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("llb", token4.getTokenText());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token5 = xPathLexer2.leftParen();
      assertEquals("l", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("%", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer4.literal();
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer4.mod();
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer4.leftParen();
      assertEquals(1, token11.getTokenType());
      
      Token token12 = xPathLexer5.dollar();
      assertEquals("l", token12.getTokenText());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer1.dots();
      assertEquals(13, token14.getTokenType());
      assertEquals("Z", token14.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.212402070217469
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.literal();
      xPathLexer1.at();
      xPathLexer1.pipe();
      Token token1 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("[ (13) (=)");
      xPathLexer1.not();
      xPathLexer2.slashes();
      token1.toString();
      xPathLexer0.slashes();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (=)");
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.9452467222713419
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer1.leftBracket();
      xPathLexer1.getPreviousToken();
      xPathLexer1.rightParen();
      xPathLexer0.equals();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("`{PJ<A");
      xPathLexer1.leftBracket();
      xPathLexer2.leftParen();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.isIdentifierStartChar('$');
      xPathLexer2.nextToken();
      xPathLexer2.div();
      xPathLexer3.comma();
      xPathLexer1.literal();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer3.or();
      XPathLexer xPathLexer5 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer2.literal();
      xPathLexer2.number();
      xPathLexer0.isIdentifierStartChar('$');
      xPathLexer4.leftBracket();
      xPathLexer2.number();
      xPathLexer5.currentPosition();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8364247581448023
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
      
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token4 = xPathLexer3.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("~Z7llb@%;lt", token5.getTokenText());
      
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token6 = xPathLexer4.equals();
      assertEquals("l", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.leftParen();
      assertEquals(1, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token9 = xPathLexer6.notEquals();
      assertEquals("lk", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer9 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer7.leftBracket();
      assertEquals("c", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token13 = xPathLexer4.colon();
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token14 = xPathLexer3.dots();
      assertEquals(13, token14.getTokenType());
      assertEquals("Z", token14.getTokenText());
      
      Token token15 = xPathLexer3.star();
      assertEquals("7", token15.getTokenText());
      assertEquals(20, token15.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.184343288509195
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Y`}<=oYnY");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.comma();
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      token3.toString();
      token3.toString();
      token3.toString();
      token3.toString();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (18) (=)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("oYnY", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.isIdentifierStartChar('C');
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.or();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('8');
      assertFalse(boolean0);
      
      xPathLexer0.dots();
      Token token12 = xPathLexer0.equals();
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.2366863204938405
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("u,]9M:Srs(Py");
      xPathLexer1.rightBracket();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      xPathLexer1.at();
      xPathLexer0.leftBracket();
      xPathLexer1.slashes();
      xPathLexer0.literal();
      xPathLexer1.isIdentifierStartChar('N');
      xPathLexer1.div();
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer0.literal();
      xPathLexer2.slashes();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.literal();
      xPathLexer0.number();
      xPathLexer4.number();
      xPathLexer3.dots();
      xPathLexer2.equals();
      Token token0 = xPathLexer4.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7935032855324384
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("u,]9M:Srs(Py");
      Token token0 = xPathLexer3.dots();
      assertEquals("u", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("mZQY.A", token1.getTokenText());
      
      xPathLexer1.leftParen();
      xPathLexer2.equals();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("+", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("V:", token3.getTokenText());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("vIfmZQY.A+V:");
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer4.notEquals();
      Token token6 = xPathLexer4.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer4.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer6.relationalOperator();
      Token token9 = xPathLexer3.colon();
      assertEquals(",", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7892290809245721
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Io", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("I", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals("o", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer4.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(") (");
      XPathLexer xPathLexer7 = new XPathLexer("mW");
      Token token7 = xPathLexer6.not();
      assertEquals(")", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("?r-rvZ.t");
      xPathLexer7.minus();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer4.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.colon();
      assertEquals("u", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer3.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.2966930416534255
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifier();
      xPathLexer1.mod();
      XPathLexer xPathLexer3 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token1 = xPathLexer3.dollar();
      assertEquals("l", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer1.equals();
      xPathLexer2.dots();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("9", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("i3", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer1.leftParen();
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      xPathLexer1.nextToken();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer1.leftParen();
      assertEquals("Z", token7.getTokenText());
      
      xPathLexer2.leftParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer(" Qu:hCIBzP3PTI");
      Token token8 = xPathLexer4.comma();
      assertEquals("l", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer6.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals(" Q", token9.getTokenText());
      
      Token token10 = xPathLexer4.minus();
      assertEquals(6, token10.getTokenType());
      assertEquals("k", token10.getTokenText());
      
      xPathLexer4.relationalOperator();
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer2.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token15 = xPathLexer7.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.0849829597727543
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals("f", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y4zXx'S2WFzu@#y");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer2.comma();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer3.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer1.dollar();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("4", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer2.not();
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("y4zXx'S2WFzu@#y");
      Token token4 = xPathLexer5.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      xPathLexer4.comma();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer1.hasMoreChars();
      xPathLexer2.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("G1Uy/rf&YC3RSweN");
      Token token6 = xPathLexer7.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("G1", token6.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("y4zXx'S2WFzu@#y");
      xPathLexer7.rightParen();
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("mZQY.A", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer8.div();
      Token token8 = xPathLexer5.at();
      assertEquals("4", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer7.plus();
      assertEquals("y", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      xPathLexer4.rightBracket();
      Token token10 = xPathLexer8.doubleColon();
      assertEquals("y4", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer6.dollar();
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.132557325784822
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.setXPath("0#Tp$A2Y");
      xPathLexer0.slashes();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer1.not();
      xPathLexer1.colon();
      xPathLexer0.comma();
      xPathLexer1.plus();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer1.dots();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer1.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("0#Tp$A2Y");
      xPathLexer1.number();
      // Undeclared exception!
      try { 
        xPathLexer3.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.3180177085695846
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.200601777762938
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.number();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.consume(1695);
      xPathLexer0.mod();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.getXPath();
      xPathLexer0.operatorName();
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.dollar();
      xPathLexer0.plus();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1706, int0);
      
      xPathLexer0.or();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      Token token15 = xPathLexer0.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.226823864588753
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "(:gFo,";
      XPathLexer xPathLexer0 = new XPathLexer("(:gFo,");
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.not();
      Token token0 = xPathLexer0.at();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.not();
      xPathLexer1.slashes();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.919739319637691
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      Token token1 = xPathLexer1.dollar();
      assertEquals("k", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals("9", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer1.equals();
      xPathLexer0.dots();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("Z", token4.getTokenText());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("7", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.leftParen();
      assertEquals("l", token8.getTokenText());
      
      Token token9 = xPathLexer2.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("ll", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.relationalOperator();
      Token token12 = xPathLexer5.notEquals();
      assertEquals("lk", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer3.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token14 = xPathLexer6.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      Token token15 = xPathLexer1.dots();
      assertEquals("b", token15.getTokenText());
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.081723381028977
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("vI", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y4zXx'S2WFzu@#y");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer2.rightParen();
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer2.rightBracket();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("y4zXx", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer4.colon();
      Token token5 = xPathLexer0.comma();
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      boolean boolean0 = xPathLexer2.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer3.and();
      XPathLexer xPathLexer5 = new XPathLexer("y4zXx'S2WFzu@#y");
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer6.relationalOperator();
      xPathLexer6.relationalOperator();
      xPathLexer4.div();
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      Token token12 = xPathLexer6.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer6.dollar();
      assertEquals(26, token13.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0773914558981676
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("vI", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("vIfmZQY.A+V:");
      Token token1 = xPathLexer1.dots();
      assertEquals("v", token1.getTokenText());
      
      xPathLexer1.div();
      xPathLexer0.and();
      xPathLexer1.leftParen();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("f", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("mZQY.A", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("m", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer1.plus();
      xPathLexer1.literal();
      xPathLexer0.leftParen();
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("d={&Dqpcm{`038&");
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer2.leftParen();
      assertEquals("[", token13.getTokenText());
      
      Token token14 = xPathLexer3.star();
      assertEquals(20, token14.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.902060078013089
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("q", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("q", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("=", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      XPathLexer xPathLexer4 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer4.notEquals();
      assertEquals("=G", token10.getTokenText());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(";", token11.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals(",", token12.getTokenText());
      
      Token token13 = xPathLexer3.dots();
      assertEquals(13, token13.getTokenType());
      assertEquals("=", token13.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.7311441797362228
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k20t%@{`Uw94ugTx\"x");
      Token token0 = xPathLexer0.star();
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("2", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(150);
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.getXPath();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("k20t%@{`Uw94ugTx\"x");
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.7616929555941723
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.identifier();
      assertEquals("9i3", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer1.dollar();
      assertEquals("k", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      xPathLexer1.equals();
      xPathLexer0.dots();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("3", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("~", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("Z", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer3.notEquals();
      assertEquals("lk", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.9022026411681552
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(:gFo,");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.dollar();
      assertEquals("g", token1.getTokenText());
      
      xPathLexer1.pipe();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("(:gFo,");
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer1.rightParen();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.notEquals();
      assertEquals("o,", token8.getTokenText());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("]D (=DDBi7M>e");
      Token token9 = xPathLexer4.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer4.dollar();
      assertEquals(26, token11.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token12 = xPathLexer3.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer3.whitespace();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.star();
      Token token13 = xPathLexer1.whitespace();
      assertEquals((-2), token13.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.741177427826902
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("]5%OY)q{srMB#");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.not();
      XPathLexer xPathLexer4 = new XPathLexer("tP,");
      xPathLexer3.minus();
      xPathLexer2.relationalOperator();
      xPathLexer0.colon();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.0268908418713476
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token0 = xPathLexer1.colon();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("lk", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dollar();
      assertEquals("9", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer1.equals();
      Token token3 = xPathLexer0.dots();
      assertEquals("i", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("3", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("K`g");
      Token token6 = xPathLexer2.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("K", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer3.leftParen();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals("(", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.leftParen();
      xPathLexer3.leftParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("lk9i3~Z7llb@%;lt");
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals("Z7", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer5.minus();
      assertEquals("l", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token13 = xPathLexer5.notEquals();
      assertEquals(22, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer6.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer4.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      xPathLexer5.relationalOperator();
      xPathLexer4.colon();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token16 = xPathLexer4.dots();
      assertEquals(13, token16.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.1447474633419636
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("u,]9M:Srs(Py");
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("q", token4.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("GqV", token5.getTokenText());
      
      xPathLexer2.leftParen();
      Token token6 = xPathLexer2.equals();
      assertEquals(",", token6.getTokenText());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("oe4qq7;,-h*}", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("]", token8.getTokenText());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("k.hiW~");
      Token token10 = xPathLexer4.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer5.notEquals();
      assertEquals("k.", token11.getTokenText());
      
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      assertEquals("q", token12.getTokenText());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.leftBracket();
      assertEquals("S", token14.getTokenText());
      assertEquals(3, token14.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token15 = xPathLexer1.colon();
      assertEquals(18, token15.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token16 = xPathLexer6.dots();
      assertEquals(13, token16.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.0869086729826614
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer0.or();
      Token token0 = xPathLexer0.star();
      assertEquals("l", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("k9i3", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.dollar();
      assertEquals("Z", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.colon();
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.literal();
      Token token8 = xPathLexer3.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer4.identifier();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      assertEquals("@", token11.getTokenText());
      
      xPathLexer4.relationalOperator();
      Token token12 = xPathLexer4.colon();
      assertEquals(18, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer7.number();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("%", token14.getTokenText());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.168758851749615
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer1.colon();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("~Z", token0.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.mod();
      Token token1 = xPathLexer1.dollar();
      assertEquals("k", token1.getTokenText());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals("l", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("%", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      Token token8 = xPathLexer3.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer3.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("~Z7llb@%;lt", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer5.consume((-2078));
      Token token11 = xPathLexer4.literal();
      assertNull(token11);
      
      xPathLexer4.mod();
      Token token12 = xPathLexer4.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer5.dollar();
      assertEquals(26, token13.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token14 = xPathLexer1.colon();
      assertEquals("~", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer3.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.05725704976923
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|:j-R#PFk3w-@FhXQF");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals(":", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("j", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("-", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("R", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.0173470393239743
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer1.comma();
      assertEquals("=", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      XPathLexer xPathLexer3 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer3.operatorName();
      xPathLexer3.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer3.notEquals();
      assertEquals("=G", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer2.dots();
      assertEquals("=", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals("G", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.8636349932578953
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.2313021821983012
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer1.colon();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer1.dollar();
      xPathLexer1.pipe();
      xPathLexer1.equals();
      xPathLexer0.dots();
      xPathLexer1.nextToken();
      xPathLexer1.at();
      xPathLexer0.identifier();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer2.leftParen();
      xPathLexer0.equals();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer5 = new XPathLexer("lk9i3~Z7llb@%;lt");
      xPathLexer4.literal();
      xPathLexer4.mod();
      xPathLexer4.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.dollar();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer2.number();
      boolean boolean0 = xPathLexer2.isIdentifierChar('E');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.1047155033414344
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("=", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("Gq", token2.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      xPathLexer0.not();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("q", token7.getTokenText());
      
      xPathLexer0.isIdentifierChar('/');
      xPathLexer0.rightBracket();
      Token token8 = xPathLexer0.pipe();
      assertEquals("7", token8.getTokenText());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(";", token9.getTokenText());
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals("-", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      assertEquals("h", token12.getTokenText());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals("*", token13.getTokenText());
      assertEquals(20, token13.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.and();
      Token token14 = xPathLexer1.notEquals();
      assertEquals(22, token14.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.relationalOperator();
      Token token15 = xPathLexer2.not();
      assertEquals(23, token15.getTokenType());
      assertEquals("=", token15.getTokenText());
      
      Token token16 = xPathLexer1.pipe();
      assertEquals(17, token16.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token17 = xPathLexer3.whitespace();
      assertEquals((-2), token17.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.4856879846856992
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token0 = xPathLexer1.comma();
      assertEquals("=", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      Token token1 = xPathLexer2.leftParen();
      assertEquals("=", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.notEquals();
      assertEquals("Gq", token2.getTokenText());
      
      Token token3 = xPathLexer3.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals("V%", token5.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer2.leftBracket();
      assertEquals("q", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("qp::=zS}{T");
      xPathLexer4.minus();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.1514322137548967
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/h9p!5?!7");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (`)");
      xPathLexer1.not();
      xPathLexer0.slashes();
      token0.toString();
      xPathLexer1.slashes();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("[ (13) (`)");
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.6858186920195943
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'d`<+");
      XPathLexer xPathLexer1 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token0 = xPathLexer3.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("O0xC8CC<");
      xPathLexer1.nextToken();
      xPathLexer2.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.colon();
      Token token2 = xPathLexer5.comma();
      assertEquals("O", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer3.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("|Y`}<=oYnY");
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer9 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("[ (");
      Token token5 = xPathLexer0.dollar();
      assertEquals("'", token5.getTokenText());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      xPathLexer11.minus();
      Token token6 = xPathLexer1.minus();
      assertEquals("`", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer12 = new XPathLexer("'d`<+");
      xPathLexer12.colon();
      XPathLexer xPathLexer13 = new XPathLexer("|Y`}<=oYnY");
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer9.colon();
      assertEquals("c", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer10.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      Token token9 = xPathLexer12.dollar();
      assertEquals(26, token9.getTokenType());
  }
}
