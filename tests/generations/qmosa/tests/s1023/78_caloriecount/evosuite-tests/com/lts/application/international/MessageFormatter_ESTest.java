/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:58:39 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = new LinkedList<MessageFormatter.LoadBundleError>();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard", messageFormatter0);
      messageFormatter0.myLastException = (Throwable) applicationException0;
      UnaryOperator<ApplicationException> unaryOperator0 = UnaryOperator.identity();
      Function<ResourceBundle, ApplicationException> function0 = (Function<ResourceBundle, ApplicationException>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super PropertyResourceBundle, ? extends ApplicationException>) function0);
      Throwable throwable0 = messageFormatter0.getLastException();
      String string0 = "{Af3Z";
      ApplicationException applicationException1 = new ApplicationException(throwable0, "{Af3Z", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      linkedList0.add(applicationException1);
      linkedList0.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.lts.application.ApplicationException cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2478144318678424
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "FBVGOS6}9,d`";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FBVGOS6}9,d`");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.US;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rwj]1m\u0005_}");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) classLoader0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FBVGOS6}9,d`");
      objectArray0[1] = (Object) list1;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) "Rwj]1m\u0005_}";
      objectArray0[5] = (Object) "Rwj]1m\u0005_}";
      objectArray0[6] = (Object) list0;
      List list2 = MessageFormatter.buildList(objectArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("FBVGOS6}9,d`");
      messageFormatter0.createLoadException(linkedList0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      ApplicationException applicationException0 = new ApplicationException(":BW_<`r~tQuy");
      messageFormatter0.getMessage("FBVGOS6}9,d`", (Object) applicationException0, (Object) list2);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("n#(E&TJ1+mS|T4SZD");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n#(E&TJ1+mS|T4SZD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n#(E&TJ1+mS|T4SZD");
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("n#(E&TJ1+mS|T4SZD");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      classLoader0.getParent();
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.getMessage("n#(E&TJ1+mS|T4SZD");
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[26];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "messages");
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("critical.com.lts.application.errors.resourceBundle.load");
      stringReader0.ready();
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.formatMessage("critical.com.lts.application.errors.resourceBundle.load", objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("$UU_4_sU", "$UU_4_sU", "$UU_4_sU", 19);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      stackTraceElementArray0[5] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("$UU_4_sU", "$UU_4_sU", "$UU_4_sU", 19);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      StringReader stringReader0 = new StringReader(")");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = messageFormatter0.formatMessage(")", (Object[]) stackTraceElementArray0, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = MessageFormatter.DEFAULT_BUNDLE;
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-46);
      byteArray0[4] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ApplicationException applicationException0 = new ApplicationException("iJ>1:l1tqFO.%ECH8G");
      MockThrowable mockThrowable0 = new MockThrowable(applicationException0);
      MockThrowable mockThrowable1 = new MockThrowable("resources.messages.standard", mockThrowable0);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable1, "iJ>1:l1tqFO.%ECH8G", mockThrowable0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("iJ>1:l1tqFO.%ECH8G", applicationException1);
      linkedList0.add(messageFormatter_LoadBundleError0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.lts.application.international.MessageFormatter$LoadBundleError cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "java.class";
      objectArray0[1] = (Object) "java.class";
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) messageFormatter0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      StringReader stringReader0 = new StringReader("critcal.error.unknown");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("java.class", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("#R&$2j:HYC1&1qhr", "#R&$2j:HYC1&1qhr", "#R&$2j:HYC1&1qhr", 11);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "iggjE[#GP]");
      StackTraceElement stackTraceElement1 = new StackTraceElement("x@dw8dOec%|]we:1G", " XHI6Ex", "x@dw8dOec%|]we:1G", 784);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("bkP>#{39=?1xqea;:=", (Throwable) null);
      linkedList0.add(messageFormatter_LoadBundleError0);
      messageFormatter0.createLoadException(linkedList0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("iggjE[#GP]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayLanguage();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.setPackageAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("i", false);
      classLoader0.setPackageAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus("i", false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.listToString(list0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)58;
      byteArray0[1] = (byte)58;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)58);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("Q'6&Z~fPwmJH", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-Ua");
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      stringReader0.ready();
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      try { 
        messageFormatter0.formatMessage("-Ua", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("%5gw@s\"", "%5gw@s\"", "%5gw@s\"", 11);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("j'1TP_;sX", "#og73I\"c$9U8#)x", (String) null, 6);
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[0] = object0;
      objectArray1[1] = object3;
      objectArray1[2] = object6;
      objectArray1[3] = object0;
      objectArray1[4] = object0;
      objectArray1[5] = object0;
      objectArray1[6] = object3;
      objectArray1[7] = object3;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "Wjj]{ud{<h9}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "/Bw0&`7mmKr_$'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YL^L\u0006(B04maK-b");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kRq7;l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GH2\"WxpkWod6B$!S\"Z>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "i");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Locale locale0 = Locale.US;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) null, locale0, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class, java.properties; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "", 19);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      stackTraceElementArray0[5] = stackTraceElement0;
      stackTraceElementArray0[5] = stackTraceElement0;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0188624449286268
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte) (-42);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-UMa");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-UMa");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class, java.properties; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte) (-42);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-Ua");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-Ua");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")P:1)uk>6=)>");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.listResources("-Ua", classLoader0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("tB]9>]6W", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("84Gm&C;w`", false);
      classLoader0.setPackageAssertionStatus("84Gm&C;w`", false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus("84Gm&C;w`", false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("84Gm&C;w`", false);
      classLoader0.setClassAssertionStatus("84Gm&C;w`", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("84Gm&C;w`", false);
      classLoader0.setPackageAssertionStatus("84Gm&C;w`", false);
      classLoader0.setClassAssertionStatus("84Gm&C;w`", false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.listResources("84Gm&C;w`", classLoader0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte) (-42);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-Ua");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9YIQ6L^Z\u0006(o04?aKXv");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-Ua");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")P:1)uk>6=)>");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.listResources("-Ua", classLoader0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.loadCriticalBundles();
      LinkedList<ResourceBundle> linkedList0 = new LinkedList<ResourceBundle>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      pipedOutputStream2.connect(pipedInputStream2);
      PipedInputStream pipedInputStream3 = new PipedInputStream(pipedOutputStream3);
      PipedOutputStream pipedOutputStream4 = null;
      try {
        pipedOutputStream4 = new PipedOutputStream(pipedInputStream3);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("pXfx^QXHq}97X:", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("q4;?.`y}B18", false);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus("i", false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "";
      int int0 = 11;
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "", 11);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("", "", stackTraceElement0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[4] = stackTraceElement0;
      stackTraceElementArray0[5] = stackTraceElement0;
      applicationException0.setStackTrace(stackTraceElementArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "critcal.error.unknown");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("", (Object) "", (Object) fileSystemHandling0, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      objectArray0[8] = object7;
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = object2;
      objectArray1[1] = object4;
      List list0 = MessageFormatter.buildList(objectArray1);
      assertEquals(2, list0.size());
      
      Object[] objectArray2 = new Object[0];
      List list1 = MessageFormatter.buildList(objectArray2);
      assertFalse(list1.equals((Object)list0));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      byte byte0 = (byte)11;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      byte byte0 = (byte)11;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("q", "q", "q", 11);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("q", "q", stackTraceElement0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      applicationException0.toString();
      stackTraceElementArray0[4] = stackTraceElement0;
      stackTraceElementArray0[5] = stackTraceElement0;
      applicationException0.setStackTrace(stackTraceElementArray0);
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      StackTraceElement stackTraceElement1 = new StackTraceElement("q", "q", "q", 11);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[7];
      stackTraceElementArray1[5] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("q", "q", "q", 11);
      try { 
        messageFormatter0.getMessage("org.evosuite.runtime.mock.java.lang.MockThrowable: q", (Object[]) stackTraceElementArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      byte byte0 = (byte)11;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("i");
      try { 
        messageFormatter0.initializeResourceBundle(list1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.setPackageAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus("i", true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("i", "/Bw0&`7,mmKr_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.clearAssertionStatus();
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus((String) null, false);
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setClassAssertionStatus("i", true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.setPackageAssertionStatus("i", true);
      classLoader0.setPackageAssertionStatus("i", false);
      classLoader0.setClassAssertionStatus("i", true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("i", "/Bw0&`7,mmKr_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("r,U_:4_sU", "r,U_:4_sU", "r,U_:4_sU", 19);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement stackTraceElement1 = new StackTraceElement("r,U_:4_sU", "r,U_:4_sU", "r,U_:4_sU", 19);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[10];
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("Da 8r8;HsS.h?", "fL5(T]GS[S~EbE[!1&", (String) null, 5);
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("h'] bVc\"R9]", (Object[]) stackTraceElementArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("Quit", (Object) "Quit", object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("/");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-2093796554);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-2093796554));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable("resources.messages.standard", mockThrowable0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
