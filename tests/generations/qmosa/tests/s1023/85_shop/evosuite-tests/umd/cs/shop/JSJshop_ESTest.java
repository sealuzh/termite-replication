/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:42:58 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.HeadlessException;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DropTarget;
import java.awt.event.ContainerListener;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.net.Proxy;
import java.net.URISyntaxException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.text.AttributedCharacterIterator;
import javax.swing.JApplet;
import javax.swing.JLayeredPane;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      Charset charset1 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(6);
      Charset.defaultCharset();
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)40;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-65);
      byteArray0[8] = (byte)123;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      CharBuffer charBuffer1 = charset1.decode(byteBuffer0);
      ByteBuffer.allocate(6);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer1);
      charset1.encode(charBuffer0);
      charset1.decode(byteBuffer1);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.coma = 42;
      JSJshopVars.slash = (int) (byte)3;
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[5];
      charset0.aliases();
      charArray0[0] = 'k';
      Charset charset1 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(6);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      charArray0[2] = '\u0086';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-65);
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)58;
      byteArray0[6] = (byte) (-28);
      byteArray0[7] = (byte) (-65);
      byteArray0[8] = (byte)87;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      charArray0[3] = ':';
      charArray0[4] = 'k';
      CharBuffer charBuffer1 = charset1.decode(byteBuffer0);
      ByteBuffer.allocate(6);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer1);
      charset1.encode(charBuffer0);
      charset1.decode(byteBuffer1);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[5];
      charset0.aliases();
      charArray0[0] = 'k';
      Charset.defaultCharset();
      charArray0[2] = '\u0086';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)43;
      byteArray0[2] = (byte) (-65);
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)36;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-65);
      byteArray0[8] = (byte)123;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      charArray0[3] = ':';
      charArray0[4] = 'k';
      ByteBuffer.allocate(6);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("l\\0");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "` ");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "l\\0";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("l\u0000", "l\u0000");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[5];
      charset0.aliases();
      charArray0[0] = 'k';
      Charset charset1 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(6);
      charset0.decode(byteBuffer0);
      charArray0[2] = '\u0086';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      CharBuffer charBuffer0 = charset1.decode(byteBuffer0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)50;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Charset charset2 = Charset.defaultCharset();
      CharBuffer charBuffer1 = charset2.decode(byteBuffer0);
      ByteBuffer.allocate(60);
      charset0.encode(charBuffer1);
      charset0.encode(charBuffer1);
      ByteBuffer byteBuffer1 = charset2.encode(charBuffer0);
      charset2.decode(byteBuffer1);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "' ";
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("? ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " ");
      streamTokenizer0.sval = "? ";
      jSJshop0.parserFile("? ");
      try { 
        MockURI.URI("? ");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in query at index 1: ? 
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "' ";
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("? ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " ");
      String string1 = "? ";
      streamTokenizer0.sval = "? ";
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte) (-97);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      jSJshop0.parserFile("? ");
      try { 
        MockURI.URI("? ");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in query at index 1: ? 
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      int int0 = new Integer((-4));
      boolean boolean0 = JSJshop.corbaToHicap;
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getBufferedReader("error in readfile() : ", (String) null, (JApplet) null);
      JApplet jApplet1 = null;
      try {
        jApplet1 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("4x", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Charset.defaultCharset();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7y39]I5i1LG?6GS");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "JY}<z@+eFv28sZh");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("7y39]I5i1LG?6GS", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "[oy_^s!nb8";
      StringReader stringReader0 = new StringReader("[oy_^s!nb8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      streamTokenizer0.sval = "[oy_^s!nb8";
      boolean boolean0 = JSJshop.corbaToHicap;
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[5];
      ByteBuffer.allocate('s');
      charArray0[3] = ':';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.chars();
      charBuffer0.rewind();
      charBuffer0.position(2);
      CharBuffer.wrap(charArray0);
      charBuffer0.flip();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(97);
      byteBuffer0.putInt(97);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte)5;
      byteArray0[0] = (byte) (-108);
      byteArray0[3] = (byte)122;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte) (-61);
      byteArray0[7] = (byte) (-13);
      byteArray0[8] = (byte)76;
      byteBuffer0.get(byteArray0);
      byteBuffer0.duplicate();
      byteBuffer0.order((ByteOrder) null);
      byteBuffer0.getFloat();
      byteBuffer0.getLong(0);
      byteBuffer0.putShort((short)4576);
      byteBuffer0.asCharBuffer();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "P;we=l?14HY";
      stringArray0[2] = "l\u0000";
      stringArray0[3] = "l\u0000";
      JSJshop.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "[Nk,?LO8@o!Non";
      stringArray0[2] = "zkxzx";
      JSJshop.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "nOxLixY~B/#";
      // Undeclared exception!
      try { 
        JSJshop.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "all";
      JSJshop.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      String string0 = "6-OQ#";
      JSJshop jSJshop0 = new JSJshop();
      String string1 = "";
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("6-OQ#", "", (JApplet) null);
      DataFlavor dataFlavor0 = new DataFlavor();
      JSpinner jSpinner0 = new JSpinner();
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jSpinner0.addContainerListener((ContainerListener) null);
      jSpinner0.firePropertyChange("", '>', '&');
      jSpinner0.firePropertyChange("6-OQ#", '>', '>');
      // Undeclared exception!
      try { 
        jSpinner0.remove(3452);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3452
         //
         verifyException("java.awt.Container", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("l\\0");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "l\\0";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("l\u0000", "l\u0000");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "' ";
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("? ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      String string1 = "? ";
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "' ";
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      String string1 = "? ";
      streamTokenizer0.sval = "? ";
      jSJshop0.parserFile("? ");
      try { 
        MockURI.URI("? ");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in query at index 1: ? 
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      DataFlavor dataFlavor0 = new DataFlavor();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner jSpinner1 = new JSpinner();
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jSpinner1.addContainerListener((ContainerListener) null);
      jSpinner1.firePropertyChange("gpeo^{2sp}y ", '>', '>');
      ByteBuffer.allocate(905);
      JSJshop jSJshop1 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop1.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      DataFlavor dataFlavor0 = new DataFlavor();
      JSpinner jSpinner0 = new JSpinner();
      jSJshop0.prob();
      System.setCurrentTimeMillis(473L);
      String string0 = null;
      try { 
        MockURI.URI(" ", "o~@J*>95;>KFv~Mt3", "JH", "aX/reOFDLss+p9");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI:  ://o~@J*>95;>KFv~Mt3JH#aX/reOFDLss+p9
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JApplet jApplet0 = JSJshop.applet;
      DataFlavor dataFlavor0 = new DataFlavor();
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopNode jSJshopNode0 = jSJshop0.getTree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Returning successfully from find-plan : No more tasks to plan";
      stringArray0[1] = "`ETJ,(`2.;Xs";
      stringArray0[2] = ";[a-$^pg5ln";
      stringArray0[3] = "{Wf<kdb,fP~";
      stringArray0[4] = "] ";
      stringArray0[5] = "+g>n~B;J";
      stringArray0[6] = "";
      JSJshop.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "l\\0";
      String string1 = "B6LTW.=b?BEL6=3?";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("l\u0000", "B6LTW.=b?BEL6=3?");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ttype = (-4942);
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop((String) null, "Q{|(6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("l\\0");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "l\\0";
      String string1 = "B6LTW.=b?BEL6=3?";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("l\u0000", "B6LTW.=b?BEL6=3?");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[2];
      String string0 = "6-OQ#";
      stringArray0[0] = "6-OQ#";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      System.setCurrentTimeMillis((-49L));
      jSJshop0.tree();
      DataFlavor dataFlavor0 = new DataFlavor();
      Clipboard clipboard0 = new Clipboard("o>xa");
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      assertEquals(Proxy.Type.HTTP, proxy_Type0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      DataFlavor dataFlavor0 = new DataFlavor();
      JSpinner jSpinner0 = new JSpinner();
      System.setCurrentTimeMillis(473L);
      jSJshop0.sol();
      String string0 = null;
      try { 
        MockURI.URI(" ", "o~@J*>95;>KFv~Mt3", "JH", "aX/reOFDLss+p9");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI:  ://o~@J*>95;>KFv~Mt3JH#aX/reOFDLss+p9
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "' ";
      StringReader stringReader0 = new StringReader("' ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      streamTokenizer0.sval = "' ";
      boolean boolean0 = JSJshop.corbaToHicap;
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      DataFlavor dataFlavor0 = new DataFlavor();
      JSpinner jSpinner0 = new JSpinner();
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("$J8V}'wC 6)*d3~R", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      JSJshop jSJshop1 = new JSJshop();
      jSJshop1.getAddList();
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      DataFlavor dataFlavor0 = new DataFlavor();
      JSpinner jSpinner0 = new JSpinner();
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jSpinner0.addContainerListener((ContainerListener) null);
      jSpinner0.firePropertyChange("gpeo^{2sp}y ", '>', '>');
      JTextArea jTextArea0 = new JTextArea();
      NumberFormatter numberFormatter0 = new NumberFormatter();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(numberFormatter0, numberFormatter0);
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      JSpinner jSpinner1 = new JSpinner();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Charset.defaultCharset();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("7y39]I5i1LG?6GS", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }
}
