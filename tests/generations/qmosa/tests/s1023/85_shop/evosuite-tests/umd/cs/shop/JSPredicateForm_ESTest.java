/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:32:16 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.854009984229509
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4dBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.ttype = (-13);
      streamTokenizer0.wordChars((-13), (-13));
      streamTokenizer0.whitespaceChars((-13), (-13));
      jSTerm0.add((Object) jSTerm0);
      streamTokenizer0.wordChars((-13), (-13));
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      streamTokenizer0.nval = (double) (-13);
      streamTokenizer0.wordChars(59, (-13));
      streamTokenizer0.wordChars((-13), (-13));
      streamTokenizer0.ordinaryChar((-13));
      streamTokenizer0.wordChars(621, 621);
      jSTerm0.makeFunction();
      streamTokenizer0.wordChars(621, (-13));
      streamTokenizer0.wordChars((-13), (-13));
      jSPredicateForm1.matches((JSPredicateForm) jSTerm0);
      // Undeclared exception!
      try { 
        jSPredicateForm1.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Jj.s>V ");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      long long0 = (-26L);
      char[] charArray0 = new char[3];
      charArray0[0] = '';
      charArray0[1] = ',';
      char char0 = '/';
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(",pUR`9l67x!L0CF");
      unaryOperator0.apply("8l.0");
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.add((Object) ",pUR`9l67x!L0CF");
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.add((Object) "vhI43*}n,ML+9");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(",pUR`9l67x!L0CF");
      unaryOperator0.apply("8l.0");
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.add((Object) ",pUR`9l67x!L0CF");
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.add((Object) "vh2I43*}n,vML+9");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.234679199787727
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(16L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis((-988L));
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(2174L);
      System.setCurrentTimeMillis(2174L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(2174L);
      System.setCurrentTimeMillis(1L);
      StringReader stringReader0 = new StringReader("(jsiK)`Y");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6858900691152602
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jiiK)");
      System.setCurrentTimeMillis(455L);
      System.setCurrentTimeMillis(455L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(693L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1596L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1335L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(693L);
      System.setCurrentTimeMillis(1L);
      StringReader stringReader0 = new StringReader("(jiiK)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
      assertEquals(10, jSPredicateForm0.capacity());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("()iK`Y");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.014983339002437
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4dBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      streamTokenizer0.whitespaceChars(32, 32);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.quoteChar((-13));
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.whitespaceChars(32, 32);
      jSTerm0.add((Object) jSTerm0);
      streamTokenizer0.wordChars(32, 32);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSJshopVars.semicolon = (-13);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.quoteChar(621);
      streamTokenizer0.wordChars(621, 32);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.quoteChar(32);
      System.setCurrentTimeMillis(32);
      System.setCurrentTimeMillis(32);
      System.setCurrentTimeMillis(32);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm1));
      
      System.setCurrentTimeMillis((-13));
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("[SOY, [SOY]]", jSPredicateForm0.toString());
      assertEquals("(SOYSOY )", stringBuffer0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1064801542156266
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      JSJshopVars.whiteSpace = (-2820);
      jSPredicateForm0.addElement((Object) null);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2859L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(2195L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9285988229508346
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4dBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.ttype = (-13);
      streamTokenizer0.wordChars((-13), (-13));
      streamTokenizer0.whitespaceChars((-13), (-13));
      jSTerm0.add((Object) jSTerm0);
      streamTokenizer0.wordChars((-13), (-13));
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.nval = (double) (-13);
      streamTokenizer0.wordChars(59, (-13));
      streamTokenizer0.wordChars((-13), (-13));
      streamTokenizer0.ordinaryChar((-13));
      streamTokenizer0.wordChars(621, 621);
      streamTokenizer0.wordChars(621, (-13));
      streamTokenizer0.wordChars((-13), (-13));
      streamTokenizer0.quoteChar((-13));
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm0));
      
      JSJshopVars.slash = (-13);
      boolean boolean0 = jSPredicateForm1.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9285988229508346
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4dBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.ttype = streamTokenizer0.ttype;
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.whitespaceChars(32, 32);
      jSTerm0.add((Object) jSTerm0);
      streamTokenizer0.wordChars(32, 32);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.nval = (double) 32;
      streamTokenizer0.wordChars(59, 32);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.quoteChar(32);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      assertTrue(jSPredicateForm1.equals((Object)jSPredicateForm0));
      
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm2, jSSubstitution0);
      assertFalse(jSSubstitution1.fail());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(!j'wGa`:");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.mark(2742);
      streamTokenizer0.resetSyntax();
      stringReader0.ready();
      stringReader0.markSupported();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9297061990576545
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(!jwGa`:");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "(`sK`vo";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(`sK`vo");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "(jsK`Y";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(jsK`Y");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "(JjsK`vo";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(JjsK`vo");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.whitespaceChars(32, 32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.nval = 0.0;
      streamTokenizer0.resetSyntax();
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.commentChar((-3));
      streamTokenizer0.parseNumbers();
      streamTokenizer0.wordChars(32, 32);
      jSTerm0.add((Object) null);
      stringReader0.skip(32);
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.whitespaceChars(32, 32);
      streamTokenizer0.lowerCaseMode(true);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      streamTokenizer0.whitespaceChars(32, 32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.commentChar((-3));
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) jSTerm1);
      streamTokenizer0.wordChars(32, 32);
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.whitespaceChars(32, 32);
      streamTokenizer0.lowerCaseMode(false);
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      streamTokenizer0.wordChars(32, 40);
      System.setCurrentTimeMillis(32);
      streamTokenizer0.wordChars((-2204), 32);
      streamTokenizer0.wordChars((-3), 32);
      System.setCurrentTimeMillis(32);
      System.setCurrentTimeMillis(32);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Jjs>vo");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip(0L);
      stringReader0.ready();
      stringReader0.markSupported();
      stringReader0.close();
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5915386279677008
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ik&9+v%r#c<_W");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.lastElement();
      JSTerm jSTerm1 = new JSTerm();
      Integer integer0 = new Integer((-1096945514));
      jSTerm1.add((Object) integer0);
      jSTerm0.add((Object) jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.containsAll(jSSubstitution0);
      jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSTerm0.firstElement();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.clonePF();
      // Undeclared exception!
      try { 
        jSTerm1.matches((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars(32, 32);
      streamTokenizer0.ordinaryChar((-4069));
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.whitespaceChars(32, 32);
      int int0 = (-273);
      streamTokenizer0.ordinaryChar((-273));
      streamTokenizer0.resetSyntax();
      streamTokenizer0.quoteChar(32);
      streamTokenizer0.ordinaryChar(32);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.parseNumbers();
      streamTokenizer0.wordChars((-273), (-2042));
      streamTokenizer0.pushBack();
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.whitespaceChars(59, 59);
      jSTerm0.add((Object) null);
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.pushBack();
      streamTokenizer0.wordChars((-2042), (-273));
      streamTokenizer0.whitespaceChars((-273), (-273));
      streamTokenizer0.parseNumbers();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3706001575399114
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      JSJshopVars.leftBrac = (-1611522464);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2018L));
      System.setCurrentTimeMillis((-1611522464));
      StringReader stringReader0 = new StringReader("(jsiK)`Y");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.ordinaryChars((-2), (-2));
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.whitespaceChars((-2), (-2));
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.ordinaryChar((-2));
      streamTokenizer0.wordChars(758, (-213));
      streamTokenizer0.resetSyntax();
      streamTokenizer0.quoteChar((-2));
      streamTokenizer0.ordinaryChar((-2));
      streamTokenizer0.commentChar((-2));
      streamTokenizer0.parseNumbers();
      streamTokenizer0.wordChars((-2), (-2));
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.pushBack();
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.whitespaceChars((-2), (-2));
      streamTokenizer0.lowerCaseMode(true);
      jSTerm0.add((Object) stringReader0);
      streamTokenizer0.commentChar(758);
      streamTokenizer0.slashStarComments(false);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Jjs>vo");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.close();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1064801542156266
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      jSPredicateForm0.addElement("(jsiK)`Y");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(16L);
      long long0 = 1L;
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      jSPredicateForm0.iterator();
      System.setCurrentTimeMillis((-988L));
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis(1L);
      long long1 = 2174L;
      System.setCurrentTimeMillis(2174L);
      System.setCurrentTimeMillis(2174L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("SOY 4JBX4j");
      stringReader1.markSupported();
      stringReader1.skip(0L);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      StringReader stringReader2 = new StringReader("rl&WNbHiz.<nd");
      StringReader stringReader3 = new StringReader("> ");
      StringReader stringReader4 = new StringReader("?Qd;eBV2oz(5%>G");
      StringReader stringReader5 = new StringReader("rl&WNbHiz.<nd");
      StringReader stringReader6 = new StringReader("SOY 4JBX4j");
      StringReader stringReader7 = new StringReader("s7iC0T");
      StringReader stringReader8 = new StringReader(";UynDCr #|");
      StringReader stringReader9 = new StringReader(";UynDCr #|");
      assertFalse(stringReader9.equals((Object)stringReader5));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("SOY 4JBX4j");
      stringReader0.markSupported();
      stringReader1.skip(0L);
      stringReader1.mark(32);
      stringReader1.reset();
      stringReader1.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      StringReader stringReader2 = new StringReader("rl&WNbHiz.<nd");
      StringReader stringReader3 = new StringReader("rl&WNbHiz.<nd");
      StringReader stringReader4 = new StringReader("SOY 4JBX4j");
      StringReader stringReader5 = new StringReader("uf{O/XtahOfJPix*");
      StringReader stringReader6 = new StringReader("SOY 4JBX4j");
      StringReader stringReader7 = new StringReader("4(");
      StringReader stringReader8 = new StringReader("4(");
      StringReader stringReader9 = new StringReader("` ");
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.matches((JSPredicateForm) jSTerm1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      JSJshopVars.whiteSpace = (-1794425313);
      System.setCurrentTimeMillis((-1L));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "SOu 4JBXX";
      StringReader stringReader0 = new StringReader("SOu 4JBXX");
      int int0 = 449;
      stringReader0.mark(449);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      int int0 = (-1881818940);
      streamTokenizer0.quoteChar((-1881818940));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.add((Object) jSTerm0);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      int int1 = (-144);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-144));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply("8.0");
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.add((Object) null);
      jSTerm0.add((Object) "vh2w43*.n,vL+9");
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "SOY 4JBX4j";
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("SOY 4JBX4j");
      stringReader0.markSupported();
      stringReader1.skip((-22L));
      stringReader1.reset();
      stringReader1.mark(32);
      stringReader1.reset();
      stringReader1.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Integer integer0 = new Integer(297);
      jSTerm0.add((Object) integer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ik&9$+v%<_fW");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3263269370134367
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(21L);
      System.setCurrentTimeMillis(2859L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(2195L);
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm1);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[9];
      objectArray0[2] = (Object) comparator0;
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("RYb FJBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.add((Object) "RYb FJBX4j");
      jSTerm1.firstElement();
      streamTokenizer0.commentChar(5364);
      JSSubstitution jSSubstitution0 = null;
      // Undeclared exception!
      try { 
        jSTerm1.applySubstitutionPF((JSSubstitution) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3263269370134367
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      jSTerm0.iterator();
      System.setCurrentTimeMillis(2859L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(2195L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("RYb FJBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.add((Object) "RYb FJBX4j");
      jSTerm1.firstElement();
      streamTokenizer0.ordinaryChars(5364, 5364);
      streamTokenizer0.commentChar(5364);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = null;
      // Undeclared exception!
      try { 
        jSTerm1.applySubstitutionPF((JSSubstitution) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "SOY 4JBX4j";
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) "SOY 4JBX4j");
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3591606464165051
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.iterator();
      System.setCurrentTimeMillis(2859L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(2195L);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm("(jsiK)`Y");
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm1);
      assertFalse(jSSubstitution0.fail());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.removeElement(jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ik&9$+v%<_fW");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.lastElement();
      jSTerm0.add((Object) "%%%");
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement(jSTerm0);
      jSPredicateForm0.parallelStream();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.leftPar = (-1597);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      assertTrue(jSSubstitution6.equals((Object)jSSubstitution1));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Object[] objectArray0 = new Object[26];
      objectArray0[0] = (Object) "(JjsK`vo";
      objectArray0[1] = (Object) "(JjsK`vo";
      objectArray0[2] = (Object) "(JjsK`vo";
      objectArray0[3] = (Object) jSPredicateForm0;
      jSPredicateForm0.addElement((Object) null);
      objectArray0[4] = (Object) "(JjsK`vo";
      objectArray0[5] = (Object) jSPredicateForm0;
      objectArray0[6] = (Object) "(JjsK`vo";
      jSPredicateForm0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("", stringBuffer0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "SOY 4JBX4j";
      StringReader stringReader0 = new StringReader("SOY 4JBX4j");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.quoteChar(714);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.nextToken();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm1.equals((JSPredicateForm) jSTerm2);
      StringReader stringReader1 = new StringReader("SOY 4JBX4j");
      StringReader stringReader2 = new StringReader("SOY 4JBX4j");
      StringReader stringReader3 = new StringReader("SOY 4JBX4j");
      StringReader stringReader4 = new StringReader("SOY 4JBX4j");
      StringReader stringReader5 = new StringReader("Sd:zoP*PJjw&MpKDm");
      StringReader stringReader6 = null;
      try {
        stringReader6 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2346791997877273
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jiiK)");
      System.setCurrentTimeMillis(455L);
      System.setCurrentTimeMillis(455L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(693L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1596L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1335L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(693L);
      System.setCurrentTimeMillis(1L);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.clear();
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1064801542156266
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jiiK)");
      System.setCurrentTimeMillis(455L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-4L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(693L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1335L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(693L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(6, stringBuffer0.length());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9297061990576545
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(!jAG:a");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution3.remove((Object) "(");
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSSubstitution3.add((Object) null);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "gb");
      CharBuffer charBuffer0 = CharBuffer.allocate(383);
      CharBuffer charBuffer1 = CharBuffer.allocate(383);
      jSPredicateForm0.print();
      CharBuffer charBuffer2 = charBuffer1.compact();
      charBuffer2.flip();
      charBuffer0.duplicate();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charBuffer3.compact();
      char char0 = '\"';
      // Undeclared exception!
      try { 
        charBuffer2.put(383, '\"');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      CharBuffer.allocate(383);
      CharBuffer charBuffer0 = CharBuffer.allocate(383);
      CharBuffer.allocate(61);
      jSPredicateForm0.print();
      charBuffer0.compact();
      CharBuffer.allocate(383);
      CharBuffer.allocate(383);
      int int0 = 934;
      CharBuffer.allocate(1715);
      char[] charArray0 = new char[1];
      CharBuffer.wrap(charArray0);
      int int1 = 0;
      int int2 = (-1077903613);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1077903613));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator0.apply(",pUR`9l67x!L0CF");
      unaryOperator0.apply("8l.0");
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.add((Object) "vh2I43*}n,vML+9");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.2346791997877273
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      JSJshopVars.leftBrac = (-1611522464);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-895L));
      System.setCurrentTimeMillis((-895L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) "f7[L5)9\"t>");
      jSPredicateForm0.add((Object) jSTerm1);
      JSJshopVars.plus = (-1083);
      jSPredicateForm0.insertElementAt("f7[L5)9\"t>", 0);
      jSPredicateForm0.print();
      assertEquals(10, jSPredicateForm0.capacity());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Function<Object, Integer> function2 = unaryOperator0.compose((Function<? super Object, ? extends Integer>) function1);
      function2.apply(unaryOperator1);
      unaryOperator0.compose((Function<? super JSTerm, ? extends Integer>) function2);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution3.cloneS();
      jSSubstitution3.remove((Object) "(");
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSSubstitution3.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "(Jjs>vo";
      StringReader stringReader0 = new StringReader("(Jjs>vo");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.skip(0L);
      int int0 = (-4440);
      stringReader0.ready();
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.clear();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.2346791997877273
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(21L);
      System.setCurrentTimeMillis(2859L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(2195L);
      System.setCurrentTimeMillis(0L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2346791997877273
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(jsiK)`Y");
      assertFalse(jSPredicateForm0.isEmpty());
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1875L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(21L);
      System.setCurrentTimeMillis(2859L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2696L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(471L);
      System.setCurrentTimeMillis(2195L);
      System.setCurrentTimeMillis(0L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.clear();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      System.setCurrentTimeMillis(2303L);
      System.setCurrentTimeMillis(2303L);
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis((-1856L));
      System.setCurrentTimeMillis((-1611522464));
      System.setCurrentTimeMillis(2303L);
      System.setCurrentTimeMillis((-874L));
      System.setCurrentTimeMillis(2303L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2118L);
      System.setCurrentTimeMillis((-1351L));
      System.setCurrentTimeMillis((-1611522464));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("%%%");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function0);
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Integer> function2 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function3 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function2);
      Function<Object, Integer> function4 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function3);
      unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function4);
      Function.identity();
      unaryOperator0.compose((Function<? super JSTerm, ? extends String>) function1);
      unaryOperator0.apply("8.0");
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.add((Object) null);
      jSTerm0.add((Object) "8.0");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
