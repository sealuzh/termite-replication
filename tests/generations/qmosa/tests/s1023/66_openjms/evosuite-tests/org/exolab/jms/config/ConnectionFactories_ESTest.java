/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 07:02:41 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o=.exolb.c^storyutil.LocalCWnfiguratin");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j-]|mA&t");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j-]|mA&t");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cUg_*?{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j-]|mA&t");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cg_*?{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o=.exolb.c^storyutil.LocalCWnfiguratin");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0gAa&MdV)z:;DX{");
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.startPrefixMapping("W:IopkDsP\"B~Y*C-", "W:IopkDsP\"B~Y*C-");
      SAXParseException sAXParseException0 = new SAXParseException("W:IopkDsP\"B~Y*C-", "W:IopkDsP\"B~Y*C-", "W:IopkDsP\"B~Y*C-", (-249), (-249));
      xMLFilterImpl2.fatalError(sAXParseException0);
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl4.endElement("<", "<", "<");
      char[] charArray0 = new char[1];
      xMLFilterImpl13.characters(charArray0, (-249), (-249));
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      xMLFilterImpl7.resolveEntity("2QT", "2QT");
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      xMLFilterImpl13.getParent();
      xMLFilterImpl4.resolveEntity("el`N@`''(lb&/Zf", "el`N@`''(lb&/Zf");
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl9);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[4];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cjg_?J{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      XATopicConnectionFactory xATopicConnectionFactory1 = connectionFactories0.getXATopicConnectionFactory(0);
      assertSame(xATopicConnectionFactory1, xATopicConnectionFactory0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl2.setEncoding((String) null);
      locator2Impl0.setEncoding(";BW");
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl7);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl4);
      locatorImpl1.getLineNumber();
      locator2Impl4.setLineNumber(645);
      locator2Impl2.setEncoding("6fw");
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      locatorImpl2.setSystemId("Gz)| %K");
      Locator2Impl locator2Impl10 = new Locator2Impl(locatorImpl2);
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locatorImpl2.setLineNumber(38);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[5];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.enumerateXATopicConnectionFactory();
      connectionFactories0.getConnectionFactory(0);
      connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
      assertEquals(5, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, locatorImpl0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      locator2Impl3.setEncoding("8OgW%z~wIk|d2[");
      locatorImpl3.setLineNumber(0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl3);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl2);
      LocatorImpl locatorImpl5 = new LocatorImpl();
      locator2Impl5.setLineNumber(0);
      locator2Impl3.setColumnNumber(0);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = null;
      xAQueueConnectionFactoryArray0[1] = null;
      xAQueueConnectionFactoryArray0[2] = null;
      xAQueueConnectionFactoryArray0[3] = null;
      xAQueueConnectionFactoryArray0[4] = null;
      xAQueueConnectionFactoryArray0[5] = null;
      xAQueueConnectionFactoryArray0[6] = null;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
      assertEquals(7, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      XAConnectionFactory xAConnectionFactory1 = connectionFactories0.getXAConnectionFactory(0);
      assertNull(xAConnectionFactory1.getName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o=.exolb.c^storyutil.LocalCWnfiguratin");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "c[g_*?{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o=.exolb.c^storyutil.LocalCWnfiguratin");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0gAa&MdV)z:;DX{");
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(7, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.enumerateXATopicConnectionFactory();
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      Reader reader0 = null;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      int int0 = 6;
      try { 
        connectionFactories0.getXATopicConnectionFactory(6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 87;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      xAQueueConnectionFactory0.setName("9bm");
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      int int1 = (-2726);
      try { 
        connectionFactories0.getConnectionFactory((-2726));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UnicodeBig");
      byteArray0[1] = (byte)103;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertEquals(5, connectionFactories0.getTopicConnectionFactoryCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      connectionFactories0.setTopicConnectionFactory(0, (TopicConnectionFactory) null);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.mark(0);
      InputSource inputSource0 = new InputSource(dataInputStream0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      try { 
        dataInputStream0.readDouble();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(6, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ntjf4f}[kI!d^1Ph_3");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      xATopicConnectionFactory0.setName("q*");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q*");
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactoryCount();
      int int0 = 2157;
      connectionFactories0.getXATopicConnectionFactoryCount();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(650);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      connectionFactories0.getXATopicConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(1, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter2.setDocumentHandler(parserAdapter1);
      parserAdapter0.startDocument();
      xMLReaderAdapter1.startDocument();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter2);
      HandlerBase handlerBase0 = new HandlerBase();
      parserAdapter2.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      handlerBase0.startDocument();
      char[] charArray0 = new char[0];
      parserAdapter0.characters(charArray0, (-201), (-201));
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter2);
      HandlerBase handlerBase1 = new HandlerBase();
      MockException mockException0 = new MockException((Throwable) null);
      MockException mockException1 = new MockException("", mockException0);
      parserAdapter4.getErrorHandler();
      SAXParseException sAXParseException0 = new SAXParseException("hWtG>,", "This node can not handle namespace", "9HwhkObRS,#$", (-1), 1964, mockException1);
      handlerBase1.warning(sAXParseException0);
      parserAdapter0.endDocument();
      handlerBase1.startDocument();
      ParserAdapter parserAdapter5 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter4.getEntityResolver();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7yQznkx'*_LX{QIT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java:");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java:");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wevn;!a");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(3, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m_]))Z?X");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m_]))Z?X");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m_]))Z?X");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      int int0 = 0;
      connectionFactories0.addXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('b');
      connectionFactories0.marshal((Writer) stringWriter1);
      connectionFactories0.isValid();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[8];
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, (XAConnectionFactory) null);
      try { 
        connectionFactories0.getConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z=kA:>kVKl-_\"a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z=kA:>kVKl-_\"a");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z=kA:>kVKl-_\"a");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[2];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory1;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(1, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter1.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter0.skippedEntity("_A\"");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      parserAdapter0.setContentHandler(xMLReaderAdapter3);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter4.endDocument();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      char[] charArray0 = new char[1];
      charArray0[0] = '\u0091';
      xMLReaderAdapter5.characters(charArray0, (-1), 3376);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter();
      xMLReaderAdapter8.startDocument();
      parserAdapter2.getEntityResolver();
      xMLReaderAdapter5.startDocument();
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      xMLReaderAdapter12.skippedEntity("null arguments to constructor not accepted if the 'argTypes' array is null.");
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter5.setDocumentHandler(parserAdapter2);
      xMLReaderAdapter8.startDocument();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      try { 
        connectionFactories0.setQueueConnectionFactory(3376, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter1.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter0.skippedEntity("_A\"");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      parserAdapter0.setContentHandler(xMLReaderAdapter3);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter4.endDocument();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      char[] charArray0 = new char[1];
      charArray0[0] = '\u0091';
      xMLReaderAdapter5.characters(charArray0, (-1), 3376);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter();
      xMLReaderAdapter8.startDocument();
      parserAdapter2.getEntityResolver();
      xMLReaderAdapter5.startDocument();
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      xMLReaderAdapter12.skippedEntity("null arguments to constructor not accepted if the 'argTypes' array is null.");
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter5.setDocumentHandler(parserAdapter2);
      xMLReaderAdapter8.startDocument();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      try { 
        connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException("OZDn", locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl1.setLineNumber((-1152));
      Locator2Impl locator2Impl4 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locatorImpl3.setColumnNumber((-1152));
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl6);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl6);
      locator2Impl8.setLineNumber((-1722));
      LocatorImpl locatorImpl8 = new LocatorImpl();
      locator2Impl8.getLineNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl9 = new LocatorImpl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl12.setLineNumber((-1722));
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setQueueConnectionFactory((-750), (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter1.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter0.skippedEntity("_A\"");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      parserAdapter0.setContentHandler(xMLReaderAdapter3);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter4.endDocument();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter();
      xMLReaderAdapter8.startDocument();
      parserAdapter2.getEntityResolver();
      xMLReaderAdapter5.startDocument();
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      xMLReaderAdapter12.skippedEntity("null arguments to constructor not accepted if the 'argTypes' array is null.");
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter5.setDocumentHandler(parserAdapter2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cg_?J{5u");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]K&1F!JB1/V09v");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0gAa&MdV)[z:;DX{");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(1346, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1346, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xmg!plK");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      connectionFactories0.getXATopicConnectionFactory();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)25;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-29);
      byteArray0[6] = (byte)76;
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory((-2693), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2693, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locatorImpl2.getPublicId();
      LocatorImpl locatorImpl4 = new LocatorImpl();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl4);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl2);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl7 = new LocatorImpl();
      locator2Impl5.getLineNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      locatorImpl1.setLineNumber((-1));
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locatorImpl7);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl12.setEncoding("");
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl6);
      LocatorImpl locatorImpl9 = new LocatorImpl(locator2Impl12);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.setConnectionFactory((-183), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      int int0 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-816));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      parserAdapter0.getContentHandler();
      char[] charArray0 = new char[0];
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter0.processingInstruction("?\"+14n ", "7( _EL }h&G|)@NAY?");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter5.processingInstruction("C Hs;Fc.(", "Gm_(Ol!h9VTgkqz|");
      xMLReaderAdapter5.skippedEntity("w");
      xMLReaderAdapter7.skippedEntity("w");
      xMLReaderAdapter6.startDocument();
      xMLReaderAdapter7.startPrefixMapping("RV`[?PO/l;#>", "w");
      xMLReaderAdapter7.startDocument();
      xMLReaderAdapter7.processingInstruction("w", "w");
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter7);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter();
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter6);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(22, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 22, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter5);
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.processingInstruction("I{8|{u", "");
      parserAdapter1.setDTDHandler(handlerBase0);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter10);
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter(parserAdapter1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(3237, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3237, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      sequenceInputStream0.mark((-2861));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)38;
      sequenceInputStream0.read(byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)38;
      byteArray1[1] = (byte)38;
      byteArray1[2] = (byte)51;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte) (-39);
      sequenceInputStream0.read(byteArray1, (-2861), 33);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, (byte)38);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.mark((byte)51);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1);
      bufferedInputStream0.reset();
      bufferedInputStream1.skip(0L);
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream1);
      bufferedInputStream2.mark((byte)38);
      bufferedInputStream3.markSupported();
      bufferedInputStream3.mark((byte)38);
      bufferedInputStream3.markSupported();
      connectionFactories0.getQueueConnectionFactory();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      InputSource inputSource0 = new InputSource(bufferedInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream2);
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wevn;!a");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl0.getColumnNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.setEncoding("-");
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl4);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locator2Impl3.setLineNumber(0);
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl5 = new LocatorImpl();
      locatorImpl0.getLineNumber();
      locator2Impl3.getLineNumber();
      locatorImpl0.setLineNumber(27);
      locator2Impl1.setColumnNumber(0);
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl3.getSystemId();
      locator2Impl0.setLineNumber(27);
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      locator2Impl3.getPublicId();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl6 = new LocatorImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException("iA_~E3\"kR&a", locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl1.setLineNumber((-1152));
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl3);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locatorImpl3.setColumnNumber((-1152));
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl2);
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl3);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      LocatorImpl locatorImpl7 = new LocatorImpl();
      locator2Impl7.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      locator2Impl1.setLineNumber((-1552));
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl9 = new LocatorImpl();
      LocatorImpl locatorImpl10 = new LocatorImpl(locatorImpl9);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      TopicConnectionFactory[] topicConnectionFactoryArray1 = new TopicConnectionFactory[8];
      topicConnectionFactoryArray1[0] = topicConnectionFactory0;
      topicConnectionFactoryArray1[1] = topicConnectionFactory0;
      topicConnectionFactoryArray1[2] = topicConnectionFactory0;
      topicConnectionFactoryArray1[3] = topicConnectionFactory0;
      topicConnectionFactoryArray1[4] = topicConnectionFactory0;
      topicConnectionFactoryArray1[5] = topicConnectionFactory0;
      topicConnectionFactoryArray1[6] = topicConnectionFactory0;
      topicConnectionFactoryArray1[7] = topicConnectionFactory0;
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(1, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      ParserAdapter parserAdapter1 = null;
      try {
        parserAdapter1 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6120172700343436
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[23];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactoryArray0[4] = queueConnectionFactory0;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.isValid();
      connectionFactories0.getQueueConnectionFactoryCount();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(23, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl0.setXMLVersion("iA_~E3\"kR&a");
      locator2Impl0.setEncoding(";BW");
      locator2Impl2.setEncoding("iA_~E3\"kR&a");
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl7);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl4);
      locatorImpl1.getLineNumber();
      locator2Impl4.setLineNumber(645);
      locatorImpl1.getColumnNumber();
      locator2Impl2.setEncoding("6fw");
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      locatorImpl2.setSystemId((String) null);
      Locator2Impl locator2Impl10 = new Locator2Impl(locatorImpl2);
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locatorImpl2.setLineNumber(38);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[5];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      assertEquals(5, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte byte0 = (byte)66;
      byte byte1 = (byte) (-69);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte)15;
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, locatorImpl0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl3);
      locator2Impl2.getSystemId();
      LocatorImpl locatorImpl5 = new LocatorImpl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl8);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      locator2Impl4.setLineNumber(2179);
      locator2Impl5.setColumnNumber(742);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl11);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl1);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-1431), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, locatorImpl0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl2);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locatorImpl0.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locatorImpl2);
      locator2Impl9.setColumnNumber(8);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl4);
      Locator2Impl locator2Impl11 = new Locator2Impl(locatorImpl5);
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl11);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl6 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(8, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, locatorImpl0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl2);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locatorImpl0.setLineNumber(0);
      locator2Impl4.setColumnNumber((-423));
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locatorImpl2);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl4);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      connectionFactories0.clearXATopicConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      ConnectionFactory connectionFactory2 = new ConnectionFactory();
      connectionFactories0.clearXAConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException("Dn", locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl1.setLineNumber((-1152));
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl5);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locatorImpl2.setColumnNumber((-1152));
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl2);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl7);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      locator2Impl9.getLineNumber();
      locator2Impl1.getPublicId();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl7 = new LocatorImpl();
      locator2Impl1.setLineNumber((-1552));
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      LocatorImpl locatorImpl9 = new LocatorImpl(locatorImpl8);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl9.getDTDHandler();
      xMLFilterImpl9.getEntityResolver();
      xMLFilterImpl4.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      xMLFilterImpl7.getContentHandler();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      try { 
        connectionFactories0.setConnectionFactory(4, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(1034, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-1), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getEntityResolver();
      parserAdapter0.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      xMLReaderAdapter1.ignorableWhitespace(charArray0, 55296, 55296);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter1);
      parserAdapter1.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      char[] charArray1 = new char[0];
      parserAdapter1.ignorableWhitespace(charArray1, (-4646), (-1167));
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter7);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter();
      xMLReaderAdapter7.ignorableWhitespace((char[]) null, (-813), (-1167));
      xMLReaderAdapter3.characters((char[]) null, 66, (-3131));
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(995);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl0.getEntityResolver();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl10.setEntityResolver(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      xMLFilterImpl4.resolveEntity("", "");
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      xMLFilterImpl15.getParent();
      xMLFilterImpl3.resolveEntity("", "");
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl9);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      parserAdapter0.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter3.endDocument();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter5);
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'B';
      charArray0[1] = 't';
      charArray0[2] = 'Z';
      xMLReaderAdapter5.ignorableWhitespace(charArray0, 1, (-5486));
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter(parserAdapter3);
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      xMLReaderAdapter3.skippedEntity((String) null);
      XMLReaderAdapter xMLReaderAdapter13 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter13);
      xMLReaderAdapter4.setDocumentHandler(parserAdapter2);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter3);
      xMLReaderAdapter6.endElement("cp*Z)dcr-)[q", (String) null, "6Y%4@z\"+INY&~#pir;4");
      XMLReaderAdapter xMLReaderAdapter14 = new XMLReaderAdapter();
      parserAdapter2.startDocument();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      assertEquals(0, xAConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      try { 
        connectionFactories0.getConnectionFactory((-530));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1}%|j*_gUZP,1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((-1039), (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#'");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wevn;!a");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      xMLReaderAdapter5.setDocumentHandler(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      xMLReaderAdapter5.skippedEntity("w");
      xMLReaderAdapter1.processingInstruction("w", "w");
      parserAdapter0.startDocument();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter5.skippedEntity("w");
      xMLReaderAdapter7.skippedEntity("w");
      xMLReaderAdapter7.startDocument();
      xMLReaderAdapter7.processingInstruction("w", "w");
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter7);
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.startDocument();
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter5);
      parserAdapter4.setDTDHandler(handlerBase0);
      parserAdapter2.setErrorHandler(handlerBase0);
      parserAdapter2.setDTDHandler(handlerBase0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      parserAdapter1.getEntityResolver();
      xMLFilterImpl0.setEntityResolver((EntityResolver) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.endPrefixMapping("");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(parserAdapter1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addConnectionFactory((-1), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAQueueConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte) (-108);
      byteArray0[4] = (byte)15;
      byte byte0 = (byte) (-69);
      byteArray0[5] = (byte) (-69);
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.unparsedEntityDecl("", "", "", "");
      Locator2Impl locator2Impl0 = null;
      try {
        locator2Impl0 = new Locator2Impl((Locator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl0.resolveEntity("0_ig!/{JNAS8,ysk", "0_ig!/{JNAS8,ysk");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl4);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl6.resolveEntity("0_ig!/{JNAS8,ysk", "}p@vEZ b");
      try { 
        xMLFilterImpl3.setFeature("&amp;", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: &amp;
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-2861));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte) (-42);
      sequenceInputStream0.read(byteArray0, 339, 33);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 3271);
      bufferedInputStream1.mark(33);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      bufferedInputStream1.read(byteArray0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream0);
      bufferedInputStream1.markSupported();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      InputSource inputSource0 = new InputSource(sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      try { 
        connectionFactories0.getQueueConnectionFactory((int) (byte) (-42));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z=kA:>kVKl-_\"a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z=kA:>kVKl-_\"a");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z=kA:>kVKl-_\"a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WenJ;!a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WenJ;!a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7yQznkx'_:_LX{5kT");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3+%cX^\"r{;[EFDTusQ%");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(1559);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      InputSource inputSource0 = new InputSource(dataInputStream0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      try { 
        dataInputStream0.readDouble();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.startPrefixMapping("W:IopkDsP\"B~Y*C-", "W:IopkDsP\"B~Y*C-");
      SAXParseException sAXParseException0 = new SAXParseException("W:IopkDsP\"B~Y*C-", "W:IopkDsP\"B~Y*C-", "W:IopkDsP\"B~Y*C-", (-249), (-249));
      xMLFilterImpl2.fatalError(sAXParseException0);
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl4.endElement("<", "<", "<");
      char[] charArray0 = new char[0];
      xMLFilterImpl13.characters(charArray0, (-249), (-249));
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      xMLFilterImpl7.resolveEntity("2QT", "'iy@u?LCk.+4");
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      xMLFilterImpl13.getParent();
      xMLFilterImpl4.resolveEntity("el`N@`''(lb&/Zf", "el`N@`''(lb&/Zf");
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl9);
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o=.exolb.c^soryutil.LocalCWnfiguratin");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cUg_*?{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "c[g_*?{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o=.exolb.c^soryutil.LocalCWnfiguratin");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0gAa&MdV)z:;DX{");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-2861));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)38;
      sequenceInputStream0.read(byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)38;
      byteArray1[1] = (byte)38;
      byteArray1[2] = (byte)51;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte) (-42);
      sequenceInputStream0.read(byteArray1, (-2861), 33);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, (byte)38);
      bufferedInputStream0.mark((byte)51);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1);
      bufferedInputStream0.reset();
      bufferedInputStream1.skip(0L);
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream1);
      bufferedInputStream2.mark((byte)38);
      bufferedInputStream3.markSupported();
      bufferedInputStream3.mark((byte)38);
      bufferedInputStream3.markSupported();
      bufferedInputStream2.close();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.clearQueueConnectionFactory();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      InputSource inputSource0 = new InputSource(bufferedInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream2);
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactory0.setName("constructor arguments are only valid for attribute mapped fields.");
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      SAXParseException sAXParseException0 = new SAXParseException("", "", "", 0, 0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("file", locatorImpl0, sAXParseException0);
      SAXParseException sAXParseException2 = new SAXParseException("file", "", "", 0, 0, sAXParseException1);
      sAXParseException1.getLineNumber();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.fatalError(sAXParseException2);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setEntityResolver(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      assertEquals(0, connectionFactories1.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactory0.setName("!");
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      try { 
        connectionFactories0.setTopicConnectionFactory(127, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter7.skippedEntity("");
      xMLReaderAdapter7.processingInstruction("", "");
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter7);
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.startDocument();
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter5);
      parserAdapter4.setDTDHandler(handlerBase0);
      ParserAdapter parserAdapter5 = new ParserAdapter(xMLReaderAdapter5);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException("iA_~E3\"kR&a", locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl0.setXMLVersion("iA_~E3\"kR&a");
      locator2Impl0.setEncoding(";BW");
      locator2Impl2.setEncoding("iA_~E3\"kR&a");
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl4);
      locatorImpl2.getLineNumber();
      locator2Impl4.setLineNumber(645);
      int int0 = locatorImpl2.getColumnNumber();
      locator2Impl2.setEncoding("6fw");
      locatorImpl2.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      locatorImpl3.setSystemId("Gz)| %K");
      Locator2Impl locator2Impl9 = new Locator2Impl(locatorImpl3);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locatorImpl3.setLineNumber(38);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int1 = connectionFactories0.getXAConnectionFactoryCount();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-4));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cjg_?J{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-4));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.startDocument();
      xMLReaderAdapter1.startDocument();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter3);
      HandlerBase handlerBase0 = new HandlerBase();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      handlerBase0.startDocument();
      char[] charArray0 = new char[0];
      parserAdapter0.characters(charArray0, (-201), (-201));
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter3);
      HandlerBase handlerBase1 = new HandlerBase();
      MockException mockException0 = new MockException((Throwable) null);
      MockException mockException1 = new MockException("9HwhkObRS,#$", mockException0);
      char[] charArray1 = new char[1];
      charArray1[0] = 'E';
      parserAdapter4.characters(charArray1, 89, 1896);
      SAXParseException sAXParseException0 = new SAXParseException("hLHt>{", "This node can not handle namespace", "9HwhkObRS,#$", 36, 1964, mockException1);
      handlerBase1.warning(sAXParseException0);
      parserAdapter0.endDocument();
      handlerBase1.startDocument();
      ParserAdapter parserAdapter5 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter4.getEntityResolver();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-14));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-302);
      try { 
        connectionFactories0.getTopicConnectionFactory((-302));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 3;
      try { 
        connectionFactories0.getTopicConnectionFactory(3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter0.startPrefixMapping("T}sD-K", "J]YrRI-|70`WG#&_");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter0.skippedEntity("_A\"");
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter5.endDocument();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter3);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      xMLReaderAdapter9.startDocument();
      parserAdapter2.getEntityResolver();
      xMLReaderAdapter6.startDocument();
      XMLReaderAdapter xMLReaderAdapter13 = new XMLReaderAdapter();
      xMLReaderAdapter13.skippedEntity("null arguments to constructor not accepted if the 'argTypes' array is null.");
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter6.setDocumentHandler(parserAdapter2);
      xMLReaderAdapter9.startDocument();
      xMLReaderAdapter9.endElement("null arguments to constructor not accepted if the 'argTypes' array is null.", "~MC\"GN", (String) null);
      XMLReaderAdapter xMLReaderAdapter14 = new XMLReaderAdapter();
      parserAdapter1.startDocument();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getEntityResolver();
      parserAdapter0.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      xMLReaderAdapter1.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter2.setDocumentHandler(parserAdapter2);
      xMLReaderAdapter4.skippedEntity("|RN9eg2z@[$=7MN]f#^");
      xMLReaderAdapter3.startDocument();
      xMLReaderAdapter4.processingInstruction("|RN9eg2z@[$=7MN]f#^", "");
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter5);
      HandlerBase handlerBase0 = new HandlerBase();
      parserAdapter0.getContentHandler();
      handlerBase0.startDocument();
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter5);
      parserAdapter2.setDTDHandler(handlerBase0);
      parserAdapter3.setErrorHandler((ErrorHandler) null);
      parserAdapter0.setDTDHandler(handlerBase0);
      parserAdapter1.endDocument();
      char[] charArray0 = new char[1];
      charArray0[0] = 'R';
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter3);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      parserAdapter3.setContentHandler((ContentHandler) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(1437);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory((-928), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getEntityResolver();
      parserAdapter0.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      char[] charArray0 = new char[0];
      parserAdapter1.ignorableWhitespace(charArray0, (-4646), (-4646));
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      xMLReaderAdapter1.characters(charArray0, (-4646), 0);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter7);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter();
      xMLReaderAdapter7.ignorableWhitespace((char[]) null, (-813), (-4646));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory((-4646), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4646, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      parserAdapter0.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter5.processingInstruction("C HsFc.(", "Gm_(Ol!h9VTgkqz|");
      xMLReaderAdapter5.skippedEntity("w");
      xMLReaderAdapter7.startPrefixMapping("", "w");
      xMLReaderAdapter7.startDocument();
      xMLReaderAdapter7.processingInstruction("w", "w");
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter7);
      char[] charArray0 = new char[5];
      charArray0[0] = '\u001E';
      charArray0[1] = '@';
      charArray0[2] = '\u001E';
      charArray0[3] = '\u001E';
      charArray0[4] = '\u001E';
      parserAdapter3.characters(charArray0, 1591, 1591);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getEntityResolver();
      parserAdapter0.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      xMLReaderAdapter1.ignorableWhitespace(charArray0, 55296, 55296);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter1);
      parserAdapter1.getContentHandler();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      char[] charArray1 = new char[0];
      parserAdapter1.ignorableWhitespace(charArray1, (-4646), (-1167));
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter7);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter();
      xMLReaderAdapter7.ignorableWhitespace((char[]) null, (-813), (-1167));
      xMLReaderAdapter3.characters((char[]) null, 66, (-3139));
      XMLReaderAdapter xMLReaderAdapter11 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter12 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(995);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&$X5E");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&$X5E");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cg_?J{5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FdO_v[-{Xg!plK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0gAa&MdV)[z:;DX{");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0gAa&MdV)[z:;DX{");
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      SAXParseException sAXParseException0 = new SAXParseException("OZaDn", locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      int int0 = locator2Impl2.getLineNumber();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl1.setLineNumber((-1152));
      Locator2Impl locator2Impl4 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locatorImpl3.setColumnNumber((-1152));
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl6);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl5.getLineNumber();
      locator2Impl10.getColumnNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl2);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      locator2Impl6.setLineNumber(0);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl9.getLineNumber();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      Locator2Impl locator2Impl15 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int1 = connectionFactories0.getConnectionFactoryCount();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl9.getEntityResolver();
      xMLFilterImpl4.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl7.resolveEntity("", "hk(");
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl8);
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dMGPeo^{2sP}y Iu");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.getQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = connectionFactories0.getQueueConnectionFactory(0);
      assertNull(queueConnectionFactory1.getName());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler2_0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^~");
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = 'B';
      charArray0[2] = '2';
      charArray0[3] = '<';
      charArray0[4] = 'i';
      charArray0[5] = '@';
      charArray0[6] = '\"';
      charArray0[7] = 'B';
      charArray0[8] = '8';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      stringReader0.close();
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
