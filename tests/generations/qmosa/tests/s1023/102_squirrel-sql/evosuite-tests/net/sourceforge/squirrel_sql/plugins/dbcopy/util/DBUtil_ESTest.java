/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 08:51:57 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.event.ComponentListener;
import java.net.MalformedURLException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JLayeredPane;
import javax.swing.JRadioButton;
import javax.swing.JTabbedPane;
import javax.swing.JToggleButton;
import javax.swing.JTree;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.metal.MetalDesktopIconUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreeModel;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.time.Quarter;
import org.jfree.date.SerialDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setSourceSession((ISession) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "D&pC_sB%L`1<~WK");
      PreparedStatement preparedStatement0 = null;
      int int0 = (-2105376123);
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1, (-2105376123), 1, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setCopyMenuEnabled(true);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, "(PJ.74'H`i", "Tv95}5tC*|a~a}");
      int[] intArray0 = Quarter.FIRST_MONTH_IN_QUARTER;
      SerialDate.getMonths();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.setPasteMenuEnabled(true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%ohf`x%M", "~w3!OV1Ii_w?G'1P@<", ",`0eG^$mhMUg", "$length(", 225, "3C>*`-M^krDa>D", 225, 727, 727, (-781), "~w3!OV1Ii_w?G'1P@<", "3C>*`-M^krDa>D", 3159, 3159, "cd'e`537`yrM");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin4 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 4;
      int int1 = 12;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 12, 12, 4, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, 0, (-2), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.unload();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setCopyMenuEnabled(true);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin1.getPluginJarFilePath();
      dBCopyPlugin1.getPluginAppSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin1.getPasteToTableInfo(sQLConnection0, (String) null, " schema = ");
      int[] intArray0 = Quarter.FIRST_MONTH_IN_QUARTER;
      SerialDate.getMonths();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin4 = new DBCopyPlugin();
      dBCopyPlugin1.setPasteMenuEnabled(true);
      dBCopyPlugin0.setPasteToTableName("DBUtil.error.firebirdcommit");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      SQLAlias sQLAlias0 = new SQLAlias();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1175);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      uidIdentifier0.setString((String) null);
      sQLDriver0.setName("d4z1\"j`bT");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString((String) null);
      uidIdentifier1.setString(", ");
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "d4z1\"j`bT", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4235984187509498
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = 1;
      DBUtil.typesAreEquivalent(1, 688);
      String string0 = "^+;,y#{kVW9h";
      String string1 = "gaGnk)RlF#rdNi@|X/";
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "^+;,y#{kVW9h", "W", "gaGnk)RlF#rdNi@|X/", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      SQLAlias sQLAlias0 = new SQLAlias();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1175);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      uidIdentifier0.setString((String) null);
      sQLDriver0.setName("d4z1\"j`bT");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "NON-UNIQUE", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.ScriptWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.typesAreEquivalent(2, 3);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPluginJarFilePath();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dBCopyPlugin1.getWebSite();
      String string0 = dBCopyPlugin2.getWebSite();
      assertEquals("http://www.squirrelsql.org", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, (-15));
      JCheckBox jCheckBox0 = new JCheckBox(" /By*M#w}[sCJ7");
      jCheckBox0.setHideActionText(true);
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("Using URL [", 16);
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("hSuFH{+e@DR#e^!.kE", 16);
      JToggleButton jToggleButton0 = new JToggleButton(styledEditorKit_AlignmentAction0);
      jCheckBox0.addActionListener(styledEditorKit_AlignmentAction0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      int int0 = new Integer((-6));
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      JRadioButton jRadioButton0 = new JRadioButton("fx,8Q", false);
      jRadioButton0.getMultiClickThreshhold();
      Integer.toUnsignedLong((-6));
      long long0 = Integer.toUnsignedLong((-6));
      assertEquals(4294967290L, long0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "wJj|Z@E@v(t?)?");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".J-qyX+Hh=", "R2G;|UC", "Cux>?wGssKe'bFh", "", 2004, "~O``YE'*!h%dg", 2004, 2004, 452, 452, "", "\t", 2004, 2004, "I!pX");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".J-qyX+Hh=");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("X&2~T~XNE(`/.e(`o<", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("wJj|Z@E@v(t?)?", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.OTHER;
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(452);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-447), (-447), (-447), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("GFS)reAu6={s`RPCl", "GFS)reAu6={s`RPCl", (String) null, "h0WOi", (-1264), "GFS)reAu6={s`RPCl", 93, 93, (-15), 93, "GFS)reAu6={s`RPCl", (String) null, 1111, (-2021161078), "] cannot be instantiated due to access restrictions");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      linkedList0.offer(tableColumnInfo0);
      linkedList0.clone();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "wJj|Z@E@v(t?)?");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)50;
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Jj|Z@@v(t??");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte) (-17);
      byteArray0[4] = (byte) (-17);
      byteArray0[5] = (byte) (-17);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertEquals(1, list1.size());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginJarFilePath();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "HgZ@`h:ARXVW_Wy4w", "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar");
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      try { 
        MockURL.URL((String) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wJj|Z@E@v(t?)?");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<G(ek");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{F^5 ");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(linkedList0);
      dBCopyPlugin0.setSourceDatabaseObjects(list0);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, ". Using 'length'", "/+/EZRg)B", "jB`?kW{Ng3sd*q");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "wc\"\"EsO`t";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 1175;
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1175);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      sQLConnection0.close();
      String string1 = "log4j.appender.";
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "Null 'group' argument.", "log4j.appender.");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1175);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      uidIdentifier0.setString((String) null);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection1, "'Z,%f*qT_um+Y4]0A", "NON-UNIQUE");
      sQLDriver0.setName("d4z1\"j`bT");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName(sQLConnection0, (ITableInfo) null, (-1815));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-265));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      Integer integer0 = Integer.valueOf(3);
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer integer2 = new Integer(3);
      JRadioButton jRadioButton0 = new JRadioButton((Icon) null);
      Integer integer3 = new Integer(3210);
      Integer.toUnsignedLong(11448516);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[17];
      integerArray0[0] = integer1;
      integerArray0[1] = integer4;
      integerArray0[2] = integer0;
      integerArray0[3] = integer1;
      Integer.remainderUnsigned((int) integerArray0[0], (int) integerArray0[0]);
      integerArray0[4] = integer1;
      integerArray0[5] = integerArray0[3];
      try { 
        Integer.parseUnsignedInt("org.fest.swing.edt.GuiQuery");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.fest.swing.edt.GuiQuery\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("tE:_$).9(V>hG", "Class", "Class");
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "S6^M;>IS*y7+kG;.";
      int int0 = 32739;
      String string1 = "\"";
      String string2 = "DBUtil.info.bindclobmem";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "DBUtil.info.bindclobmem", "S6^M;>IS*y7+kG;.", (String) null, 32739, (String) null, (-37), (-37), (-2186), (-1790), (String) null, (String) null, (-37), (-888), "DBUtil.info.bindclobmem");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Length function is null for dialec=", (String) null, "+.rVM^ST4-7Xr", (String) null, 92, "grjh>ZWYs6", (-199), 92, (-7), 92, "}'b{0Rp", "T}Quc", 12, 92, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("\"L", (Icon) null);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getInputVerifier();
      DatabaseObjectType.createNewDatabaseObjectType("\"L");
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("kC O:;eJ`X&vX");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("T}Quc", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("grjh>ZWYs6");
      DatabaseObjectType.createNewDatabaseObjectType("Length function is null for dialec=");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      Integer.toUnsignedLong(2863);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 597;
      DBUtil.typesAreEquivalent(2, 597);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement(anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = null;
      int int1 = (-904);
      // Undeclared exception!
      try { 
        connectionWrapper0.createStatement((-2211), (-2211));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "wc\"\"EsO`t";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 1175;
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "Null 'group' argument.", "log4j.appender.");
      sQLDriver0.getJarFileNames();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("681cac6d:16e82d64439:-783d", uidIdentifier0.toString());
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%sqlupper(", "length", ". Skipping FK constraint", ". Skipping FK constraint", 0, "length", (-4155), 1007, (-1265), (-4155), "d4z1\"j`bT", ",\n", 1845, 91, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-4), (-878));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("b9V;TYNx&k(F3Y,M", "org.jfree.data.time.Year", "b9V;TYNx&k(F3Y,M", "checkOptionType", (-4), "org.jfree.data.time.Year", (-878), (-878), (-954), (-1557), "b9V;TYNx&k(F3Y,M", "ALTER TABLE ", (-778), 7, "1F]1xp");
      boolean boolean1 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wJj|Z@E@v(t?)?");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("wJj|Z@E@v(t?)?", "Lb';3^*", "Lb';3^*");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("Lb';3^*", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "bgHeKF#lbjHr{", (String) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" )", "S6^M;>IS*y7+kG;.", "S6^M;>IS*y7+kG;.", "Qw3[OVipwG'1P@<", (-3), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-391), (-391), 713, (-687), "select sequence_name from user_sequences", "S6^M;>IS*y7+kG;.", 14, (-3), "Qw3[OVipwG'1P@<");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("n7BETVawn/Rm");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ImageIcon imageIcon0 = new ImageIcon("Qw3[OVipwG'1P@<");
      DatabaseObjectType.createNewDatabaseObjectType(" )", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("S6^M;>IS*y7+kG;.", (Icon) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SEQUENCE;
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.createNewDatabaseObjectType(" )", (Icon) null);
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType9);
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType11 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      assertFalse(databaseObjectType1.equals((Object)databaseObjectType7));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PmVi]");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "H}Z@@.JVt`@iQ_:zn;");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "wJj|Z@E@v(t?)?");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "86!j!|8x}1z(y");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, " ) as row_");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "C~#sF[KvnMM&'+`Bh|N", "v9\"ehN|c8", " AND ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("T}Quc", "T}Quc", "meks:[oHj)bkrtH}", "meks:[oHj)bkrtH}", 24, "cosh", (-633), (-633), (-2389), 235, "T}Quc", "fixCase: unexpected exception: ", 1718, 24, " Z");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("Application.splash.showmainwindow", "j1M5VA@rGp^W#/3 O]k", "P^*}D&", "fixCase: unexpected exception: ", (-2389), "wo~s})Ol._Rj]F", 2001, (-633), 1718, 1007, "wv9'yLtSTJ)>]z3j", "wv9'yLtSTJ)>]z3j", 24, (-2249), " Z");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      tableColumnInfoArray0[0] = tableColumnInfo1;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo1;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("fixCase: unexpected exception: , meks:[oHj)bkrtH}, meks:[oHj)bkrtH}, fixCase: unexpected exception: ", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".menu", "|#yj7jpeAN~q7n+Oz", "Gx^<7a)7dcU-", "6jw0lIO+!<", (-879), "q", 169, (-358), 1003, 235, " seems to already have it defined.", ".menu", 3357, (-2976), "6jw0lIO+!<");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      System.setCurrentTimeMillis((-2439));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("YqvcA]kPu<}OhI ", "YqvcA]kPu<}OhI ", "Q_>&TsW}'\"7#", "Q_>&TsW}'\"7#", 2438, "Q_>&TsW}'\"7#", 2438, 2438, 1994, 2438, "Q_>&TsW}'\"7#", "Q_>&TsW}'\"7#", 1994, 1994, "' to parameter: ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2438, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" )", "S6^M;>IS*y7+kG;.", "S6^M;>IS*y7+kG;.", "Qw3[OVipwG'1P@<", (-3), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-391), (-391), 713, (-687), "select sequence_name from user_sequences", "S6^M;>IS*y7+kG;.", 14, (-3), "Qw3[OVipwG'1P@<");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("n7BETVawn/Rm");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ImageIcon imageIcon0 = new ImageIcon("Qw3[OVipwG'1P@<");
      DatabaseObjectType.createNewDatabaseObjectType("5!{'$6", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("S6^M;>IS*y7+kG;.", (Icon) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDF_TYPE_DBO;
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.UDF;
      DatabaseObjectType.createNewDatabaseObjectType(" )", (Icon) null);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType8);
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.getSquirrelHomeDir();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl4.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl7.getSquirrelHomeDir();
      applicationFileWrappersImpl5.getLicenceFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl8 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getPluginsDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, (ArrayList<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MetalDesktopIconUI metalDesktopIconUI0 = new MetalDesktopIconUI();
      String string0 = "hSuFH{+e@DR#e^!.kE";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("eCT[jyycWl!8,", "m", "hSuFH{+e@DR#e^!.kE", "hSuFH{+e@DR#e^!.kE", (-2048), "zB(j'0~", (-2048), (-2353), (-2357), 16, (String) null, "eCT[jyycWl!8,", 64000, (-1909), "XERt#+T?r/Q@|j9Soo");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "Last", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Length function is null for dialec=", (String) null, "+.rVM^ST4-7Xr", (String) null, 92, "grjh>ZWYs6", (-199), 92, (-7), 92, "}'b{0Rp", "T}Quc", 12, 92, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getInputVerifier();
      DatabaseObjectType.createNewDatabaseObjectType("\"L");
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("kC O:;eJ`X&vX");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("T}Quc", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("(");
      DatabaseObjectType.createNewDatabaseObjectType("JkS~n+Bm");
      DatabaseObjectType.createNewDatabaseObjectType("");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(92, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getChangeLogFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = null;
      int int0 = (-888);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "DBUtil.info.bindclobmem", "S6^M;>IS*y7+kG;.", (String) null, 32739, (String) null, (-37), (-37), (-2186), (-1790), (String) null, (String) null, (-37), (-888), "DBUtil.info.bindclobmem");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PmVi]");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "CREATE TABLE ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wJj|Z@E@v(t?)?");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("R2G;|UC", ":1b{yj%j^od.}#9=bV", (String) null, "Cux>?wGssKe'bFh", 63, "Jj|Z@@v(t??", 430, (-1565), (-961), (-3554), "h<[", "`'5fP7", (-1565), 2004, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(2004, tableColumnInfo0, (ISession) null);
      assertEquals(2004, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      String string0 = " seems to already have it defined.";
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-2590));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "JQ7Y)7_<", " ) values ( ");
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Vector<IDatabaseObjectInfo> vector0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(vector0);
      DBUtil.convertTableToObjectList(list0);
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[6];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      dBCopyPlugin0.getDestDatabaseObject();
      iDatabaseObjectInfoArray0[2] = null;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) null;
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "w7Hl,ZD*415@", (ITableInfo) null, 1223);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      ImageIcon imageIcon0 = new ImageIcon("T}IuLGVjxk]JeIx", "?'&MBK{{{");
      JRadioButton jRadioButton0 = new JRadioButton(imageIcon0);
      jRadioButton0.addComponentListener((ComponentListener) null);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "T}IuLGVjxk]JeIx";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      JTree jTree0 = new JTree(objectArray0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      JCheckBox jCheckBox0 = new JCheckBox((String) null, false);
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jCheckBox0);
      defaultCellEditor0.getTreeCellEditorComponent(jTree0, defaultTreeCellRenderer0, false, true, false, 5254);
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0, defaultCellEditor0);
      jRadioButton0.addActionListener(defaultTreeCellEditor0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      JRadioButton jRadioButton1 = new JRadioButton("pJw~VN_wTl]h:", false);
      Integer.toUnsignedLong((-360));
      Integer.toUnsignedLong((-360));
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "pJw~VN_wTl]h:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("WoUY~2&xzYnL;3?vei", "No Dialect mapping for JDBC type: ", "44-MZ}hFw(xGq Eu7lq", "WoUY~2&xzYnL;3?vei", 2001, "WoUY~2&xzYnL;3?vei", (-2439), (-59), (-59), 235, "WoUY~2&xzYnL;3?vei", "44-MZ}hFw(xGq Eu7lq", (-3353), 2001, "No Dialect mapping for JDBC type: ");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("WoUY~2&xzYnL;3?vei", "wv9'yLtSTJ)>]z3j", "WoUY~2&xzYnL;3?vei", "WoUY~2&xzYnL;3?vei", 39, (String) null, (-3353), 235, 235, 2001, "WoUY~2&xzYnL;3?vei", "No Dialect mapping for JDBC type: ", 2001, 2001, "WoUY~2&xzYnL;3?vei");
      tableColumnInfoArray0[3] = tableColumnInfo1;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "S6^M;>IS*y7+kG;.";
      int int0 = 32739;
      String string1 = "\"";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "DBUtil.info.bindclobm$m", "S6^M;>IS*y7+kG;.", (String) null, 32739, (String) null, (-37), (-37), (-256), (-1790), (String) null, (String) null, (-37), (-888), "DBUtil.info.bindclobm$m");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getDestDatabaseObject();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      ForeignKeyInfo[] foreignKeyInfoArray0 = new ForeignKeyInfo[5];
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      foreignKeyInfoArray0[1] = foreignKeyInfoArray0[0];
      foreignKeyInfoArray0[2] = foreignKeyInfoArray0[1];
      foreignKeyInfoArray0[3] = foreignKeyInfoArray0[2];
      foreignKeyInfoArray0[4] = foreignKeyInfoArray0[3];
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      JTree jTree0 = new JTree((TreeModel) null);
      metalTreeUI0.isEditing(jTree0);
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      assertFalse(metalTreeUI1.equals((Object)metalTreeUI0));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("sNXxQ6e*.G{d9&G", "i7 xwy4In#ss,P?|", "set", "sNXxQ6e*.G{d9&G", (-3409), "0^Aw|_eL$(xI5X+D{r", (-5801), (-1193), 2000000000, 15, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", "\"1VEvY>y{ V0P6[RxJ", 909, (-3409), "set");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("DBUtil.error.bindblobfailure", icon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("i7 xwy4In#ss,P?|");
      DatabaseObjectType.createNewDatabaseObjectType("Encountered unexpected exception while attempting to determine if catalogs are used in table definitions");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.setLastStatementValues("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "-MV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-22), (-22));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DBUtil.typesAreEquivalent(1111, 1111);
      DBUtil.typesAreEquivalent(3076, 273);
      Integer.valueOf(3076);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      JToggleButton jToggleButton0 = new JToggleButton(defaultEditorKit_DefaultKeyTypedAction0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      JRadioButton jRadioButton0 = new JRadioButton("No resource is associated with key \"");
      jRadioButton0.addComponentListener((ComponentListener) null);
      jRadioButton0.addActionListener(defaultEditorKit_DefaultKeyTypedAction0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      JRadioButton jRadioButton1 = new JRadioButton("WW@f=@[i~`hH`4/", false);
      Integer.toUnsignedLong(2005);
      long long0 = Integer.toUnsignedLong((byte)19);
      assertEquals(19L, long0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), (-7));
      DBUtil.typesAreEquivalent((-7), (byte)19);
      Integer.valueOf(5);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      JToggleButton jToggleButton0 = new JToggleButton(defaultEditorKit_DefaultKeyTypedAction0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      JRadioButton jRadioButton0 = new JRadioButton("WW@f=@[i~`hH`4/", true);
      jRadioButton0.addComponentListener((ComponentListener) null);
      jRadioButton0.addActionListener(defaultEditorKit_DefaultKeyTypedAction0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      JRadioButton jRadioButton1 = new JRadioButton("J^@]}cV|P_[5vTpwrY0", true);
      Integer.toUnsignedLong((byte)19);
      long long0 = Integer.toUnsignedLong(12);
      assertEquals(12L, long0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, (-4));
      JCheckBox jCheckBox0 = new JCheckBox(" /By*M#w}[sCJ7");
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("Using URL [", 16);
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("hSuFH{+e@DR#e^!.kE", 16);
      JToggleButton jToggleButton0 = new JToggleButton(styledEditorKit_AlignmentAction0);
      jCheckBox0.addActionListener(styledEditorKit_AlignmentAction0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      int int0 = (-6);
      try { 
        Integer.parseUnsignedInt(" /By*M#w}[sCJ7", (-6));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -6 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Connection connection1 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "cL-$?I#kz", "title", 5, "SQLConnection.noConn", (-1124), 5, (-1124), 304, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "title", 2001, 897, "fOSE}?8vIGA.l");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "select count(*) from ", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl1.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getSquirrelHomeDir();
      applicationFileWrappersImpl2.getPluginsDirectory();
      applicationFileWrappersImpl0.getFAQFile();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", (String) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, (String) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "y/52eK~-Bg!Jz~", ":mj", "org.jfree.data.statistics.BoxAndWhiskerItem", (-2000));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "t]<?dhSlzZu4Y5Y", "t]<?dhSlzZu4Y5Y", "p:EaOOp3mix(=e&.O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.getSquirrelHomeDir();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl4.getDTPropertiesFile();
      applicationFileWrappersImpl4.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl7.getSquirrelHomeDir();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DWC?k:sP%&@Tz2", "7", "7", "h<[", (-3554), "7", 5, (-2291), (-2291), (-3554), "DWC?k:sP%&@Tz2", (String) null, (-2291), (-2291), "DWC?k:sP%&@Tz2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`'5fP7");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType((-2291), tableColumnInfo0, (ISession) null);
      assertEquals((-2291), int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{&62n|+]r=kOo:");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "H}Z@@.JVt`@iQ_:zn;");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wJj|Z@E@v(t?)?");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("R2G;|UC", ":1b{yj%j^od.}#9=bV", (String) null, "Cux>?wGssKe'bFh", 4, "Jj|Z@@Yv(t??", 430, (-1565), 430, (-3554), "h<[", "`'5fP7", (-1565), 1999, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(1999, tableColumnInfo0, (ISession) null);
      assertEquals(1999, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DBUtil.getLastStatementValues();
      MetalDesktopIconUI metalDesktopIconUI0 = new MetalDesktopIconUI();
      String string0 = "hSuFH{+e@DR#e^!.kE";
      try { 
        MockURL.URL("hSuFH{+e@DR#e^!.kE");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: hSuFH{+e@DR#e^!.kE
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "~w3!OT1Ii_w'1P@o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "T}IuLGVjk]JeI^", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ISession iSession0 = null;
      String string0 = "\\Jz9SI*~\\u=Qy";
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, string0, "C_qFAo^)=JX", "W&#~;NAf_u6\\}f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "WoUY~2&xzYnL;3?vei", "WoUY~2&xzYnL;3?vei", "YP", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Jj|Z@@v(t??");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-17);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Jj|Z@@v(t??");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yZskkoT\f_DQ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{F^5 ");
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Jj|Z@@v(t??");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("yZskkoT\f_DQ", "yZskkoT\f_DQ", "org.apache.log4j.DefaultCategoryFactory", "_g8UH{'r<Qs", (byte) (-17), "{F^5 ", 92, (byte) (-17), (byte) (-17), 1260, " as last_value, ", "YB[xy{W!-^!Fhe#`", (byte) (-17), 2167, (String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-17), int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey((String) null, "J=\"oc2qs4.Yv: n'#mW", "YB[xy{W!-^!Fhe#`", foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("@k@7@2oA]*SfLn.");
      uidIdentifier0.setString("@k@7@2oA]*SfLn.");
      uidIdentifier0.setString("D8JL]HYq_cpiaW]4x9");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("select next value for ");
      uidIdentifier1.setString("select next value for ");
      uidIdentifier0.setString("_~b}z$");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier2.setString("_~b}z$");
      uidIdentifier2.setString("Cr&j{P~");
      uidIdentifier3.setString("8");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier1);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      MetalDesktopIconUI metalDesktopIconUI0 = new MetalDesktopIconUI();
      String string0 = "hSuFH{+e@DR#e^!.kE";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("hSuFH{+e@DR#e^!.kE", "z7DngFx5", "z7DngFx5", "hSuFH{+e@DR#e^!.kE", (-7), "hSuFH{+e@DR#e^!.kE", (-7), (-7), 3245, 3245, "|.nRrLn;GnRLtzM}F", "Y1bL1r2&", 1277, 91, "|.nRrLn;GnRLtzM}F");
      DBUtil.isBinaryType(tableColumnInfo0);
      try { 
        MockURL.URL("hSuFH{+e@DR#e^!.kE");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: hSuFH{+e@DR#e^!.kE
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("YP", "YP", "?E-]5vU+/;N-sZ", "YP", 2035, "`\"[", (-2016), (-2016), 2, 2035, "S6kM;>IS*y7+kG;.", "constraintName", 2519, 2, "S6kM;>IS*y7+kG;.");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.OTHER;
      JTabbedPane jTabbedPane0 = new JTabbedPane(2);
      assertTrue(jTabbedPane0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("^1b.~Wmf<V)op|9Sr", "boolean", "boolean", (ISession) null, false, 2001);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("!<U,u");
      uidIdentifier0.setString("$YU'dp,ubL-sn%");
      uidIdentifier0.setString(" schema = ");
      uidIdentifier0.setString("\n");
      uidIdentifier0.setString("b[p6:~!X/+Y_hez%[D");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("gYITJkxb,WUDgF3");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("dbcopytest");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("!<U,u");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier4);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "$YU'dp,ubL-sn%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
