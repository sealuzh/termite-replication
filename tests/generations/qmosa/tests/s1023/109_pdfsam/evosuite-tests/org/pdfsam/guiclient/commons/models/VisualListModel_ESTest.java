/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 08:23:53 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.RenderingHints;
import java.awt.event.AdjustmentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.image.renderable.ParameterBlock;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.time.format.TextStyle;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster2, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList((-1931), (-1931), true);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1931);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1931
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      Vector<Object> vector1 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, basicComboBoxEditor0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "|**$fjn", parameterBlock1, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"|**$fjn\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5609773464732224
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray1);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray2 = new int[8];
      intArray2[2] = 1;
      intArray1[1] = 1;
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(1, 1, false);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(1, 1, true);
      visualListModel0.moveDownIndex(1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1, "Could not convert [");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.750016573497862
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray1 = new int[1];
      intArray1[0] = 7;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[13];
      visualPageListItemArray1[0] = null;
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt(2978, visualPageListItemArray0[0]);
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      int[] intArray2 = new int[8];
      intArray2[2] = 7;
      VisualPageListItem[] visualPageListItemArray2 = new VisualPageListItem[4];
      visualPageListItemArray2[1] = null;
      visualPageListItemArray2[2] = null;
      visualPageListItemArray2[3] = visualPageListItemArray2[2];
      intArray2[1] = 7;
      intArray2[4] = 7;
      intArray2[7] = 7;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.updateElementAt((-2175), visualPageListItemArray2[0]);
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 6
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2786339548781145
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      int int0 = 1;
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[13];
      visualPageListItemArray1[0] = null;
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt(2978, visualPageListItemArray0[0]);
      visualPageListItemArray1[1] = null;
      visualListModel0.setData(visualPageListItemArray1);
      visualListModel0.reverseElements(intArray0);
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 2978;
      intArray2[2] = 34;
      intArray2[3] = 1;
      intArray2[4] = 2978;
      try { 
        visualListModel0.moveUpIndexes(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2978
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.78565733829864
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[13];
      visualPageListItemArray1[0] = null;
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt(2978, visualPageListItemArray0[0]);
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      int[] intArray2 = new int[8];
      intArray2[2] = 1;
      VisualPageListItem[] visualPageListItemArray2 = new VisualPageListItem[4];
      visualPageListItemArray2[1] = null;
      visualPageListItemArray2[2] = null;
      visualPageListItemArray2[3] = visualPageListItemArray2[2];
      intArray2[1] = 1;
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.updateElementAt((-2175), visualPageListItemArray2[0]);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6853413739225886
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray2 = new int[8];
      intArray2[2] = 1;
      visualListModel0.rotateClockwiseElements(intArray2);
      intArray1[1] = 1;
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(1, 1, false);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(1, 1, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int int0 = 385;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(stack0, vector0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock1, renderingHints0, true);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"renderableCollection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      Vector<VisualPageListItem> vector0 = null;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.elementsChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5106279076782303
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      visualListModel0.removeElements(1, 3267, true);
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[8];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key1;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      renderingHints_KeyArray0[3] = (RenderingHints.Key) pdfGraphics2D_HyperLinkKey0;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key3;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[5] = (RenderingHints.Key) sunHints_Key4;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      renderingHints_KeyArray0[6] = (RenderingHints.Key) sunHints_Key5;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      JComboBox<RenderingHints.Key> jComboBox0 = new JComboBox<RenderingHints.Key>(renderingHints_KeyArray0);
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9609437990772114
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[13];
      visualPageListItemArray1[0] = null;
      visualListModel0.elementsChanged();
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      VisualPageListItem[] visualPageListItemArray2 = new VisualPageListItem[4];
      visualPageListItemArray2[0] = null;
      visualPageListItemArray2[1] = null;
      visualPageListItemArray2[2] = null;
      visualPageListItemArray2[3] = null;
      visualListModel0.setData(visualPageListItemArray2);
      intArray2[1] = 1;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveUpIndex(1);
      visualListModel0.removeElementAt(1, true);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5106279076782303
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray1 = new int[8];
      byte[] byteArray1 = new byte[8];
      byte byte0 = (byte) (-45);
      byteArray1[0] = (byte) (-45);
      byteArray1[1] = (byte)35;
      byte byte1 = (byte)126;
      byteArray1[3] = (byte)126;
      byteArray1[4] = (byte)52;
      byteArray1[5] = (byte)35;
      byteArray1[6] = (byte)104;
      byteArray1[7] = (byte) (-45);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.804309430944521
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[13];
      visualPageListItemArray1[0] = null;
      visualListModel0.elementsChanged();
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      VisualPageListItem[] visualPageListItemArray2 = new VisualPageListItem[4];
      visualPageListItemArray2[0] = null;
      visualPageListItemArray2[1] = null;
      visualPageListItemArray2[2] = null;
      visualPageListItemArray2[3] = null;
      visualListModel0.setData(visualPageListItemArray2);
      intArray2[1] = 1;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveUpIndex(1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6482448258533036
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      visualListModel0.removeElements(1, 3267, true);
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[8];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key1;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      renderingHints_KeyArray0[3] = (RenderingHints.Key) pdfGraphics2D_HyperLinkKey0;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key3;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[5] = (RenderingHints.Key) sunHints_Key4;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      renderingHints_KeyArray0[6] = (RenderingHints.Key) sunHints_Key5;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      JComboBox<RenderingHints.Key> jComboBox0 = new JComboBox<RenderingHints.Key>(renderingHints_KeyArray0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6584583829842985
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray2 = new int[8];
      intArray2[2] = 1;
      visualListModel0.rotateClockwiseElements(intArray2);
      intArray1[1] = 1;
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(1, 1, false);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveDownIndex(1);
      visualListModel0.removeElements(1, 1, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.data = null;
      VisualListModel visualListModel2 = new VisualListModel();
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.clearData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5281291631111342
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray1);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray2 = new int[8];
      intArray2[2] = 1;
      intArray1[1] = 1;
      intArray2[4] = 1;
      intArray2[7] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(1, 1, false);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(1, 1, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7546835553710354
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray1 = new int[1];
      intArray1[0] = (-44);
      visualListModel0.rotateClockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[13];
      visualPageListItemArray1[0] = null;
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt(2978, visualPageListItemArray0[0]);
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      int[] intArray2 = new int[8];
      intArray2[2] = (-44);
      VisualPageListItem[] visualPageListItemArray2 = new VisualPageListItem[4];
      visualPageListItemArray2[1] = null;
      visualPageListItemArray2[2] = null;
      visualPageListItemArray2[3] = null;
      intArray2[1] = (-44);
      intArray2[4] = (-44);
      intArray2[7] = (-44);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      visualListModel0.undeleteElements(intArray0);
      try { 
        visualListModel0.moveDownIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -43
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.398363176880253
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray1 = new int[8];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-35);
      byteArray1[1] = (byte)35;
      byteArray1[3] = (byte)110;
      byteArray1[4] = (byte)52;
      byteArray1[5] = (byte)35;
      byteArray1[7] = (byte) (-35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.398564197319154
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.elementsChanged();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray1 = new int[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      intArray1[0] = 1;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-45);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5243899369820615
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray1 = new int[13];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-35);
      byteArray1[1] = (byte) (-35);
      byteArray1[4] = (byte) (-35);
      byteArray1[5] = (byte) (-35);
      byteArray1[6] = (byte)104;
      byteArray1[7] = (byte) (-35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.prependAllElements(vector0);
      assertEquals("[null, null, null, null, null, null]", vector0.toString());
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      jComboBox0.getInheritsPopupMenu();
      defaultComboBoxModel0.getListDataListeners();
      jComboBox0.getToolkit();
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.setItem(stack0);
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      defaultComboBoxModel0.removeElement(metalComboBoxEditor_UIResource0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      stack0.add(defaultTableModel0);
      Class<BasicComboBoxEditor> class1 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class1);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.add(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, inputMethodListener1);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener3);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.add(inputMethodListener4, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener5);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener4);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.498075862058163
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.clearData();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveDownIndex(1);
      visualListModel0.moveUpIndex(1);
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      Function<Object, VisualPageListItem> function0 = (Function<Object, VisualPageListItem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, VisualPageListItem> function1 = unaryOperator0.andThen((Function<? super Object, ? extends VisualPageListItem>) function0);
      unaryOperator0.andThen((Function<? super Object, ? extends VisualPageListItem>) function1);
      Function.identity();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5248092460735854
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray1 = new int[8];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-45);
      byteArray1[1] = (byte)35;
      byteArray1[3] = (byte)126;
      byteArray1[4] = (byte) (-69);
      byteArray1[5] = (byte)35;
      byteArray1[6] = (byte)104;
      byteArray1[7] = (byte) (-45);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray1);
      int[] intArray2 = new int[3];
      intArray2[0] = (int) (byte)126;
      intArray2[1] = (int) (byte)104;
      intArray2[2] = (-514);
      try { 
        visualListModel0.undeleteElements(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 126
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      EvoSuiteFile evoSuiteFile0 = null;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      EvoSuiteFile evoSuiteFile0 = null;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      int[] intArray0 = new int[1];
      intArray0[0] = 162;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 162
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.506229622995291
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      ParameterBlock parameterBlock2 = new ParameterBlock();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      assertFalse(visualListModel1.equals((Object)visualListModel3));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.943322392764181
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndex((-1445));
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[7];
      intArray0[0] = (-1445);
      intArray0[1] = (-1445);
      intArray0[2] = (-1445);
      intArray0[3] = (-1445);
      intArray0[4] = (-1445);
      intArray0[5] = 1;
      intArray0[6] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.elementsChanged();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(vector0);
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.setData(vector0);
      visualListModel0.addElementAt(visualPageListItemArray0[5], 1);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1445
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.updateElementAt(488, (VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.687079840507875
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      UnaryOperator.identity();
      Function<Object, VisualPageListItem> function0 = (Function<Object, VisualPageListItem>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super VisualPageListItem, ? extends Integer>) function1);
      UnaryOperator<VisualPageListItem> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator1);
      visualListModel1.setData(vector0);
      visualListModel1.addElementAt((VisualPageListItem) null, (-1159));
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndex((-1159));
      visualListModel2.getElements();
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.89937990489354
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      // Undeclared exception!
      try { 
        arrayDeque0.add((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3150745853722885
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K /@PLf#y!Z-7");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      BiFunction<RenderingHints.Key, Object, RenderingHints.Key> biFunction0 = (BiFunction<RenderingHints.Key, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      renderingHints1.add(renderingHints0);
      visualListModel1.reverseElements(intArray0);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Vector<Object> vector1 = parameterBlock1.getParameters();
      vector0.add((Object) visualListModel0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TextStyle textStyle0 = TextStyle.NARROW_STANDALONE;
      TextStyle textStyle1 = TextStyle.SHORT_STANDALONE;
      Object object0 = new Object();
      RenderingHints renderingHints2 = new RenderingHints(sunHints_Key0, vector0);
      renderingHints1.add(renderingHints2);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      int[] intArray0 = new int[1];
      intArray0[0] = 12;
      visualListModel0.moveUpIndexes(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      Vector<Object> vector0 = new Vector<Object>();
      TextStyle textStyle0 = TextStyle.SHORT;
      vector0.ensureCapacity(95);
      vector0.add((Object) textStyle0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      RenderingHints renderingHints2 = new RenderingHints(sunHints_Key0, vector0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap0.clear();
      BiFunction<Object, Object, RenderingHints.Key> biFunction0 = (BiFunction<Object, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.replaceAll(biFunction0);
      RenderingHints renderingHints3 = new RenderingHints(hashMap1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints4 = new RenderingHints(sunHints_Key3, pipedInputStream0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 12
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4938381509002276
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray1 = new int[8];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-35);
      byteArray1[1] = (byte)35;
      byteArray1[3] = (byte)110;
      byteArray1[4] = (byte)52;
      byteArray1[5] = (byte)35;
      byteArray1[6] = (byte)104;
      byteArray1[7] = (byte) (-35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster6, (TextListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, inputMethodListener1);
      Vector<Object> vector0 = new Vector<Object>();
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, aWTEventMulticaster10);
      renderingHints0.add(renderingHints1);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 689;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 689
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) null);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener3, inputMethodListener3);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.add(inputMethodListener3, inputMethodListener3);
      InputMethodListener inputMethodListener6 = AWTEventMulticaster.add(inputMethodListener3, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener2, inputMethodListener3);
      AWTEventMulticaster.remove(inputMethodListener5, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener5);
      InputMethodListener inputMethodListener7 = AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      InputMethodListener inputMethodListener8 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener7);
      InputMethodListener inputMethodListener9 = AWTEventMulticaster.add(inputMethodListener6, inputMethodListener1);
      AWTEventMulticaster.add(inputMethodListener8, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener4, inputMethodListener4);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener3, inputMethodListener7);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, inputMethodListener6);
      AWTEventMulticaster.add(inputMethodListener9, (InputMethodListener) aWTEventMulticaster1);
      Vector<Object> vector0 = new Vector<Object>();
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementChanged((VisualPageListItem) null);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster1, (FocusListener) aWTEventMulticaster1);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      AWTEventMulticaster.add((FocusListener) aWTEventMulticaster2, (FocusListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster11, (InputMethodListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster10, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster8, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster7);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      stack0.add(integer0);
      jComboBox0.getAncestorListeners();
      visualListModel0.removeListDataListener(jComboBox0);
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      VisualPageListItem[] visualPageListItemArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, BasicComboBoxEditor> hashMap0 = new HashMap<RenderingHints.Key, BasicComboBoxEditor>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      parameterBlock0.add((byte)64);
      // Undeclared exception!
      try { 
        visualListModel0.subList((int) (byte)64, (-1164));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(64) > toIndex(-1164)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster12);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster13, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster15 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster14, (InputMethodListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster10, (ItemListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster14);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster15);
      Vector<Object> vector0 = new Vector<Object>();
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster7);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      Vector<Object> vector1 = new Vector<Object>();
      visualListModel0.getElementAt(0);
      vector0.add((Object) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7437009261328056
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) null);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster5, (TextListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster5);
      Vector<Object> vector0 = new Vector<Object>();
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel0.setData(vector1);
      assertEquals("[]", vector1.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster4, (FocusListener) aWTEventMulticaster0);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      AWTEventMulticaster.add((FocusListener) basicComboBoxEditor_UIResource0, (FocusListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster6, (TextListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, aWTEventMulticaster5);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(stack0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      int int0 = 2;
      Integer integer2 = Integer.getInteger("", 2);
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer1;
      integerArray0[1] = integer2;
      integerArray0[2] = integer3;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      Integer integer4 = new Integer((-1));
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[5] = integer4;
      integerArray0[6] = integer2;
      integerArray0[7] = integer2;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      VisualListModel visualListModel1 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(int0, (Collection<VisualPageListItem>) treeSet0);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.addElement((VisualPageListItem) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster9, (HierarchyListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster11, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster1, (ItemListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster14, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster12, (InputMethodListener) aWTEventMulticaster14);
      Vector<Object> vector0 = new Vector<Object>();
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster13, (WindowListener) aWTEventMulticaster13);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) aWTEventMulticaster0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      defaultComboBoxModel0.removeElement(metalComboBoxEditor_UIResource0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      stack0.add(defaultTableModel0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer.min((int) integerArray0[1], (int) integerArray0[1]);
      integerArray0[2] = integer2;
      treeSet0.toArray(integerArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      defaultComboBoxModel0.removeElement(metalComboBoxEditor_UIResource0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      stack0.add(defaultTableModel0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.prependAllElements(collection0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 1110;
      intArray0[1] = 20;
      intArray0[2] = 2083;
      intArray0[3] = 1;
      intArray0[4] = (-1);
      intArray0[5] = (-1206);
      intArray0[6] = 807;
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      stack0.retainAll(list0);
      stack0.clear();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      Stack<Integer> stack1 = new Stack<Integer>();
      Vector<Integer> vector0 = new Vector<Integer>(stack1);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      vector0.add(integer0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(vector0);
      visualListModel0.removeListDataListener(jComboBox1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1653), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1653
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("org.apache.log4j.PropertyWatchdog");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      stack0.clear();
      Stack<Integer> stack1 = new Stack<Integer>();
      Vector<Integer> vector0 = new Vector<Integer>(stack1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1669), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster5, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster7, (TextListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      ParameterBlock parameterBlock2 = new ParameterBlock();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      defaultComboBoxModel0.removeElement(metalComboBoxEditor_UIResource0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      stack0.clear();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((FocusListener) defaultCaret0, (FocusListener) defaultCaret0);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(textListener0, textListener0);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-1), 5000, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1494, 1600);
      assertNull(collection0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      defaultComboBoxModel0.removeElement(metalComboBoxEditor_UIResource0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      stack0.parallelStream();
      defaultComboBoxModel0.getListeners(class0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 1471);
      visualListModel0.updateElementAt(698, (VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer1;
      integerArray0[1] = integer1;
      integerArray0[2] = integer2;
      integerArray0[3] = integer1;
      Integer integer3 = new Integer((int) integerArray0[3]);
      integerArray0[5] = integer3;
      integerArray0[6] = integer1;
      integerArray0[7] = integer1;
      Integer integer4 = JLayeredPane.DRAG_LAYER;
      Integer.remainderUnsigned((int) integerArray0[5], 825);
      Integer.min((int) integerArray0[1], (int) integerArray0[0]);
      int[] intArray0 = new int[4];
      intArray0[0] = 825;
      intArray0[1] = 0;
      intArray0[2] = (int) integerArray0[0];
      intArray0[3] = (-1019);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      Stack<DefaultTableModel> stack1 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack1);
      stack1.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      VisualListModel visualListModel2 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = Integer.getInteger("", 2);
      Integer.getInteger("LZoEVP^\"M(=1us(b|p=", 2);
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer1;
      integerArray0[1] = integer2;
      integerArray0[2] = integer3;
      treeSet0.pollLast();
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      int int0 = (-1);
      Integer integer4 = new Integer((-1));
      Integer.getInteger("", integer4);
      integerArray0[5] = integer4;
      integerArray0[6] = integer2;
      integerArray0[7] = integer2;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer integer6 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.sum(int0, 2);
      treeSet0.toArray(integerArray0);
      visualListModel0.addAllElements((-3771), (Collection<VisualPageListItem>) treeSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add(inputMethodListener2, inputMethodListener0);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) null);
      InputMethodListener inputMethodListener6 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      InputMethodListener inputMethodListener7 = AWTEventMulticaster.add(inputMethodListener2, inputMethodListener4);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener7, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener3);
      AWTEventMulticaster.add(inputMethodListener4, inputMethodListener3);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener2, inputMethodListener2);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener5, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener3, inputMethodListener6);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add(inputMethodListener1, inputMethodListener7);
      Vector<Object> vector0 = new Vector<Object>();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Object object0 = new Object();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(597, (-342), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      stack0.clear();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      stack0.clear();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 14, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addElement((VisualPageListItem) null);
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>();
      assertTrue(linkedList1.equals((Object)linkedList0));
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Vector<Object> vector1 = parameterBlock0.getParameters();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      vector1.add((Object) pipedInputStream0);
      boolean boolean0 = new Boolean(true);
      TextStyle textStyle0 = TextStyle.NARROW_STANDALONE;
      TextStyle textStyle1 = TextStyle.NARROW;
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayList0);
      textStyle1.asNormal();
      Object object0 = new Object();
      renderingHints1.add(renderingHints0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      defaultComboBoxModel0.removeElement(integer0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      stack0.add(defaultTableModel0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.remove(inputMethodListener2, (InputMethodListener) null);
      AWTEventMulticaster.add(inputMethodListener3, inputMethodListener1);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add(inputMethodListener3, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener4, inputMethodListener3);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndex(2401);
      visualListModel1.moveDownIndex(32);
      Object object0 = new Object();
      OperationRegistry operationRegistry0 = new OperationRegistry();
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      jComboBox0.getInheritsPopupMenu();
      defaultComboBoxModel0.getListDataListeners();
      jComboBox0.getToolkit();
      stack0.clear();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      Component component0 = metalComboBoxEditor_UIResource0.getEditorComponent();
      FocusEvent focusEvent0 = new FocusEvent(component0, 804);
      metalComboBoxEditor_UIResource0.focusLost(focusEvent0);
      metalComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      defaultComboBoxModel0.removeElement(metalComboBoxEditor_UIResource0);
      Class<BasicComboBoxEditor> class0 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      Class<BasicComboBoxEditor> class1 = BasicComboBoxEditor.class;
      defaultComboBoxModel0.getListeners(class1);
      stack0.clear();
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      int int0 = 0;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.getElementAt(0);
      visualListModel0.getElements();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(9);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int[] intArray0 = new int[1];
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      Vector<Object> vector0 = new Vector<Object>();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      vector0.add((Object) null);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-804), (-804), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener3, inputMethodListener3);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, inputMethodListener3);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove(inputMethodListener2, (InputMethodListener) null);
      AWTEventMulticaster.add(inputMethodListener3, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener2, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, inputMethodListener2);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.add(inputMethodListener4, inputMethodListener0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1622));
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rm");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(17, 585, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster5, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster7, (TextListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster12, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster13);
      AWTEventMulticaster aWTEventMulticaster15 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster14, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster11, (InputMethodListener) aWTEventMulticaster15);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      stack0.clear();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(360, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(360) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("", 2);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener2);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.add(inputMethodListener4, (InputMethodListener) null);
      InputMethodListener inputMethodListener6 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener4);
      AWTEventMulticaster.add(inputMethodListener5, inputMethodListener4);
      InputMethodListener inputMethodListener7 = AWTEventMulticaster.add(inputMethodListener4, inputMethodListener5);
      InputMethodListener inputMethodListener8 = AWTEventMulticaster.add(inputMethodListener7, inputMethodListener5);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      AWTEventMulticaster.remove((FocusListener) metalComboBoxEditor_UIResource0, (FocusListener) metalComboBoxEditor_UIResource0);
      AWTEventMulticaster.remove((FocusListener) null, (FocusListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      TextListener textListener1 = AWTEventMulticaster.add(textListener0, textListener0);
      AWTEventMulticaster.remove(textListener1, textListener1);
      AWTEventMulticaster.add((TextListener) null, textListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove(inputMethodListener5, inputMethodListener8);
      AWTEventMulticaster.add(inputMethodListener6, inputMethodListener3);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(2, (-249), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2) > toIndex(-249)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      Vector<Object> vector0 = new Vector<Object>();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1454, 15, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster5, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster7, (TextListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster4);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      stack0.clear();
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((FocusListener) null, (FocusListener) null);
      AWTEventMulticaster.remove((FocusListener) null, (FocusListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      int int0 = 2;
      Integer integer2 = Integer.getInteger("", 2);
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer1;
      integerArray0[1] = integer2;
      integerArray0[2] = integer3;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      Integer integer4 = new Integer((-1));
      integerArray0[5] = integer4;
      integerArray0[6] = integer2;
      Integer.toUnsignedLong(int0);
      integerArray0[7] = integer2;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((int) integerArray0[3], int0, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      Vector<Object> vector0 = new Vector<Object>();
      RenderingHints renderingHints1 = new RenderingHints((RenderingHints.Key) null, (Object) null);
      visualListModel0.getElementAt(1290);
      // Undeclared exception!
      try { 
        renderingHints0.put((Object) null, defaultComboBoxModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 1110;
      intArray0[1] = 20;
      intArray0[2] = 2083;
      intArray0[3] = 1;
      intArray0[4] = (-1);
      intArray0[5] = (-1206);
      Vector<Object> vector0 = new Vector<Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1206));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      Vector<Object> vector0 = new Vector<Object>();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(vector0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector0);
      jComboBox1.addInputMethodListener((InputMethodListener) null);
      JComboBox<Object> jComboBox2 = new JComboBox<Object>(vector0);
      jComboBox2.requestFocusInWindow();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-3099));
      visualListModel0.moveDownIndex((-1290));
      assertEquals(0, visualListModel0.getSize());
  }
}
