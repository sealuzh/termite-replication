/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 19:11:11 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.time.Clock;
import java.time.Duration;
import java.time.Instant;
import java.time.temporal.TemporalAdjuster;
import java.time.temporal.TemporalField;
import java.time.temporal.TemporalUnit;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Hashtable;
import javax.xml.namespace.QName;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.AxisEngine;
import org.apache.axis.AxisFault;
import org.apache.axis.MessageContext;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.encoding.DeserializationContext;
import org.apache.axis.encoding.Deserializer;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.message.Detail;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.message.SOAPHeaderElement;
import org.apache.axis.schema.SchemaVersion;
import org.apache.axis.schema.SchemaVersion1999;
import org.apache.axis.soap.SOAP11Constants;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.xml.sax.InputSource;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = (-20L);
      Instant instant0 = MockInstant.ofEpochSecond((-20L), (-20L));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-109);
      byteArray0[0] = (byte) (-109);
      MockInstant.plusMillis(instant0, (byte) (-109));
      MockInstant.plusMillis(instant0, (-20L));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-109);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      deferredDocumentImpl0.load("org.apache.axis.wsdl.symbolTable.UndefinedType");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AxisEngine.getCurrentMessageContext();
      QName qName0 = WSDDConstants.QNAME_GLOBAL;
      qName0.getLocalPart();
      AxisFault axisFault0 = new AxisFault();
      axisFault0.addFaultSubCode(qName0);
      axisFault0.getMessage();
      AxisFault axisFault1 = new AxisFault("globalConfiguration", axisFault0);
      AxisFault axisFault2 = AxisFault.makeFault(axisFault1);
      axisFault1.addFaultSubCode(qName0);
      axisFault0.addFaultDetail(qName0, "21k NwY?SABw]oU:7");
      axisFault2.addFaultSubCodeAsString("21k NwY?SABw]oU:7");
      axisFault0.clearHeaders();
      axisFault0.getFaultSubCodes();
      AxisFault axisFault3 = new AxisFault("authenticatedUser", axisFault1);
      axisFault1.dumpToString();
      axisFault3.addSuppressed(axisFault2);
      AxisFault axisFault4 = new AxisFault("globalConfiguration", axisFault3);
      axisFault4.addSuppressed(axisFault3);
      axisFault4.addFaultSubCodeAsString("transport.url");
      axisFault2.dumpToString();
      axisFault4.clearFaultSubCodes();
      AxisFault axisFault5 = new AxisFault((String) null, axisFault0);
      AxisFault axisFault6 = AxisFault.makeFault(axisFault5);
      axisFault3.dump();
      axisFault5.removeFaultDetail(qName0);
      AxisFault axisFault7 = new AxisFault("AxisFault\n faultCode: {http://schemas.xmlsoap.org/soap/envelope/}Server.generalException\n faultSubcode: \njavax.xml.namespace.QName@0000000004\njavax.xml.namespace.QName@0000000005\n faultString: globalConfiguration; nested exception is: \n\t\n faultActor: \n faultNode: \n faultDetail: \n\t{http://xml.apache.org/axis/}hostname:192.168.1.42\n", axisFault0);
      axisFault7.detail = (Throwable) axisFault6;
      axisFault7.setFaultRole((String) null);
      AxisFault axisFault8 = new AxisFault();
      axisFault7.getFaultSubCodes();
      axisFault4.getStackTrace();
      axisFault7.getStackTrace();
      AxisFault axisFault9 = new AxisFault("AxisFault\n faultCode: {http://schemas.xmlsoap.org/soap/envelope/}Server.generalException\n faultSubcode: \njavax.xml.namespace.QName@0000000004\njavax.xml.namespace.QName@0000000005\n faultString: globalConfiguration; nested exception is: \n\t\n faultActor: \n faultNode: \n faultDetail: \n\t{http://xml.apache.org/axis/}hostname:192.168.1.42\n");
      axisFault1.addFaultSubCodeAsString("globalConfiguration");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Detail detail0 = new Detail();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      QName qName0 = WSDDConstants.QNAME_FAULT;
      QName[] qNameArray0 = new QName[8];
      qNameArray0[1] = qName0;
      qNameArray0[1] = qNameArray0[0];
      qNameArray0[2] = qName0;
      qNameArray0[3] = qName0;
      qNameArray0[4] = qName0;
      qNameArray0[5] = qName0;
      qNameArray0[0] = qName0;
      qNameArray0[7] = qNameArray0[1];
      qName0.toString();
      Element[] elementArray0 = new Element[3];
      elementArray0[1] = (Element) detail0;
      Element[] elementArray1 = new Element[24];
      elementArray1[0] = (Element) detail0;
      elementArray1[2] = (Element) detail0;
      elementArray1[4] = (Element) detail0;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      try { 
        recordTypeMessage0.setResponseObject(detail0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.apache.axis.message.Detail cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageContext.getCurrentContext();
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope();
      sOAPEnvelope0.addNamespaceDeclaration("axis.wsdlgen.serv.loc.url", "authenticatedUser");
      sOAPEnvelope0.getAttributeNode("acceptMissingParams");
      DeserializationContext deserializationContext0 = new DeserializationContext((InputSource) null, (MessageContext) null, "call_object");
      SOAPEnvelope sOAPEnvelope1 = new SOAPEnvelope();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("attachments.directory", (XBUSSystem) null, "axis.transport.version");
      deserializationContext0.error((SAXParseException) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("axis.wsdlgen.intfnamespace");
      mockPrintWriter0.println("securityProvider");
      sOAPEnvelope1.setAttribute("attachments.directory", "engine.handler");
      SerializationContext serializationContext0 = new SerializationContext(mockPrintWriter0, (MessageContext) null);
      QName qName0 = new QName("isMsg", "axis.wsdlgen.serv.loc.url", "axis.wsdlgen.intfnamespace");
      sOAPEnvelope1.addChildElement("securityProvider");
      deserializationContext0.getDeserializerForType(qName0);
      DeserializationContext deserializationContext1 = new DeserializationContext((InputSource) null, (MessageContext) null, "call_object", sOAPEnvelope0);
      deserializationContext1.registerFixup("call_object", (Deserializer) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "attachments.directory");
      DeserializationContext deserializationContext2 = new DeserializationContext((InputSource) null, (MessageContext) null, "axis.wsdlgen.intfnamespace", sOAPEnvelope0);
      Detail detail0 = new Detail();
      deserializationContext1.setCurElement(sOAPEnvelope1);
      Document document0 = detail0.getOwnerDocument();
      recordTypeMessage0.setResponseDocument(document0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseObject();
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP11Constants sOAP11Constants0 = new SOAP11Constants();
      SOAPEnvelope sOAPEnvelope2 = new SOAPEnvelope(false, sOAP12Constants0);
      SchemaVersion1999 schemaVersion1999_0 = (SchemaVersion1999)SchemaVersion.SCHEMA_1999;
      SOAP11Constants sOAP11Constants1 = SOAPConstants.SOAP11_CONSTANTS;
      SOAPConstants sOAPConstants0 = deserializationContext1.getSOAPConstants();
      SOAPEnvelope sOAPEnvelope3 = new SOAPEnvelope(false, sOAPConstants0, schemaVersion1999_0);
      SOAPEnvelope sOAPEnvelope4 = new SOAPEnvelope();
      assertNull(sOAPEnvelope4.getMessageType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-44L), (-44L));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Instant instant1 = MockInstant.ofEpochSecond((long) (byte)127, (long) (byte)127);
      Instant instant2 = MockInstant.minusNanos(instant0, (-44L));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.toByteArray();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      Instant instant3 = MockInstant.minusNanos(instant1, (-44L));
      Instant instant4 = MockInstant.minusNanos(instant2, (byte)127);
      Instant instant5 = MockInstant.plusNanos(instant1, (-44L));
      MockInstant.minusSeconds(instant5, (-2513L));
      Instant instant6 = MockInstant.minusSeconds(instant3, (-44L));
      Instant instant7 = MockInstant.minusNanos(instant2, (-2513L));
      Instant instant8 = MockInstant.minusMillis(instant4, (-44L));
      Instant instant9 = MockInstant.minusNanos(instant8, (-19L));
      Instant instant10 = MockInstant.minusNanos(instant9, (-2252L));
      Instant instant11 = MockInstant.plusNanos(instant2, 0L);
      MockInstant.with(instant7, (TemporalAdjuster) instant11);
      Instant instant12 = MockInstant.plusSeconds(instant6, 1L);
      MockInstant.plusSeconds(instant12, 0L);
      MockInstant.minusNanos(instant1, (byte)127);
      Instant instant13 = MockInstant.ofEpochMilli(0L);
      MockInstant.minusNanos(instant13, (-19L));
      Instant instant14 = MockInstant.plusSeconds(instant10, (-2513L));
      assertFalse(instant14.equals((Object)instant4));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)0;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte) (-1));
      byteArrayList0.addAll(byteArrayList1);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toByteArray();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setErrorcode((-1001));
      Integer integer0 = new Integer((-1001));
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      byte[] byteArray0 = new byte[8];
      Object object0 = new Object();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      Object object1 = new Object();
      recordTypeMessage0.getResponseText();
      HashMap<ByteArrayList, String> hashMap0 = new HashMap<ByteArrayList, String>();
      HashMap<ByteArrayList, String> hashMap1 = new HashMap<ByteArrayList, String>();
      hashMap0.putAll(hashMap1);
      Hashtable<ByteArrayList, String> hashtable0 = new Hashtable<ByteArrayList, String>(hashMap0);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      assertEquals(0, byteArrayList0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AxisEngine.getCurrentMessageContext();
      QName qName0 = QName.valueOf("axis.wsdlgen.intfnamespace");
      qName0.getLocalPart();
      AxisFault axisFault0 = new AxisFault();
      axisFault0.setFaultActor("acceptMissingParams");
      axisFault0.addFaultSubCode(qName0);
      axisFault0.getMessage();
      AxisFault axisFault1 = new AxisFault("axis.wsdlgen.serv.loc.url", (Throwable) null);
      AxisFault axisFault2 = AxisFault.makeFault(axisFault0);
      axisFault0.addFaultDetail(qName0, "ZJo%{U%d#W");
      axisFault2.addFaultSubCodeAsString("ZJo%{U%d#W");
      qName0.getNamespaceURI();
      axisFault1.setFaultCode("transport.url");
      axisFault0.clearHeaders();
      axisFault0.getFaultSubCodes();
      AxisFault axisFault3 = new AxisFault();
      axisFault1.dumpToString();
      axisFault3.addSuppressed(axisFault2);
      AxisFault axisFault4 = new AxisFault();
      axisFault4.addSuppressed(axisFault3);
      axisFault4.addFaultSubCodeAsString("transport.url");
      axisFault4.clearFaultSubCodes();
      AxisFault axisFault5 = new AxisFault("securityProvider", axisFault2);
      AxisFault axisFault6 = new AxisFault("AxisFault\n faultCode: {http://schemas.xmlsoap.org/soap/envelope/}transport.url\n faultSubcode: \n faultString: axis.wsdlgen.serv.loc.url\n faultActor: \n faultNode: \n faultDetail: \n\t{http://xml.apache.org/axis/}hostname:192.168.1.42\n", axisFault5);
      AxisFault axisFault7 = new AxisFault("call_object", (Throwable) null);
      axisFault4.getStackTrace();
      axisFault3.dump();
      AxisFault axisFault8 = new AxisFault();
      axisFault8.detail = (Throwable) axisFault2;
      axisFault3.setFaultCode(qName0);
      axisFault8.getStackTrace();
      AxisFault axisFault9 = new AxisFault("qQ,g", axisFault7);
      AxisFault axisFault10 = new AxisFault();
      axisFault7.addFaultSubCodeAsString("axis.wsdlgen.intfnamespace");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("\"3v{l", (XBUSSystem) null, "Exit: BasicHandler::getDeploymentData");
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("Bx", (XBUSSystem) null, "Bx");
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-44L), (-44L));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-109);
      Instant instant1 = MockInstant.ofEpochSecond((long) (byte) (-109), (long) (byte) (-109));
      Instant instant2 = MockInstant.plusNanos(instant0, (byte) (-109));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.toByteArray();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      Instant instant3 = MockInstant.minusNanos(instant1, (-44L));
      Instant instant4 = MockInstant.plusNanos(instant2, (-44L));
      long long0 = (-2252L);
      MockInstant.minusNanos(instant3, (-2252L));
      MockInstant.plusNanos(instant3, (byte) (-109));
      MockInstant.minusMillis(instant4, (-2513L));
      long long1 = 1L;
      long long2 = (-530L);
      MockInstant.minusNanos(instant2, (-2513L));
      long long3 = (-237L);
      TemporalUnit temporalUnit0 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      doReturn((Duration) null).when(temporalUnit0).getDuration();
      // Undeclared exception!
      try { 
        MockInstant.truncatedTo(instant3, temporalUnit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.Instant", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-32L), (-32L));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-109);
      Instant instant1 = MockInstant.now();
      Instant instant2 = MockInstant.plusMillis(instant0, (-32L));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      Instant instant3 = MockInstant.minusNanos(instant1, (-32L));
      Instant instant4 = MockInstant.now();
      Instant instant5 = MockInstant.plusSeconds(instant2, (-2279L));
      Instant instant6 = MockInstant.plusNanos(instant3, (byte) (-109));
      MockInstant.minusMillis(instant4, (-2513L));
      Instant instant7 = MockInstant.minusMillis(instant3, (-530L));
      Instant instant8 = MockInstant.minusNanos(instant7, (-237L));
      Instant instant9 = MockInstant.plusNanos(instant3, 10L);
      Instant instant10 = MockInstant.with(instant5, (TemporalAdjuster) instant6);
      Instant instant11 = MockInstant.plusSeconds(instant9, (byte) (-109));
      MockInstant.plusSeconds(instant5, (-2513L));
      MockInstant.minusNanos(instant11, (-237L));
      Instant instant12 = MockInstant.minusNanos(instant8, 10L);
      Instant instant13 = MockInstant.plusNanos(instant12, 0L);
      assertFalse(instant13.equals((Object)instant10));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = WSDDConstants.QNAME_FAULT;
      qName0.getLocalPart();
      AxisFault axisFault0 = new AxisFault("fault");
      axisFault0.addFaultSubCode(qName0);
      axisFault0.getMessage();
      AxisFault axisFault1 = new AxisFault("fault", axisFault0);
      AxisFault axisFault2 = AxisFault.makeFault(axisFault1);
      axisFault1.addFaultSubCode(qName0);
      axisFault0.addFaultDetail(qName0, "fault");
      axisFault2.addFaultSubCodeAsString("fault");
      axisFault0.clearHeaders();
      axisFault0.getFaultSubCodes();
      AxisFault axisFault3 = new AxisFault();
      axisFault1.dumpToString();
      axisFault0.addSuppressed(axisFault2);
      AxisFault axisFault4 = new AxisFault("fault", axisFault2);
      AxisFault axisFault5 = new AxisFault("fault", axisFault4);
      axisFault5.addSuppressed(axisFault3);
      axisFault5.clearFaultSubCodes();
      AxisFault axisFault6 = new AxisFault("AxisFault\n faultCode: {http://schemas.xmlsoap.org/soap/envelope/}Server.generalException\n faultSubcode: \njavax.xml.namespace.QName@0000000004\njavax.xml.namespace.QName@0000000005\n faultString: fault; nested exception is: \n\tfault\n faultActor: \n faultNode: \n faultDetail: \n\t{http://xml.apache.org/axis/}hostname:192.168.1.42\n", axisFault5);
      AxisFault axisFault7 = new AxisFault("fault", axisFault6);
      AxisFault axisFault8 = new AxisFault();
      axisFault3.dump();
      axisFault7.removeFaultDetail(qName0);
      AxisFault axisFault9 = new AxisFault("AxisFault\n faultCode: {http://schemas.xmlsoap.org/soap/envelope/}Server.generalException\n faultSubcode: \njavax.xml.namespace.QName@0000000004\njavax.xml.namespace.QName@0000000005\n faultString: fault; nested exception is: \n\tfault\n faultActor: \n faultNode: \n faultDetail: \n\t{http://xml.apache.org/axis/}hostname:192.168.1.42\n", axisFault0);
      axisFault6.clearFaultSubCodes();
      axisFault0.detail = (Throwable) axisFault6;
      axisFault3.clearFaultSubCodes();
      axisFault8.clearFaultDetails();
      AxisFault axisFault10 = new AxisFault();
      axisFault7.addHostnameIfNeeded();
      axisFault9.getFaultSubCodes();
      axisFault5.getStackTrace();
      axisFault6.clearHeaders();
      axisFault9.getStackTrace();
      AxisFault axisFault11 = new AxisFault("fault", axisFault7);
      axisFault1.addFaultSubCodeAsString("fault");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("fault", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.getVersion();
      hTMLDocumentImpl1.getDoctype();
      hTMLDocumentImpl1.getInputEncoding();
      Object object0 = new Object();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.toString();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("..31`9P!OLr", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toByteArray();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("FQVO-9hFCOd5Qw", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Instant instant1 = MockInstant.plusMillis(instant0, (-44L));
      Instant instant2 = MockInstant.plusNanos(instant0, (byte)114);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Instant instant3 = MockInstant.plusMillis(instant0, (-44L));
      Instant instant4 = MockInstant.minusNanos(instant3, (byte)114);
      Instant instant5 = MockInstant.minusNanos(instant2, (byte)114);
      Instant instant6 = MockInstant.minusSeconds(instant4, (-44L));
      Instant instant7 = MockInstant.minusSeconds(instant6, (-2513L));
      Instant instant8 = MockInstant.minusNanos(instant2, (-2513L));
      Instant instant9 = MockInstant.minusMillis(instant5, (-44L));
      Instant instant10 = MockInstant.minusNanos(instant9, (-19L));
      Instant instant11 = MockInstant.minusNanos(instant10, (-2252L));
      Instant instant12 = MockInstant.plusNanos(instant2, 0L);
      MockInstant.with(instant8, (TemporalAdjuster) instant12);
      Instant instant13 = MockInstant.plusSeconds(instant7, 1L);
      MockInstant.plusSeconds(instant13, (-10L));
      MockInstant.minusNanos(instant1, (byte)114);
      Instant instant14 = MockInstant.minusNanos(instant6, (byte)114);
      MockInstant.minusNanos(instant14, (-19L));
      MockInstant.plusSeconds(instant11, (-2513L));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      TemporalUnit temporalUnit0 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.addAll(byteArrayList0);
      TemporalUnit temporalUnit1 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Clock clock0 = mock(Clock.class, new ViolatedAssumptionAnswer());
      doReturn((Instant) null).when(clock0).instant();
      MockInstant.now(clock0);
      TemporalUnit temporalUnit2 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      TemporalUnit temporalUnit3 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.resolveEntity("<ZA)Qx/:?Kl<}vJB59`", "", "", (String) null);
      MessageContext.getCurrentContext();
      Clock clock1 = mock(Clock.class, new ViolatedAssumptionAnswer());
      doReturn((Instant) null).when(clock1).instant();
      MockInstant.now(clock1);
      TemporalField temporalField0 = mock(TemporalField.class, new ViolatedAssumptionAnswer());
      TemporalUnit temporalUnit4 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, (String) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = WSDDConstants.QNAME_WSDLFILE;
      qName0.getLocalPart();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement(":,1SPwkP]pp?a`", "ZMJR*{S0T]L8O", "wsdlFile", 22);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("wsdlFile", "", "wsdlFile", 22);
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("wsdlFile", "wsdlFile", "NullDel*eate", 22);
      SOAPHeaderElement sOAPHeaderElement0 = new SOAPHeaderElement("", "", ":,1SPwkP]pp?a`");
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "wsdlFile", "QU`&lyu52_`.c", 22);
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement4 = new StackTraceElement("NullDel*eate", "NullDel*eate", "ZMJR*{S0T]L8O", (-1));
      stackTraceElementArray0[4] = stackTraceElement3;
      StackTraceElement stackTraceElement5 = new StackTraceElement(":,1SPwkP]pp?a`", "QU`&lyu52_`.c", "=0:v*Pl[Kd}lqCw", (-1));
      stackTraceElementArray0[5] = stackTraceElement0;
      StackTraceElement stackTraceElement6 = new StackTraceElement("Mm)qyT<v$~X|F4\"y>^/", "=0:v*Pl[Kd}lqCw", "ARF'1Yk", 2531);
      stackTraceElementArray0[6] = stackTraceElement6;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("ARF'1Yk", (XBUSSystem) null, "wsdlFile");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-44L), (-44L));
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      Instant instant1 = MockInstant.ofEpochSecond((long) (byte) (-98), (long) (byte) (-98));
      Instant instant2 = MockInstant.plusNanos(instant0, (byte)0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.toByteArray();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      Instant instant3 = MockInstant.minusNanos(instant1, (-44L));
      Instant instant4 = MockInstant.minusNanos(instant2, (byte) (-98));
      long long0 = (-2252L);
      Instant instant5 = MockInstant.minusNanos(instant3, (-2252L));
      MockInstant.minusSeconds(instant5, (-2513L));
      MockInstant.minusMillis(instant4, (-2513L));
      long long1 = 1L;
      long long2 = (-530L);
      MockInstant.minusNanos(instant2, (-2513L));
      long long3 = 0L;
      TemporalUnit temporalUnit0 = mock(TemporalUnit.class, new ViolatedAssumptionAnswer());
      doReturn((Duration) null).when(temporalUnit0).getDuration();
      // Undeclared exception!
      try { 
        MockInstant.truncatedTo(instant3, temporalUnit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.Instant", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.addAll(byteArrayList0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_2.endPrefixMapping("");
      defaultHandler2_2.internalEntityDecl("M", (String) null);
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.resolveEntity("hjbG.Q+/|Fg^z", "", "M", "M");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("o/PZ+Hv7xooNWe\"a", (XBUSSystem) null, "2c ZV%Up]!qNtsl\"");
      try { 
        recordTypeMessage0.setRequestObject(defaultHandler2_0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.xml.sax.ext.DefaultHandler2 cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration2 = null;
      SequenceInputStream sequenceInputStream1 = null;
      try {
        sequenceInputStream1 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      Integer integer0 = new Integer((byte) (-107));
      SOAP12Constants sOAP12Constants0 = new SOAP12Constants();
      SOAP12Constants sOAP12Constants1 = new SOAP12Constants();
      SOAP11Constants sOAP11Constants0 = SOAPConstants.SOAP11_CONSTANTS;
      SOAP11Constants sOAP11Constants1 = SOAPConstants.SOAP11_CONSTANTS;
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope(true, sOAP12Constants1);
      Integer integer1 = new Integer((byte) (-107));
      SOAP11Constants sOAP11Constants2 = new SOAP11Constants();
      SOAP12Constants sOAP12Constants2 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants3 = SOAPConstants.SOAP12_CONSTANTS;
      SOAPEnvelope sOAPEnvelope1 = new SOAPEnvelope(true, sOAP12Constants1);
      SOAPEnvelope sOAPEnvelope2 = null;
      try {
        sOAPEnvelope2 = new SOAPEnvelope(true, sOAP12Constants3, (SchemaVersion) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis.message.SOAPEnvelope", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-111);
      byteArray0[3] = (byte)118;
      byteArray0[2] = (byte)105;
      byteArray0[6] = (byte)100;
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate(eventReaderDelegate0);
      eventReaderDelegate0.setParent(eventReaderDelegate1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      try { 
        recordTypeMessage0.setRequestObject(eventReaderDelegate0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 javax.xml.stream.util.EventReaderDelegate cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }
}
