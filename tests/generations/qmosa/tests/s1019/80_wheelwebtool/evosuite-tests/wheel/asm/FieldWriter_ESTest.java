/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 20:10:03 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3827));
      classWriter0.index = (-3827);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "&>?R$", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("wheel.asm.Frame", true);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("&>?R$");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4766191546610914
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(409);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0UkB:4kkSr&x zI", "~4Q0UkB:4kkSr&x zI", (String) null, (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.putInt(8);
      ByteVector byteVector3 = byteVector2.putShort(8);
      ByteVector byteVector4 = byteVector0.putInt((-2325));
      byteVector2.putShort(195);
      ByteVector byteVector5 = byteVector3.put12(8, 8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1752), "9yee7cxeNaz^v", "", "~4Q0UkB:4kkSr&x zI", (Object) null);
      fieldWriter1.put(byteVector3);
      fieldWriter0.put(byteVector0);
      fieldWriter1.next = fieldWriter0;
      classWriter0.version = 409;
      fieldWriter1.visitAnnotation("~4Q0UkB:4kkSr&x zI", false);
      fieldWriter1.visitAnnotation("ane9!K$O3=%7|1c\"`", false);
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector4);
      ByteVector byteVector6 = classWriter0.pool;
      fieldWriter1.next.put(byteVector6);
      fieldWriter1.next.put(byteVector2);
      assertSame(byteVector2, byteVector5);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3594841863952412
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(2, 1);
      ByteVector byteVector2 = byteVector0.putInt((-2327));
      ByteVector byteVector3 = byteVector2.putShort(252);
      ByteVector byteVector4 = byteVector1.put12(1, 1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1752), "", "", "~4Q0UkB:4kkSr&x zI", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      classWriter0.version = 49;
      fieldWriter0.getSize();
      Label label0 = new Label();
      label0.frame = null;
      Label label1 = label0.successor;
      Label label2 = label0.successor;
      Label label3 = label0.successor;
      ByteVector byteVector5 = new ByteVector();
      fieldWriter0.put(byteVector5);
      fieldWriter0.put(byteVector3);
      assertSame(byteVector3, byteVector4);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2483));
      classWriter0.newNameType("WI>8{mSo", "The list of names must not be null");
      classWriter0.index = (-2105);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2483), "#0", "#0", "#0", "#0");
      fieldWriter0.getSize();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleParameterAnXotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      String string0 = "?&>?R$";
      classWriter0.newFloat((-2940));
      Attribute attribute0 = new Attribute("?&>?R$");
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteVector byteVector1 = byteVector0.putByte((-1427));
      ByteVector byteVector2 = byteVector1.put11(1, (-1427));
      ByteVector byteVector3 = new ByteVector();
      ByteVector byteVector4 = classWriter0.pool;
      ByteVector byteVector5 = byteVector4.putByte((-2940));
      byteVector3.put11((-2325), (-1427));
      byteVector5.putShort((-2325));
      byteVector0.putInt((-1784));
      ByteVector byteVector6 = byteVector2.putShort(13);
      byteVector4.putByteArray((byte[]) null, (-800), (-853));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string1 = null;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 131072, "The array of prefixes must not be null", (String) null, "org.apache.commons.io.filefilter.OrFileFilter", byteVector6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0303970627479953
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2483));
      classWriter0.version = (-2483);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2483), "i?&>?L$", "i?&>?L$", "i?&>?L$", "i?&>?L$");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleParameterAnXotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ClassWriter classWriter0 = new ClassWriter((-1));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte) (-5);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "?fq- _0+M@?)>03kY";
      stringArray0[1] = "BsgdHajF8";
      stringArray0[2] = "wheel.asm.FieldWriter";
      stringArray0[3] = "wheel.asm.FieldWriter";
      stringArray0[4] = "BsgdHajF8";
      stringArray0[5] = "wheel.asm.FieldWriter";
      classWriter0.visit((byte) (-5), (byte)82, "BsgdHajF8", "BsgdHajF8", "wheel.asm.FieldWriter", stringArray0);
      byteArray0[3] = (byte)82;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2960), "`bc+v<{*M5", "kcB{Io", "`bc+v<{*M5", "`bc+v<{*M5");
      ByteVector byteVector0 = new ByteVector(2077);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0HkB:4kkSr&x oI", "wTl", (String) null, (Object) null);
      byte byte0 = (byte) (-2);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream3.reset();
      byteArrayInputStream3.read(byteArray0);
      byteArrayInputStream3.reset();
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteVector0.put11((-973), (byte) (-2));
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector0.put12((-1), (byte) (-2));
      byteVector2.length = 165;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.546204011053808
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0UkB:4kkSr&x zI", "wTl", (String) null, (Object) null);
      fieldWriter0.getSize();
      classWriter0.visitAnnotation("ConstantValue", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2);
      byteVector1.putInt(8);
      byteVector0.length = 1;
      byteVector0.put11((-2337), 1);
      ByteVector byteVector2 = new ByteVector();
      ByteVector byteVector3 = byteVector1.put11((-2337), 8);
      ByteVector byteVector4 = byteVector3.put11(4, 2);
      ByteVector byteVector5 = byteVector1.put11(2, 1);
      ByteVector byteVector6 = byteVector3.putInt((-2337));
      byteVector4.putShort(213);
      ByteVector byteVector7 = byteVector4.putShort((-29));
      fieldWriter0.put(byteVector5);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("n/?w", false);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector7);
      assertSame(byteVector7, byteVector6);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 12, "", "", (String) null, "");
      fieldWriter0.getSize();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5492999862860062
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0UkB:4kkSr&x zI", "wTl", (String) null, (Object) null);
      fieldWriter0.getSize();
      classWriter0.visitAnnotation("ConstantValue", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.putInt(8);
      byteVector0.length = 1;
      byteVector0.put11((-2337), 1);
      byteVector2.putByte(4);
      ByteVector byteVector3 = byteVector1.put11((-2337), 8);
      ByteVector byteVector4 = byteVector3.put11(4, 2);
      ByteVector byteVector5 = byteVector1.put11(2, 1);
      ByteVector byteVector6 = byteVector3.putInt((-2337));
      byteVector4.putShort(213);
      ByteVector byteVector7 = byteVector4.putShort((-29));
      fieldWriter0.put(byteVector5);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("n/?w", false);
      fieldWriter0.visitAnnotation("ConstantValue", true);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector7);
      ByteVector byteVector8 = byteVector6.put11((-2353), 4);
      fieldWriter0.put(byteVector8);
      assertSame(byteVector8, byteVector4);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.546204011053808
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0UkB:4kkSr&x zI", "wTl", (String) null, (Object) null);
      fieldWriter0.getSize();
      classWriter0.visitAnnotation("ConstantValue", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.putInt(8);
      byteVector0.length = 1;
      byteVector0.put11((-2337), 1);
      byteVector2.putByte(4);
      ByteVector byteVector3 = byteVector1.put11((-2337), 8);
      ByteVector byteVector4 = byteVector3.put11(4, 2);
      ByteVector byteVector5 = byteVector1.put11(2, 1);
      ByteVector byteVector6 = byteVector3.putInt((-2337));
      byteVector4.putShort(213);
      ByteVector byteVector7 = byteVector4.putShort((-29));
      fieldWriter0.put(byteVector5);
      fieldWriter0.visitAnnotation("n/?w", false);
      fieldWriter0.visitAnnotation("ConstantValue", true);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector7);
      ByteVector byteVector8 = byteVector6.put11(1, 4);
      fieldWriter0.put(byteVector8);
      assertSame(byteVector8, byteVector1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "wK", "", "i?&>?R$");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0HkB:4kkSr&x oI", "wTl", (String) null, (Object) null);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream3.reset();
      byteArrayInputStream3.read(byteArray0);
      byteArrayInputStream3.reset();
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Attribute attribute0 = new Attribute("wTl");
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.put11((-973), (byte)25);
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector0.put12((-1), (byte)25);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector2);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1514);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      PipedInputStream pipedInputStream4 = null;
      try {
        pipedInputStream4 = new PipedInputStream(pipedOutputStream1, (byte)25);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0616109402358964
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0HkB:4kkSr&x oI", "wTl", (String) null, (Object) null);
      byte byte0 = (byte) (-2);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream3.reset();
      byteArrayInputStream3.read(byteArray0);
      byteArrayInputStream3.reset();
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Attribute attribute0 = new Attribute("wTl");
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.put11((-973), (byte) (-2));
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector0.put12((-1), (byte) (-2));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2483));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2483), "i?&>?R$", "i?&>?R$", "i?&>?R$", "i?&>?R$");
      Attribute attribute0 = new Attribute("(fU/B?9V#");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0HkB:4kkSr&x oI", "~4Q0HkB:4kkSr&x oI", (String) null, "~4Q0HkB:4kkSr&x oI");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream3.reset();
      byteArrayInputStream3.read(byteArray0);
      byteArrayInputStream3.reset();
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteVector0.put11((-973), (byte) (-2));
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector0.put12((-1), (byte) (-2));
      fieldWriter0.put(byteVector2);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1514);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      PipedInputStream pipedInputStream4 = null;
      try {
        pipedInputStream4 = new PipedInputStream(pipedOutputStream1, (byte) (-2));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "91+8x$3ySq2");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2961), "`bc+v<{*M5", "kcB{Io", "`bc+v<{*M5", "`bc+v<{*M5");
      ByteVector byteVector0 = new ByteVector(2077);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`X]O{[gi;<-P3");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = new ByteVector();
      assertFalse(byteVector1.equals((Object)byteVector0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "The suffix must not be null", " N47y`OEkW[h%FZK`=<", "Sb-bwSz'", "Deprecated");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("mYGM`/EL", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 39;
      ClassWriter classWriter0 = new ClassWriter(39);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "~4Q0HkB:4kkSr&x oI", "wT", (String) null, (Object) null);
      byte byte0 = (byte) (-2);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      int int1 = (-973);
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream3.reset();
      byteArrayInputStream3.read(byteArray0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.visitField((-4030), ").jg7AL7p8Y!", "#yp", "~4Q0HkB:4kkSr&x oI", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@505b8d9
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16, "SXQv6E", "y.r58j-:_", "i?&>?R$", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "91+8x$3ySq2");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2960), "`bc+v<{*M5", "kcB{Io", "`bc+v<{*M5", "`bc+v<{*M5");
      ByteVector byteVector0 = new ByteVector(2077);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`X]O{[gi;<-P3");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = new ByteVector();
      assertFalse(byteVector1.equals((Object)byteVector0));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      String string0 = null;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 4, (String) null, "7oJCDE&", "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = (-2483);
      ClassWriter classWriter0 = new ClassWriter((-2483));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2483), "i?&>?R$", "i?&>?R$", "i?&>?R$", "i?&>?R$");
      fieldWriter0.getSize();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleParameterAnXotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2579);
      Object object0 = new Object();
      Item item0 = classWriter0.newConstItem("RuntimeVisibleAnnotations");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      Item item1 = classWriter0.newClassItem("{iKnFxg*3u");
      Item item2 = classWriter0.newMethodItem("WW(!OY>I)<\"YiP&", "RuntimeInvisibleAnnotations", "WW(!OY>I)<\"YiP&", true);
      Item[] itemArray0 = new Item[8];
      itemArray0[0] = item0;
      itemArray0[1] = item1;
      itemArray0[2] = item2;
      itemArray0[3] = item1;
      Item item3 = classWriter0.newLong((-1473L));
      itemArray0[4] = item3;
      itemArray0[5] = item1;
      itemArray0[6] = item2;
      itemArray0[7] = item1;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-242), "h`-Iu^C]xF;|dT", "RuntimeVisibleAnnotations", "h`-Iu^C]xF;|dT", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@53e88334
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3215057425739665
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>?R$", "?&>?R$", "`{bca+v<{*r5", "?&>?R$");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("?&>?R$");
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)49;
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte) (-110);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
