/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 15:14:09 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      String string0 = JSONObject.valueToString(hashMap0, (-22654515), 1817);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String string0 = JSONObject.valueToString(jSONArray0, 303, 1);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("6q;bj^!c");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 6q;bj^!c
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Double double0 = new Double(698.0215912);
      JSONObject.testValidity(double0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9830877585747856
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      Long long0 = new Long(447L);
      hashMap0.put((Double) null, long0);
      String string0 = JSONObject.valueToString(hashMap0);
      assertNull(string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      Object object0 = jSONObject1.remove("] is not a Boolean.");
      assertNotSame(jSONObject0, object0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("#;c7K3B=\"Gf#.0", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2337380151460802
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.optString((String) null, (String) null);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.572528756326852
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Short short0 = new Short((short)160);
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.optLong("jwXP<%(M", 0L);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.551051583822962
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "lB");
      long long0 = jSONObject0.optLong("va", (-1157L));
      assertEquals((-1157L), long0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte)45);
      hashMap0.put("Bwg=4", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      long long0 = jSONObject0.optLong("Bwg=4");
      assertEquals(45L, long0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0981473891350673
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HashMap<Integer, Byte> hashMap0 = new HashMap<Integer, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer((-1099));
      jSONObject0.putOpt("", integer0);
      long long0 = jSONObject0.optLong("");
      assertEquals((-1099L), long0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8734641445321512
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\u";
      int int0 = jSONObject0.optInt(string0, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0449311748495913
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double(100);
      jSONObject0.putOpt("\"\"", double0);
      int int0 = jSONObject0.optInt("\"\"");
      assertEquals(100, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Float float0 = new Float((double) (-3180));
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      double double0 = jSONObject0.optDouble("`)0Vzk)R*IBbw#/", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.optBoolean("toS", false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[9];
      JSONObject jSONObject0 = new JSONObject("`)0Vzk)R*IBbw#/", stringArray0);
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      jSONObject0.put("`)0Vzk)R*IBbw#/", (Map) hashMap0);
      JSONObject jSONObject1 = (JSONObject)jSONObject0.opt("`)0Vzk)R*IBbw#/");
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.473502385080649
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Float float0 = new Float((double) (byte)18);
      jSONObject0.append("lhigOZ7r8@U(S-@L", float0);
      boolean boolean0 = jSONObject0.has("lhigOZ7r8@U(S-@L");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Float float0 = new Float((-3238.3F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Object object0 = new Object();
      jSONObject0.append("getlogicalOr", object0);
      jSONObject0.getString("getlogicalOr");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Byte byte0 = new Byte((byte)123);
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      hashMap0.put("\"ADyFOf)!IqJjk", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      long long0 = jSONObject0.getLong("\"ADyFOf)!IqJjk");
      assertEquals(123L, long0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Byte byte0 = new Byte((byte)123);
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      hashMap0.put("\"ADyFOf)!IqJjk", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.getDouble("\"ADyFOf)!IqJjk");
      assertEquals(123.0, double0, 0.01);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("1~4_bFY5L(D.VpWu", (long) (byte) (-76));
      double double0 = jSONObject0.getDouble("1~4_bFY5L(D.VpWu");
      assertEquals((-76.0), double0, 0.01);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2706817223249798
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9649629230074277
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Double double0 = new Double(Double.NaN);
      try { 
        JSONObject.valueToString(double0, 0, 46);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.955842284834949
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.put("", 62);
      // Undeclared exception!
      jSONObject0.toString(55, 2147483645);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0042215783008093
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      JSONObject jSONObject1 = jSONObject0.accumulate("is", jSONObject0);
      // Undeclared exception!
      jSONObject1.toString(214);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Integer integer0 = new Integer(32);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      try { 
        jSONObject0.put((String) null, 6770L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.2092536248090335
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Short short0 = new Short((short)160);
      JSONObject jSONObject0 = new JSONObject(short0);
      try { 
        jSONObject0.put((String) null, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1752045970807579
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.put((String) null, (-2693.9586));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      Double double0 = new Double((short)1513);
      Long long0 = new Long((short)1513);
      hashMap0.put(double0, long0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames(jSONObject0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Double cannot be cast to java.lang.String
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7870020467612302
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Object) hashMap0);
      jSONObject0.toString(1513, 62);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HashMap<Float, String> hashMap0 = new HashMap<Float, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString(87, 87);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = JSONObject.quote("Y#z1{yYqQjs7<w\"@");
      assertEquals("\"Y#z1{yYqQjs7<w\\\"@\"", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = JSONObject.quote("@B/S");
      assertEquals("\"@B/S\"", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      JSONObject jSONObject1 = jSONObject0.putOpt((String) null, (Object) null);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.putOpt("YZ2Irpuq", (Object) null);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1752045970807579
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      JSONObject jSONObject1 = jSONObject0.put("#;c7K3B=\"Gf#.0", (Object) null);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double(1607.470887);
      try { 
        jSONObject0.put((String) null, (Object) double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2337380151460802
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "");
      String string0 = jSONObject0.optString("&!=jad5$2'=o~", "");
      assertEquals(3, jSONObject0.length());
      assertEquals("", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.499509409674557
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", byte0);
      jSONObject1.optString("", "");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Float float0 = new Float((-3238.0F));
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.put("", 2505L);
      double double0 = jSONObject0.optDouble("", (-3424.676159541761));
      assertEquals(4, jSONObject0.length());
      assertEquals(2505.0, double0, 0.01);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("jVNt,%2y79l7", (-969.4322601278569));
      assertEquals((-969.4322601278569), double0, 0.01);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.opt("] is not a JSON^bject.");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = jSONObject0.opt((String) null);
      assertNull(object0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Double double0 = new Double((-30803703));
      String string0 = JSONObject.numberToString(double0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4794090592280063
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("sh", false);
      try { 
        jSONObject0.getInt("sh");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"sh\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5985597997280185
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Double double0 = new Double(1542.11);
      JSONObject jSONObject0 = new JSONObject(double0);
      Float float0 = Float.valueOf((float) 22);
      jSONObject0.append("e~_hB44+@EEtl", float0);
      try { 
        jSONObject0.getDouble("e~_hB44+@EEtl");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"e~_hB44+@EEtl\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte) (-1));
      hashMap0.put("-5U3qb1_Zn+@z:Cb=", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = jSONObject0.get("-5U3qb1_Zn+@z:Cb=");
      assertEquals((byte) (-1), object0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Float float0 = new Float((-3238.3F));
      JSONObject jSONObject0 = new JSONObject(float0);
      int int0 = jSONObject0.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[9];
      JSONObject jSONObject0 = new JSONObject("`)0Vzk)R*IBbw#/", stringArray0);
      Iterator iterator0 = jSONObject0.keys();
      assertNotNull(iterator0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.remove("] is not a Boolean.");
      assertNull(object0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.855808503041359
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Short short0 = new Short((short)3277);
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.append("lJigOZ7r8@U(S-@L", "lJigOZ7r8@U(S-@L");
      StringWriter stringWriter0 = new StringWriter(1570);
      jSONObject1.write(stringWriter0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4849258911092231
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      Writer writer0 = jSONObject0.write(stringWriter0);
      assertSame(writer0, stringWriter0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = linkedList0.clone();
      String string0 = JSONObject.valueToString(object0, 35, (short)105);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0, (short)1513, 0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String[] stringArray0 = new String[10];
      String string0 = JSONObject.valueToString(stringArray0[0], 98, 4);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = linkedList0.clone();
      String string0 = JSONObject.valueToString(object0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      String string0 = JSONObject.valueToString(jSONArray0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.317688301004166
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      JSONObject.valueToString(jSONObject0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8008293981022103
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "lB");
      String string0 = jSONObject0.toString();
      assertEquals(3, jSONObject0.length());
      assertNotNull(string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4311385219282593
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = jSONArray0.put((-36.05204852));
      JSONArray jSONArray2 = jSONObject0.toJSONArray(jSONArray1);
      try { 
        jSONObject0.toJSONArray(jSONArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.167723997949895
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Float float0 = new Float((-3238.3F));
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertEquals(3, jSONObject0.length());
      assertNull(jSONArray1);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.toJSONArray((JSONArray) null);
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5527544208615973
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      long long0 = jSONObject0.optLong("v\u0007", 1L);
      assertEquals(1, jSONObject0.length());
      assertEquals(1L, long0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.8734641445321512
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\u";
      int int0 = jSONObject0.optInt(string0, 59);
      assertEquals(59, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.7031315809655684
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONObject("f;VjV7 U:/&=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"f;VjV7 U:/&=\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = JSONObject.quote(",\n");
      assertEquals("\",\\n\"", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = JSONObject.quote("\t");
      assertEquals("\"\\t\"", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.459801299462856
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7851038147158325
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      long long0 = jSONObject0.optLong((String) null);
      assertEquals(0L, long0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "f;VjV7 U:/&=";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertFalse(jSONObject1.equals((Object)jSONObject0));
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.464816384890813
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.accumulate((String) null, stringWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1285962936622183
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.put("ma", true);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5655234268707423
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Short short0 = new Short((short)160);
      JSONObject jSONObject0 = new JSONObject(short0);
      Object object0 = new Object();
      jSONObject0.append("`xP;R B}", object0);
      jSONObject0.optString("`xP;R B}");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5228146795137598
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Boolean, JSONArray> hashMap0 = new HashMap<Boolean, JSONArray>();
      jSONObject0.put("] is not a JSON^bject.", (Map) hashMap0);
      jSONObject0.optJSONObject("] is not a JSON^bject.");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("wheel.json.JSONTokener");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.2337380151460804
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "FR<m4Bi");
      jSONObject0.optJSONArray("FR<m4Bi");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("\"\"", (-98L));
      double double0 = jSONObject1.optDouble("\"\"");
      assertEquals((-98.0), double0, 0.01);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5890510315176962
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double(0.0);
      JSONObject jSONObject1 = new JSONObject(double0);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Short short0 = new Short((short)35);
      String string0 = JSONObject.valueToString(short0, (short) (-584), 1253);
      assertNotNull(string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.6890092384766586
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Float float0 = new Float((-3238.3F));
      String string0 = JSONObject.numberToString(float0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.8836642879810856
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "getgetChars");
      // Undeclared exception!
      JSONObject.valueToString(jSONObject0, 377, 4314);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte)45);
      hashMap0.put("Bwg=4", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      String[] stringArray0 = JSONObject.getNames((Object) hashMap0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.4921530032950385
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNotNull(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      JSONObject jSONObject2 = jSONObject1.getJSONObject("] is not a Boolean.");
      assertEquals(0, jSONObject2.length());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5945247843369215
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Object) "{}");
      JSONObject jSONObject1 = jSONObject0.accumulate("{}", hashMap0);
      try { 
        jSONObject1.getJSONObject("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Float float0 = new Float((-3238.3F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Object object0 = new Object();
      JSONObject jSONObject1 = jSONObject0.append("getlogicalOr", object0);
      jSONObject1.getJSONArray("getlogicalOr");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.4280648236309732
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("rw*i=5U0H%`02D84^", "rw*i=5U0H%`02D84^");
      try { 
        jSONObject0.getJSONArray("rw*i=5U0H%`02D84^");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"rw*i=5U0H%`02D84^\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.6162572902207617
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      jSONObject0.putOpt("", byte0);
      jSONObject0.getInt("");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6761389064361045
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      int int0 = jSONObject0.optInt("] is not a Boolean.", (-2604));
      assertEquals((-2604), int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5655234268707423
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      jSONObject0.put("e*]v,@Gm>+6)/Q&`/", 0L);
      jSONObject0.getDouble("e*]v,@Gm>+6)/Q&`/");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3068894077018045
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("\"ADyFOf)!IqJjk", (Object) "\"ADyFOf)!IqJjk");
      try { 
        jSONObject0.getLong("\"ADyFOf)!IqJjk");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"ADyFOf)!IqJjk\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.9656421724371469
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte) (-1));
      hashMap0.put("-5U3qb1_Zn+@z:Cb=", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getBoolean("-5U3qb1_Zn+@z:Cb=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"-5U3qb1_Zn+@z:Cb=\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte) (-1));
      hashMap0.put("-5U3qb1_Zn+@z:Cb=", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      long long0 = jSONObject0.getLong("-5U3qb1_Zn+@z:Cb=");
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = JSONObject.doubleToString((byte) (-116));
      assertEquals("-116", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-30803703));
      assertEquals("-3.0803703E7", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-2706.5015554));
      assertEquals("-2706.5015554", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = JSONObject.doubleToString(Double.NaN);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.4085788142038693
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Short short0 = new Short((short)3277);
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.append("lhigOZ7r8@U(S-@L", "lhigOZ7r8@U(S-@L");
      jSONObject0.append("lhigOZ7r8@U(S-@L", jSONObject0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte) (-1));
      hashMap0.put("-5U3qb1_Zn+@z:Cb=", byte0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.append("-5U3qb1_Zn+@z:Cb=", "-5U3qb1_Zn+@z:Cb=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[-5U3qb1_Zn+@z:Cb=] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("e~_hB44+@EEtl", (Object) null);
      jSONObject1.accumulate("e~_hB44+@EEtl", (Object) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.3356031336424652
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject0.accumulate("java.lang.Byte@0000000006", jSONArray0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("sh", false);
      jSONObject1.accumulate("sh", hashMap0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("8xn");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 8xn
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{}");
      JSONObject jSONObject0 = new JSONObject(jSONTokener0);
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8636799873410004
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.putOpt("", object0);
      boolean boolean0 = jSONObject1.isNull("");
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.664556478966277
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      jSONObject0.putOpt("", byte0);
      boolean boolean0 = jSONObject0.isNull("");
      assertEquals(2, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString(3603);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.271899083808096
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[9];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      int int0 = jSONObject0.optInt("getvalueOf");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.271899083808096
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-14));
      String[] stringArray0 = new String[9];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean(": ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean("false", true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.719647346918785
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.toString(1072, 116);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.3923979535566886
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Float float0 = new Float(0.0);
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.put("JSON does not allow non-finite numbers.", 0.0);
      assertEquals(9, jSONObject0.length());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.accumulate("=6nz%C.+", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.469483727358999
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Float float0 = new Float((-3238.3F));
      JSONObject jSONObject0 = new JSONObject(float0);
      try { 
        jSONObject0.getString("getlogicalOr");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getlogicalOr\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.504077396776274
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Double double0 = new Double(945.2067169571);
      String[] stringArray0 = JSONObject.getNames((Object) double0);
      assertNotNull(stringArray0);
      
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.put("<ItcBilT`TjM", (Collection) linkedList0);
      assertEquals(9, jSONObject0.length());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has("");
      assertFalse(boolean0);
  }
}
