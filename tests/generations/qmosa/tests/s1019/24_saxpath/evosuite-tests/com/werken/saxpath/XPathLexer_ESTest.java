/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 20:51:53 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.60189855372537
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.pipe();
      token2.toString();
      token3.toString();
      String string0 = token4.toString();
      assertEquals("[ (17) (#)", string0);
      
      token2.toString();
      String string1 = token2.toString();
      assertEquals("[ (3) (;)", string1);
      
      Token token5 = xPathLexer0.leftParen();
      token5.toString();
      String string2 = token5.toString();
      assertEquals("[ (1) (z)", string2);
      
      String string3 = token3.toString();
      assertEquals("[ (16) (N)", string3);
      
      XPathLexer xPathLexer1 = new XPathLexer("qe2/.");
      xPathLexer1.setPreviousToken(token4);
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("C", token6.getTokenText());
      
      Token token7 = xPathLexer1.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      String string4 = token1.toString();
      assertEquals("[ (15) (H3RuL)", string4);
      
      token4.toString();
      xPathLexer1.identifier();
      Token token8 = xPathLexer0.pipe();
      xPathLexer1.setPreviousToken(token8);
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(3, int0);
      
      xPathLexer1.pipe();
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals(".", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("qe2/.");
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("q", token11.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9603788677986413
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.at();
      assertEquals("3", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("GE", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("HJWmn;JRkgt", token5.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("L", token6.getTokenText());
      
      Token token7 = xPathLexer1.equals();
      assertEquals("H", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer2.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals(";", token9.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1761645566198755
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      token1.toString();
      xPathLexer1.equals();
      token2.toString();
      xPathLexer0.relationalOperator();
      xPathLexer1.plus();
      token3.toString();
      token4.toString();
      xPathLexer0.identifierOrOperatorName();
      token4.toString();
      xPathLexer1.literal();
      xPathLexer0.operatorName();
      token0.toString();
      xPathLexer0.literal();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("om.werken.saxpath.Token");
      xPathLexer2.leftBracket();
      xPathLexer2.nextToken();
      xPathLexer0.or();
      xPathLexer1.minus();
      xPathLexer1.at();
      xPathLexer0.not();
      xPathLexer1.star();
      Token token5 = xPathLexer1.operatorName();
      assertNull(token5);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0178852378832985
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.and();
      xPathLexer0.consume((-5443));
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.206826992801329
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("R", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      xPathLexer0.leftBracket();
      xPathLexer0.consume(89);
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      Token token6 = xPathLexer0.comma();
      assertEquals("~", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.div();
      Token token9 = xPathLexer0.leftParen();
      assertEquals("F", token9.getTokenText());
      
      xPathLexer0.setXPath(" np7U#a%.y");
      Token token10 = xPathLexer0.whitespace();
      assertEquals("", token10.getTokenText());
      assertEquals((-2), token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("np", token12.getTokenText());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("7", token13.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
      
      xPathLexer2.or();
      Token token15 = xPathLexer2.at();
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.230092287766407
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.setXPath("_z/$z`/");
      xPathLexer0.colon();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("z", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("$", token7.getTokenText());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("z", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.colon();
      assertEquals("`", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer4.doubleColon();
      xPathLexer2.doubleColon();
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer3.operatorName();
      Token token12 = xPathLexer2.dots();
      assertEquals("m.", token12.getTokenText());
      assertEquals(14, token12.getTokenType());
      
      Token token13 = xPathLexer0.rightBracket();
      assertEquals(4, token13.getTokenType());
      assertEquals("/", token13.getTokenText());
      
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      
      char char0 = xPathLexer2.LA(103);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.97757020579689
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("&E<G");
      XPathLexer xPathLexer2 = new XPathLexer("&E<G");
      XPathLexer xPathLexer3 = new XPathLexer("\bWPW");
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer3.colon();
      assertEquals("\b", token0.getTokenText());
      
      Token token1 = xPathLexer2.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer3.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer0.dollar();
      xPathLexer1.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("\bWPW");
      XPathLexer xPathLexer6 = new XPathLexer("&E<G");
      XPathLexer xPathLexer7 = new XPathLexer(") (");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer6.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      Token token6 = xPathLexer7.dollar();
      assertEquals(")", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer(") (");
      xPathLexer7.relationalOperator();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token7 = xPathLexer10.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("<G", token8.getTokenText());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("WP", token9.getTokenText());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("G", token10.getTokenText());
      
      Token token11 = xPathLexer11.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer7.or();
      XPathLexer xPathLexer12 = new XPathLexer("^{*$s)KvyGC(QEF8$D9");
      Token token12 = xPathLexer8.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9482247785078384
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("lra", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer2.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      XPathLexer xPathLexer5 = new XPathLexer("P6.E");
      Token token3 = xPathLexer5.nextToken();
      assertEquals("P6.E", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.rightParen();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("V~glrLX\\*sg\u0007r!");
      xPathLexer5.relationalOperator();
      Token token6 = xPathLexer7.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("^#", token7.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token8 = xPathLexer8.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals(")", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      xPathLexer7.or();
      XPathLexer xPathLexer9 = new XPathLexer("P6.E");
      Token token11 = xPathLexer7.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1112794241393114
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      XPathLexer xPathLexer2 = new XPathLexer("O44&2Wt>}6ZU:6");
      XPathLexer xPathLexer3 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer2.colon();
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer3.whitespace();
      assertEquals("", token1.getTokenText());
      
      xPathLexer1.number();
      Token token2 = xPathLexer2.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer3.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(";", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer3.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token6 = xPathLexer4.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals(";N", token7.getTokenText());
      
      xPathLexer2.doubleColon();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals("dH", token8.getTokenText());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("h#suwfq41/Ila!}P");
      Token token10 = xPathLexer6.slashes();
      assertEquals("h", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer2.dots();
      assertEquals("t", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer4.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer6.rightBracket();
      assertEquals("", token13.getTokenText());
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer3.comma();
      assertEquals(32, token15.getTokenType());
      assertEquals("#", token15.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0803380089108976
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.at();
      assertEquals("R", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("3", token1.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("L", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      Token token6 = xPathLexer0.leftParen();
      String string0 = token5.toString();
      assertEquals("[ (15) ()", string0);
      
      String string1 = token6.toString();
      assertEquals("[ (1) (;)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("d", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("N#zC", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (1) (;)");
      Token token8 = xPathLexer1.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("|");
      XPathLexer xPathLexer5 = new XPathLexer("u3f27q?S!z|");
      xPathLexer5.relationalOperator();
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("|", token10.getTokenText());
      
      xPathLexer2.and();
      XPathLexer xPathLexer6 = new XPathLexer(".BL`2$|E~P");
      Token token11 = xPathLexer6.doubleColon();
      assertEquals(".B", token11.getTokenText());
      
      xPathLexer2.doubleColon();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer5.star();
      assertEquals("u", token13.getTokenText());
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer1.equals();
      assertEquals(21, token14.getTokenType());
      assertEquals(" ", token14.getTokenText());
      
      Token token15 = xPathLexer4.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7038419442789468
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.setXPath("-~1B3dFFIq*5A+i728G");
      xPathLexer0.plus();
      xPathLexer0.setXPath("8yzDf,)^CE-Y.}m4yC");
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("-~1B3dFFIq*5A+i728G");
      xPathLexer1.setXPath("9gq|JKp#cQ2QAJ&0W)k");
      xPathLexer0.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer1.dots();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("9gq|JKp#cQ2QAJ&0W)k");
      xPathLexer4.plus();
      xPathLexer3.minus();
      Token token1 = xPathLexer3.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4487267525804546
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.dots();
      xPathLexer0.literal();
      token1.toString();
      token1.toString();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0071089462266167
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.comma();
      xPathLexer1.setXPath("");
      xPathLexer0.and();
      xPathLexer1.literal();
      xPathLexer0.not();
      xPathLexer0.setXPath("VQj2}t");
      xPathLexer1.leftParen();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("");
      XPathLexer xPathLexer3 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      XPathLexer xPathLexer4 = new XPathLexer("]y0g01_.WM[j");
      XPathLexer xPathLexer5 = new XPathLexer("z");
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.not();
      xPathLexer0.slashes();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.leftBracket();
      xPathLexer4.nextToken();
      xPathLexer6.at();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.981204144800138
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("Dreo^9KoTJ'+jX+l1");
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("bQ0s &3/");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("Dreo^9KoTJ'+jX+l1");
      xPathLexer1.slashes();
      xPathLexer3.not();
      xPathLexer0.literal();
      xPathLexer1.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.whitespace();
      xPathLexer1.dots();
      xPathLexer0.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer1.at();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3304214072680836
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.setXPath("s}S-7s@#-%skT1x2S");
      xPathLexer0.and();
      Token token0 = xPathLexer0.minus();
      assertEquals("s", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.leftParen();
      Token token1 = xPathLexer0.comma();
      assertEquals("}", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer1.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.at();
      xPathLexer1.rightParen();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer1.or();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer1.notEquals();
      xPathLexer1.doubleColon();
      xPathLexer2.doubleColon();
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer1.star();
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer1.operatorName();
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals("%", token12.getTokenText());
      assertEquals(4, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2011900389575456
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.pipe();
      assertEquals("u", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.plus();
      assertEquals("#", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer3 = new XPathLexer("@FNe");
      xPathLexer1.colon();
      Token token4 = xPathLexer3.nextToken();
      assertEquals(16, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("zC", token6.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("5isgsShktvn");
      Token token7 = xPathLexer2.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("5", token7.getTokenText());
      
      Token token8 = xPathLexer1.identifier();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftBracket();
      assertEquals("F", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer5.nextToken();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer5.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      xPathLexer5.nextToken();
      xPathLexer5.currentPosition();
      Token token14 = xPathLexer4.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.102537235384809
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("m.", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("CO_M{qHIUcfWq:UDv");
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("{", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("q", token5.getTokenText());
      
      Token token6 = xPathLexer2.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer2.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer2.and();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("we", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals("H", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Z'W*XoT70");
      Token token10 = xPathLexer4.nextToken();
      assertEquals("Z", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer1.or();
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer4.plus();
      assertEquals(5, token12.getTokenType());
      assertEquals("'", token12.getTokenText());
      
      Token token13 = xPathLexer4.dollar();
      assertEquals("W", token13.getTokenText());
      assertEquals(26, token13.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      String string1 = ") (";
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-2239));
      xPathLexer1.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer1.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7570398716616635
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lrH");
      XPathLexer xPathLexer1 = new XPathLexer("lrH");
      XPathLexer xPathLexer2 = new XPathLexer("D!My@,LrXip&");
      Token token0 = xPathLexer2.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer1.identifier();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("lrH", token1.getTokenText());
      
      xPathLexer1.setXPath("D!My@,LrXip&");
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals("My", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("5");
      xPathLexer3.consume();
      xPathLexer3.dots();
      xPathLexer0.div();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("l", token4.getTokenText());
      
      xPathLexer0.setXPath("\"CBRsE0S");
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("!", token6.getTokenText());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("M", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals("\"", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("C", token9.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0041446107370193
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.equals();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("DAo5BQ?>Hdc=AXk5C'.");
      xPathLexer1.rightBracket();
      xPathLexer2.leftParen();
      xPathLexer2.operatorName();
      xPathLexer2.leftBracket();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("DAo5BQ?>Hdc=AXk5C'.");
      xPathLexer3.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9696008171145027
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("aaoNly+&Ya}nPD1qI");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.and();
      XPathLexer xPathLexer5 = new XPathLexer("j~T9ldd]:T^fRX;:*V");
      xPathLexer5.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer("j~T9ldd]:T^fRX;:*V");
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer("Oq|w3hCu[");
      xPathLexer7.at();
      Token token0 = xPathLexer7.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9641731668970284
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("&E<G");
      XPathLexer xPathLexer2 = new XPathLexer("&E<G");
      xPathLexer0.slashes();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.minus();
      xPathLexer1.leftParen();
      xPathLexer0.comma();
      xPathLexer2.and();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.rightParen();
      xPathLexer2.whitespace();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.identifier();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer5.dollar();
      XPathLexer xPathLexer7 = new XPathLexer("&E<G");
      xPathLexer4.colon();
      xPathLexer5.notEquals();
      xPathLexer1.doubleColon();
      xPathLexer6.not();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer4.slashes();
      xPathLexer8.doubleColon();
      xPathLexer1.doubleColon();
      xPathLexer8.star();
      XPathLexer xPathLexer9 = null;
      try {
        xPathLexer9 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8016661641913498
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer1.equals();
      token0.toString();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      xPathLexer4.notEquals();
      xPathLexer3.slashes();
      xPathLexer4.doubleColon();
      xPathLexer2.doubleColon();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.colon();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1353376541355553
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lrN#af#");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("lrN", token0.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.consume(805);
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.comma();
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertEquals("m.werken.saxpath.T", token2.getTokenText());
      
      xPathLexer0.setXPath("lrN#af#");
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.setXPath("c");
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token5 = xPathLexer0.plus();
      assertEquals("c", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token8.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.star();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1173758939676155
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.div();
      xPathLexer2.comma();
      xPathLexer0.setXPath("8|iOFB*9*b");
      xPathLexer2.plus();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer3.rightParen();
      xPathLexer0.dollar();
      xPathLexer1.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.colon();
      xPathLexer3.not();
      xPathLexer4.doubleColon();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.star();
      XPathLexer xPathLexer7 = new XPathLexer(") (");
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.slashes();
      xPathLexer2.operatorName();
      xPathLexer0.dots();
      xPathLexer3.pipe();
      xPathLexer7.rightBracket();
      Token token0 = xPathLexer3.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.227456390349328
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("s,#$X7taZVO/'i");
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (1) (#)", string0);
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("X7taZVO", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.setXPath("+");
      xPathLexer2.colon();
      xPathLexer2.or();
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer2.nextToken();
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("/", token7.getTokenText());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("+", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("[ (1) (#)");
      xPathLexer1.relationalOperator();
      xPathLexer1.colon();
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("'", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      xPathLexer2.or();
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer1.colon();
      assertEquals(18, token15.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.029045061510341
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "lra^#";
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2933122736623002
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("e!}uQ`;xTqMwJQZ");
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("x*BgQq'/KLNKy7)");
      xPathLexer3.leftParen();
      xPathLexer3.nextToken();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.676888093722667
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("51C");
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("1C", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("x*BgQq'/KLNKy7)");
      Token token3 = xPathLexer3.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("lra^#");
      Token token4 = xPathLexer4.slashes();
      assertEquals("l", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer3.plus();
      assertEquals("*", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer2.or();
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9441121078624692
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      XPathLexer xPathLexer2 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      XPathLexer xPathLexer3 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      XPathLexer xPathLexer5 = new XPathLexer("m*tx\rxvx9rG}TT=CAN");
      xPathLexer5.slashes();
      xPathLexer3.literal();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer3.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.at();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.069871008428085
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("&E<G");
      XPathLexer xPathLexer2 = new XPathLexer("&E<G");
      XPathLexer xPathLexer3 = new XPathLexer("\bWPW");
      xPathLexer2.identifierOrOperatorName();
      xPathLexer3.colon();
      Token token0 = xPathLexer2.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer3.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer1.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer1.relationalOperator();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer2.colon();
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer4.doubleColon();
      Token token7 = xPathLexer2.dollar();
      assertEquals("G", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      xPathLexer1.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("ni/$@+84!8rmEY");
      xPathLexer1.relationalOperator();
      xPathLexer5.colon();
      xPathLexer3.at();
      XPathLexer xPathLexer8 = new XPathLexer("\bWPW");
      xPathLexer3.doubleColon();
      Token token9 = xPathLexer8.doubleColon();
      assertEquals("\bW", token9.getTokenText());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer7.at();
      assertEquals("n", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer8.rightBracket();
      assertEquals("P", token13.getTokenText());
      assertEquals(4, token13.getTokenType());
      
      xPathLexer4.colon();
      Token token14 = xPathLexer3.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9884833897253
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer1.equals();
      token0.toString();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      xPathLexer4.notEquals();
      xPathLexer4.doubleColon();
      xPathLexer2.doubleColon();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.colon();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0157833838393113
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (17) (R)", string0);
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.or();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      xPathLexer2.rightParen();
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("i", token6.getTokenText());
      
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("5isgsShktvn");
      Token token7 = xPathLexer3.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals("#z", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("C", token12.getTokenText());
      
      xPathLexer0.or();
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.26448235547612
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("{L", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("a", token5.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("VQj2}t");
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("Qj2}t", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("Q", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      assertEquals("j2", token10.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("VQj2}t");
      xPathLexer2.relationalOperator();
      xPathLexer2.colon();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer2.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("Q", token13.getTokenText());
      
      Token token14 = xPathLexer1.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer("VQj2}t");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token15 = xPathLexer1.at();
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.140106094588517
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer1.equals();
      token0.toString();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      xPathLexer4.notEquals();
      xPathLexer4.doubleColon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.colon();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0355486508322067
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("DAo5BQ?>Hdc=AXk5C'.");
      xPathLexer1.rightBracket();
      xPathLexer1.pipe();
      xPathLexer2.operatorName();
      xPathLexer2.leftBracket();
      xPathLexer2.mod();
      xPathLexer1.comma();
      xPathLexer1.slashes();
      xPathLexer0.slashes();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("DAo5BQ?>Hdc=AXk5C'.");
      xPathLexer3.consume();
      xPathLexer3.nextToken();
      xPathLexer2.or();
      Token token0 = xPathLexer2.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2248131119449077
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.pipe();
      assertEquals("u", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("N", token3.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.setXPath("dH3RuL;N#zC");
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.colon();
      assertEquals("d", token7.getTokenText());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("H3", token8.getTokenText());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("R", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("d", token11.getTokenText());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token15 = xPathLexer1.plus();
      assertEquals(5, token15.getTokenType());
      assertEquals("3", token15.getTokenText());
      
      Token token16 = xPathLexer1.minus();
      assertEquals("R", token16.getTokenText());
      assertEquals(6, token16.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2011902840418167
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      Token token0 = xPathLexer0.pipe();
      assertEquals("Y", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("k", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      xPathLexer0.and();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.not();
      xPathLexer0.setXPath(") (");
      Token token4 = xPathLexer0.star();
      assertEquals(")", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("VQj2}t");
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.number();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Qj2", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6uutuKi=*");
      Token token6 = xPathLexer1.colon();
      assertEquals("6", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.plus();
      assertEquals("}", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer("BR<f");
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.star();
      xPathLexer2.leftParen();
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("VQj2}t");
      XPathLexer xPathLexer4 = new XPathLexer("6uutuKi=*");
      xPathLexer4.nextToken();
      xPathLexer1.or();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer2.leftParen();
      Token token11 = xPathLexer2.leftParen();
      assertEquals("<", token11.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3428307510983704
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifier();
      xPathLexer1.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifier();
      xPathLexer2.slashes();
      int int0 = (-2161);
      xPathLexer1.consume((-2161));
      xPathLexer1.comma();
      xPathLexer2.setXPath("lra^#");
      xPathLexer1.plus();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.892926054939317
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.slashes();
      assertEquals("o", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer1.and();
      Token token9 = xPathLexer3.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.354961592933953
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      XPathLexer xPathLexer2 = new XPathLexer("7cGE HJWmn;JRkgt");
      xPathLexer0.not();
      Token token0 = xPathLexer1.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("=Y", token0.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer2.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("7c", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer2.not();
      assertEquals("E", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4912758535980546
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("uL", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.459676208812627
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      xPathLexer0.and();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.setXPath(") (");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("VQj2}t");
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.relationalOperator();
      xPathLexer2.colon();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer3.doubleColon();
      xPathLexer3.doubleColon();
      xPathLexer3.doubleColon();
      xPathLexer1.star();
      xPathLexer3.operatorName();
      Token token1 = xPathLexer0.dots();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      int int0 = (-1717);
      xPathLexer0.consume((-1717));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4026604736700914
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("!wqu5");
      Token token3 = xPathLexer3.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer3.leftParen();
      assertEquals("E", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      xPathLexer1.or();
      xPathLexer3.not();
      Token token6 = xPathLexer4.nextToken();
      assertEquals("!", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.or();
      xPathLexer2.operatorName();
      Token token7 = xPathLexer1.at();
      assertEquals("G", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.311259367182285
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dots();
      assertEquals("^", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.div();
      Token token2 = xPathLexer2.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.setXPath("8|iOFB*9*b");
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer1.number();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer3.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("i", token8.getTokenText());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.literal();
      assertNull(token11);
      
      xPathLexer2.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.leftBracket();
      Token token12 = xPathLexer0.nextToken();
      assertEquals("OFB*9*b", token12.getTokenText());
      
      Token token13 = xPathLexer2.pipe();
      assertEquals(17, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token14 = xPathLexer6.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer3.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6267419871273727
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.comma();
      xPathLexer0.setXPath(" ^BZJt=cyO8v6");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0765592178771852
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.consume((-2161));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.075511507505407
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.comma();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.setXPath("lra^#");
      Token token2 = xPathLexer0.plus();
      assertEquals("l", token2.getTokenText());
      
      xPathLexer0.setXPath("");
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token4);
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("om.werken.saxpath.Token", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.relationalOperator();
      xPathLexer0.colon();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("lra^#");
      xPathLexer0.at();
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.132017976772277
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(".", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("co", token4.getTokenText());
      
      xPathLexer1.whitespace();
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      Token token5 = xPathLexer0.dots();
      assertEquals(14, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.leftParen();
      assertEquals("w", token6.getTokenText());
      
      xPathLexer1.setXPath("5Ij.n<t");
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer1.equals();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals("e", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer1.or();
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("I", token10.getTokenText());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("n", token11.getTokenText());
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals("j", token12.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.992614269367849
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("R", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("N", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("#zC", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer3 = new XPathLexer("dH3RuL;N#zC");
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals("d", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifier();
      XPathLexer xPathLexer5 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer2.notEquals();
      assertEquals("5i", token11.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.not();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token12 = xPathLexer9.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals("#", token13.getTokenText());
      
      Token token14 = xPathLexer2.leftParen();
      assertEquals("g", token14.getTokenText());
      
      Token token15 = xPathLexer8.not();
      assertEquals(23, token15.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("");
      Token token16 = xPathLexer5.nextToken();
      assertEquals(15, token16.getTokenType());
      
      xPathLexer8.or();
      Token token17 = xPathLexer7.star();
      assertEquals(20, token17.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.110390750468615
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("!.xZ1,S~K");
      Token token1 = xPathLexer0.comma();
      assertEquals("!", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("qyK/rL");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.or();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("1", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("qyK/rL");
      Token token7 = xPathLexer3.rightBracket();
      assertEquals("q", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("yK", token8.getTokenText());
      
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("y", token9.getTokenText());
      
      xPathLexer1.or();
      Token token10 = xPathLexer0.colon();
      assertEquals(",", token10.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.3416156852951178
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("51C");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("x*BgQq'/KLNKy7)");
      XPathLexer xPathLexer4 = new XPathLexer("lra^#");
      xPathLexer4.slashes();
      xPathLexer0.doubleColon();
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5923383225279268
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer3.colon();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.1081678904603867
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.consume((-2161));
      xPathLexer0.setXPath("");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("qyK/rL");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.mod();
      // Undeclared exception!
      try { 
        xPathLexer1.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.4371287845525473
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("&E<G");
      XPathLexer xPathLexer3 = new XPathLexer("\bWPW");
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer3.nextToken();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("&E<G");
      xPathLexer1.colon();
      XPathLexer xPathLexer5 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer6 = new XPathLexer("@FNe");
      xPathLexer2.nextToken();
      xPathLexer2.rightParen();
      xPathLexer4.identifier();
      xPathLexer1.identifier();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = null;
      try {
        xPathLexer8 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9206676487854673
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dots();
      assertEquals("^", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.div();
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setXPath("8|iOFB*9*b");
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer1.colon();
      xPathLexer2.or();
      xPathLexer0.number();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("|", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("i", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("O", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("FB", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer1.colon();
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals("*b", token9.getTokenText());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("8|iOFB*9*b");
      Token token12 = xPathLexer2.pipe();
      assertEquals(17, token12.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token13 = xPathLexer5.number();
      assertEquals(30, token13.getTokenType());
      assertEquals("8", token13.getTokenText());
      
      xPathLexer3.dots();
      Token token14 = xPathLexer2.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.229566615136313
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.setXPath("s}S-7s@#-%skT1x2S");
      xPathLexer0.and();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.nextToken();
      xPathLexer1.at();
      xPathLexer1.rightParen();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.plus();
      assertEquals("#", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(6, token5.getTokenType());
      assertEquals("-", token5.getTokenText());
      
      xPathLexer1.rightParen();
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer1.doubleColon();
      xPathLexer2.doubleColon();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer1.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer1.operatorName();
      Token token13 = xPathLexer2.dots();
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer1.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer0.rightBracket();
      assertEquals(4, token15.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token16 = xPathLexer1.not();
      assertEquals(23, token16.getTokenType());
      
      Token token17 = xPathLexer2.leftBracket();
      assertEquals(3, token17.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9805651860339009
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dots();
      assertEquals("^", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer1.div();
      xPathLexer1.consume(96);
      xPathLexer1.setXPath("j3OK!A.[p4 o902=2Ce");
      Token token2 = xPathLexer1.comma();
      assertEquals("j", token2.getTokenText());
      
      xPathLexer0.setXPath("8|iOFB*9*b");
      Token token3 = xPathLexer0.plus();
      assertEquals("8", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer(" XbgC4yR@- maEya");
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer(" XbgC4yR@- maEya");
      Token token5 = xPathLexer1.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("O", token5.getTokenText());
      
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals(" ", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals("i", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(".StjR%K_p+)V(Dj");
      Token token9 = xPathLexer4.slashes();
      assertEquals(".", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token10 = xPathLexer5.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("K", token11.getTokenText());
      
      xPathLexer3.or();
      xPathLexer3.operatorName();
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("Xb", token12.getTokenText());
      
      xPathLexer4.relationalOperator();
      Token token13 = xPathLexer4.minus();
      assertEquals("S", token13.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0110143996834866
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer3 = new XPathLexer("dH3RuL;N#zC");
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals("d", token7.getTokenText());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifier();
      XPathLexer xPathLexer5 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer2.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("5", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.notEquals();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer7.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      xPathLexer3.at();
      Token token11 = xPathLexer6.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("isgsShktvn", token12.getTokenText());
      
      xPathLexer3.or();
      XPathLexer xPathLexer8 = new XPathLexer("");
      XPathLexer xPathLexer9 = new XPathLexer(")");
      Token token13 = xPathLexer9.at();
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer2.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7949276310666744
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.star();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(45);
      assertEquals('\uFFFF', char0);
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-3982));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2215844784434697
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("&E<G");
      XPathLexer xPathLexer3 = new XPathLexer("\bWPW");
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.star();
      XPathLexer xPathLexer4 = new XPathLexer(".#cVu{?Zv%m~!!U5>,2");
      Token token1 = xPathLexer4.number();
      assertEquals(31, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("`>dOU*ek^o:o|X\"dK&d");
      xPathLexer6.slashes();
      Token token3 = xPathLexer3.colon();
      assertEquals("\b", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer6.notEquals();
      assertEquals(">d", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer6.comma();
      assertEquals("O", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer5.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer3.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("W", token7.getTokenText());
      
      xPathLexer4.doubleColon();
      Token token8 = xPathLexer2.doubleColon();
      assertEquals("&E", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.star();
      assertEquals("<", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("&E<G");
      Token token10 = xPathLexer7.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer7.operatorName();
      xPathLexer4.operatorName();
      xPathLexer4.dots();
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("P", token11.getTokenText());
      
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("W", token12.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.2402501954686862
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("x*BgQq'/KLNKy7)");
      XPathLexer xPathLexer2 = new XPathLexer("lra^#");
      Token token1 = xPathLexer2.slashes();
      assertEquals("l", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("^", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("#", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals("x", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.rightBracket();
      assertEquals("r", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8432453320920947
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("lra^#");
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("lra^#");
      xPathLexer2.div();
      xPathLexer0.consume(2853);
      xPathLexer2.setXPath("8|iOFB*9*b");
      xPathLexer0.comma();
      xPathLexer1.setXPath("lra^#");
      xPathLexer2.plus();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer2.div();
      XPathLexer xPathLexer5 = new XPathLexer("`2!1{;_,UV!p}uu}");
      xPathLexer4.leftParen();
      xPathLexer5.leftBracket();
      xPathLexer0.star();
      xPathLexer1.leftParen();
      xPathLexer0.not();
      xPathLexer5.nextToken();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.258192066166741
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(".", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("aaoNly+&Ya}nPD1qI");
      xPathLexer0.relationalOperator();
      xPathLexer1.colon();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.nextToken();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals("aa", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer2.equals();
      assertEquals(21, token14.getTokenType());
      assertEquals("o", token14.getTokenText());
      
      Token token15 = xPathLexer0.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.603942463663335
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.dots();
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      
      token2.toString();
      token3.toString();
      token2.toString();
      token3.toString();
      token2.toString();
      xPathLexer0.leftParen();
      String string0 = token3.toString();
      assertEquals("[ (27) (rk)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (13) (w)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.doubleColon();
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("ax", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("p", token7.getTokenText());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      Token token9 = xPathLexer0.pipe();
      assertEquals("t", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals("h", token10.getTokenText());
      assertEquals(4, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.not();
      assertEquals(".", token11.getTokenText());
      
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.rightParen();
      assertEquals("X", token13.getTokenText());
      assertEquals(2, token13.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1335156432680322
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.pipe();
      assertEquals("k", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("k", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("{L1aqh?}#P9;l", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("{", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("1", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.identifier();
      assertEquals("aqh", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer0.doubleColon();
      assertEquals("?}", token13.getTokenText());
      
      Token token14 = xPathLexer3.not();
      assertEquals(23, token14.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.doubleColon();
      Token token15 = xPathLexer4.doubleColon();
      assertEquals(19, token15.getTokenType());
      
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer5.operatorName();
      Token token16 = xPathLexer0.dots();
      assertEquals(13, token16.getTokenType());
      
      xPathLexer1.currentPosition();
      xPathLexer0.operatorName();
      Token token17 = xPathLexer2.slashes();
      assertEquals(11, token17.getTokenType());
      
      xPathLexer3.LA(1);
      Token token18 = xPathLexer3.star();
      assertEquals(20, token18.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8935158000987236
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(";", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("N", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      Token token2 = xPathLexer1.equals();
      String string0 = token2.toString();
      assertEquals("[ (21) (d)", string0);
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("H3RuL", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(";N#zC", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer1.or();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("dH3RuL;N#zC");
      XPathLexer xPathLexer5 = new XPathLexer("V~glrLX\\*sg\u0007r!");
      Token token6 = xPathLexer5.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals(";", token7.getTokenText());
      
      xPathLexer2.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer(")");
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("#", token8.getTokenText());
      
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer9 = new XPathLexer("[ (21) (d)");
      Token token10 = xPathLexer5.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("~", token10.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer10.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals("d", token12.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.1234063338755216
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.setXPath("DbX7U-N(Rrz^iit*");
      Token token2 = xPathLexer0.star();
      assertEquals("D", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("bX7U-N", token3.getTokenText());
      
      xPathLexer0.setXPath("DbX7U-N(Rrz^iit*");
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer2.doubleColon();
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("bX", token10.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      xPathLexer0.operatorName();
      Token token13 = xPathLexer1.dots();
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer1.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7940300464729824
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.dots();
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      
      token2.toString();
      token2.toString();
      token2.toString();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("n", token4.getTokenText());
      
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (13) (w)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("s", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (w)");
      Token token8 = xPathLexer0.notEquals();
      assertEquals("ax", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token9 = xPathLexer3.doubleColon();
      assertEquals("[ ", token9.getTokenText());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (13) (w)");
      Token token12 = xPathLexer1.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer2.dots();
      Token token13 = xPathLexer1.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer2.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token15 = xPathLexer2.not();
      assertEquals(23, token15.getTokenType());
      
      Token token16 = xPathLexer0.equals();
      assertEquals("X", token16.getTokenText());
      assertEquals(21, token16.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.0076430535734247
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.setXPath("s}S-7s@#-%skT1x2S");
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      assertEquals("s", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.leftParen();
      xPathLexer0.comma();
      xPathLexer1.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer0.dollar();
      assertEquals("@", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("s}S-7s@#-%skT1x2S");
      Token token4 = xPathLexer3.slashes();
      assertEquals("s", token4.getTokenText());
      
      Token token5 = xPathLexer3.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("}", token5.getTokenText());
      
      Token token6 = xPathLexer3.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("S-", token6.getTokenText());
      
      xPathLexer1.comma();
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer3.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer2.doubleColon();
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer3.star();
      XPathLexer xPathLexer5 = new XPathLexer("eS\"|p?8Ne*Pd");
      XPathLexer xPathLexer6 = new XPathLexer(">>#o&U 'ni0-JH&");
      Token token10 = xPathLexer6.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.dots();
      Token token11 = xPathLexer4.pipe();
      assertEquals(17, token11.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer(">>#o&U 'ni0-JH&");
      Token token12 = xPathLexer8.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer3.comma();
      assertEquals(32, token13.getTokenType());
      assertEquals("#", token13.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.225322067061958
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5813409756310637
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FI`#lL%o");
      xPathLexer0.comma();
      xPathLexer0.setXPath("FI`#lL%o");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume(93);
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer1.rightBracket();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer2.minus();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.9775351334135736
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(";", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer3 = new XPathLexer("5isgsShktvn");
      Token token6 = xPathLexer3.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("5", token6.getTokenText());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("5", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals("", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("5isgsShktvn");
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer4.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer4.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer2.or();
      XPathLexer xPathLexer7 = new XPathLexer("5isgsShktvn");
      Token token14 = xPathLexer7.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("5", token14.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.211244308475969
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      xPathLexer2.whitespace();
      xPathLexer2.colon();
      xPathLexer1.or();
      xPathLexer2.rightParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.colon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("7[+>a8cTLQ4pc");
      XPathLexer xPathLexer5 = new XPathLexer("7[+>a8cTLQ4pc");
      xPathLexer4.slashes();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer2.dots();
      xPathLexer4.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer3.LA((-2029));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.6125696140591388
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.colon();
      xPathLexer1.colon();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer1.dollar();
      xPathLexer2.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer2.colon();
      xPathLexer2.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer2.not();
      xPathLexer2.doubleColon();
      xPathLexer1.doubleColon();
      xPathLexer1.minus();
      xPathLexer0.star();
      xPathLexer2.not();
      xPathLexer2.endPosition();
      xPathLexer2.consume((-297));
      // Undeclared exception!
      try { 
        xPathLexer2.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.9724020196932504
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals("Y", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer1.mod();
      Token token2 = xPathLexer0.minus();
      assertEquals("{", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.rightParen();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("1", token6.getTokenText());
      
      xPathLexer1.setXPath("Ykw{L1aqh?}#P9;l");
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      Token token8 = xPathLexer3.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("Y", token8.getTokenText());
      
      xPathLexer1.leftParen();
      Token token9 = xPathLexer1.rightBracket();
      assertEquals("k", token9.getTokenText());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals("?", token10.getTokenText());
      
      xPathLexer2.isIdentifierChar('e');
      xPathLexer1.isIdentifierChar('Q');
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("w", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.currentPosition();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer5.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer4.getXPath();
      Token token14 = xPathLexer2.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5150716424982236
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("uL", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(";N#zC", token6.getTokenText());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.205997274289947
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer2.colon();
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      xPathLexer2.whitespace();
      xPathLexer2.colon();
      xPathLexer1.or();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer2.rightParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.colon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer3.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer2.star();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9985292344876258
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.slashes();
      assertEquals("3", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("L", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (d)", string0);
      
      Token token4 = xPathLexer0.star();
      assertEquals(";", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (3) (d)");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.notEquals();
      Token token5 = xPathLexer3.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("m4%-tPE");
      xPathLexer4.nextToken();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(" ", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("dH3RuL;N#zC");
      Token token7 = xPathLexer5.dollar();
      assertEquals("d", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.identifier();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("&bn<VL@w\"UO");
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer4.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("%", token9.getTokenText());
      
      Token token10 = xPathLexer7.notEquals();
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("N#", token11.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token12 = xPathLexer9.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      xPathLexer5.or();
      Token token13 = xPathLexer8.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("&", token13.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7823402134122026
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.consume(30);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("w`dNg");
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-27));
      xPathLexer1.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.0408498054795285
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.consume(89);
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      Token token6 = xPathLexer0.comma();
      assertEquals("~", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      xPathLexer0.plus();
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      XPathLexer xPathLexer1 = new XPathLexer("+^>JU,&>4]");
      Token token11 = xPathLexer1.slashes();
      assertEquals("+", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(" np7U#a%.y");
      Token token13 = xPathLexer1.plus();
      assertEquals("^", token13.getTokenText());
      
      xPathLexer2.operatorName();
      Token token14 = xPathLexer2.doubleColon();
      assertEquals(" n", token14.getTokenText());
      assertEquals(19, token14.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token15 = xPathLexer2.dots();
      assertEquals("p", token15.getTokenText());
      
      xPathLexer3.literal();
      Token token16 = xPathLexer3.plus();
      assertEquals(5, token16.getTokenType());
      
      Token token17 = xPathLexer3.notEquals();
      assertEquals(22, token17.getTokenType());
      
      Token token18 = xPathLexer2.not();
      assertEquals(23, token18.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.166034607225048
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.dots();
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("n.saxpath.XPathLexer", token4.getTokenText());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer3.slashes();
      assertEquals("c", token9.getTokenText());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer4.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer1.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5280095269215495
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lrH");
      XPathLexer xPathLexer1 = new XPathLexer("lrH");
      XPathLexer xPathLexer2 = new XPathLexer("D!My@,LrXip&");
      xPathLexer2.slashes();
      xPathLexer2.literal();
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5002033011355431
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.werken.saxpath.Token");
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8435274315824723
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer1.colon();
      xPathLexer2.or();
      Token token0 = xPathLexer1.number();
      assertEquals("", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer1.dollar();
      xPathLexer2.identifier();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.dollar();
      assertEquals("(", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer2.colon();
      assertEquals(")", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer2.not();
      assertEquals(" ", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer2.doubleColon();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7966663005507062
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.or();
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer1.literal();
      xPathLexer2.identifier();
      xPathLexer2.literal();
      xPathLexer2.rightBracket();
      xPathLexer2.leftBracket();
      xPathLexer2.minus();
      xPathLexer2.consume();
      xPathLexer2.setXPath("s,#$X7taZVO/'i");
      xPathLexer2.operatorName();
      xPathLexer2.colon();
      xPathLexer0.consume((-2982));
      xPathLexer2.notEquals();
      xPathLexer2.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.321697424980444
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("w", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("r", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.rightParen();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer1.colon();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer1.equals();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("'0XhY7Z_93sE`Gf");
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token13 = xPathLexer1.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer1.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1529039141215898
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "dH3RuL;N#zC";
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("dH3RuL;N#zC");
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.consume((-2982));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.1134690204617486
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer1.equals();
      token0.toString();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer1.or();
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("dH3RuL;N#zC");
      XPathLexer xPathLexer5 = new XPathLexer("V~glrLX\\*sg\u0007r!");
      xPathLexer5.nextToken();
      xPathLexer1.rightParen();
      xPathLexer2.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer(")");
      xPathLexer2.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer("[ (21) (d)");
      xPathLexer3.not();
      xPathLexer0.nextToken();
      xPathLexer3.or();
      xPathLexer7.operatorName();
      xPathLexer8.at();
      Token token1 = xPathLexer7.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.898940779050728
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("3", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(";", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer3 = new XPathLexer("@FNe");
      xPathLexer3.nextToken();
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals("5", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals("zC", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("5isgsShktvn");
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer4.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer4.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer2.or();
      XPathLexer xPathLexer7 = new XPathLexer("5isgsShktvn");
      Token token14 = xPathLexer7.at();
      assertEquals("5", token14.getTokenText());
      
      Token token15 = xPathLexer5.dots();
      assertEquals(13, token15.getTokenType());
      assertEquals("5", token15.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.1307176308358455
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("N", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("zC", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer1.leftBracket();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("dH3RuL;N#zC");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
      
      xPathLexer0.pipe();
      Token token13 = xPathLexer4.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer1.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.355965423340695
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.setXPath("lra^#");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1353926748623533
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      XPathLexer xPathLexer2 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("=Y", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("^\"3W_S8#bAA!o@u", token5.getTokenText());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("^", token6.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.652529590386078
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      Token token1 = xPathLexer0.not();
      assertEquals("$", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer1.equals();
      String string0 = token0.toString();
      assertEquals("[ (1) (#)", string0);
      
      xPathLexer1.star();
      xPathLexer0.equals();
      Token token2 = xPathLexer1.plus();
      assertEquals("#", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.equals();
      assertEquals("$", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("s,#$X7taZVO/'i");
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("t", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer5.nextToken();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("a", token6.getTokenText());
      
      Token token7 = xPathLexer6.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer(")");
      Token token8 = xPathLexer4.minus();
      assertEquals(",", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer2.colon();
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("s,#$X7taZVO/'i");
      Token token10 = xPathLexer9.notEquals();
      assertEquals("s,", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer3.doubleColon();
      assertEquals("s,", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer8.leftBracket();
      assertEquals(3, token12.getTokenType());
      assertEquals(")", token12.getTokenText());
      
      Token token13 = xPathLexer6.nextToken();
      assertEquals(32, token13.getTokenType());
      assertEquals(",", token13.getTokenText());
      
      xPathLexer9.or();
      XPathLexer xPathLexer11 = new XPathLexer("s,#$X7taZVO/'i");
      Token token14 = xPathLexer11.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.600074013109753
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("s,#$X7taZVO/'i");
      XPathLexer xPathLexer3 = new XPathLexer("s,#$X7taZVO/'i");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.slashes();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.doubleColon();
      xPathLexer3.leftBracket();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token0 = xPathLexer7.or();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.28572678750041
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("VQj2}t");
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("VQj2}t");
      xPathLexer2.relationalOperator();
      xPathLexer2.colon();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer2.leftBracket();
      xPathLexer4.nextToken();
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer("VQj2}t");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token1 = xPathLexer4.at();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.190025835877737
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.at();
      assertEquals("L", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.consume(89);
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.plus();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("i", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("F*>!O]Qv,k}vD", token6.getTokenText());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer0.consume(89);
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("+^>JU,&>4]");
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("+", token9.getTokenText());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(" np7U#a%.y");
      Token token11 = xPathLexer1.plus();
      assertEquals("^", token11.getTokenText());
      
      xPathLexer2.operatorName();
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(" n", token12.getTokenText());
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token13 = xPathLexer2.nextToken();
      assertEquals("p7U", token13.getTokenText());
      
      Token token14 = xPathLexer2.dots();
      assertEquals("#", token14.getTokenText());
      assertEquals(13, token14.getTokenType());
      
      xPathLexer3.literal();
      Token token15 = xPathLexer3.plus();
      assertEquals(5, token15.getTokenType());
      
      Token token16 = xPathLexer3.notEquals();
      assertEquals(22, token16.getTokenType());
      
      Token token17 = xPathLexer2.not();
      assertEquals(23, token17.getTokenType());
      assertEquals("a", token17.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.0967684984741206
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      token0.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token1);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.9556570317668633
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.literal();
      token0.toString();
      token1.toString();
      token0.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.leftParen();
      token1.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.colon();
      xPathLexer0.whitespace();
      token2.toString();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("om.werken.saxpath.Token");
      xPathLexer0.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer1.or();
      xPathLexer0.minus();
      xPathLexer1.colon();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.246993719735255
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-297));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.61537091377671
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.dots();
      xPathLexer0.literal();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("[ (13) (w)");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.relationalOperator();
      xPathLexer2.colon();
      xPathLexer4.and();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.nextToken();
      xPathLexer4.doubleColon();
      xPathLexer3.doubleColon();
      xPathLexer3.relationalOperator();
      xPathLexer2.nextToken();
      int int0 = xPathLexer5.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.0348202604999512
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.operatorName();
      xPathLexer0.colon();
      xPathLexer1.star();
      xPathLexer1.consume((-2982));
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.plus();
      xPathLexer2.dots();
      xPathLexer0.div();
      xPathLexer0.literal();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.2641594508078065
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('{');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.389956602770413
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer1.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.colon();
      xPathLexer1.or();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer1.colon();
      xPathLexer1.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer1.not();
      xPathLexer1.doubleColon();
      xPathLexer1.doubleColon();
      xPathLexer1.star();
      xPathLexer0.operatorName();
      xPathLexer1.dots();
      boolean boolean0 = xPathLexer1.isIdentifierChar('D');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.4892166646242595
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      Token token0 = xPathLexer0.equals();
      assertEquals("s", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('4');
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume(1314);
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.setXPath("");
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      boolean boolean1 = xPathLexer0.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      xPathLexer0.getXPath();
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.686141987939605
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer1.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("lra^#");
      Token token0 = xPathLexer0.slashes();
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer2.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer3.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("l", token3.getTokenText());
      
      xPathLexer0.not();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer3.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer4.doubleColon();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("lra^#");
      Token token8 = xPathLexer5.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("lr", token8.getTokenText());
      
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      Token token11 = xPathLexer4.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer4.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer2.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      xPathLexer6.relationalOperator();
      Token token14 = xPathLexer4.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer0.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ur");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.1052923480468113
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(";", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      Token token5 = xPathLexer0.identifier();
      assertEquals("zC", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      token1.toString();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (15) (H3RuL)", string0);
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.plus();
      assertEquals("H", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      String string1 = token3.toString();
      assertEquals("[ (16) (N)", string1);
      
      token4.toString();
      xPathLexer0.identifierOrOperatorName();
      String string2 = token4.toString();
      assertEquals("[ (17) (#)", string2);
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals(30, token10.getTokenType());
      assertEquals("3", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
      
      int int0 = xPathLexer2.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.1756340700274026
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.equals();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer1.literal();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.or();
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.574703309469329
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(' ');
      assertFalse(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.consume(1);
      xPathLexer0.consume();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.3889646289010218
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(") ", token0.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer2.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('X');
      assertTrue(boolean0);
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals(")", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.3522484685099627
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O4D");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (O)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.1939459791937073
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.consume((-1501));
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2318440311508456
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("H3RuL", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.plus();
      assertEquals("N", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("UDt");
      Token token2 = xPathLexer1.not();
      assertEquals("U", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer1.setXPath("");
      xPathLexer1.consume(1);
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
      
      xPathLexer1.comma();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.setXPath("$60y#t@_>J");
      xPathLexer0.LA(2);
      XPathLexer xPathLexer2 = new XPathLexer("$60y#t@_>J");
      xPathLexer2.div();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("60", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      xPathLexer1.doubleColon();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("$", token9.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals("60", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("gLmA.h");
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("g", token11.getTokenText());
      
      Token token12 = xPathLexer2.star();
      assertEquals("y", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("@", token13.getTokenText());
      
      xPathLexer0.nextToken();
      Token token14 = xPathLexer4.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.3030126541932119
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "dH3RuL;N#zC";
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      String string1 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.392458834306594
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.at();
      assertEquals("m", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("k", token6.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("en", token7.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(".s", token8.getTokenText());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer1.operatorName();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("a", token11.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.8392304742187522
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("H", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.slashes();
      assertEquals("R", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer0.leftParen();
      assertEquals("u", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer2.rightParen();
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer3.colon();
      xPathLexer1.or();
      Token token6 = xPathLexer1.rightParen();
      assertEquals("o", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      Token token9 = xPathLexer4.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(".w", token10.getTokenText());
      
      Token token11 = xPathLexer4.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("dH3RuL;N#zC");
      XPathLexer xPathLexer6 = new XPathLexer("7[+>a8cTLQ4pc");
      xPathLexer2.slashes();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer6.comma();
      assertEquals(32, token12.getTokenType());
      
      xPathLexer7.dots();
      Token token13 = xPathLexer6.pipe();
      assertEquals(17, token13.getTokenType());
      assertEquals("[", token13.getTokenText());
      
      Token token14 = xPathLexer5.rightBracket();
      assertEquals("d", token14.getTokenText());
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer1.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.065245475168136
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer2.rightParen();
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      xPathLexer2.whitespace();
      xPathLexer2.colon();
      xPathLexer1.or();
      xPathLexer2.rightParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.colon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer2.slashes();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.star();
      xPathLexer1.operatorName();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.9070898940511447
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
      
      xPathLexer1.setPreviousToken((Token) null);
      Token token3 = xPathLexer1.dots();
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      token3.toString();
      token3.toString();
      token3.toString();
      token3.toString();
      Token token5 = xPathLexer1.leftParen();
      assertEquals(1, token5.getTokenType());
      
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (13) (c)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token6 = xPathLexer0.colon();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      token6.toString();
      String string1 = token6.toString();
      assertEquals("[ (18) (w)", string1);
      
      Token token8 = xPathLexer0.identifier();
      assertEquals("rken.saxpath.XPathLexer", token8.getTokenText());
      
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.not();
      xPathLexer0.or();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      xPathLexer0.endPosition();
      Token token11 = xPathLexer1.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer1.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.3919129516229876
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token1 = xPathLexer0.plus();
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("m_NI", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("(", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("A", token7.getTokenText());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.identifier();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer0.mod();
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer0.slashes();
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token14 = xPathLexer0.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.5570829737000937
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.not();
      int int0 = (-954);
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.number();
      xPathLexer0.consume((-954));
      char char0 = 'g';
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.7293947662669416
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.consume((-2161));
      xPathLexer0.comma();
      xPathLexer0.setXPath(" ^BZJt=cyO8v6");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5618129424607514
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("l", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("x*BgQq'/KLNKy7)");
      XPathLexer xPathLexer3 = new XPathLexer("lra^#");
      Token token1 = xPathLexer3.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("a", token4.getTokenText());
      
      xPathLexer1.or();
      Token token5 = xPathLexer3.rightBracket();
      assertEquals("r", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.293562761893789
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer1.literal();
      xPathLexer1.consume((-3275));
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.650157979024737
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("");
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.LA(686);
      xPathLexer0.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-825));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.032288494358424
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      XPathLexer xPathLexer1 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      Token token3 = xPathLexer1.equals();
      String string0 = token3.toString();
      assertEquals("[ (21) (Y)", string0);
      
      Token token4 = xPathLexer1.star();
      assertEquals("k", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Ykw", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.setXPath("fs# ZcJ Msq;umiB");
      xPathLexer1.colon();
      xPathLexer1.or();
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("{L1aqh?}#P9;l", token7.getTokenText());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("s", token8.getTokenText());
      
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.identifier();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      Token token11 = xPathLexer5.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals("{", token12.getTokenText());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals("L1", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token14 = xPathLexer7.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      Token token15 = xPathLexer7.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      Token token16 = xPathLexer6.nextToken();
      assertEquals((-1), token16.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.or();
      Token token17 = xPathLexer2.at();
      assertEquals(16, token17.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.9462886552402936
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("H", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(";", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.equals();
      assertEquals("#", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("5isgsShktvn");
      XPathLexer xPathLexer3 = new XPathLexer("@FNe");
      xPathLexer3.nextToken();
      xPathLexer1.rightParen();
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("5", token7.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("5isgsShktvn");
      xPathLexer4.relationalOperator();
      Token token8 = xPathLexer4.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer4.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer2.or();
      XPathLexer xPathLexer7 = new XPathLexer("5isgsShktvn");
      Token token12 = xPathLexer7.at();
      assertEquals(16, token12.getTokenType());
      assertEquals("5", token12.getTokenText());
      
      xPathLexer4.literal();
      Token token13 = xPathLexer5.dots();
      assertEquals(13, token13.getTokenType());
      assertEquals("5", token13.getTokenText());
      
      xPathLexer6.LA(108);
      Token token14 = xPathLexer4.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.544913123278393
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.at();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("51C");
      XPathLexer xPathLexer3 = new XPathLexer("OJgjb<czd;n?");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.dollar();
      XPathLexer xPathLexer6 = new XPathLexer("[QH;|p:P@L%#M");
      xPathLexer4.colon();
      xPathLexer5.dots();
      xPathLexer2.notEquals();
      xPathLexer6.comma();
      xPathLexer3.not();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer8.slashes();
      xPathLexer5.doubleColon();
      xPathLexer4.doubleColon();
      xPathLexer2.star();
      XPathLexer xPathLexer9 = new XPathLexer("OJgjb<czd;n?");
      xPathLexer2.star();
      xPathLexer1.operatorName();
      xPathLexer2.operatorName();
      xPathLexer9.dots();
      xPathLexer5.pipe();
      xPathLexer7.rightBracket();
      xPathLexer0.relationalOperator();
      xPathLexer9.not();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5589929196664039
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals("3", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token3 = xPathLexer2.pipe();
      assertEquals("7", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer3.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("Y", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      Token token9 = xPathLexer1.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("\"", token9.getTokenText());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.2114288645092954
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("`>dOU*ek^o:o|X\"dK&d");
      Token token1 = xPathLexer1.colon();
      assertEquals("`", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer3.operatorName();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.422690201357037
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("51C");
      XPathLexer xPathLexer2 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.consume();
      xPathLexer2.relationalOperator();
      xPathLexer2.dollar();
      XPathLexer xPathLexer5 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      xPathLexer3.leftParen();
      xPathLexer0.colon();
      xPathLexer2.notEquals();
      xPathLexer0.comma();
      xPathLexer3.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.slashes();
      xPathLexer1.doubleColon();
      xPathLexer1.doubleColon();
      xPathLexer1.star();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.874977230144797
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token3 = xPathLexer0.dots();
      Token token4 = xPathLexer0.literal();
      assertNotNull(token4);
      
      token3.toString();
      token4.toString();
      token3.toString();
      token4.toString();
      token3.toString();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("n", token5.getTokenText());
      
      token3.toString();
      String string0 = token4.toString();
      assertEquals("[ (27) (rk)", string0);
      
      String string1 = token3.toString();
      assertEquals("[ (13) (w)", string1);
      
      xPathLexer0.setPreviousToken(token3);
      Token token6 = xPathLexer0.colon();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      token6.toString();
      String string2 = token6.toString();
      assertEquals("[ (18) (.)", string2);
      
      Token token8 = xPathLexer0.identifier();
      assertEquals("axpath.XPathLexer", token8.getTokenText());
      
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.or();
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.0579071039404107
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7371030708856625
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("lra^#");
      xPathLexer0.minus();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      XPathLexer xPathLexer3 = new XPathLexer("lra^#");
      xPathLexer3.at();
      xPathLexer2.div();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer3.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("lra^#");
      Token token3 = xPathLexer1.star();
      assertEquals(")", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[ (");
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token5 = xPathLexer1.nextToken();
      assertEquals("(", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      xPathLexer4.or();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("l", token6.getTokenText());
      
      xPathLexer7.operatorName();
      Token token7 = xPathLexer3.minus();
      assertEquals("a", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.3109619545752285
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.literal();
      token1.toString();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.8863040705363523
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.dots();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.minus();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.86271545302801
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.3416141786082822
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("u", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("L;", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("N", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals("#", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("z", token7.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer3.operatorName();
      Token token10 = xPathLexer2.dots();
      assertEquals("=", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.pipe();
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer1.pipe();
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.4970616736751516
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.dots();
      xPathLexer0.literal();
      token1.toString();
      token1.toString();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.5158413559463808
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals("3", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("=Y^\"3W_S8#bAA!o@u");
      XPathLexer xPathLexer2 = new XPathLexer("7cGE HJWmn;JRkgt");
      Token token2 = xPathLexer2.pipe();
      assertEquals("7", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals("=", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("Y", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals("^", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.6633102998259655
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lrH");
      XPathLexer xPathLexer1 = new XPathLexer("lrH");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("qBSgb2B<");
      xPathLexer3.not();
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer8.not();
      xPathLexer4.slashes();
      xPathLexer5.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer6.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.12727743676099
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      token1.toString();
      xPathLexer0.equals();
      token2.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      token3.toString();
      token4.toString();
      xPathLexer0.identifierOrOperatorName();
      token4.toString();
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      token0.toString();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("om.werken.saxpath.Token");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.star();
      Token token5 = xPathLexer0.operatorName();
      assertNull(token5);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.124681106942012
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("aaoNly+&Ya}nPD1qI");
      xPathLexer0.colon();
      Token token0 = xPathLexer1.notEquals();
      assertEquals("aa", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("'0XhY7Z_93sE`Gf");
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.9518178231895775
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("x*BgQq'/KLNKy7)");
      XPathLexer xPathLexer2 = new XPathLexer("lra^#");
      xPathLexer2.slashes();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.8581987666274737
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.dots();
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      
      token2.toString();
      token3.toString();
      token2.toString();
      token3.toString();
      token2.toString();
      xPathLexer0.leftParen();
      String string0 = token3.toString();
      assertEquals("[ (27) (rk)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (13) (w)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.colon();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      token4.toString();
      String string2 = token4.toString();
      assertEquals("[ (18) (.)", string2);
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("axpath.XPathLexer", token6.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }
}
