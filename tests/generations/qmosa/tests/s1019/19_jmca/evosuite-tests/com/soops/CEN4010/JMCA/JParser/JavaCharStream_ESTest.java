/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 18:57:22 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.888330094994351
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)2);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('6');
      javaCharStream0.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8314951374876642
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)92);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-802), (-802));
      intArray0[0] = (int) (byte)92;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.BeginToken();
      javaCharStream0.BeginToken();
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string1 = javaCharStream1.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.577487668217304
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3Gei.'`.!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 925, (-1931), 2002);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader(".[-3Gei.'`.!");
      stringReader1.ready();
      javaCharStream0.backup((-1931));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hp)7e]pOp_VK@[");
      stringReader0.read();
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-1), 83);
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      mockFile0.toURI();
      URI uRI0 = MockURI.aFTPURI;
      mockFile0.setReadable(true);
      mockFile0.toPath();
      mockFile0.deleteOnExit();
      MockFile mockFile1 = new MockFile("A4sZM|6:m");
      mockFile0.setExecutable(false, false);
      mockFile0.setReadable(false);
      mockFile0.setReadOnly();
      mockFile0.setWritable(false, false);
      mockFile0.setExecutable(true, false);
      MockFile.createTempFile("c\"qSJ", "");
      MockFile.createTempFile("4Dh", "", (File) mockFile0);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.721234096003364
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3ei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H.p)7e]pOp_7K@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, (-285), 57);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream0.available = 2048;
      StringReader stringReader1 = new StringReader("0{V yN");
      stringReader0.ready();
      javaCharStream0.backup(3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringReader0.read();
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.ReadByte();
      javaCharStream0.AdjustBuffSize();
      assertEquals(56, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.59662489815109
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      stringReader0.skip((byte)92);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " column ");
      stringReader0.read(charBuffer0);
      charBuffer0.get();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3589), 1315, 1301);
      javaCharStream0.readChar();
      javaCharStream0.getBeginColumn();
      CharBuffer.wrap((CharSequence) charBuffer0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      javaCharStream0.adjustBeginLineColumn(96, (-466));
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-466), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      byteArray0[0] = (byte)13;
      intArray0[3] = (-1);
      intArray0[4] = (int) (byte)13;
      javaCharStream0.prevCharIsCR = false;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream1.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3290664355296862
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      stringReader0.ready();
      javaCharStream0.backup(0);
      stringReader0.read();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-20);
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2132), 281);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.getBeginColumn();
      JavaCharStream.hexval('6');
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 12, (byte) (-15), (byte) (-15));
      javaCharStream0.FillBuff();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream3.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.495287330715984
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark((byte)92);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = 3329;
      int int1 = 4;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4, 4, 3329);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0912299807643941
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)32;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (int) (byte)32;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.getBeginColumn();
      StringReader stringReader0 = new StringReader("M:Rkn1_=Ps");
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1));
      JavaCharStream.hexval('6');
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)92, 32, 1112);
      javaCharStream1.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3848924330997707
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      String string0 = "A4sZM|6:m";
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      int[] intArray0 = new int[4];
      intArray0[0] = 117;
      intArray0[1] = (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(9, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.586577333232116
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = 3526;
      stringReader0.markSupported();
      stringReader0.ready();
      javaCharStream0.backup(92);
      stringReader0.read();
      char[] charArray0 = new char[6];
      charArray0[0] = 'y';
      charArray0[1] = ':';
      charArray0[2] = 'R';
      charArray0[3] = 'X';
      charArray0[4] = '';
      charArray0[5] = '4';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1885), 89, 74);
      javaCharStream1.ReInit((Reader) null, 0, (-1), 89);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader(",Vi%sK:3GBT");
      stringReader1.markSupported();
      javaCharStream1.ReInit((Reader) stringReader1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      javaCharStream0.ExpandBuff(false);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.369978708581614
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)13;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)4);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 833, (byte)13, (byte)13);
      javaCharStream0.backup((byte)13);
      javaCharStream0.backup(35);
      javaCharStream0.backup(796);
      javaCharStream0.GetImage();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      byteArrayInputStream0.close();
      javaCharStream0.ExpandBuff(true);
      assertEquals(844, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8860572686286033
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte)20;
      byteArray0[1] = (byte)127;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)13);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-1), (byte)78);
      byteArrayInputStream1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.getBeginColumn();
      JavaCharStream.hexval('b');
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, (-1), 1112, (byte)127);
      // Undeclared exception!
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      int int0 = 9;
      javaCharStream0.inBuf = 9;
      javaCharStream0.adjustBeginLineColumn(9, 9);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "A4sZM|6:m");
      CharBuffer.wrap((CharSequence) charBuffer0);
      int int1 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'h';
      charArray0[1] = 'c';
      charArray0[2] = 'K';
      // Undeclared exception!
      try { 
        charBuffer0.compact();
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4, 4, 3329);
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = (-1);
      intArray0[2] = 3329;
      intArray0[3] = 4;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("epmOjQJj");
      stringReader0.ready();
      javaCharStream0.backup(3);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.read();
      javaCharStream0.bufsize = 101;
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(4);
      assertEquals(3327, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7133021132707138
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)92);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)13;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.available = (int) (byte)13;
      JavaCharStream.hexval('1');
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6183330595080276
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = 3526;
      stringReader0.markSupported();
      stringReader0.ready();
      javaCharStream0.backup(3526);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1885), 89, 74);
      javaCharStream1.ReInit((Reader) null, 0, 0, 44);
      javaCharStream1.ReInit((Reader) null, 0, (-1), 89);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader(",Vi%sK:3GBT");
      javaCharStream1.ReInit((Reader) stringReader1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      char char0 = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3810838649119437
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1744, 1744, 1744);
      stringReader0.markSupported();
      javaCharStream0.bufsize = 1744;
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      CharBuffer charBuffer0 = CharBuffer.allocate(1744);
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.mark(1744);
      stringReader0.skip(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader1.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      javaCharStream0.GetSuffix(1744);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.8535949315458904
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)92;
      byteArray2[1] = (byte)92;
      byteArray2[2] = (byte)92;
      byteArray2[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray2);
      byteArrayInputStream1.read();
      byteArrayInputStream0.read();
      byteArrayInputStream1.close();
      byteArrayInputStream1.mark(92);
      byteArrayInputStream0.reset();
      byteArrayInputStream1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)92, (byte)92);
      assertEquals(92, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.369978708581614
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)13;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)4);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1246), 1882, (byte)13);
      javaCharStream0.backup((byte)8);
      javaCharStream0.backup(28);
      javaCharStream0.backup(796);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      assertEquals((-3264), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      byteArray0[0] = (byte)13;
      intArray0[3] = (-1);
      intArray0[4] = (int) (byte)13;
      javaCharStream0.prevCharIsCR = true;
      char char0 = '6';
      javaCharStream0.available = (int) (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3ei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H.p)7e]pOp_7K@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, (-285), 57);
      javaCharStream0.backup((-285));
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader1 = new StringReader("H.p)7e]pOp_7K@[");
      stringReader1.mark(1559);
      stringReader1.skip(284);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader(".[-3ei.'`.!");
      stringReader2.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader3 = new StringReader(".[-3ei.'`.!");
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1246), 1882, 1994);
      javaCharStream0.backup(59);
      byteArrayInputStream0.reset();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)0, 1882);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (int) (byte)13;
      intArray0[4] = (int) (byte)0;
      javaCharStream1.bufcolumn = intArray0;
      javaCharStream0.backup(1886);
      javaCharStream1.prevCharIsCR = true;
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      javaCharStream0.getLine();
      javaCharStream1.Done();
      javaCharStream0.getEndLine();
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      char char0 = 'V';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.774682068466941
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte)92;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte)92;
      byteArray1[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.read();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.read();
      byteArrayInputStream0.close();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.mark((byte)92);
      byteArrayInputStream1.reset();
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile(" column ");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.aFTPURI;
      mockFile0.setReadable(true);
      mockFile0.toPath();
      mockFile0.mkdir();
      mockFile0.deleteOnExit();
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(" column ");
      mockFile0.setExecutable(false, false);
      mockFile0.deleteOnExit();
      mockFile0.setReadable(true);
      mockFile0.setReadOnly();
      mockFile0.setReadable(false);
      mockFile0.setWritable(false, false);
      mockFile0.setExecutable(true, false);
      MockFile.createTempFile("4Dh", "", (File) mockFile0);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5601507502065712
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor2);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.520830570931456
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)92);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)13;
      intArray0[4] = (int) (byte)13;
      javaCharStream0.nextCharInd = 13;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.available = (int) (byte)13;
      JavaCharStream.hexval('6');
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.687618837160078
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1744, 1744, 1744);
      javaCharStream0.bufsize = 1744;
      javaCharStream0.ReInit((Reader) stringReader0, (-1351), 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      CharBuffer charBuffer0 = CharBuffer.allocate(4096);
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      CharBuffer.wrap(charArray0);
      charBuffer0.duplicate();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.mark(4096);
      stringReader0.skip(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader1.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      javaCharStream0.GetSuffix(1744);
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('~');
      assertEquals((-1351), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7989112153281646
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1744, 1744, 1744);
      javaCharStream0.bufsize = 1744;
      javaCharStream0.ReInit((Reader) stringReader0, (-1351), 0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      CharBuffer charBuffer0 = CharBuffer.allocate(4096);
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      CharBuffer.wrap(charArray0);
      charBuffer0.duplicate();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.mark(4096);
      stringReader0.skip(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader1.read(charBuffer0);
      stringReader0.mark(80);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      javaCharStream0.GetSuffix(1744);
      javaCharStream0.getBeginColumn();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      JavaCharStream.hexval('C');
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      char[] charArray0 = new char[1];
      CharBuffer.wrap(charArray0);
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.skip(0);
      stringReader0.read(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      StringReader stringReader3 = new StringReader("");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.866471472250654
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1744, 1744, 1744);
      javaCharStream0.bufsize = 1744;
      javaCharStream0.ReInit((Reader) stringReader0, (-1351), 0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      CharBuffer charBuffer0 = CharBuffer.allocate(4096);
      charBuffer0.duplicate();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.mark(4096);
      stringReader0.skip(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader1.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      javaCharStream0.GetSuffix(1744);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('9');
      javaCharStream0.FillBuff();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals((-1351), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3329, 4);
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = (-1);
      intArray0[2] = 3329;
      intArray0[3] = 4;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("epmOjQJj");
      stringReader0.ready();
      javaCharStream0.backup(3);
      javaCharStream0.Done();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.read();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.748866583338529
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1342, 8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.backup(2711);
      javaCharStream0.backup(1342);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      JavaCharStream.hexval('2');
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('2');
      assertEquals(1342, javaCharStream0.getBeginLine());
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2, (-1397));
      javaCharStream1.readChar();
      int int0 = javaCharStream1.getColumn();
      assertEquals((-1397), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("uicbWv}i", "2,", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char char0 = 'a';
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('w');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0553565668702998
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1246), 1882, 1994);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)0, 1882);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1109, 4096);
      javaCharStream0.backup(1886);
      javaCharStream0.GetImage();
      javaCharStream1.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(77);
      JavaCharStream.hexval('6');
      javaCharStream1.prevCharIsLF = true;
      javaCharStream1.getBeginLine();
      javaCharStream1.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.ready();
      javaCharStream0.backup(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[4] = 'q';
      javaCharStream0.readChar();
      int int0 = 0;
      CharBuffer charBuffer0 = CharBuffer.allocate(4096);
      StringReader stringReader2 = new StringReader("'9~Mbdy<Gild$774");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      stringReader2.ready();
      // Undeclared exception!
      try { 
        charBuffer0.read(charBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8008597854817427
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read();
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byteArrayInputStream1.mark((byte)92);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char char0 = 'L';
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char char0 = '[';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaCharStream.hexval('A');
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-3);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-3));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JavaCharStream.hexval('D');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 'D');
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      int int1 = JavaCharStream.hexval('b');
      assertEquals(11, int1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "";
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, (byte)9);
      byteArrayInputStream1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaCharStream.hexval('d');
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)95;
      String string0 = null;
      File file0 = MockFile.createTempFile("{`]JEE^=f;%P", (String) null);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(file0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
      
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1645), (-1351));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaCharStream.hexval('F');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.501389507028751
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.mark((byte)92);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream0.read();
      byteArrayInputStream2.mark((byte)92);
      byteArrayInputStream3.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      boolean boolean0 = JavaCharStream.staticFlag;
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.skip(17);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4, 4, 3329);
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = (-1);
      intArray0[2] = 3329;
      intArray0[3] = 4;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("epmOjQJj");
      stringReader0.ready();
      javaCharStream0.backup(3);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(4);
      assertEquals(3327, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5688398054654713
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.reset();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream1.mark((byte)84);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      javaCharStream0.adjustBeginLineColumn((byte)92, (-568));
      javaCharStream0.GetSuffix((byte)0);
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\\\r", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaCharStream.hexval('C');
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      mockFile0.toURI();
      mockFile0.toURI();
      mockFile0.setReadable(false);
      MockFile mockFile1 = new MockFile("A4sZM|6:m");
      mockFile0.setExecutable(false, true);
      mockFile0.setReadable(true);
      mockFile0.setExecutable(false, false);
      MockFile.createTempFile("4Dh", "", (File) mockFile0);
      StringReader stringReader0 = new StringReader("O{");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JavaCharStream.hexval('4');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-30);
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1899), (-1899));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      char[] charArray0 = new char[1];
      CharBuffer.wrap(charArray0);
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.read(charArray0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)93;
      MockFile mockFile0 = new MockFile("", "'9~Mbdy<Gild$774");
      mockFile0.getCanonicalFile();
      mockFile0.setExecutable(true, false);
      MockFile.createTempFile("'9~Mbdy<Gild$774", "", (File) mockFile0);
      StringReader stringReader3 = new StringReader("I!P=!%T\u0003UIeL");
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      stringReader0.ready();
      stringReader0.read();
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char char0 = ']';
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaCharStream.hexval('5');
      JavaCharStream.hexval('3');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      try { 
        pipedOutputStream1.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.323680273019159
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor2);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn(9, 9);
      javaCharStream0.getBeginLine();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ".[-3ei.'`\\.!";
      StringReader stringReader0 = new StringReader(".[-3ei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H.p)7e]pOp_7K@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, (-285), 57);
      javaCharStream0.backup((-285));
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaCharStream0.adjustBeginLineColumn((-99), 0);
      File file0 = MockFile.createTempFile(".[-3ei.'`.!", ".[-3ei.'`.!");
      file0.setReadable(true, false);
      file0.setWritable(true, true);
      try { 
        MockFile.createTempFile(".[-3ei.'`.!", "X_E2#|*OoqMpV", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6409518853746863
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.mark(3689);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      int int0 = javaCharStream0.getColumn();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2351768357314756
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)32;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (int) (byte)32;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      String string0 = "";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "4TSgIF@aAtaKkleH", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.1073016318123377
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1744, 1744, 1744);
      stringReader0.markSupported();
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader(string0);
      stringReader1.skip(1744);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "'9~Mbdy<Gild$774");
      stringReader0.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("{");
      int int0 = 1315;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int1 = 1365;
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1365, 0, (-3589));
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) string0, (-3589), 3050);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6570519392541554
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.backup(0);
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 74, 89);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-1), javaCharStream0.getBeginLine());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArray0[0] = (byte)13;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      mockFile0.toURI();
      mockFile0.toURI();
      mockFile0.setReadable(false);
      mockFile0.toPath();
      mockFile0.deleteOnExit();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 28, 95, 95);
      javaCharStream0.backup(3628);
      javaCharStream0.backup(796);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.mark(3689);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = 'z';
      charArray0[2] = '+';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)12);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (-1), (byte)12);
      byteArrayInputStream0.skip(37L);
      javaCharStream0.backup((-1246));
      javaCharStream0.backup(1);
      javaCharStream0.backup(796);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1817319207582866
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte byte0 = (byte)92;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.mark(3689);
      int int0 = (-1);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)92, 2189, (byte)92);
      javaCharStream0.ReInit((Reader) stringReader0, 2194, (int) (byte)92, (int) (byte)92);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      int int1 = 89;
      PipedInputStream pipedInputStream0 = new PipedInputStream(89);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.flush();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream2);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.68722615170101
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read();
      byteArrayInputStream0.read();
      byteArrayInputStream1.mark((byte)92);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(160, 3);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(160, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      mockFile0.setReadable(false);
      mockFile0.getCanonicalFile();
      boolean boolean0 = JavaCharStream.staticFlag;
      MockFile mockFile1 = new MockFile("4Dh");
      StringReader stringReader0 = new StringReader("A4sZM|6:m");
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, 90);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.1105222437286018
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile(" column ");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.aFTPURI;
      mockFile0.setReadable(true);
      mockFile0.toPath();
      mockFile0.deleteOnExit();
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(" column ");
      mockFile0.setExecutable(false, false);
      mockFile0.deleteOnExit();
      mockFile0.setReadable(true);
      mockFile0.setReadOnly();
      mockFile0.setWritable(false, false);
      mockFile0.setExecutable(true, false);
      StringReader stringReader0 = new StringReader("0 #% ;4O%c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 47, (-498), 78);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals((-498), javaCharStream0.getBeginColumn());
      assertEquals('#', char0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5590088303031986
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte) (-109);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.mark(3689);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix((byte)92);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5536951214149421
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)13;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (int) (byte)13;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.prevCharIsCR = false;
      JavaCharStream.hexval('6');
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)92, 13, 1112);
      javaCharStream1.FillBuff();
      javaCharStream1.readChar();
      char char0 = javaCharStream1.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3329, 4);
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = (-1);
      intArray0[2] = 3329;
      intArray0[3] = 4;
      intArray0[4] = 0;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.04461051760409
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile(" column ");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.aFTPURI;
      mockFile0.mkdirs();
      mockFile0.setReadable(true);
      mockFile0.toPath();
      mockFile0.mkdir();
      mockFile0.deleteOnExit();
      mockFile0.setReadable(true);
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(" column ");
      mockFile0.setExecutable(false, true);
      mockFile0.deleteOnExit();
      mockFile0.setReadable(true);
      mockFile0.setLastModified(1L);
      mockFile0.setReadOnly();
      mockFile0.setWritable(false, false);
      mockFile0.setExecutable(true, false);
      MockFile.createTempFile("4Dh", "", (File) mockFile0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2740, 5025);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.adjustBeginLineColumn((-501), 5025);
      assertEquals(5025, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      stringReader0.ready();
      stringReader0.ready();
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, (-58), 74, 89);
      javaCharStream0.nextCharInd = (-16);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.2492963676256
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn(9, 9);
      javaCharStream0.backup(9);
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.read();
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      assertEquals(4088, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2381), (-2408), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-48), 7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.795040818427787
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)92);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream0.read();
      byteArrayInputStream2.mark((byte)92);
      byteArrayInputStream3.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.603986603455682
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1744, 1744, 1744);
      stringReader0.markSupported();
      javaCharStream0.bufsize = 1744;
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.readChar();
      CharBuffer charBuffer0 = CharBuffer.allocate(1744);
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.read(charArray0);
      stringReader1.mark(1744);
      stringReader1.markSupported();
      stringReader1.read(charArray0);
      stringReader0.skip(301);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader1.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("I!P=!%T\u0003UIeL");
      javaCharStream0.GetSuffix(1744);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.BeginToken();
      javaCharStream0.FillBuff();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.239546876791717
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(2047, 0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 9, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile(" column ");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.aFTPURI;
      mockFile0.setReadable(true);
      mockFile0.toPath();
      mockFile0.mkdir();
      mockFile0.deleteOnExit();
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(" column ");
      mockFile0.setExecutable(false, false);
      mockFile0.deleteOnExit();
      mockFile0.setReadable(true);
      mockFile0.setReadOnly();
      mockFile0.setReadable(false);
      mockFile0.setWritable(false, false);
      MockFile.createTempFile(" column ", "", (File) mockFile1);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 5025, (-1884));
      javaCharStream0.adjustBeginLineColumn(0, (-734));
      assertEquals((-734), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      MockFile mockFile0 = new MockFile("");
      mockFile0.setWritable(false, true);
      String string0 = "X_E2#|*OoqMpV";
      MockFile.createTempFile("!Q J>C{GU9Ebm", "Invalid escape character at line ", (File) mockFile0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1044), (-1107), 71);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.line = 1571;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)5, 99);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 99, 1128);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile(" column ");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.aFTPURI;
      mockFile0.mkdirs();
      mockFile0.getAbsolutePath();
      mockFile0.setReadable(true);
      mockFile0.toPath();
      mockFile0.mkdir();
      mockFile0.deleteOnExit();
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(" column ");
      mockFile0.setExecutable(false, true);
      mockFile0.deleteOnExit();
      mockFile0.setReadable(true);
      mockFile0.setReadable(true);
      mockFile0.setLastModified(1L);
      mockFile0.setReadOnly();
      mockFile0.setWritable(false, false);
      mockFile0.setExecutable(true, false);
      mockFile1.getAbsoluteFile();
      mockFile1.setExecutable(true, true);
      MockFile.createTempFile(" column ", "", (File) mockFile1);
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "lD,$d*_*38<");
      MockFile mockFile0 = new MockFile("(86.vcdLn>;uC");
      mockFile0.setReadOnly();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-2194), 1744, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 71);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('c', char0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 1744);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3104, (-1), 1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1784));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-622), 76);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-2268), 1342, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1077);
      pipedOutputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)5, 99);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 99, 1128);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("uicbWv}i", "2,", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 92, 0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 74);
      javaCharStream0.line = (-1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'f)8r/K98BoZ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1, (int) (byte)1, (-1));
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.447252552051892
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3Gei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Hp)7e]pOp_VK@[");
      stringReader0.mark(2862);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-105);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.mark((byte) (-105));
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char char0 = 'N';
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charBuffer0.mark();
      charBuffer0.subSequence(0, 0);
      charBuffer0.read(charBuffer0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      stringReader0.ready();
      javaCharStream0.backup(0);
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 74, 89);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 0);
      javaCharStream0.nextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.0711833848822674
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      String string0 = " column ";
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      stringReader0.skip((byte)89);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " column ");
      stringReader0.read(charBuffer0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("%<)D");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, 689, (-3589));
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "%<)D", (int) (byte)92, 8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 4086, 4086);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.685528244825583
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      stringReader0.ready();
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 74, 89);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 0);
      javaCharStream0.nextCharInd = (-1);
      stringReader0.ready();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip(1967L);
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1342, 8);
      javaCharStream0.ReInit((Reader) stringReader0, 9, 1411, 1342);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1745, (-1));
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      sequenceInputStream0.mark((byte) (-42));
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)45;
      sequenceInputStream0.read(byteArray0, (int) (byte) (-1), 3757);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.2200820606877794
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 1744;
      StringReader stringReader0 = new StringReader("?3<=8^@5%Q^S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      CharBuffer.allocate(4096);
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      charArray0[1] = '?';
      charArray0[2] = '?';
      CharBuffer.wrap(charArray0);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Vi%sK:3GBT");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      char[] charArray0 = new char[0];
      javaCharStream0.backup(0);
      stringReader0.read();
      javaCharStream0.UpdateLineColumn(']');
      javaCharStream0.getLine();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-3);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3), 173);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 173, (byte) (-127), (-246));
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('M');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.797896995180376
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile(" column ");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.aFTPURI;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)122;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)122);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.read();
      byteArrayInputStream3.read();
      byteArrayInputStream0.mark(1856);
      byteArrayInputStream1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream3);
      javaCharStream1.getBeginColumn();
      javaCharStream0.BeginToken();
      String string0 = javaCharStream1.GetImage();
      javaCharStream1.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.AdjustBuffSize();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      MockFile mockFile0 = new MockFile("uicbWv}i");
      mockFile0.toURI();
      File file0 = MockFile.createTempFile("uicbWv}i", "2,", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 4081, (-4192));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RA2l^6+A\"qX-@Ge%0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 8, 117);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('R', char0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("A4sZM|6:m");
      mockFile0.setReadable(false);
      MockFile mockFile1 = new MockFile("A4sZM|6:m");
      mockFile0.setExecutable(false, false);
      MockFile.createTempFile("4Dh", "", (File) mockFile0);
      StringReader stringReader0 = new StringReader("O{");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1162), (-3483), 4096);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3Gei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".[-3Gei.'`.!");
      StringReader stringReader1 = new StringReader(".[-3Gei.'`.!");
      stringReader1.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hp)7e]pOp_VK@[");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringReader0.read();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      char[] charArray0 = javaCharStream0.GetSuffix(2017);
      assertEquals(2017, charArray0.length);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('c', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5/FEf=mgYV");
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = '}';
      charArray0[2] = ' ';
      charArray0[3] = '&';
      charArray0[4] = 'T';
      charArray0[5] = '!';
      charArray0[6] = 'L';
      charArray0[7] = '^';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, (-3392), 2);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('Y', char0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'9~Mbdy<Gild$774");
      stringReader0.ready();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("'9~Mbdy<Gild$774");
      stringReader1.ready();
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[4] = 'q';
      StringReader stringReader2 = new StringReader("'9~Mbdy<Gild$774");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringReader2.ready();
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, (-674), 70);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      MockFile mockFile0 = new MockFile("uicbWv}i");
      File file0 = MockFile.createTempFile("uicbWv}i", "2,", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 92, 4716);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CB|Jz&ioZAQo>N");
      int int0 = (-998);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-998), (-998), (-2516));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3Gei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Hp)7e]pOp_VK@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, (-285), 57);
      MockFile mockFile0 = new MockFile("");
      mockFile0.setExecutable(false, false);
      mockFile0.setReadable(false);
      mockFile0.setReadOnly();
      mockFile0.setWritable(true, true);
      MockFile mockFile1 = new MockFile(mockFile0, "Hp)7e]pOp_VK@[");
      mockFile1.setExecutable(true, false);
      MockFile.createTempFile("4Dh", "", (File) mockFile1);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.656185661560307
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-82), (-797));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-95), 69);
      javaCharStream0.Done();
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)55, (int) (byte) (-95));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.mark((-797));
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader2);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 97, (byte) (-82), 0);
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".[-3Gei.'`.!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".[-3Gei.'`.!");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader(".[-3Gei.'`.!");
      stringReader1.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hp)7e]pOp_VK@[");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
