/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:08:25 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.nio.CharBuffer;
import java.sql.SQLDataException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTimeoutException;
import messages.Message;
import messages.global.GlobalChatMsg;
import messages.round.TileHitPlayerMsg;
import org.apache.log4j.helpers.LogLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = null;
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = null;
      String string1 = "";
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, string1);
      BomberClient bomberClient1 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      String string2 = "aEl";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string2);
      EvoSuiteLocalAddress evoSuiteLocalAddress1 = null;
      byte[] byteArray0 = null;
      FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean0 = NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress1, byteArray0);
      ClientMsgReceiver clientMsgReceiver1 = new ClientMsgReceiver(mockSocket0, bomberClient1);
      LogLog.setQuietMode(boolean0);
      String string3 = null;
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(string3);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = null;
      String string1 = " totalRounds: ";
      int int0 = 0;
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException(string1, string0, int0);
      ClientMsgReceiver clientMsgReceiver1 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      boolean boolean0 = false;
      ClassLoader classLoader0 = null;
      clientMsgReceiver1.setContextClassLoader(classLoader0);
      LogLog.setQuietMode(boolean0);
      int int1 = (-1);
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(int1);
      clientMsgReceiver1.processMsg(tileHitPlayerMsg0);
      clientMsgReceiver0.processMsg(tileHitPlayerMsg0);
      String string2 = "=p=Id6D$MB'pae@U";
      SQLDataException sQLDataException0 = new SQLDataException(string0, string2, int0);
      int int2 = (-165);
      int int3 = (-2493);
      // Undeclared exception!
      try { 
        CharBuffer.allocate(int3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sa");
      Proxy proxy0 = Proxy.NO_PROXY;
      byte[] byteArray0 = new byte[1];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ERROR", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      MockSocket mockSocket0 = new MockSocket(proxy0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "server.dbname");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      mockSocket0.setReuseAddress(false);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = clientMsgReceiver0.getUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      Proxy proxy0 = Proxy.NO_PROXY;
      byte[] byteArray0 = new byte[1];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ERROR", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockInetSocketAddress0.getHostName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      mockSocket0.setReuseAddress(false);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("database alias does not exist", "+eSlh0h{<ps");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.GlobalChatMsg", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Proxy proxy0 = Proxy.NO_PROXY;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ERROR", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      MockSocket mockSocket0 = new MockSocket(proxy0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+eSlh0h{<ps");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "server.dbname");
      mockSocket0.setReuseAddress(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      System.setCurrentTimeMillis(8L);
      System.setCurrentTimeMillis((-1277L));
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      Throwable throwable0 = null;
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(throwable0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      String string0 = "Z}(~mQ3N;2qGCSrE{";
      String string1 = ",";
      int int0 = 0;
      StackTraceElement stackTraceElement0 = new StackTraceElement(string0, string0, string1, int0);
      stackTraceElementArray0[0] = stackTraceElement0;
      String string2 = "m/E?nKXM@MF]$d";
      StackTraceElement stackTraceElement1 = new StackTraceElement(string1, string1, string2, int0);
      stackTraceElementArray0[1] = stackTraceElement1;
      String string3 = "iXv9er`!1!";
      String string4 = "6OppYL~rr[d-B&Jx6Qc";
      StackTraceElement stackTraceElement2 = new StackTraceElement(string2, string3, string4, int0);
      stackTraceElementArray0[2] = stackTraceElement2;
      String string5 = "e(p";
      int int1 = (-1250);
      StackTraceElement stackTraceElement3 = new StackTraceElement(string2, string0, string5, int1);
      stackTraceElementArray0[3] = stackTraceElement3;
      String string6 = "z!md&OZQIt?M";
      String string7 = ";/2KgKIoA";
      StackTraceElement stackTraceElement4 = new StackTraceElement(string6, string7, string5, int0);
      stackTraceElementArray0[4] = stackTraceElement4;
      String string8 = "`[k";
      String string9 = null;
      int int2 = (-1003);
      StackTraceElement stackTraceElement5 = new StackTraceElement(string8, string6, string9, int2);
      stackTraceElementArray0[5] = stackTraceElement5;
      String string10 = "P?H]dle6$H;";
      int int3 = (-1);
      StackTraceElement stackTraceElement6 = new StackTraceElement(string0, string10, string6, int3);
      stackTraceElementArray0[6] = stackTraceElement6;
      String string11 = "ez@zgDcZ @`";
      String string12 = "";
      int int4 = (-2382);
      StackTraceElement stackTraceElement7 = new StackTraceElement(string11, string12, string9, int4);
      stackTraceElementArray0[7] = stackTraceElement7;
      sQLSyntaxErrorException0.setStackTrace(stackTraceElementArray0);
      sQLSyntaxErrorException0.getLocalizedMessage();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLSyntaxErrorException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
