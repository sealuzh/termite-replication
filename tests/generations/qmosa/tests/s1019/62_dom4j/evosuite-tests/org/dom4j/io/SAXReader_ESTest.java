/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:11:00 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.Text;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMElement;
import org.dom4j.dom.DOMNamespace;
import org.dom4j.dom.DOMText;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultAttribute;
import org.dom4j.tree.NamespaceStack;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.xml.sax.ErrorHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3828479949435293
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.uriPrefix = "v";
      sAXReader_SAXEntityResolver0.resolveEntity("v", "upper-case");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "");
      NamespaceStack namespaceStack0 = new NamespaceStack();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      StringReader stringReader0 = new StringReader("v");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.createDefaultEntityResolver("org.jaxen.function.SubstringBeforeFunction");
      sAXReader0.setEncoding("%");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.notationDecl("G-pBe", "", "G-pBe");
      String string0 = "//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/fv;fNtQkLL6+]/(cH3={{g0(cH3={{g";
      String string1 = "High surrogate without low surrogate at end of string passed to translate function";
      xMLFilterImpl0.notationDecl("//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/fv;fNtQkLL6+]/(cH3={{g0(cH3={{g", "High surrogate without low surrogate at end of string passed to translate function", "High surrogate without low surrogate at end of string passed to translate function");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getErrorHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        sAXReader0.configureReader(xMLFilterImpl1, defaultHandler2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@719ae6c8 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.391772851204174
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)96;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1077, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip((byte)0);
      byteArrayInputStream1.read(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream1.read();
      byteArrayInputStream0.close();
      byteArrayInputStream1.close();
      byteArrayInputStream1.mark((-4533));
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream1.read(byteArray0);
      byteArrayInputStream1.close();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 42, 42);
      byteArrayInputStream2.close();
      byteArrayInputStream2.markSupported();
      byteArrayInputStream0.mark((byte)76);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.mark((-3525));
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding("ends-with");
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"ENDS-WITH\". Nested exception: Invalid encoding name \"ENDS-WITH\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      int int0 = 3112;
      sAXReader0.setIgnoreComments(true);
      try { 
        sAXReader0.setFeature("http://xml.org/sax/features/use-locator2", true);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // Feature 'http://xml.org/sax/features/use-locator2' is read only.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getLength();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      attributes2Impl10.clear();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributes2Impl9);
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributes2Impl4);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl7);
      attributesImpl1.getIndex("");
      StringReader stringReader0 = new StringReader("");
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setEncoding("//home/ubuntu/termite/projects/62_dom4j/ZsC5op?)ey|:h,/home/ubuntu/tersite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfmVF80'|.?GfAmVF8w/ZsC5op?)ey|:h,0(cH3={{g");
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.441447689794065
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "lj");
      String string0 = "~]xFOE+J>aw";
      FileSystemHandling.shouldAllThrowIOExceptions();
      QName qName0 = defaultDocumentFactory0.createQName("~]xFOE+J>aw", (Namespace) null);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      QName.get("~]xFOE+J>aw", "//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/(cH3={{g/(cH3={{g1(cH3={{g");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      sAXReader0.setEncoding("lj");
      sAXReader0.isMergeAdjacentText();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getErrorHandler();
      sAXReader0.createDefaultEntityResolver("//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/(cH3={{g1(cH3={{g");
      sAXReader0.setErrorHandler((ErrorHandler) null);
      String string1 = "//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp";
      try { 
        sAXReader0.read("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp Nested exception: no protocol: //home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.338596728816859
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.uriPrefix = "v";
      sAXReader_SAXEntityResolver0.resolveEntity("v", ":pper-ca$e");
      String string0 = "i";
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "i");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      MockFile mockFile0 = new MockFile(":pper-ca$e");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      String string1 = "//tmp/b$\"109WE+MLNUrEwF-/>!";
      QName qName0 = defaultDocumentFactory0.createQName("//tmp/b$\"109WE+MLNUrEwF-/>!", "v");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      try { 
        sAXReader0.read((InputStream) mockFileInputStream0, "]:`");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3497427651978415
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InputSource inputSource0 = new InputSource();
      NamespaceStack namespaceStack0 = new NamespaceStack();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      StringReader stringReader0 = new StringReader("");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      try { 
        sAXReader0.read((Reader) stringReader0, "org.dom4j.io.SAXModifyElementHandler");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.349742765197841
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte) (-57);
      byteArray0[5] = (byte)11;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      sAXReader0.setEncoding("9WE+MLNUrEwF-/>!/");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      String string0 = "EQ";
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EQ");
      File file0 = MockFile.createTempFile("b$\"1", "9WE+MLNUrEwF-/>!/", (File) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      file0.setReadable(true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      file0.getCanonicalPath();
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"9WE+MLNUREWF-/>!/\". Nested exception: Invalid encoding name \"9WE+MLNUREWF-/>!/\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3886459900319457
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1063, 1063);
      byteArrayInputStream0.read();
      Object object0 = new Object();
      byteArrayInputStream0.mark(49);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      namespaceStack0.clear();
      QName qName0 = QName.get("//tmp/:,>48/|}W9A03h8xx*3z0!", namespace0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      namespaceStack0.contains(namespace0);
      BaseElement baseElement0 = new BaseElement("//tmp/:,>48/|}W9A03h8xx*3z0!", namespace0);
      baseElement0.addElement("//tmp/:,>48/|}W9A03h8xx*3z0!", "//tmp/:,>48/|}W9A03h8xx*3z0!", "//tmp/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S30/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3");
      defaultDocumentFactory0.createDocument();
      baseElement0.toString();
      namespaceStack0.pop("b2g$!");
      QName.get("//tmp/:,>48/|}W9A03h8xx*3z0!", namespace0, "");
      NonLazyElement nonLazyElement0 = new NonLazyElement(qName0);
      QName.get("x{1po>", namespace0, "F{}xlgq9Is");
      DefaultAttribute defaultAttribute0 = new DefaultAttribute("x{1po>", "org.dom4j.tree.BaseElement@9 [Element: <//tmp/:,>48/|}W9A03h8xx*3z0! attributes: []/>]");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory1, false);
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "http://xml.org/sax/properties/declaration-handler");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "fv;fNtQkLL6+]");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ":sV{K.Pv|B>");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "//tmp/ [Entity: &1/tmp/position() does not take any arguments.03^{\"yqeHLIv>:");
      Object object0 = new Object();
      try { 
        sAXReader0.setProperty("http://xml.org/sax/properties/declaration-handler", object0);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // The value specified for property 'http://xml.org/sax/properties/declaration-handler' cannot be casted to org.xml.sax.ext.DeclHandler.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)56;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.startDocument();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createXMLReader();
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.366179761890393
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.setEncoding("R_}M00P>B/:'`e!T~4D");
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "//tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"R_}M00P>B/:'`E!T~4D\". Nested exception: Invalid encoding name \"R_}M00P>B/:'`E!T~4D\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setFeature("http://xml.org/sax/features/string-interning", true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)105;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)105;
      byteArray0[8] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 59, 8016);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      Object object0 = new Object();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getQName("8|\"}V4cl", "K|Gg^?", (String) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      namespaceStack0.getDefaultNamespace();
      namespaceStack0.clear();
      QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = new QName("K|Gg^?", namespace0);
      qName0.equals(defaultDocumentFactory0);
      QName qName1 = QName.get("8|\"}V4cl", "//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", "^,-OSumU]j&&CvPPL");
      NonLazyElement nonLazyElement0 = new NonLazyElement("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", (Namespace) null);
      DOMElement dOMElement0 = new DOMElement(qName1);
      DOMDocument dOMDocument0 = new DOMDocument();
      nonLazyElement0.toString();
      QName qName2 = QName.get("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", (Namespace) null, "6=#gL(A62=h");
      QName.get("G\"aiu.~Jx);F", "^,-OSumU]j&&CvPPL", "G\"aiu.~Jx);F");
      QName.get("6=#gL(A62=h", namespace0);
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName2);
      DOMText dOMText0 = new DOMText("^,-OSumU]j&&CvPPL");
      nonLazyElement1.remove((Text) dOMText0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G\"aiu.~Jx);F");
      Object object0 = new Object();
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      try { 
        sAXReader0.setProperty("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl2);
      String string0 = "//tmp/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w0HW\"2";
      StringReader stringReader0 = new StringReader("} %&'s&2b^a<)");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      try { 
        sAXReader0.read((Reader) stringReader0, "|S3{ysR");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@14547eb9 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@14547eb9 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.324495875476458
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("ce04ZUvl0m1=[z4jC", "ce04ZUvl0m1=[z4jC", "ce04ZUvl0m1=[z4jC", (-1473), 44);
      Throwable[] throwableArray0 = sAXParseException0.getSuppressed();
      MockPrintStream mockPrintStream0 = new MockPrintStream("ce04ZUvl0m1=[z4jC");
      PrintStream printStream0 = mockPrintStream0.format("ce04ZUvl0m1=[z4jC", (Object[]) throwableArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, true);
      sAXParseException0.printStackTrace((PrintWriter) mockPrintWriter0);
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: ce04ZUvl0m1=[z4jC; systemId: ce04ZUvl0m1=[z4jC; lineNumber: -1473; columnNumber: 44; ce04ZUvl0m1=[z4jC", "ce04ZUvl0m1=[z4jC", "org.xml.sax.SAXParseExceptionpublicId: ce04ZUvl0m1=[z4jC; systemId: ce04ZUvl0m1=[z4jC; lineNumber: -1473; columnNumber: 44; ce04ZUvl0m1=[z4jC", 44, (-1473));
      xMLFilterImpl0.fatalError(sAXParseException1);
      xMLFilterImpl0.endPrefixMapping("//tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3");
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("ce04ZUvl0m1=[z4jC");
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3", "7zE~1t0kUL$Ux7S");
      StringReader stringReader0 = new StringReader("//tmp/position() does not take any arguments.03^{\"yqeHLIv>:");
      sAXReader0.isValidating();
      try { 
        sAXReader0.read((Reader) stringReader0, "T4B M<S2:k,V.>9N");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document T4B M<S2:k,V.>9N : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.418994471909286
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.isValidating();
      StringReader stringReader0 = new StringReader("//tmp/org.dom4j.tree.ConcurrentReaderHashMap$Entry03h8xx*3z0!");
      stringReader0.reset();
      sAXReader0.removeHandler("//tmp/org.dom4j.tree.ConcurrentReaderHashMap$Entry03h8xx*3z0!");
      try { 
        sAXReader0.read((Reader) stringReader0, "&@2T|3qZrEpL,");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document &@2T|3qZrEpL, : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.getXMLFilter();
      sAXReader0.createXMLReader();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.endDocument();
      handlerBase0.resolveEntity((String) null, "");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("F)yV,-;E{BoR\"Uif");
      sAXReader_SAXEntityResolver0.uriPrefix = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.dom4j.io.SAXHelper");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("W)n5t^", "<1):,oyR(?(yMQUZR");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3326774197215174
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = null;
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.uriPrefix = null;
      InputSource inputSource0 = new InputSource();
      String string1 = "";
      InputSource inputSource1 = sAXReader_SAXEntityResolver0.resolveEntity((String) null, "");
      NamespaceStack namespaceStack0 = new NamespaceStack();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1077, 1077);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read();
      Object object0 = new Object();
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream0.mark((-1));
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read(inputSource1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3372717988650726
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)96;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1077, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip((byte)0);
      byteArrayInputStream1.read(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream1.read();
      byteArrayInputStream0.close();
      byteArrayInputStream1.close();
      byteArrayInputStream1.mark((byte)126);
      byteArrayInputStream1.read(byteArray0);
      byteArrayInputStream1.close();
      byteArrayInputStream1.markSupported();
      byteArrayInputStream0.mark((byte)23);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream0.mark((-2728));
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 3558, 1077);
      InputSource inputSource0 = new InputSource(byteArrayInputStream2);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EQ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)56;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      byteArray0[2] = (byte) (-74);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("EQ", "9WE+MLNUrEwF-/>!/", (File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)58;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)58;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "xfsQkLL6a]");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("(cH3={{g", "//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w");
      MockFile.createTempFile("//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w", " PUBLoIC ", (File) mockFile0);
      File file0 = MockFile.createTempFile("(cH3={{g", "(cH3={{g", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "9WE+MLFUr?wF-/>T/");
      mockFile1.setExecutable(true, false);
      mockFile1.setWritable(false, false);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      file0.mkdir();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      file0.setExecutable(true, true);
      mockFile0.toURI();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      MockFile mockFile2 = new MockFile("(cH3={{g");
      mockFile0.getCanonicalPath();
      MockFile.createTempFile("(cH3={{g", "(cH3={{g", (File) mockFile0);
      Object object0 = new Object();
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.334010586157512
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)58;
      MockFile mockFile0 = new MockFile("(cH3={{g", "//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3134), (-2353));
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-552), (byte)58);
      byteArrayInputStream1.mark((-2566));
      SAXReader sAXReader1 = new SAXReader();
      try { 
        sAXReader1.read("/M2jE'v.");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /M2jE'v. (No such file or directory) Nested exception: /M2jE'v. (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5099322055703683
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.getEntityResolver();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.getErrorHandler();
      sAXReader0.getXMLReader();
      try { 
        sAXReader0.read("org.dom4j.DefaultDocumentFactory.singleton.strategy");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/org.dom4j.DefaultDocumentFactory.singleton.strategy (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/org.dom4j.DefaultDocumentFactory.singleton.strategy (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("l");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.getXMLReader();
      // Undeclared exception!
      try { 
        attributes2Impl0.setSpecified(19, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // No attribute at index: 19
         //
         verifyException("org.xml.sax.ext.Attributes2Impl", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("F)yV,-;E{BoR\"Uif");
      sAXReader_SAXEntityResolver0.uriPrefix = "F)yV,-;E{BoR\"Uif";
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.dom4j.io.SAXHelper");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("W)n5t^", "<1):,oyR(?(yMQUZR");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.dom4j.util.SimpleSingleton");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(cH3={{g");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{.7d/O");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9WE+MLNUrEwF-/>!/");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.dom4j.util.SimpleSingleton");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(LB@]z.a\"A|q");
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl0);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributes2Impl5);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributes2Impl4);
      attributes2Impl2.clear();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl10 = new Attributes2Impl(attributesImpl0);
      attributes2Impl8.getLocalName(2704);
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl9);
      SAXReader sAXReader0 = new SAXReader(true);
      AttributesImpl attributesImpl5 = new AttributesImpl();
      AttributesImpl attributesImpl6 = new AttributesImpl();
      attributes2Impl1.getLength();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl();
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2879917301334416
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      String string0 = "upper-case";
      sAXReader_SAXEntityResolver0.uriPrefix = "v";
      sAXReader_SAXEntityResolver0.resolveEntity("v", "upper-case");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "");
      NamespaceStack namespaceStack0 = new NamespaceStack();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      StringReader stringReader0 = new StringReader("v");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      attributesImpl0.clear();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      sAXReader0.setIgnoreComments(false);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Pu{");
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, xMLFilterImpl2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl0);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl1);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl3);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributes2Impl5);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributes2Impl1);
      attributes2Impl7.clear();
      AttributesImpl attributesImpl4 = new AttributesImpl();
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl2);
      attributes2Impl8.getLocalName(2171);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributesImpl0);
      AttributesImpl attributesImpl6 = new AttributesImpl(attributes2Impl4);
      AttributesImpl attributesImpl7 = new AttributesImpl();
      AttributesImpl attributesImpl8 = new AttributesImpl();
      attributes2Impl6.getLength();
      sAXReader0.isStringInternEnabled();
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      assertFalse(attributes2Impl9.equals((Object)attributes2Impl0));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      String string0 = "(cH3={{g";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)58;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "fftQkLL6+]");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("(cH3={{g", "//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w");
      MockFile.createTempFile("//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w", " PUBLIC ", (File) mockFile0);
      File file0 = MockFile.createTempFile("(cH3={{g", "(cH3={{g", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "9WE+MLFUr?wF-/>T/");
      file0.mkdir();
      file0.setExecutable(true, true);
      mockFile0.renameTo(mockFile1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      file0.setExecutable(true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      MockFile mockFile2 = new MockFile("(cH3={{g");
      mockFile0.getCanonicalPath();
      try { 
        sAXReader0.read((InputStream) null, "//tmp/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A2/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A2/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A Nested exception: no protocol: //tmp/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A2/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4104829452609864
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createXMLReader();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      HandlerBase handlerBase0 = new HandlerBase();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.getXMLReader();
      try { 
        sAXReader0.read("org.dom4j.DefaultDocumentFactory.singleton.strategy");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/org.dom4j.DefaultDocumentFactory.singleton.strategy (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/org.dom4j.DefaultDocumentFactory.singleton.strategy (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.4897182683864876
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SAXReader sAXReader0 = new SAXReader((String) null);
          DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
          dispatchHandler0.removeHandler((String) null);
          dispatchHandler0.setDefaultHandler((ElementHandler) null);
          PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
          pruningDispatchHandler0.setDefaultHandler((ElementHandler) null);
          PruningDispatchHandler pruningDispatchHandler1 = new PruningDispatchHandler();
          DispatchHandler dispatchHandler1 = new DispatchHandler();
          DefaultHandler defaultHandler0 = new DefaultHandler();
          FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CxE");
          sAXReader0.setErrorHandler(defaultHandler0);
          sAXReader0.setIncludeExternalDTDDeclarations(true);
          URL uRL0 = MockURL.getHttpExample();
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1269)
             // java.net.InetAddress.getAllByName(InetAddress.java:1193)
             // java.net.InetAddress.getAllByName(InetAddress.java:1127)
             // java.net.InetAddress.getByName(InetAddress.java:1077)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor359.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1269)
             // java.net.InetAddress.getAllByName(InetAddress.java:1193)
             // java.net.InetAddress.getAllByName(InetAddress.java:1127)
             // java.net.InetAddress.getByName(InetAddress.java:1077)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor359.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)38;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{.7d/O");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "9WE+MLNUrEwF-/>!/");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(cH3={{g");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "W9shH}Ydg EaTo");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "W9shH}Ydg EaTo");
      try { 
        sAXReader0.setProperty("//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/9WE+MLNUrEwF-/>!/09WE+MLNUrEwF-/>!", "9WE+MLNUrEwF-/>!/");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/9WE+MLNUrEwF-/>!/09WE+MLNUrEwF-/>!' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "(cH3={{g");
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "EQ");
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)56;
      byteArray1[2] = (byte) (-74);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "EQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray1);
      MockFile.createTempFile("#Reka5/h|V2I0", "9WE+MLNUrEwF-/>!/", (File) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Object object0 = new Object();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "//tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5164988325467728
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      sAXReader0.getEntityResolver();
      sAXReader0.getEntityResolver();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.setEntityResolver(sAXContentHandler0);
      sAXReader0.getErrorHandler();
      DispatchHandler dispatchHandler1 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      dispatchHandler1.addHandler("/XO%8M2 [", pruningDispatchHandler0);
      dispatchHandler1.getHandler("/XO%8M2 [");
      sAXReader0.addHandler("lScdE<<~'DH", dispatchHandler1);
      sAXReader0.isIncludeExternalDTDDeclarations();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputSource inputSource0 = new InputSource(pipedInputStream0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5381861691868464
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SAXReader sAXReader0 = new SAXReader((String) null);
          sAXReader0.getXMLFilter();
          SAXReader sAXReader1 = new SAXReader((XMLReader) null);
          sAXReader0.installXMLFilter((XMLReader) null);
          sAXReader0.setXMLFilter((XMLFilter) null);
          sAXReader0.setEncoding(" ~Lk5d\"LTo");
          sAXReader1.setIncludeExternalDTDDeclarations(true);
          URL uRL0 = MockURL.getHttpExample();
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1269)
             // java.net.InetAddress.getAllByName(InetAddress.java:1193)
             // java.net.InetAddress.getAllByName(InetAddress.java:1127)
             // java.net.InetAddress.getByName(InetAddress.java:1077)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor359.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1269)
             // java.net.InetAddress.getAllByName(InetAddress.java:1193)
             // java.net.InetAddress.getAllByName(InetAddress.java:1127)
             // java.net.InetAddress.getByName(InetAddress.java:1077)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor359.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("//tmp/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S30/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3", "//tmp/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S30/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3", 2669, "\" because: ", uRLStreamHandler0);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      attributes2Impl10.clear();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributes2Impl9);
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl4);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl7);
      StringReader stringReader0 = new StringReader("");
      SAXReader sAXReader0 = new SAXReader(false);
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl0);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributes2Impl6);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl(attributes2Impl4);
      attributes2Impl2.clear();
      AttributesImpl attributesImpl3 = new AttributesImpl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributesImpl0);
      attributes2Impl9.getLocalName(2704);
      AttributesImpl attributesImpl4 = new AttributesImpl();
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl9);
      AttributesImpl attributesImpl6 = new AttributesImpl(attributes2Impl10);
      StringReader stringReader0 = new StringReader("//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/(cH3={{g/cO%09WE+MLNUrEwF-/>!");
      SAXReader sAXReader0 = new SAXReader(true);
      try { 
        sAXReader0.read((Reader) stringReader0, "//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/(cH3={{g/cO%09WE+MLNUrEwF-/>!");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document //home/ubuntu/termite/projects/62_dom4j/(cH3={{g/(cH3={{g/cO%09WE+MLNUrEwF-/>! : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Namespace namespace0 = Namespace.get("|\"q4");
      QName qName0 = new QName((String) null, namespace0, "K|Gg^?");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName1 = QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      qName1.equals(defaultDocumentFactory0);
      QName.get("|\"q4", "K|Gg^?", "^,-OSumU]j&&C?PPL");
      NonLazyElement nonLazyElement0 = new NonLazyElement((String) null);
      DOMElement dOMElement0 = new DOMElement("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      defaultDocumentFactory0.createProcessingInstruction("K|Gg^?", "K|Gg^?");
      DOMDocument dOMDocument0 = new DOMDocument();
      nonLazyElement0.toString();
      QName qName2 = new QName((String) null);
      nonLazyElement0.isTextOnly();
      QName qName3 = QName.get("j|Z$,kN+NlaTyv", "org.dom4j.util.NonLazyElement@5 [Element: < attributes: []/>]", "|\"q4");
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName3);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      SAXReader sAXReader0 = new SAXReader((String) null);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      Object object0 = new Object();
      try { 
        sAXReader0.setProperty("j|Z$,kN+NlaTyv", qName0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'j|Z$,kN+NlaTyv' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("[(DefaultAbsoluteLocationPath): /xfsQkLL6a]2 PUBLoIC ");
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)58;
      byteArray0[2] = (byte)58;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("(cH3={{g", "(cH3={{g");
      MockFile.createTempFile("(cH3={{g", " PUBLoIC ", (File) mockFile0);
      File file0 = MockFile.createTempFile("(cH3={{g", "(cH3={{g", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "9WE+MLFUr?wF-/>T/");
      mockFile1.setExecutable(true);
      file0.deleteOnExit();
      File file1 = file0.getAbsoluteFile();
      file0.mkdir();
      mockFile0.renameTo(mockFile1);
      mockFile0.setExecutable(true, false);
      mockFile0.deleteOnExit();
      file0.toURI();
      MockFile mockFile2 = new MockFile("xfsQkLL6a]", "[(DefaultAbsoluteLocationPath): ");
      mockFile2.mkdirs();
      mockFile2.setWritable(true);
      file1.getCanonicalPath();
      MockFile.createTempFile("xfsQkLL6a]", " PUBLoIC ", (File) mockFile2);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3367045838905973
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)96;
      byteArray0[1] = (byte)23;
      byteArray0[3] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1046, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip((byte)0);
      byteArrayInputStream1.read(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream1.read();
      byteArrayInputStream0.close();
      byteArrayInputStream1.close();
      byteArrayInputStream1.mark((-4533));
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream1.read(byteArray0);
      byteArrayInputStream1.close();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 42, 42);
      byteArrayInputStream1.mark(5);
      byteArrayInputStream2.skip(934L);
      byteArrayInputStream2.mark((-102));
      byteArrayInputStream2.close();
      byteArrayInputStream2.markSupported();
      byteArrayInputStream0.mark((byte)76);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.mark((-3525));
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl1);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl0);
      StringReader stringReader0 = new StringReader("!gxB]mZ0q");
      DOMDocument dOMDocument0 = new DOMDocument("org.jaxen.function.SubstringBeforeFunction");
      sAXReader0.getEncoding();
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl();
      xMLFilterImpl2.startElement(" : ", "1.8=C", "//tmp/b$\"109WE+MLNUrEwF-/>!", attributesImpl4);
      Object object0 = new Object();
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      String string0 = "EQ";
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EQ");
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)56;
      byteArray1[2] = (byte) (-74);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "EQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray1);
      MockFile.createTempFile("#Reka5/h|V2I0", "9WE+MLNUrEwF-/>!/", (File) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Object object0 = new Object();
      String string1 = "//tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A";
      sAXReader0.getXMLReader();
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = new Namespace("--cT5rwr9h7=]'%~R2", "--cT5rwr9h7=]'%~R2");
      QName qName0 = defaultDocumentFactory0.createQName("\n  ", namespace0);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      qName0.equals(documentFactory0);
      qName0.setDocumentFactory(defaultDocumentFactory0);
      SAXParseException sAXParseException0 = new SAXParseException("<;>'i1*\"G\"Ph$4Lcj%", (Locator) null);
      qName0.equals(sAXParseException0);
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.resetHandlers();
      sAXReader0.setEncoding("--cT5rwr9h7=]'%~R2");
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEntityResolver();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.getErrorHandler();
      sAXReader0.getXMLReader();
      sAXReader0.createXMLReader();
      sAXReader0.getEntityResolver();
      try { 
        sAXReader0.setXMLReaderClassName("r{");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class r{ not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.41159611780273
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.getEntityResolver();
      sAXReader0.getEntityResolver();
      sAXReader0.setErrorHandler(sAXContentHandler0);
      sAXReader0.setEntityResolver(sAXContentHandler0);
      sAXReader0.getXMLReader();
      try { 
        sAXReader0.read("gHLeJ;_!zh");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/gHLeJ;_!zh (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/gHLeJ;_!zh (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0687928308004535
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.getEntityResolver();
      sAXReader0.getEntityResolver();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.setErrorHandler(sAXContentHandler0);
      sAXReader0.setEntityResolver(sAXContentHandler0);
      XMLReader xMLReader1 = sAXReader0.getXMLReader();
      sAXReader0.setXMLReader(xMLReader1);
      sAXReader0.installXMLFilter(xMLReader1);
      sAXReader0.getErrorHandler();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(";B&8%?2(j2Nt=");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("?1vjpnJp.'cmQ2%&y", "7]MD8bSw\rhSx7VN}");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getQName("8|\"}V4cl", "K|Gg^?", (String) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      namespaceStack0.getDefaultNamespace();
      namespaceStack0.clear();
      QName qName0 = QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName1 = QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      qName1.equals(defaultDocumentFactory0);
      QName qName2 = QName.get("8|\"}V4cl", "//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", "^,-OSumU]j&&CvPPL");
      NonLazyElement nonLazyElement0 = new NonLazyElement("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", (Namespace) null);
      DOMElement dOMElement0 = new DOMElement(qName2);
      DOMDocument dOMDocument0 = new DOMDocument();
      nonLazyElement0.toString();
      QName qName3 = QName.get("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", (Namespace) null, "6=#gL(A62=h");
      QName.get("G\"aiu.~Jx);F", "^,-OSumU]j&&CvPPL", "G\"aiu.~Jx);F");
      QName.get("6=#gL(A62=h", namespace0);
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName3);
      DOMText dOMText0 = new DOMText("^,-OSumU]j&&CvPPL");
      nonLazyElement1.remove((Text) dOMText0);
      defaultDocumentFactory0.createAttribute((Element) nonLazyElement1, qName0, "//tmp/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S30/tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3");
      SAXReader sAXReader0 = new SAXReader(false);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertNotNull(documentFactory0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setStripWhitespaceText(false);
      MockFile mockFile0 = new MockFile("/home/ubuntu/trmite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w");
      File file0 = MockFile.createTempFile("(cH3={{g", "&wzGm#cIT(;&w4hPfcR", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "9WE+MLFUr?wF-/>T/");
      mockFile0.renameTo(mockFile1);
      mockFile0.setExecutable(false);
      file0.setExecutable(false, true);
      MockFile mockFile2 = new MockFile("IK-/~a 9vR)ql*C", "ExpeCt[: ");
      String string0 = mockFile2.getCanonicalPath();
      assertEquals("/home/ubuntu/termite/projects/62_dom4j/IK-/~a 9vR)ql*C/ExpeCt[: ", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("http://xml.org/sax/properties/declaration-handler");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3087432950398514
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "p=G|\"6[y^G!NTG1`{%");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-o AbG`x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "p=G|\"6[y^G!NTG1`{%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-o AbG`x");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-o AbG`x");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "p=G|\"6[y^G!NTG1`{%");
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("TV IBS@V");
      InputSource inputSource0 = new InputSource();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      MockFile mockFile0 = new MockFile("(cH3={{g");
      File file0 = MockFile.createTempFile("9WE+MLNUrEwF-/>!/", "9WE+MLNUrEwF-/>!/", (File) mockFile0);
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      file0.getCanonicalPath();
      file0.setReadable(false, true);
      File file1 = MockFile.createTempFile("//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w", "8]zi", (File) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile1 = new MockFile(file1, "9WE+MLNUrEwF-/>!/");
      File file2 = MockFile.createTempFile("(cH3={{g", "hG#SllrEE`dE", (File) mockFile0);
      file2.toPath();
      file2.mkdirs();
      file0.renameTo(file2);
      file0.getCanonicalPath();
      file1.setWritable(false);
      StringReader stringReader0 = new StringReader("/home/ubuntu/termite/projects/62_dom4j/(cH3={{g/9WE+MLNUrEwF-/>!/09WE+MLNUrEwF-/>!");
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.336704583890597
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      QName.get((String) null, "K|Gg^?", "K|Gg^?");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      namespaceStack0.clear();
      QName qName0 = QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      QName qName1 = new QName("8|\"}V4cl", namespace0, (String) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName2 = new QName("K|Gg^?", namespace0);
      namespaceStack0.contains(namespace0);
      qName2.equals(defaultDocumentFactory0);
      QName qName3 = QName.get("8|\"}V4cl", "//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", "^,-OSumU]j&&CvPPL");
      NonLazyElement nonLazyElement0 = new NonLazyElement("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", namespace0);
      DOMElement dOMElement0 = new DOMElement(qName3);
      DOMDocument dOMDocument0 = new DOMDocument();
      nonLazyElement0.toString();
      QName qName4 = QName.get("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", namespace0, "6=#gL(A62=h");
      QName qName5 = new QName("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", namespace0);
      QName.get("la&!", "DHvC+UZ{6", "la&!");
      QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0, "//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp");
      QName qName6 = new QName("K|Gg^?", namespace0);
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName4);
      QName.get("//home/ubuntu/termite/projects/62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", namespace0, "//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      DOMText dOMText0 = new DOMText("^,-OSumU]j&&CvPPL");
      nonLazyElement1.remove((Text) dOMText0);
      defaultDocumentFactory0.createAttribute((Element) nonLazyElement1, qName0, "9D#VcLheU&S6\"qP%1T");
      StringReader stringReader0 = new StringReader("K|Gg^?");
      SAXReader sAXReader0 = new SAXReader(false);
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertSame(documentFactory0, defaultDocumentFactory0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getDispatchHandler();
      sAXReader0.getDispatchHandler();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0KL5QG5:q");
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      sAXReader0.addHandler("tc'z*<Nl'uR ", sAXModifyElementHandler0);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)58;
      byteArray0[2] = (byte)58;
      Object object0 = new Object();
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.removeHandler((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getErrorHandler();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createElement("%:E#0QL3sQ 6)lyv", "%:E#0QL3sQ 6)lyv");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.setMergeAdjacentText(false);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)58;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "fv;fNtQkLL6+]");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("(cH3={{g", "//home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w");
      File file0 = MockFile.createTempFile("(cH3={{g", "(cH3={{g", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "9WE+MLFUr?wF-/>T/");
      mockFile0.renameTo(mockFile1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      file0.setExecutable(false, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXReader0.createDefaultEntityResolver("");
      MockFile mockFile2 = new MockFile("IK-/~a 9vR)ql*C", "Expectd: ");
      String string0 = mockFile2.getCanonicalPath();
      assertEquals("/home/ubuntu/termite/projects/62_dom4j/IK-/~a 9vR)ql*C/Expectd: ", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EQ");
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)56;
      byteArray1[2] = (byte) (-74);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "EQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray1);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLReader(xMLFilterImpl0);
      MockFile.createTempFile("#Reka5/h|V2I0", "9WE+MLNUrEwF-/>!/", (File) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "//tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      try { 
        sAXReader0.setProperty("//tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", "EQ");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: //tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      String string0 = "(cH3={{g";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string1 = "9WE+MLNUrEwF-/>!/";
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EQ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "9WE+MLNUrEwF-/>!/");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "(cH3={{g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("9WE+MLNUrEwF-/>!/", "GMhjGYa;h(w!wW");
      mockFile0.getCanonicalPath();
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "";
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      InputSource inputSource0 = new InputSource("");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "");
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl3);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl4);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributesImpl2);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributesImpl4);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl0);
      attributes2Impl0.clear();
      Attributes2Impl attributes2Impl8 = new Attributes2Impl();
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributes2Impl3);
      AttributesImpl attributesImpl5 = new AttributesImpl();
      attributesImpl5.getLocalName(2911);
      AttributesImpl attributesImpl6 = new AttributesImpl(attributes2Impl2);
      AttributesImpl attributesImpl7 = new AttributesImpl();
      AttributesImpl attributesImpl8 = new AttributesImpl();
      attributes2Impl0.getLength();
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      String string1 = "K@O";
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("K@O");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class K@O not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "b$\"1");
      MockFile.createTempFile("!]4G;=", "b$\"1", (File) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      MockFile mockFile0 = new MockFile("//home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR");
      mockFile0.getCanonicalPath();
      DOMDocument dOMDocument0 = new DOMDocument();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EQ");
      try { 
        MockURL.URL("EQ", "cg", "//tmp/b$\"10b$\"1");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: eq
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.getXMLFilter();
      sAXReader0.setXMLFilter((XMLFilter) null);
      assertTrue(sAXReader0.isStringInternEnabled());
      
      sAXReader0.setStringInternEnabled(false);
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setXMLReader((XMLReader) null);
      assertFalse(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setValidation(true);
      MockFile mockFile0 = new MockFile("IK-/~a 9)l*C", "ExpeCt[: ");
      String string0 = mockFile0.getCanonicalPath();
      assertEquals("/home/ubuntu/termite/projects/62_dom4j/IK-/~a 9)l*C/ExpeCt[: ", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byteArray0[1] = (byte)38;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{.7d/O");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(cH3={{g");
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/#Reka5/h|V2I009WE+MLNUrEwF-/>!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "9WE+MLNUrEwF-/>!/");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(cH3={{g");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("{.7d/O", "//home/ubuntu/termite/projects/62_dom4j/(cH3={{g/9WE+MLNUrEwF-/>!/09WE+MLNUrEwF-/>!");
      MockFile mockFile0 = new MockFile("{.7d/O", "/tmpZ [Entity: &1/tmp/position() does not take any arguments.03^{\"yqeHLIv>:");
      mockFile0.getCanonicalPath();
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = "v";
      String string1 = "upper-case";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3");
      sAXReader_SAXEntityResolver0.resolveEntity("IaHOMA\"qyup", "upper-case");
      String string2 = "v-Z|N{roJ3}rU";
      sAXReader_SAXEntityResolver0.resolveEntity("v-Z|N{roJ3}rU", (String) null);
      NamespaceStack namespaceStack0 = new NamespaceStack();
      // Undeclared exception!
      try { 
        namespaceStack0.addNamespace(";{vwA)R]D&&?=,", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getDefaultNamespace();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = QName.get("//tmp/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A2/tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      qName0.equals("K|Gg^?");
      QName.get("K|Gg^?", "wc{+[}$", "//home/ubuntu/termite/projects/62_dom4j/YIt4e4JaC])4JrKT/O9&u'0kohWfdE0` 9m/yK20YIt4e4JaC])4JrKT");
      DOMElement dOMElement0 = new DOMElement(qName0);
      defaultDocumentFactory0.createProcessingInstruction("wc{+[}$", "//home/ubuntu/trmite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/(cH3={{g0&wzGm#cIT(;&w4hPfcR");
      DOMDocument dOMDocument0 = new DOMDocument();
      DOMText dOMText0 = new DOMText("//tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0(cH3={{g");
      SAXReader sAXReader0 = new SAXReader(true);
      try { 
        sAXReader0.setXMLReaderClassName("//home/ubuntu/termite/project//62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //home/ubuntu/termite/project//62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      attributes2Impl10.clear();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributes2Impl9);
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl4);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl7);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      attributes2Impl4.clear();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      Attributes2Impl attributes2Impl12 = new Attributes2Impl();
      Attributes2Impl attributes2Impl13 = new Attributes2Impl(attributesImpl5);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      try { 
        sAXReader0.setProperty("", xMLFilterImpl2);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: 
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getDefaultNamespace();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = QName.get("8|\"}V4cl", "//home/ubuntu/termite/project//62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", "^,-OSumU]j&&CvPPL");
      DOMElement dOMElement0 = new DOMElement(qName0);
      String string0 = "//tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>\\XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>\\XR/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>\\XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>\\XR0(cH3={{g";
      defaultDocumentFactory0.createProcessingInstruction("K|Gg^?", "//tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0(cH3={{g");
      DOMDocument dOMDocument0 = new DOMDocument();
      DOMText dOMText0 = new DOMText("K|Gg^?");
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.endPrefixMapping("//tmp/x#|k9f9'.{.!S30x#|k9f9'.{.!S3");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      SAXReader sAXReader1 = new SAXReader(false);
      // Undeclared exception!
      try { 
        sAXReader1.setFeature((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createDocument();
      defaultDocumentFactory0.createElement("http://xml.org/sax/properties/lexical-handler", "Failed to parse document for URI: ");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      NamespaceStack namespaceStack0 = new NamespaceStack();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte)124;
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte)51;
      byteArray0[7] = (byte)34;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.startElement("!gxB]mZ0q", "//tmp/position() does not take any arguments.03^{\"yqeHLIv>:", "Failed to parse document for URI: ", attributesImpl0);
      Object object0 = new Object();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getXMLFilter();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1145, 1145);
      Object object0 = new Object();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 1145);
      byteArrayInputStream1.read();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)92, 0);
      Object object1 = new Object();
      byteArrayInputStream0.read();
      Object object2 = new Object();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.mark(2701);
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read("2A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/2A (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/2A (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DOMNamespace dOMNamespace0 = new DOMNamespace("K|Gg^?", "|\"q4");
      QName qName0 = new QName("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", dOMNamespace0, "K|Gg^?");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName1 = defaultDocumentFactory0.createQName("|\"q4", "|\"q4");
      qName1.equals(defaultDocumentFactory0);
      qName0.toString();
      QName.get("|\"q4", "K|Gg^?", "K|Gg^?");
      NonLazyElement nonLazyElement0 = new NonLazyElement((String) null);
      defaultDocumentFactory0.createProcessingInstruction("K|Gg^?", "//tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0(cH3={{g");
      DOMDocument dOMDocument0 = new DOMDocument();
      nonLazyElement0.toString();
      defaultDocumentFactory0.createQName("6=#gL(A62=h", (Namespace) dOMNamespace0);
      nonLazyElement0.isTextOnly();
      QName.get("6=#gL(A62=h", (Namespace) dOMNamespace0);
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Object object0 = new Object();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      try { 
        sAXReader0.setFeature("K|Gg^?", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature 'K|Gg^?' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      NamespaceStack namespaceStack0 = new NamespaceStack();
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      namespaceStack0.getDefaultNamespace();
      namespaceStack0.clear();
      QName qName0 = QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A", namespace0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName1 = QName.get("//tmp/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0/tmp/tmp/:,>48/|}W9A0:,>48/|}W9A0/tmp/:,>48/|}W9A0:,>48/|}W9A");
      qName1.equals(defaultDocumentFactory0);
      QName qName2 = QName.get("8|\"}V4cl", "//home/ubuntu/termite/project//62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", "^,-OSumU]j&&CvPPL");
      NonLazyElement nonLazyElement0 = new NonLazyElement("//home/ubuntu/termite/project//62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", (Namespace) null);
      DOMElement dOMElement0 = new DOMElement(qName2);
      defaultDocumentFactory0.createProcessingInstruction("K|Gg^?", "//tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR/home/ubuntu/termite/projects/62_dom4j/'|.?GfAmVF8w/'|.?GfAmVF8w/'|.?GfAmVF8w0'|.?GfAmVF8w/tmp/tmp/ of document 0v0/home/ubuntu/termite/projects/62_dom4j/j@lOlu3QTUyi3>XR/Ib%,^hbEt'$0T1SD+@u/p H7u0j@lOlu3QTUyi3>XR0(cH3={{g");
      DOMDocument dOMDocument0 = new DOMDocument();
      nonLazyElement0.toString();
      QName.get((String) null, namespace0, "K|Gg^?");
      nonLazyElement0.isTextOnly();
      QName qName3 = namespaceStack0.getAttributeQName("8|\"}V4cl", "//home/ubuntu/termite/project//62_dom4j/9WE+MLNUrEwF-/>!/mi#U;*L6}'/mi#U;*L6}'/0.tmp", "K|Gg^?");
      QName.get("6=#gL(A62=h", namespace0);
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName3);
      DOMText dOMText0 = new DOMText((String) null);
      nonLazyElement1.remove((Text) dOMText0);
      defaultDocumentFactory0.createAttribute((Element) nonLazyElement1, qName0, "//home/ubuntu/termite/projects/62_dom4j/IK-/~a 9vR)ql*C/org.jaxen.function.NotFunction/org.jaxen.function.NotFunction0/home/ubuntu/termite/projects/62_dom4j/IK-/~a 9vR)ql*C/org.jaxen.function.NotFunction");
      SAXReader sAXReader0 = new SAXReader((String) null);
      try { 
        sAXReader0.setXMLReaderClassName("K|Gg^?");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class K|Gg^? not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.2975883560528287
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl0);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl1);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl3);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributes2Impl6);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl1);
      attributes2Impl7.clear();
      AttributesImpl attributesImpl4 = new AttributesImpl();
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributesImpl3);
      attributes2Impl3.getLocalName(0);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl4);
      AttributesImpl attributesImpl6 = new AttributesImpl(attributesImpl4);
      StringReader stringReader0 = new StringReader(",n");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader1.read((Reader) stringReader0, "\"2.ihk^");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
