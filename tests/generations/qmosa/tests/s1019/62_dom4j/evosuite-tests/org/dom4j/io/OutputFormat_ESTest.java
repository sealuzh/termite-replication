/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 18:56:33 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.365902498699146
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent((String) null);
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.setAttributeQuoteCharacter('\"');
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent(true);
      outputFormat2.setXHTML(true);
      outputFormat2.getAttributeQuoteCharacter();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setSuppressDeclaration(true);
      outputFormat3.setEncoding((String) null);
      outputFormat0.setPadText(true);
      outputFormat1.setIndentSize(1056);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat3.setExpandEmptyElements(false);
      outputFormat3.setSuppressDeclaration(false);
      outputFormat3.setAttributeQuoteCharacter('\"');
      outputFormat0.getLineSeparator();
      outputFormat1.setOmitEncoding(true);
      OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ()
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      String string1 = "-xhtml-paText";
      outputFormat0.setIndent("-xhtml-paText");
      String string2 = "EqTjvYI9ir19wo]}8CT";
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(false);
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      String string0 = "-encoding";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Zq%:yJqf7~-5a?", true, (String) null);
      assertFalse(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "gjlI98ds~st+LNG9rn{";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "Zq%:yJqf7~-5a?";
      stringArray0[4] = "Zq%:yJqf7~-5a?";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "4[XTkC %0_m|.Co,N>";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "-stqimAText";
      stringArray1[3] = "-trimText";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0105301834040734
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlS", false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = null;
      int int0 = 0;
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_LULNd.yKz", false, "j':fGr");
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4[XTkC %0_m|.Co,N>";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "4[XTkC %0_m|.Co,N>";
      stringArray0[3] = "Npqo M1s.NGcM";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.1167398428757505
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(36);
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize(835);
      outputFormat0.getEncoding();
      outputFormat0.getLineSeparator();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("\n");
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("vPI4RS");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals(36, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&[.d)P{W,+-gx4A6Y");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isNewlines());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4[XTkC %0_m|.Co,N>", false, " ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_LULNd.yKz";
      outputFormat0.setNewLineAfterNTags((-2462));
      stringArray0[1] = "_LULNd.yKz";
      stringArray0[2] = "_LULNd.yKz";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-2462), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Zq%:yJqf7~-5a?", true, (String) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "gjlI98ds~st+LNG9rn{";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = null;
      stringArray0[3] = "gjlI98ds~st+LNG9rn{";
      stringArray0[4] = ":!F'\u0002S~/DFr.";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expaqdEmptyS", true);
      outputFormat0.setNewLineAfterNTags(623);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(623, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padText";
      stringArray0[1] = "u1oivEs";
      stringArray0[2] = "Ca\" m";
      stringArray0[3] = "-xhtmlAAISFrd;ia1";
      stringArray0[4] = "ukY</>uy8<Ul!t8w`>";
      stringArray0[5] = "Ca\" m";
      stringArray0[5] = "-xhtmlAAISFrd;ia1";
      stringArray0[7] = "ukY</>uy8<Ul!t8w`>";
      stringArray0[8] = "&[.d)P{W,+-gx4A6Y";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtml", false);
      assertFalse(outputFormat0.isPadText());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtmlAISrd;i1";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "Ca\" m";
      stringArray0[3] = "-xhtmlAISrd;i1";
      stringArray0[0] = "-encoding";
      stringArray0[5] = "Ca\" m";
      stringArray0[6] = "-xhtmlAISrd;i1";
      OutputFormat outputFormat0 = new OutputFormat("org.dom4j.io.OutputFormat", false);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "&[.d)P{W,+-gx4A6Y";
      stringArray1[2] = "Ca\" m";
      outputFormat0.setLineSeparator("");
      stringArray1[3] = "-xhtmlAISrd;i1";
      stringArray1[4] = "-xhtmlAISrd;i1";
      stringArray1[5] = "-xhtmlAISrd;i1";
      stringArray1[6] = "Ca\" m";
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("}_0U,4=yz` a6A");
      outputFormat0.getLineSeparator();
      assertEquals("}_0U,4=yz` a6A", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8133224558281074
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&[.d)P{W,+-gx4A6Y", true, "&[.d)P{W,+-gx4A6Y");
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(2891);
      outputFormat0.setIndent(true);
      String string0 = "-newEines";
      outputFormat0.setIndentSize((-1267));
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setNewLineAfterNTags(0);
      stringArray0[2] = "";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[3] = "";
      stringArray0[4] = "M3n0*P6";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[7] = "";
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setEncoding("");
      outputFormat0.parseOptions(stringArray0, 3603);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.046368416176734
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&[.d)P{W,+-gx4A6Y", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-indent";
      stringArray0[1] = "1`'V/";
      stringArray0[2] = "1`'V/";
      stringArray0[3] = "Ca\" m";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-438));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -438
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.145277367387215
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expaqdEmptyS", true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-expandEmpty-expandEmpyS";
      stringArray0[1] = "-expandEmpty-expandEmpyS";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3076082780638343
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(false);
      outputFormat1.setSuppressDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("");
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat2.isExpandEmptyElements();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setOmitEncoding(false);
      outputFormat3.setXHTML(true);
      outputFormat1.setEncoding("");
      outputFormat0.setPadText(false);
      outputFormat0.setEncoding("#a%.yjUPrDw$zaL?");
      assertEquals("#a%.yjUPrDw$zaL?", outputFormat0.getEncoding());
      
      outputFormat0.setEncoding("UTF-8");
      outputFormat1.isNewLineAfterDeclaration();
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6249381597944477
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("V!!]&xr{1", false, "");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isPadText();
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "V!!]&xr{1";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml", true, "");
      outputFormat1.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat1.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 87);
      outputFormat0.getIndent();
      char char0 = 'd';
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('d');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (d)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.508084841459723
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtmlAIFrd;i1";
      stringArray0[1] = "Ca\" m";
      stringArray0[2] = "-xhtmlAIFrd;i1";
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("Ca\" m");
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.isPadText();
      outputFormat0.setIndent("-xhtmlAIFrd;i1");
      outputFormat0.setIndent("xml");
      assertEquals("xml", outputFormat0.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "05Ti^iYB ejH&<~*FN";
      stringArray0[1] = "G`s]QQ4TRgZc=_-y]";
      stringArray0[2] = "05Ti^iYB ejH&<~*FN";
      stringArray0[3] = "05Ti^iYB ejH&<~*FN";
      stringArray0[4] = "-newEine os";
      stringArray0[6] = "G`s]QQ4TRgZc=_-y]";
      stringArray0[7] = "05Ti^iYB ejH&<~*FN";
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('$');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ($)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.7279068758379492
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Ss{Q';9gp(Q:6]R=hnM", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
      stringArray0[3] = "";
      stringArray0[4] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
      stringArray0[6] = "9F8a'TU\"{\"6";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-newEines";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray1, 556);
      String[] stringArray2 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1971224402));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1971224402
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4545398262671005
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setNewLineAfterNTags(0);
      stringArray0[2] = "";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[3] = "";
      stringArray0[4] = "M3n0*P6";
      stringArray0[5] = "";
      outputFormat0.setPadText(true);
      stringArray0[6] = "";
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[7] = "";
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getIndent();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('@');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (@)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.400065568928854
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.getIndent();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat1.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "  ";
      stringArray0[1] = ">471X0l$&t0w#z";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setIndent("-xhtml%e&r");
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.009697439439378
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("NHd]G|", false, "");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NHd]G|";
      stringArray0[1] = "  ";
      outputFormat0.parseOptions(stringArray0, 1765);
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat1.setLineSeparator("NHd]G|");
      outputFormat1.setIndentSize(1765);
      outputFormat1.setPadText(false);
      outputFormat1.setTrimText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.setNewlines(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-839));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -839
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "(y.@m#=&#x@/";
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(y.@m#=&#x@/";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.parseOptions(stringArray0, 34);
      String string1 = "+4?VY3\"OQ58(zlfQp";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1709);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("QTDg'mnu@Xs");
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat1.setTrimText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(false);
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Ss{Q';9gp(Q:6]R=hnM", false);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Z\"EMh/115eS3Y%~MG", true, "Ca\" m");
      outputFormat0.setIndentSize(1);
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setIndent("Z\"EMh/115eS3Y%~MG");
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cFV1p@<3k#RwYC";
      stringArray0[1] = "-paText";
      stringArray0[2] = "rLb)[d(!0";
      stringArray0[3] = "rLb)[d(!0";
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      outputFormat0.setIndent(stringArray0[0]);
      stringArray0[1] = null;
      outputFormat0.setNewlines(true);
      stringArray0[2] = "";
      outputFormat0.setLineSeparator("");
      String string0 = "";
      stringArray0[3] = "";
      stringArray0[4] = null;
      outputFormat0.setXHTML(true);
      stringArray0[5] = stringArray0[0];
      stringArray0[6] = "";
      outputFormat0.setEncoding("");
      outputFormat0.setXHTML(true);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.628600373284409
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("J6z`|");
      outputFormat0.setIndent("]..?f`tSI4PW.Acs");
      assertEquals("]..?f`tSI4PW.Acs", outputFormat0.getIndent());
      
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.091365419163287
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "z)2h\"BgG3^k3urm";
      stringArray0[1] = "4{y2ZQN,8Rk2P";
      stringArray0[2] = "Q^0O";
      outputFormat0.setExpandEmptyElements(true);
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "U++/%A";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setLineSeparator("4{y2ZQN,8Rk2P");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.isSuppressDeclaration();
      assertEquals("4{y2ZQN,8Rk2P", outputFormat1.getLineSeparator());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7336481663593712
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AAISFrd;i1", true, "AAISFrd;i1");
      outputFormat0.setIndent(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("AAISFrd;i1");
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "AAISFrd;i1";
      stringArray0[1] = "AAISFrd;i1";
      stringArray0[2] = "U++/%A";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat1.isSuppressDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtmlAIFrd;i1", true);
      outputFormat0.setIndentSize((-1));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expaqdEmptyS";
      stringArray0[1] = "-expandEmpty-expandEmpyS";
      stringArray0[3] = "-omitEncod2n";
      stringArray0[4] = "-expaqdEmptyS";
      stringArray0[5] = "(7jomCIbcgRHk'";
      stringArray0[6] = "-expaqdEmptyS";
      stringArray0[7] = "-xhtml-xhtmlAIFrd;i1";
      stringArray0[8] = "-n[wEi'es";
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padTex";
      stringArray0[1] = "uaT1ovEs";
      stringArray0[2] = "Ca\" m";
      stringArray0[3] = "-xhtmlAAISFrd;i1";
      stringArray0[4] = "ukY</>uy8<Ul!w`>";
      stringArray0[5] = "Ca\" m";
      stringArray0[6] = "-xhtmlAAISFrd;i1";
      stringArray0[7] = "ukY</>uy8<Ul!w`>";
      stringArray0[8] = "&[.d)P{W,+-gx4A6Y";
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlAAISFrd;i1");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-xhtmlAAISFrd;i1", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-om$tE", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml-yxhtmlFtrd;i1";
      stringArray0[1] = "-xhtml-yxhtmlFtrd;i1";
      stringArray0[2] = "-om$tE";
      stringArray0[3] = "s{~z#9#_enrcRSf";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, int0);
      assertEquals("-om$tE", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.getLineSeparator();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(boolean0);
      
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isNewlines();
      OutputFormat outputFormat1 = new OutputFormat("", false, "");
      outputFormat1.setOmitEncoding(false);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      assertTrue(outputFormat1.isSuppressDeclaration());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Ss{Q';9gp(Q:6]R=hnM", false);
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
      stringArray0[3] = "";
      stringArray0[4] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "B#iCd";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9784724942075065
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padText";
      stringArray0[1] = "u1oivEs";
      stringArray0[2] = "Ca\" m";
      stringArray0[3] = "-hmRAAISFrd;-u";
      stringArray0[4] = "ukY</>uy8<Ul!t8w`>";
      stringArray0[5] = "Ca\" m";
      stringArray0[6] = "-hmRAAISFrd;-u";
      stringArray0[7] = "ukY</>uy8<Ul!t8w`>";
      stringArray0[8] = "&[.d)P{W,+-gx4A6Y";
      OutputFormat outputFormat0 = new OutputFormat("Dh$?m!kMc2VK", true);
      outputFormat0.setEncoding((String) null);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "ukY</>uy8<Ul!t8w`>";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isNewlines());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isTrimText());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isPadText());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      
      stringArray1[1] = "-hmRAAISFrd;-u";
      stringArray1[2] = "tn-\"D7<";
      stringArray1[3] = "-hmRAAISFrd;-u";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertEquals(0, int0);
      
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertNotNull(string0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmptyS";
      stringArray0[1] = "-expandEmptyS";
      stringArray0[2] = "-xhtmlS";
      stringArray0[3] = "-expandEmptyS";
      stringArray0[4] = "-xhtmlS";
      stringArray0[5] = "-expandEmptyS";
      stringArray0[7] = "-xhtmlS";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtmlAIFrd;i1");
      String string0 = outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-xhtml-xhtmlAIFrd;i1", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3342298951481277
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("G`s]QQ4TRgZc=_-y]");
      outputFormat0.setIndent("-indentSVze");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-xhtml-newEines");
      assertEquals("-xhtml-newEines", outputFormat0.getIndent());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.121410475323288
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = "-expandEmpty-expandEmpty-expandEmpyS";
      stringArray0[2] = "-xhtml-newEines";
      stringArray0[3] = "-xhtml-newEines";
      stringArray0[4] = "-expandEmpty&[.d)P{W,+-gx4A6Y";
      stringArray0[5] = "&[.d)P{W,+-gx4A6Y";
      stringArray0[6] = "-expandEmpty&[.d)P{W,+-gx4A6Y";
      stringArray0[7] = "KVE+D7/fL;ap%i JZ";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Zq%:yJqf7~-5a?", true, (String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-xhtml~DfOtzZpm~XJs");
      assertEquals("-xhtml~DfOtzZpm~XJs", outputFormat0.getIndent());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty1|`$3zjNv");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty1|`$3zjNv";
      stringArray0[2] = "-xhtml-xhtmlAIFrd;i1";
      stringArray0[3] = "-expandEmpty1|`$3zjNv";
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setPadText(true);
      OutputFormat outputFormat2 = new OutputFormat("nhMr`2+#");
      outputFormat2.setIndent("-xhtml-xhtmlAIFrd;i1");
      outputFormat1.setTrimText(true);
      outputFormat2.isPadText();
      outputFormat0.setIndent("-expandEmpty)");
      assertEquals("-expandEmpty)", outputFormat0.getIndent());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&[.d)P{W,+-gx4A6Y", false, "&[.d)P{W,+-gx4A6Y");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padText";
      stringArray0[2] = "Ca\" m";
      stringArray0[3] = "FZ)d(cI";
      stringArray0[4] = "ukY</>uy8<Ul!w`>";
      stringArray0[5] = "Ca\" m";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = new OutputFormat("Ca\" m", true, "-expandEmptyukY</>uy8<Ul!w`>");
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      assertTrue(outputFormat1.isOmitEncoding());
      
      outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isOmitEncoding());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Ss{Q';9gp(Q:6]R=hnM", true);
      outputFormat0.setEncoding("Ss{Q';9gp(Q:6]R=hnM");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
      stringArray0[3] = "";
      stringArray0[4] = "Ss{Q';9gp(Q:6]R=hnM";
      stringArray0[5] = "(y.@m#=&#x@/";
      stringArray0[6] = "9F8a'TU\"{\"6";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-ewEines";
      stringArray0[4] = "9F8a'TU\"{\"6";
      stringArray1[4] = "+4?VY3\"OQ58(zlfQp";
      stringArray1[3] = "";
  }
}
