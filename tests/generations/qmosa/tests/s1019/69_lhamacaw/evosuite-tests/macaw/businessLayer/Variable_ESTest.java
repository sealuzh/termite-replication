/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:11:35 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.834346297924457
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("798SL9B&Q`ZL O", "798SL9B&Q`ZL O");
      User user2 = new User();
      User user3 = new User("y3|+", "<");
      user3.setPassword("y3|+");
      user2.setAffiliation("798SL9B&Q`ZL O");
      User user4 = new User();
      User user5 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "O");
      User user6 = new User();
      User user7 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      user5.setStatus("DUPLICATE_DOCUMENT_ASSOCIATION");
      User user8 = new User("y3|+", "UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      user8.setEmail("_X]AKFO!FK");
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      User user12 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user13 = new User();
      user6.setAddressLine2("general.error.blankField");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable1, derivedVariable1);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.558992217066017
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("EDIT");
      ontologyTerm0.setTerm(")J^g%");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setNameSpace(")J^g%");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm6.setIdentifier((-1));
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm6);
      assertFalse(boolean0);
      
      ontologyTerm3.setOntologyName((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.726477212006092
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user2 = new User();
      User user3 = new User();
      rawVariable0.columnStart = null;
      User user4 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user3, derivedVariable0, rawVariable0);
      assertEquals(1, arrayList0.size());
      
      user4.setEmail("UNABLE_TO_CREATE_CATEGORY");
      User user5 = new User();
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      user2.setLastName("798SL9B&Q`^ZL O");
      User user11 = new User("<", "798SL9B&Q`^ZL O");
      RawVariable rawVariable1 = new RawVariable();
      User user12 = new User();
      user11.setAddressLine2(",+StJhLtr(dZ");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user12, rawVariable1, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      String string0 = "";
      ontologyTerm0.setNameSpace("");
      ontologyTerm1.setOntologyName("!nfwD}fWFVMD#");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setIdentifier((-1731));
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setNameSpace("!nfwD}fWFVMD#");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName(":9");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("gW>)jn)/[j*:*<");
      ontologyTerm3.setNameSpace("V$I]()k+SYqd*le@");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.125827073718918
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("Unknown");
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setFilePath("g0v6l-;Tn.H6QvM3");
      supportingDocument0.setTitle("g0v6l-;Tn.H6QvM3");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.getDisplayName();
      System.setCurrentTimeMillis(1L);
      supportingDocument0.getDisplayName();
      rawVariable0.createVariableSummary();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setCleaned(false);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      arrayList1.spliterator();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setQuestionNumber("..M&Ku06Bv1~");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals("..M&Ku06Bv1~", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.726521658425933
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User("?X;`Ny:%|RWooK^", "}pR");
      User user4 = new User();
      User user5 = new User();
      Variable.detectFieldChanges(user3, derivedVariable0, rawVariable0);
      user4.setEmail("UNABLE_TO_CREATE_CATEGORY");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      user1.setLastName("}pR");
      User user12 = new User();
      User user13 = new User("?X;`Ny:%|RWooK^", "DUPLICATE_SOURCE_VARIABLE_EXISTS");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user14 = new User();
      user4.setAddressLine2("dO");
      Variable.detectChangesInAlternativeVariable(user8, derivedVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9776091787546686
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("798SL9B&Q`ZL O", "798SL9B&Q`ZL O");
      User user2 = new User();
      User user3 = new User("y3|+", "<");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("798SL9B&Q`ZL O");
      Variable.validateFields(rawVariable0);
      User user4 = new User("798SL9B&Q`ZL O", "i]H]B+9");
      User user5 = new User();
      User user6 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("798SL9B&Q`ZL O", rawVariable0.getLabel());
      
      user3.setStatus("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      user3.setEmail("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setAlternativeVariable(rawVariable2);
      User user11 = new User();
      user0.setAddressLine2("");
      RawVariable rawVariable5 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable5, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      Variable.validateFields(rawVariable4);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.getLabel();
      assertEquals("Unknown", rawVariable6.getCategory());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.749511674437114
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User(",+StJhLtr(dZ", "supportingDocument.description.saveChnges");
      User user4 = new User();
      User user5 = new User();
      Variable.detectFieldChanges(user4, rawVariable0, derivedVariable0);
      user2.setEmail(",+StJhLtr(dZ");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      user4.setLastName("oHa;z");
      User user12 = new User();
      User user13 = new User("supportingDocument.description.saveChnges", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user14 = new User();
      user6.setAddressLine2("P!;.><Vcf8h");
      Variable.detectChangesInAlternativeVariable(user14, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.612377292442519
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      String string0 = "supportingDocument.description.saveChnges";
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      user5.setStatus("^c>z}RY");
      user5.setEmail("UNABLE_TO_CREATE_CATEGORY");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User("supportingDocument.description.saveChnges", ",+StJhLtr(dZ");
      User user10 = new User();
      user3.setLastName("798SL9B&Q`^ZL O");
      User user11 = new User();
      User user12 = new User("<", "798SL9B&Q`^ZL O");
      try { 
        User.validateFields(user7);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "'\u0006f9LaUi?U5&S'eVsM";
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnStart();
      rawVariable0.getName();
      rawVariable0.getAlias();
      assertEquals("'\u0006f9LaUi?U5&S'eVsM", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm4.setDescription(")J^g%");
      ontologyTerm4.setTerm("j!W*3yZl692&");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm6.setNameSpace("&i~#xW{1pL`");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm8.setIdentifier(39);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      ontologyTerm11.setTerm("O>-My/&S");
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm8);
      ontologyTerm1.setOntologyName(")J^g%");
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm2));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9456645463488123
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIdentifier((-2314));
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.spliterator();
      arrayList1.add(supportingDocument1);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.add(supportingDocument1);
      arrayList0.addAll((Collection<? extends SupportingDocument>) arrayList1);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add((Variable) derivedVariable0);
      arrayList2.trimToSize();
      derivedVariable0.setSourceVariables(arrayList2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setIdentifier(373);
      arrayList0.add(supportingDocument3);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.retainAll(arrayList1);
      linkedList0.add(supportingDocument0);
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) linkedList1);
      derivedVariable0.addSupportingDocuments(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.trimToSize();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument5);
      assertTrue(boolean0);
      
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.isCleaned();
      String string0 = "D)W.A";
      try { 
        User.checkValidUserIDField("D)W.A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"D)W.A\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.698792043896086
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User(",+StJhLtr(dZ", "supportingDocument.description.saveChnges");
      User user4 = new User();
      user4.setEmail("^hLr!MrSX!.}]C1!*s");
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      user5.setEmail("UNABLE_TO_CREATE_CATEGORY");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      user3.setLastName("798SL9B&Q`^ZL O");
      User user12 = new User();
      User user13 = new User("<", "798SL9B&Q`^ZL O");
      RawVariable rawVariable1 = new RawVariable();
      User user14 = new User();
      rawVariable1.setIdentifier((-2128));
      user13.setAddressLine2(",+StJhLtr(dZ");
      Variable.detectChangesInAlternativeVariable(user14, rawVariable1, derivedVariable0);
      assertEquals((-2128), rawVariable1.getIdentifier());
      
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.732996299599843
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.964763373583426
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("d");
      ontologyTerm0.setNameSpace("variable.label.label");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      ontologyTerm1.setNameSpace("Unknown");
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm3));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2581533681351735
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-4));
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.setAlias("INVALID_VALUE_LABEL");
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("Unknown");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.getFilePath();
      rawVariable0.getAlias();
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(103);
      rawVariable0.setCleaningStatus("`$d,&`kZPl&y");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.notes = null;
      rawVariable0.clone();
      rawVariable0.getNotes();
      assertEquals("`$d,&`kZPl&y", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.044502891565169
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.clone();
      ontologyTerm0.setIdentifier(1);
      derivedVariable0.setSourceVariables(arrayList0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("j!W|*3yZl692&");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.clear();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setNotes("j!W|*3yZl692&");
      derivedVariable0.getAlias();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getDisplayName();
      derivedVariable0.getColumnStart();
      derivedVariable0.getYear();
      derivedVariable0.addSourceVariables(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.getDisplayName();
      derivedVariable0.getLabel();
      derivedVariable0.getCleaningDescription();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("j!W|*3yZl692&", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.865411889587981
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("LHA");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      Variable.validateFields(derivedVariable0);
      rawVariable0.form = null;
      rawVariable0.setLabel("LHA");
      rawVariable0.clone();
      rawVariable0.getForm();
      rawVariable0.getCodeBookNumber();
      assertEquals("LHA", rawVariable0.getLabel());
      
      User user0 = new User("-&J5<Gbt158F \"W:i~", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable1);
      rawVariable1.isNewRecord();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.211667659113366
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("EDIT");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setStatus("EDIT");
      User user1 = new User((String) null, "EDIT");
      user0.setCounty("");
      User user2 = new User();
      User user3 = new User("EDIT", "user.county.saveChanges");
      user3.setLastName("Am&|+M");
      user1.setCity("Am&|+M");
      user0.setPostCode(" 8{3_3&DH00'?m");
      User user4 = new User();
      user0.setCity("EDIT");
      user4.setLastName(" 8{3_3&DH00'?m");
      User user5 = new User();
      User user6 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("NO_SUPPORTING_DOCUMENT_FILTER");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      rawVariable0.getName();
      rawVariable0.getForm();
      assertEquals("NO_SUPPORTING_DOCUMENT_FILTER", rawVariable0.getForm());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setOntologyName("!nfwD}fWFVMD#");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(1278);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setDescription("sM");
      ontologyTerm1.setOntologyName("!nfwD}fWFVMD#");
      ontologyTerm3.setNameSpace("LJMw-m");
      User user0 = new User("variable.alias.label", "*Yf:mbAk4 q3>X");
      User user1 = new User("W5Z(7a.8d} ", "Aw");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.763732218947232
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      User user0 = new User("EDIT", "UNABLE_TO_CREATE_DERIVED_VARIABLE");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      derivedVariable0.setName("EDIT");
      Variable.validateFields(derivedVariable0);
      supportingDocument0.clone();
      rawVariable1.getFilePath();
      System.setCurrentTimeMillis(1872);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable2.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable3 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("g;QH~HwnpAw(^NC'K");
      String string0 = ")_.g";
      derivedVariable0.setFilePath(")_.g");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.ensureCapacity(6312);
      derivedVariable0.setName("J*,R:$(=gN;%h~");
      derivedVariable0.setCategory("j!W|*3yZl692&");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("j!W|*3yZl692&");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.clone();
      arrayList1.add(supportingDocument0);
      arrayList1.containsAll(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8572153526011825
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm1.setOntologyName("YD,)[,S");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace("!");
      ontologyTerm0.setDescription("!");
      ontologyTerm1.setOntologyName("DJh'iGOcx");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setNameSpace("!");
      User user0 = new User("", "variable.codeBookNumber.label");
      User user1 = new User("DJh'iGOcx", "YD,)[,S");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("variable.category.label");
      ontologyTerm5.setTerm("-");
      derivedVariable0.containsOntologyTerm(ontologyTerm5);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("798SL9B&Q`^ZL O");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("798SL9B&Q`^ZL O", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User("FD,^>oO(", "B@} B8qY4");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      String string0 = "KbMJx2";
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      User user0 = new User();
      arrayList0.clear();
      rawVariable0.codeBookNumber = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(2147483645);
      integerArray0[1] = integer0;
      Integer integer1 = new Integer((-1776));
      integerArray0[2] = integer1;
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("EDIT", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("variable.notes.label");
      derivedVariable0.setLabel("variable.notes.label");
      ontologyTerm1.setNameSpace("UNABLE_TO_CREATE_RAW_VARIABLE");
      User user0 = new User("Unknown", "^hLr!MrSX!.}]C1!*s");
      User user1 = new User("|I", "Unknown");
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("variable.notes.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.5807156256483044
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setYear("S(1FDz}I^>Yob");
      rawVariable0.clone();
      rawVariable0.getSupportingDocuments();
      assertEquals("S(1FDz}I^>Yob", rawVariable0.getYear());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7259071339143888
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      System.setCurrentTimeMillis((-1192L));
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      User user0 = new User("*;Rd0q)!AI0,pS?", "*;Rd0q)!AI0,pS?");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setCategory("t9lNW$9F\"CZER6K,%");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("*;Rd0q)!AI0,pS?");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAvailability();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getYear();
      user0.clone();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.clone();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      rawVariable2.getNotes();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList0);
      assertEquals("t9lNW$9F\"CZER6K,%", rawVariable0.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "FD,^>oO(");
      User user2 = new User("KR}!6'R<AWSce", "supportingDocument.documentCode.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "supportingDocument.documentCode.label";
      String string0 = derivedVariable1.getFilePath();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7136904382335736
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User(",+StJhLtr(dZ", "supportingDocument.description.saveChnges");
      User user4 = new User();
      user4.setPostCode("^c>z}RY");
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      User.detectFieldChanges(user2, user3, user3);
      user5.setEmail("UNABLE_TO_CREATE_CATEGORY");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      user3.setLastName("798SL9B&Q`^ZL O");
      User user12 = new User();
      User user13 = new User("<", "798SL9B&Q`^ZL O");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user14 = new User();
      user13.setAddressLine2(",+StJhLtr(dZ");
      Variable.detectChangesInAlternativeVariable(user14, rawVariable1, derivedVariable0);
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getAvailability());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "SELF_REFERENCING_ALTERNATIVE_VARIABLE";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8911601612408218
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "EDIT";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("variable.alias.label", "EDIT");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm1.setOntologyName("Y");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("NON_EXISTENT_ALIAS_FILE_PATH");
      ontologyTerm0.setOntologyName("798SL9B&Q`^ZL O");
      ontologyTerm1.setNameSpace("LwMx-m");
      User user0 = new User("UNABLE_TO_UPDATE_USER", ":qN[XEj3h_WV&");
      User user1 = new User("*Yf:mbAk4 q3>X", "l]g_|w43!BU");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("Pg4`k$Jvnt:UlGws@");
      derivedVariable0.setAlternativeVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getValueLabels();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("f}1.Ri7a5'J!we,");
      User user1 = new User("KR}!6'R<AWSce", "FD,^>oO(");
      User user2 = new User(".u}(", "KR}!6'R<AWSce");
      derivedVariable0.getFilePath();
      derivedVariable0.getAlternativeVariable();
      assertEquals("f}1.Ri7a5'J!we,", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8821103874851657
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("798SL9B&Q`^ZL O", "798SL9B&Q`^ZL O");
      User user2 = new User();
      User user3 = new User("y3|+", "<");
      user3.setPassword((String) null);
      User user4 = new User();
      user4.setPassword("Unknown");
      user2.setCounty("?cf+pn");
      User user5 = new User();
      User user6 = new User("<", "8L`-^,)d)~V'0J");
      User user7 = new User();
      user6.setLastName("C/(Z");
      user7.setAddressLine2("ac)Edq9Mm");
      User user8 = new User("@ieLgi.l", "AzkIR#1W@f7o ");
      user8.setEmail("UNABLE_TO_UPDATE_CATEGORY");
      user5.setPostCode("Unknown");
      user8.setCounty("general.error.blankField");
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      User user12 = new User();
      user0.setLastName("798SL9B&Q`^ZL O");
      User user13 = new User();
      User user14 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "Ln$J";
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user13, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      User user0 = new User();
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(2147483645);
      integerArray0[1] = integer0;
      Integer integer1 = new Integer((-1776));
      integerArray0[2] = integer1;
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "G}M3II`eGO$vQCtAo";
      String string0 = rawVariable0.getColumnEnd();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = ")9]\"wR;*dG)X&j9z-b";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "j!W|*3yZl692&";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = " type=";
      rawVariable0.questionNumber = ">>|W?3\"SoU_>$";
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7015046708135313
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("'fH4km)fMy~C%a", "T$t;a}>THn8Kn2");
      User.checkValidUserIDField("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setIdentifier(137);
      user0.setPostCode("{pQYb3");
      rawVariable1.getIdentifier();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "variable.cleaningStatus.label";
      String string0 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.729459610523678
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("macaw.util.ValidationUtility");
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6598635624173648
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("^hLr!MrSX!.}]C1!*s");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("798SL9B&Q`^ZL O");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNameSpace(")`wRhe");
      ontologyTerm1.setNameSpace("(");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm2));
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setNameSpace("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      ontologyTerm3.setDescription("798SL9B&Q`^ZL O");
      ontologyTerm4.setOntologyName("!nfwD}fWFVMD#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.311020481113516
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("LIST_CHOICE");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setColumnStart("g0v6l-;Tn.H6QvM3");
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      supportingDocument1.setFileName("^hLr!MrSX!.}]C1!*s");
      arrayList0.add(supportingDocument0);
      Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      supportingDocument1.setFileName("pJI#jXUX?XL_!X(0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getColumnEnd();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UNABLE_TO_CREATE_CATEGORY";
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setUserID((String) null);
      derivedVariable0.setYear("!D>R");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("KR}!6'R<AWSce", "FD,^>oO(");
      User user2 = new User(".u}(", "KR}!6'R<AWSce");
      derivedVariable0.createVariableSummary();
      assertEquals("!D>R", derivedVariable0.getYear());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.749511674437114
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user2 = new User(",+StJhLtr(dZ", "supportingDocument.description.saveChnges");
      User user3 = new User();
      User user4 = new User();
      Variable.detectFieldChanges(user3, rawVariable0, derivedVariable0);
      user1.setEmail(",+StJhLtr(dZ");
      User user5 = new User();
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      rawVariable0.createVariableSummary();
      user3.setLastName("oHa;z");
      User user11 = new User();
      User user12 = new User("supportingDocument.description.saveChnges", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user13 = new User();
      user5.setAddressLine2("Unknown");
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      assertEquals("<", rawVariable0.getLabel());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      ontologyTerm2.setNameSpace("KbMJx2");
      ontologyTerm2.setNewRecord(true);
      ontologyTerm2.setNameSpace("s");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setNameSpace("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      ontologyTerm0.setOntologyName("");
      assertEquals("", ontologyTerm0.getTerm());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      User user1 = new User("KR}!6'R<AWSce", "FD,^>oO(");
      User user2 = new User(".u}(", "KR}!6'R<AWSce");
      user2.setLastName("KR}!6'R<AWSce");
      Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.7047454262930835
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "supportingDocument.description.saveChnges");
      User user4 = new User();
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      user5.setStatus("<");
      user5.setEmail("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      user3.setLastName("798SL9B&Q`^ZL O");
      derivedVariable0.getLabel();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.6598635624173648
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm1.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setOntologyName("Y");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.notes = "variable.isCoded.label";
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("NON_EXISTENT_ALIAS_FILE_PATH");
      ontologyTerm0.setOntologyName("798SL9B&Q`^ZL O");
      ontologyTerm1.setNameSpace("LwMx-m");
      User user0 = new User("UNABLE_TO_UPDATE_USER", ":qN[XEj3h_WV&");
      User user1 = new User("798SL9B&Q`^ZL O", "LwMx-m");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("variable.isCoded.label", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.744313326343785
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      arrayList0.toArray(integerArray0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList1.add(supportingDocument0);
      arrayList1.retainAll(linkedList0);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setLabel("^#L>ylnEd}cyms");
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      rawVariable0.addValueLabel(valueLabel1);
      rawVariable0.clone();
      rawVariable0.clone();
      rawVariable0.setCleaningStatus("^#L>ylnEd}cyms");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("^#L>ylnEd}cyms", rawVariable0.getCleaningStatus());
      assertEquals("^#L>ylnEd}cyms", rawVariable0.getLabel());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.577368394443559
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setUserID("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      arrayList1.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAvailability("^hLr!MrSX!.}]C1!*s");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable[] rawVariableArray0 = new RawVariable[3];
      rawVariableArray0[0] = rawVariable0;
      rawVariableArray0[1] = rawVariable0;
      rawVariableArray0[2] = rawVariable0;
      arrayList0.toArray(rawVariableArray0);
      arrayList0.add(ontologyTerm0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addLast("");
      arrayList0.containsAll(linkedList0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.isCleaned();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "";
      User user0 = new User("", "");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ontologyTerm0.setIdentifier(90);
      ArrayList<Variable> arrayList1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("FD,^>oO(");
      User user1 = new User("4![$svPC)NTry#*", "FD,^>oO(");
      User user2 = new User("general.fieldValue.unknown", "variable.form.label");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setTerm("FD,^>oO(");
      arrayList0.add((OntologyTerm) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      User user0 = new User();
      arrayList0.clear();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(2147483645);
      integerArray0[1] = integer0;
      Integer integer1 = new Integer((-1776));
      supportingDocument0.setIdentifier((int) integerArray0[1]);
      integerArray0[2] = integer1;
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.add(supportingDocument2);
      arrayList2.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("N.\"", "N.\"");
      User user2 = new User();
      user2.setPassword("*Py4l;");
      user1.setCounty("*Py4l;");
      User user3 = new User();
      User user4 = new User("DUPLICATE_USER", " 8{&_3&DH0 '?m");
      user1.setLastName("Unknown");
      user1.setAddressLine2("//MTgB+Pv");
      user0.setLastName("*Py4l;");
      user3.setCity("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("*Py4l;");
      ontologyTerm0.setTerm("");
      ontologyTerm0.setOntologyName(" 8{&_3&DH0 '?m");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      User user5 = new User(" type=", "KjKLo.[6B;X");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setTerm(" type=");
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("798SL9B&Q`^ZL O", "798SL9B&Q`^ZL O");
      User user2 = new User();
      User user3 = new User("y3|+", "<");
      user3.setPassword((String) null);
      User user4 = new User();
      user4.setPassword("Unknown");
      user2.setCounty("?cf+pn");
      User user5 = new User();
      User user6 = new User();
      user3.setLastName("C/(Z");
      user6.setAddressLine2("ac)Edq9Mm");
      User user7 = new User("@ieLgi.l", "AzkIR#1W@f7o ");
      user5.setPostCode("Unknown");
      user7.setCounty("general.error.blankField");
      User user8 = new User();
      user7.setCity((String) null);
      User user9 = new User();
      User user10 = new User();
      user10.setLastName((String) null);
      User user11 = new User();
      User user12 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.7171452250457557
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.codeBookNumber = "variable.questionNumber.label";
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User(",+StJhLtr(dZ", "supportingDocument.description.saveChnges");
      User user4 = new User();
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      assertEquals("<", rawVariable0.getLabel());
      
      user5.setEmail("UNABLE_TO_CREATE_CATEGORY");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      user3.setLastName("798SL9B&Q`^ZL O");
      User user12 = new User();
      User user13 = new User("<", "798SL9B&Q`^ZL O");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user14 = new User();
      user13.setAddressLine2(",+StJhLtr(dZ");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, derivedVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.621541558895946
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "EDIT";
      rawVariable0.columnStart = "EDIT";
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      User user4 = new User();
      rawVariable0.form = "{?i&\"IF'N{m$6";
      user2.setAffiliation(")M@n(C|B{(wJt");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user3, derivedVariable0, rawVariable0);
      assertEquals("EDIT", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = ")9]\"wR;*dG)X&j9z-b";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "j!W|*3yZl692&";
      User user0 = new User("KR}!6'R<AWSce", "j!W|*3yZl692&");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals(")9]\"wR;*dG)X&j9z-b", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6212645889471853
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "EDIT";
      rawVariable0.columnStart = "EDIT";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("EDIT", "EDIT");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("EDIT", rawVariable0.getQuestionNumber());
      assertEquals("EDIT", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.516511102740111
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("KR}!6'R<AWSce", "FD,^>oO(");
      derivedVariable0.form = null;
      User user2 = new User(".u}(", "KR}!6'R<AWSce");
      user2.setLastName("KR}!6'R<AWSce");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.704898557833076
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "supportingDocument.description.saveChnges");
      User user4 = new User();
      rawVariable0.setAlias("supportingDocument.description.saveChnges");
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      user5.setStatus("<");
      user5.setEmail("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User user10 = new User();
      user3.setLastName("798SL9B&Q`^ZL O");
      derivedVariable0.getLabel();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.7541794191255993
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setLabel("<");
      Variable.validateFields(rawVariable0);
      derivedVariable0.setCleaningDescription("'io~U[ek?bxZ8Alzb");
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "supportingDocument.description.saveChnges");
      User user4 = new User();
      User user5 = new User();
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      user5.setStatus("<");
      user5.setEmail("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      assertEquals("<", rawVariable0.getLabel());
      
      rawVariable2.setNotes("supportingDocument.description.saveChnges");
      User user10 = new User();
      user8.setAddressLine2("<");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5537141164929604
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ontologyTerm0.setOntologyName("EDIT");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("EDIT");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setDescription("EDIT");
      ontologyTerm1.setOntologyName("EDIT");
      ontologyTerm0.setOntologyName("qw(0kz");
      ontologyTerm2.setNameSpace("{n*");
      User user0 = new User("r@}", "EDIT");
      User user1 = new User("{n*", "zE$=y^");
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      User user2 = new User();
      RawVariable rawVariable2 = new RawVariable();
      user2.setPhone("EDIT");
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent1);
      
      rawVariable2.notes = "798SL9B&Q`^ZL O";
      derivedVariable1.hasSameDisplayName(rawVariable2);
      String string0 = rawVariable2.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      rawVariable2.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable2.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.7908889421088774
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User();
      String string0 = "EDIT";
      user0.setUserID("EDIT");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      rawVariable0.setValueLabels(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setNotes("EDIT");
      derivedVariable1.removeSupportingDocuments(arrayList2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      rawVariable0.setCodeBookNumber("EDIT");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable0.cloneAttributes(rawVariable1);
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm0.setNameSpace("");
      ontologyTerm1.setOntologyName("!nfwD}fWFVMD#");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setNameSpace("!nfwD}fWFVMD#");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName(":9");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("gW>)jn)/[j*:*<");
      ontologyTerm3.setNameSpace("V$I]()k+SYqd*le@");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList1.contains(ontologyTerm1));
      
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setTerm(":%P+>l.p");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm1.setNameSpace("m.x45~WfT4=:6=+hw}t");
      ontologyTerm3.setOntologyName(":X^{w/OhiF) h");
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setOntologyName("!nfwD}fWFVMD#");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setNameSpace("!nfwD}fWFVMD#");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName(":9");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setYear("!nfwD}fWFVMD#");
      ontologyTerm3.setNameSpace("~eOd?TX~[@7#tAm");
      ontologyTerm1.setNameSpace("t9lNW$9F\"CZER6K,%");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setTerm(":%P+>l.p");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setNameSpace("m.x45~WfT4=:6=+hw}t");
      ontologyTerm8.setOntologyName("m.x45~WfT4=:6=+hw}t");
      assertFalse(ontologyTerm8.equals((Object)ontologyTerm3));
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("Pg4`k$Jvnt:UlGws@");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("Pg4`k$Jvnt:UlGws@");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("Unknown");
      derivedVariable0.getSourceVariables();
      derivedVariable0.setColumnEnd((String) null);
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("798SL9B&Q`^ZL O", "798SL9B&Q`^ZL O");
      User user2 = new User();
      User user3 = new User("y3|+", "<");
      user2.setAffiliation((String) null);
      User user4 = new User();
      user4.setPassword("Unknown");
      user2.setCounty("?cf+pn");
      User user5 = new User();
      User user6 = new User("<", "8L`-^,)d)~V'0J");
      User user7 = new User();
      user7.setCounty((String) null);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.add((SupportingDocument) null);
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setCategory((String) null);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      User user0 = new User("-(Z0=&Z'b", "-(Z0=&Z'b");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("EDIT");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals("", ontologyTerm1.getDescription());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.6294895613903866
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-736));
      derivedVariable0.columnStart = null;
      derivedVariable0.clone();
      derivedVariable0.getNotes();
      derivedVariable0.setAvailability("");
      derivedVariable0.clone();
      derivedVariable0.getIdentifier();
      derivedVariable0.getIdentifier();
      derivedVariable0.setCleaningDescription("y&:D");
      assertEquals("y&:D", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.524673352026602
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("Pg4`k$Jvnt:UlGws@");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable1.getOntologyTerms();
      derivedVariable1.getNotes();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("N.\"", "N.\"");
      User user2 = new User();
      user2.setPassword("*Py4l;");
      user1.setCounty("*Py4l;");
      User user3 = new User();
      User user4 = new User("DUPLICATE_USER", " 8{&_3&DH0 '?m");
      user1.setLastName("&i<pEC&Dvv$6i3U=o");
      user3.setUserID("Unknown");
      user1.setAddressLine2("//MTgB+Pv");
      user3.setCity("");
      derivedVariable0.columnStart = "Unknown";
      User user5 = new User("t9lNW$9F\"CZER6K,%", "");
      User.checkValidUserIDField("general.error.invalidEmail");
      user5.setPostCode("DUPLICATE_USER");
      user5.setFirstName("3jibGZ");
      user2.setStatus("Unknown");
      User user6 = new User("", "*Py4l;");
      user6.setLastName((String) null);
      user6.setCounty("general.error.invalidEmail");
      user6.setCity("Unknown");
      user1.setLastName("t9lNW$9F\"CZER6K,%");
      User user7 = new User();
      Variable.detectFieldChanges(user7, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      ontologyTerm2.setNameSpace("KbMJx2");
      derivedVariable0.setAvailability("V*luy");
      ontologyTerm2.setNameSpace("s");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setTerm((String) null);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setNameSpace("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      ontologyTerm0.setOntologyName("");
      assertFalse(ontologyTerm0.equals((Object)ontologyTerm4));
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("^hLr!MrSX!.}]C1!*s");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("798SL9B&Q`^ZL O");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNameSpace(")`wRhe");
      ontologyTerm1.setNameSpace("(");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm2));
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm3.setDescription("798SL9B&Q`^ZL O");
      ontologyTerm4.setOntologyName("!nfwD}fWFVMD#");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm3.setNameSpace(")`wRhe");
      User user1 = new User(":9", ")`wRhe");
      User user2 = new User("798SL9B&Q`^ZL O", "798SL9B&Q`^ZL O");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setTerm("GfA");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getSourceVariables();
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "EDIT";
      rawVariable0.columnStart = "EDIT";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("EDIT", rawVariable1.getQuestionNumber());
      assertEquals("EDIT", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.6209093416512177
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.spliterator();
      arrayList1.add(supportingDocument1);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.add(supportingDocument1);
      arrayList0.addAll((Collection<? extends SupportingDocument>) arrayList1);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add((Variable) derivedVariable0);
      arrayList2.trimToSize();
      derivedVariable0.setSourceVariables(arrayList2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.setForm("^hLr!MrSX!.}]C1!*s");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("^hLr!MrSX!.}]C1!*s", derivedVariable1.getForm());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.621744763539271
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("798SL9B&Q`^ZL O", "798SL9B&Q`^ZL O");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      supportingDocument0.setFileName("VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add((Variable) derivedVariable0);
      arrayList2.add((Variable) rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("VARIABLE");
      ArrayList<Variable> arrayList3 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.clone();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.clone();
      derivedVariable1.removeSourceVariables(arrayList2);
      assertEquals("VARIABLE", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.6233969668931714
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      User user0 = new User();
      User user1 = new User("UNABLE_TO_CHECK_AVAILABILITY_STATE_DUPLICATE", "EDIT");
      derivedVariable0.form = "EDIT";
      user1.setPhone("EDIT");
      User.detectFieldChanges(user0, user1, user0);
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      User user2 = new User(";WN/)Aq^", "UNABLE_TO_CHECK_AVAILABILITY_STATE_DUPLICATE");
      User user3 = new User("UNABLE_TO_CHECK_VALUE_LABEL_DUPLICATES", "EDIT");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable2.hasSameDisplayName(derivedVariable1);
      derivedVariable2.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6999350302337968
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm0.setNameSpace("");
      ontologyTerm1.setOntologyName("!nfwD}fWFVMD#");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      ontologyTerm1.setNameSpace("!nfwD}fWFVMD#");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName(":9");
      derivedVariable0.setName("ywM<;");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm3.setNameSpace("~eOd?TX~[@7#tAm");
      ontologyTerm1.setNameSpace("t9lNW$9F\"CZER6K,%");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setTerm(":%P+>l.p");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setNameSpace("m.x45~WfT4=:6=+hw}t");
      ontologyTerm8.setOntologyName("m.x45~WfT4=:6=+hw}t");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("ywM<;", derivedVariable1.getDisplayName());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.columnStart = "variable.alternativeVariable.label";
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.questionNumber = "variable.alternativeVariable.label";
      VariableSummary variableSummary0 = derivedVariable3.createVariableSummary();
      assertFalse(derivedVariable3.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable3.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(derivedVariable3.isCoded());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.columnStart = "variable.alternativeVariable.label";
      VariableSummary variableSummary0 = derivedVariable2.createVariableSummary();
      assertFalse(derivedVariable2.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.8836404106149494
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^c>z}RY");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setCodeBookNumber("VJ[lP2U,^#?lHh:{-z");
      RawVariable.validateFields(rawVariable0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.createVariableSummary();
      rawVariable0.isNewRecord();
      rawVariable0.getCleaningDescription();
      assertEquals("VJ[lP2U,^#?lHh:{-z", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("!nfwD}fWFVMD#");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      ontologyTerm0.setNameSpace("KbMJx2");
      ontologyTerm3.setNameSpace("s");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm4.setNameSpace("macaw.businessLayer.Variable");
      ontologyTerm7.setOntologyName("t9lNW$9F\"CZER6K,%");
      assertFalse(ontologyTerm7.equals((Object)ontologyTerm4));
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.8911601612408218
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("^hLr!MrSX!.}]C1!*s", "^hLr!MrSX!.}]C1!*s");
      User user2 = new User();
      User user3 = new User("y3|+", "<");
      User user4 = new User();
      user4.setPassword("dnknown");
      user2.setCounty("?cf+pn");
      User user5 = new User();
      User user6 = new User("<", "8L`-^,)d)~V'0J");
      User user7 = new User();
      user7.setCounty((String) null);
      user7.setUserID("oBUb1&E;%+],8");
      user6.setLastName("C/(Z");
      user7.setAddressLine2("ac)Edq9Mm");
      User user8 = new User("@ieLgi.l", "t9lNW$9F\"CZER6K,%");
      user8.setEmail("dnknown");
      User user9 = new User();
      User user10 = new User();
      User user11 = new User();
      User user12 = new User();
      User user13 = new User();
      user8.setLastName("?cf+pn");
      User user14 = new User();
      User user15 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user16 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user16, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }
}
