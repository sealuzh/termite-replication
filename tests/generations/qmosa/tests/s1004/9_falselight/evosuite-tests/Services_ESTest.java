/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 14:06:15 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 2485);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**Erreur d'E/S** (", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 2485);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[7];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 176);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte) (-50);
      byteArray0[3] = (byte) (-32);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://?^|X3{sqWFDzHJ:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "*");
      byteArray0[6] = (byte) (-10);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("?^|X3{sqWFDzHJ", (byte)0);
      assertEquals(2, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("^Ie", (byte)127);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.code);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.page_weight);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://=8f9GmU8rkFC/XB+:1363");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "<O.Kt6-!G\"s}Cqc[Q#b");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("=8f9GmU8rkFC/XB+", 1363);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(20, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[7];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 176);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte) (-50);
      byteArray0[3] = (byte) (-32);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-10);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("dGS\"jKVJb``p", 176);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 1);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.page_weight = (-1);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("{@GzK#", (-48));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2166));
      System.setCurrentTimeMillis(1811L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("**Erreur d'E/S** (", 0);
      System.setCurrentTimeMillis((-885L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2166));
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("z", (-1));
      services_HTTP_Result0.toString();
      services_HTTP_Result0.time = (long) (-1);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.Error = "z";
      services_HTTP_Result0.time = 1L;
      services_HTTP_Result0.works = true;
      services_HTTP_Result0.code = 0;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      Services services0 = new Services();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("0rp)4v$c!|?j5", (-1225));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      Services.testSMTP(";", (-2166));
      System.setCurrentTimeMillis((-2166));
      System.setCurrentTimeMillis(1811L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1811L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      System.setCurrentTimeMillis((-885L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2166));
      System.setCurrentTimeMillis(1811L);
      System.setCurrentTimeMillis((-182L));
      System.setCurrentTimeMillis(5072L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1842L));
      System.setCurrentTimeMillis(1136L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2606L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", (-2166));
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.works = true;
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2166));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1811L);
      Services.testPOP3("", 0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-885L));
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("d~GQMn,6c*|JM]to", 67);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP(" octets\n", (-29));
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }
}
