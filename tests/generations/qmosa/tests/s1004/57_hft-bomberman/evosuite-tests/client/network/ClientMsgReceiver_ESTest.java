/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 15:45:52 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.ClientInfoStatus;
import java.sql.SQLClientInfoException;
import java.sql.SQLDataException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLNonTransientConnectionException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Stack;
import javax.swing.ImageIcon;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.global.ScoreMsg;
import messages.global.SessionDetailsMsg;
import org.apache.log4j.helpers.Loader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImageIcon imageIcon0 = new ImageIcon();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Couldn't close input stream");
      imageIcon0.getImageObserver();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-126);
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      SessionDetailsMsg sessionDetailsMsg0 = new SessionDetailsMsg("Couldn't close input stream", (List<String>) null, imageIcon0, (byte) (-126), 0, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sessionDetailsMsg0.getMaps();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) null);
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) list0, locale_FilteringMode0);
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      MockThread.interrupted();
      MapInfo mapInfo1 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList0.add(mapInfo1);
      linkedList0.iterator();
      MockThread.interrupted();
      MapListMsg mapListMsg0 = new MapListMsg(linkedList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Integer integer0 = new Integer(1594);
      arrayList0.add((Object) integer0);
      arrayList0.add((Object) fileSystemHandling0);
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setReuseAddress(false);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "uxGw";
      Loader.getResource(string0);
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(linkedList0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)78;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-53);
      byteArray0[3] = byte3;
      byte byte4 = (byte)1;
      byteArray0[4] = byte4;
      byte byte5 = (byte)110;
      byteArray0[5] = byte5;
      byte byte6 = (byte)32;
      byteArray0[6] = byte6;
      byte byte7 = (byte)106;
      byteArray0[7] = byte7;
      String string1 = "E*cj57y1Yu7F:";
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, string1);
      imageIcon0.getImageObserver();
      SessionDetailsMsg sessionDetailsMsg0 = new SessionDetailsMsg(string0, linkedList1, imageIcon0, byte2, byte4, byte5);
      clientMsgReceiver0.processMsg(sessionDetailsMsg0);
      assertEquals(110, sessionDetailsMsg0.getTotalRounds());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockInetAddress.getLoopbackAddress();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 469);
      byte[] byteArray0 = new byte[0];
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getImageObserver();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      SessionDetailsMsg sessionDetailsMsg0 = new SessionDetailsMsg("", (List<String>) null, (ImageIcon) null, (byte) (-53), (byte) (-53), (byte)106);
      sessionDetailsMsg0.getMaps();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) null);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) list1, locale_FilteringMode0);
      SessionDetailsMsg sessionDetailsMsg1 = new SessionDetailsMsg("Ps+7 \"k>3r0Z`4", list2, imageIcon0, (byte)78, (byte)78, (byte)78);
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      int int0 = 469;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 469);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Doing post session processing...", 600);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      Map<String, ClientInfoStatus> map0 = null;
      String string0 = "";
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      String string1 = "";
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException(string0, string1, map0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement(string1, string1, string1, int0);
      stackTraceElementArray0[0] = stackTraceElement0;
      String string2 = "";
      String string3 = "#-23znxEi$5";
      String string4 = "M=E#6";
      StackTraceElement stackTraceElement1 = new StackTraceElement(string2, string3, string4, int0);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement(string2, string4, string4, int0);
      stackTraceElementArray0[2] = stackTraceElement2;
      String string5 = "";
      String string6 = "CONNECTION LOST";
      int int1 = 0;
      StackTraceElement stackTraceElement3 = new StackTraceElement(string0, string5, string6, int1);
      stackTraceElementArray0[3] = stackTraceElement3;
      String string7 = "1$^Y=G=";
      String string8 = "";
      StackTraceElement stackTraceElement4 = new StackTraceElement(string7, string0, string8, int0);
      stackTraceElementArray0[4] = stackTraceElement4;
      String string9 = "client.network.ClientMsgReceiver";
      StackTraceElement stackTraceElement5 = new StackTraceElement(string0, string9, string4, int1);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement(string6, string1, string9, int1);
      stackTraceElementArray0[6] = stackTraceElement6;
      String string10 = "";
      StackTraceElement stackTraceElement7 = new StackTraceElement(string10, string10, string9, int1);
      stackTraceElementArray0[7] = stackTraceElement7;
      sQLClientInfoException0.setStackTrace(stackTraceElementArray0);
      String string11 = "Was not allowed to read system property \"";
      int int2 = (-4507);
      sQLClientInfoException0.getStackTrace();
      SQLDataException sQLDataException0 = new SQLDataException(string11, string11, int2, sQLClientInfoException0);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(sQLClientInfoException0);
      String string12 = "";
      int int3 = 1;
      int[] intArray0 = new int[0];
      BatchUpdateException batchUpdateException0 = new BatchUpdateException(string12, string11, int3, intArray0, sQLNonTransientConnectionException0);
      String string13 = null;
      Throwable throwable0 = null;
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(string13, throwable0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLClientInfoException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
