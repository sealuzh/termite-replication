/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 14:55:29 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      classWriter0.newUTF8(",\" ");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "ConstantValue", "org.apache.commons.io.filefilter.EmptyFileFilter", true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",\" ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      classWriter0.index = 64250;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-600), "org.apache.commons.io.filefilter.CanWriteFileFilter", "An~ot[tionDefault", "Ag?QT8XF_/'gUS(", "");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(885);
      classWriter0.visitOuterClass("RuntimeVisibleAnnotations", ",\" ", "RuntimeVisibleAnnotations");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",\" ");
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFleFilter", "org.apache.commons.io.filefilter.CanWriteFleFilter");
      String[] stringArray0 = new String[0];
      classWriter0.visit(570, 28, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", ",\" ", stringArray0);
      classWriter0.newUTF8(",\" ");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "JSR/RET are not supported with computeFrames option", "org.apache.commons.io.filefilter.EmptyFileFilter", false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      classWriter0.visit(12, 3, "org.apache.commons.io.filefilter.CanWriteFleFilter", "", "", (String[]) null);
      byteArray0[2] = (byte) (-49);
      byteArray0[3] = (byte) (-49);
      byteArray0[3] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.index = (int) (byte) (-49);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",\" ");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-602), "org.apache.commons.io.filefilter.CanWriteFleFilter", "JSR/RET are not supported with computeFrames option", "Ag?QT8X_/'gUS;", ",\" ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector1));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(885);
      classWriter0.visitOuterClass("RuntimeVisibleAnnotations", "S", "RuntimeVisibleAnnotations");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "S");
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFleFilter", "org.apache.commons.io.filefilter.CanWriteFleFilter");
      String[] stringArray0 = new String[0];
      classWriter0.visit(570, 2380, "RuntimeVisibleAnnotations", "", "S", stringArray0);
      classWriter0.newUTF8("S");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "", "", false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.index = (int) (byte) (-17);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-602), "org.apache.commons.io.filefilter.CanWriteFleFilter", "", "Ag?QT8p_/'gUS;", "S");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      classWriter0.newUTF8(",\" ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",\" ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      classWriter0.index = 64250;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-600), "org.apache.commons.io.filefilter.CanWriteFileFilter", "AnnotationDefault", "Ag?QT8XF_/'gUS(", "");
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4468274293980286
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(885);
      Item[] itemArray0 = new Item[5];
      Item item0 = classWriter0.newFloat(885);
      itemArray0[0] = item0;
      Item item1 = new Item((-81));
      itemArray0[1] = item1;
      Item item2 = classWriter0.newInteger(885);
      itemArray0[2] = item2;
      Item item3 = classWriter0.newFieldItem(",\" ", ",\" ", ",\" ");
      itemArray0[3] = item3;
      Item item4 = classWriter0.newFloat((-81));
      itemArray0[4] = item4;
      classWriter0.typeTable = itemArray0;
      classWriter0.visitOuterClass("RuntimeVisibleAnnotations", ",\" ", "RuntimeVisibleAnnotations");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newDouble(885);
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFleFilter", "org.apache.commons.io.filefilter.CanWriteFleFilter");
      classWriter0.visitField(885, "org.apache.commons.io.filefilter.CanWriteFleFilter", "org.apache.commons.io.filefilter.CanWriteFleFilter", "org.apache.commons.io.filefilter.CanWriteFleFilter", ",\" ");
      String[] stringArray0 = new String[0];
      classWriter0.visit(576, 2, "RuntimeVisibleAnnotations", (String) null, ",\" ", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(340, byteArray0.length);
      
      classWriter0.newField("The wildcard arrey must not be null", "Irjj.\"[$:", "Deprecated");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "", "org.apache.commons.io.filefilter.EmptyFileFilter", false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-595), "org.apache.commons.io.filefilter.CanWriteFleFilter", "", "Ag?QT8X_/'gUS;", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(885);
      classWriter0.visitOuterClass("RuntieVisibweAnn#taion", "4!OYT&%{Bnf", "RuntieVisibweAnn#taion");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4!OYT&%{Bnf");
      classWriter0.visitSource("org.apache.commDns.io.filefilter.Ca~WriteFleFilthr", "org.apache.commDns.io.filefilter.Ca~WriteFleFilthr");
      String[] stringArray0 = new String[0];
      classWriter0.visit(570, 28, "RuntieVisibweAnn#taion", (String) null, "4!OYT&%{Bnf", stringArray0);
      classWriter0.newMethod("sv)AQauG@SK^X^Nt1B", "JSR/RET are not supported with computeFrames option", "]y^zHB/=D!(", false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[3] = (byte)2;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)2;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4!OYT&%{Bnf");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-578), "org.apache.commDns.io.filefilter.Ca~WriteFleFilthr", "JSR/RET are not supported with computeFrames option", "Ag>?QT8X_/'gS;", "4!OYT&%{Bnf");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putInt(10);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector2, byteVector1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3821627888726362
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-655));
      classWriter0.newFloat((-655));
      classWriter0.newClass("#Q7bENH!#uZhTM<");
      classWriter0.newLong(0L);
      classWriter0.newLong(1);
      classWriter0.newLong(2);
      classWriter0.newFieldItem("Q;%W;Gfln?FY", "Q;%W;Gfln?FY", "Q;%W;Gfln?FY");
      classWriter0.newFloat(1);
      classWriter0.visitOuterClass("RunteVsibleAnnotations", "Q;%W;Gfln?FY", "RunteVsibleAnnotations");
      classWriter0.newDouble((-655));
      classWriter0.visitSource("org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter");
      classWriter0.newFieldItem("wheel.asm.ClassAdapter", "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "mu018");
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-655), "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "Q;%W;Gfln?FY");
      classWriter0.toByteArray();
      classWriter0.newField("s,8", "Ijj\"[$:", "Deprecated");
      classWriter0.visitOuterClass("", "The strings ust not be null", "Q;%W;GfGln?FY");
      classWriter0.newMethod("-", "C", "nfAdQ<CQOp5[DM.%u\"", false);
      classWriter0.visit(49, 1, "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-611), "org.apacheocom/6nsFio.filefilter.CanWriteFleFilter", "C", "nfAdQ<CQOp5[DM.%u\"", "Deprecated");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",\" ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 623, ".v5z5To;18IQBovfrL3", "", "Ag?QT8XF_/'gUS(", (Object) null);
      ByteVector byteVector1 = byteVector0.putUTF8("kS'Qk");
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 822;
      ClassWriter classWriter0 = new ClassWriter(822);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "The list of prefixes must not be null", "The list of prefixes must not be null", (String) null, "The list of prefixes must not be null");
      Attribute attribute0 = new Attribute("Deprecated");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      classWriter0.visitSource(",\" ", ",\" ");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)2;
      byteArray1[1] = (byte)2;
      byteArray1[2] = (byte)2;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray1[3] = (byte)2;
      byteArray1[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      ByteVector byteVector0 = new ByteVector((byte)2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)2, ",\" ", ",\" ", ",\" ", (Object) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byteVector0.putLong(0L);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4895424853149775
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      attribute0.next = null;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visitSource("", "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      classWriter0.newUTF8(",\" ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",\" ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-600), "", "AnnotationDefault", "Ag?QT8XF_/'gUS(", ",\" ");
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ",\" ", ",\" ", (String) null, ",\" ");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "$A<m7;U0]QG3Q/R3#", ",\" ", "&U9~|", "{ie@s&{%6jpJc)");
      Attribute attribute0 = new Attribute("$A<m7;U0]QG3Q/R3#");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(175);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 175, "Gm0}]GHRW|", "Gm0}]GHRW|", "Gm0}]GHRW|", "Gm0}]GHRW|");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(978);
      byteVector1.putByte(978);
      ByteVector byteVector2 = byteVector0.put12(990, 64250);
      ByteVector byteVector3 = new ByteVector(201);
      ByteVector byteVector4 = byteVector0.putInt(175);
      ByteVector byteVector5 = byteVector3.putByte(990);
      ByteVector byteVector6 = byteVector5.putInt(64250);
      byteVector6.putUTF8("Gm0}]GHRW|");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector7 = byteVector5.putLong(0L);
      ByteVector byteVector8 = byteVector2.putByte(175);
      ByteVector byteVector9 = byteVector5.putShort(175);
      byteVector9.putUTF8("Gm0}]GHRW|");
      ByteVector byteVector10 = byteVector8.putByte(64250);
      byteVector4.putUTF8("Gm0}]GHRW|");
      ByteVector byteVector11 = byteVector3.putUTF8("Gm0}]GHRW|");
      byteVector2.put12(990, 0);
      ByteVector byteVector12 = byteVector7.putUTF8("Gm0}]GHRW|");
      ByteVector byteVector13 = byteVector12.putUTF8("Gm0}]GHRW|");
      byteVector13.putUTF8("Gm0}]GHRW|");
      byteVector2.putByte(64250);
      byteVector13.putLong(175);
      byteVector10.putUTF8("Gm0}]GHRW|");
      byteVector11.putShort(131052);
      byteVector12.putShort(175);
      byteVector9.putUTF8("Gm0}]GHRW|");
      fieldWriter0.put(byteVector12);
      assertFalse(byteVector12.equals((Object)byteVector10));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2684036609455267
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(822);
      String string0 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ",}6B ", ",}6B ", (String) null, ",}6B ");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("6C", true);
      byte[] byteArray0 = new byte[4];
      fieldWriter0.getSize();
      Item item0 = classWriter0.key3;
      Item item1 = classWriter0.key3;
      Item item2 = new Item(752);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3375264022903888
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(885);
      Item item0 = classWriter0.newFloat(885);
      classWriter0.newLong(32L);
      Item item1 = new Item((-75));
      Item item2 = classWriter0.newLong(2);
      Item item3 = new Item((-75), item2);
      classWriter0.visitOuterClass("RuntCmeVFObleAnnotati$ns", "Q;%W;Gfln?FY", "RuntCmeVFObleAnnotati$ns");
      Item item4 = classWriter0.newDouble(885);
      classWriter0.visitSource("org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter");
      Item[] itemArray0 = new Item[22];
      itemArray0[0] = item0;
      classWriter0.newFieldItem("wheel.asm.ClassAdapter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "");
      itemArray0[1] = item4;
      itemArray0[2] = item3;
      itemArray0[3] = item2;
      classWriter0.typeTable = itemArray0;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(885, "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "Q;%W;Gfln?FY");
      classWriter0.toByteArray();
      classWriter0.newField("", "Ijj\"[$:", "DeprecatQed");
      classWriter0.visitOuterClass("<", "The strings ust not be null", "Q;%W;Gfln?FY");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "C", "org.apache.commons.io.filefilter.EmptyFileFilter", false);
      classWriter0.visit(38, 1, "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-611), "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "C", "org.apache.commons.io.filefilter.EmptyFileFilter", "DeprecatQed");
      ByteVector byteVector0 = new ByteVector(38);
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      classWriter0.newUTF8(",\" ");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "", "org.apache.commons.io.filefilter.EmptyFileFilter", true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",\" ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-600), "org.apache.commons.io.filefilter.CanWriteFileFilter", "AnnotationDefault", "Ag?QT8XF_/'gUS(", "");
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5725956662809266
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(822);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "G\" ", "G\" ", (String) null, "G\" ");
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-20);
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)36;
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.next = null;
      Item[] itemArray0 = new Item[7];
      fieldWriter0.getSize();
      Item item0 = classWriter0.key3;
      itemArray0[0] = item0;
      ClassWriter classWriter1 = new ClassWriter(232);
      Item item1 = classWriter1.key;
      itemArray0[1] = item0;
      Item item2 = new Item(1);
      itemArray0[2] = item2;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FieldWriter fieldWriter2 = new FieldWriter(classWriter1, (byte) (-20), "Signature", "Signature", "G\" ", "{ie@s&{%6jpJc)");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("TqSh6/(2W1U/pbY", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Item item0 = new Item((-71));
      String[] stringArray0 = new String[0];
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(3853);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2134, "The wildcard must not be null", ">oH@;? +WlMDf{,D,}", "MjXHgpr7[bFQFIa46*2", "The strings must not be null");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 822;
      ClassWriter classWriter0 = new ClassWriter(822);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",}6B ");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ",}6B ", ",}6B ", (String) null, ",}6B ");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 31, "RuntimeInvisibleAnnotations", (String) null, "e6q_xi", "e6q_xi");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      classWriter0.newField("", "", "^>rx|L4A',PAy_[jz!");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "^>rx|L4A',PAy_[jz!", "82|eQ0r6?6c/VR(l/", "^>rx|L4A',PAy_[jz!", "");
      fieldWriter0.visitEnd();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Attribute attribute0 = new Attribute((String) null);
      byte[] byteArray0 = new byte[0];
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1902);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte) (-67);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte) (-77);
      byteArray0[7] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 99, 65535);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", sequenceInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.SequenceInputStream@4971fc24
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3375264022903888
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(885);
      Item item0 = classWriter0.newFloat(885);
      classWriter0.newLong(32L);
      Item item1 = new Item((-75));
      Item item2 = classWriter0.newLong(2);
      Item item3 = new Item((-75), item2);
      classWriter0.visitOuterClass("RuntCmeVFObleAnnotati$ns", "Q;%W;Gfln?FY", "RuntCmeVFObleAnnotati$ns");
      Item item4 = classWriter0.newDouble(885);
      classWriter0.visitSource("org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter");
      Item[] itemArray0 = new Item[22];
      itemArray0[0] = item0;
      classWriter0.newFieldItem("wheel.asm.ClassAdapter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "");
      itemArray0[1] = item4;
      itemArray0[2] = item3;
      itemArray0[3] = item2;
      classWriter0.typeTable = itemArray0;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(885, "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "Q;%W;Gfln?FY");
      classWriter0.toByteArray();
      classWriter0.newField("", "Ijj\"[$:", "DeprecatQed");
      classWriter0.visitOuterClass("<", "Te strings ust not be null", "Q;%W;Gfln?FY");
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "C", "org.apache.commons.io.filefilter.EmptyFileFilter", false);
      classWriter0.visit(38, 1, "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "org.apacheocommonsFio.filefilter.CanWriteFleFilter", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-611), "org.apacheocommonsFio.filefilter.CanWriteFleFilter", "C", "org.apache.commons.io.filefilter.EmptyFileFilter", "DeprecatQed");
      ByteVector byteVector0 = new ByteVector(38);
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      String string0 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ",\" ", ",\" ", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11((-939), (-939));
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, ",\" ", ",\" ", "wheel.asm.Attribute", (Object) null);
      byte[] byteArray0 = null;
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-2412);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2412), "yJ~mx %<", "Exceptions", ":iA9UhWF*dy+", (Object) null);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      fieldWriter0.getSize();
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Attribute attribute0 = new Attribute("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte) (-76);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
