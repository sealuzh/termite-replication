/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 08:07:58 GMT 2020
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.AnnotationWriter;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8468143807325634
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      short short0 = MethodWriter.readShort(byteArray0, 3);
      assertEquals(14, byteArray0.length);
      assertEquals((short)0, short0);
      
      ClassWriter classWriter0 = new ClassWriter(3183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:R'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "ar]0dUr$P{:R'", "ar]0dUr$P{:R'", "r.-i", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame((short)0, (-991), stringArray0, (-991), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.75712788682148
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eEs~gP#");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      
      String string0 = classReader0.getClassName();
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      assertNotNull(string0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitOuterClass(")FhBhKk", (String) null, ")FhBhKk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter.writeShort(classReader0.b, 8, 8);
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("visitFrame", 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(dataInputStream0);
      
      methodWriter0.visitLdcInsn(")FhBhKk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7779756321252638
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = "org.objectweb.asm.jip.MethodWriter";
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2106);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 314;
      MethodWriter.writeShort(classReader0.b, 314, (-1296));
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      
      classWriter0.visitOuterClass("org.objectweb.asm.jip.MethodWriter", (String) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string1 = ",JiykiU'i%VO)C$jZ<<";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 314, "a", ",JiykiU'i%VO)C$jZ<<", ",JiykiU'i%VO)C$jZ<<", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      int int1 = 96;
      char[] charArray0 = new char[1];
      char char0 = '%';
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(2106, (-538));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3821088226677314
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      Item item0 = classWriter0.newInteger(3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor0 = methodVisitor0.visitAnnotation("visitIincInsn", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(annotationVisitor0);
      
      methodVisitor0.visitLdcInsn("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodVisitor0.visitIntInsn(3192, 32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      Integer integer0 = new Integer(32);
      assertEquals(32, (int)integer0);
      assertNotNull(integer0);
      
      methodVisitor0.visitVarInsn(169, (-2202));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(76, 1);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-361));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.703281433097585
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eEs~gP#");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      
      String string0 = classReader0.getClassName();
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      assertNotNull(string0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitOuterClass(")FhBhKk", (String) null, ")FhBhKk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter.writeShort(classReader0.b, 8, 8);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.507933484976703
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      Item item0 = classWriter0.newInteger(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3177, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 1;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(132, 3177);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newDouble(2503.18914);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      label0.position = (-7079);
      methodWriter1.visitLocalVariable("ar]0dUr$P{:/'", "hiS:#RCnfU.[7s]", "c$bbHb0msTa_C", label0, label0, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = MethodWriter.CHOP_FRAME;
      assertEquals(248, int0);
      
      methodWriter1.visitVarInsn(2, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(609, 609);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      pipedInputStream0.close();
      assertEquals(0, pipedInputStream0.available());
      
      methodWriter1.visitMethodInsn(132, "ExceptizWons", "ExceptizWons", "Z.17v.Vu>=D");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-836));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3558238602375545
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      Item item0 = classWriter0.newInteger(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3177, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 1;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIincInsn(2, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitLocalVariable("ar]0dUr$P{:/'", "hiS:#RCnfU.[7s]", "c$bbHb0msTa_C", label0, label0, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = MethodWriter.CHOP_FRAME;
      assertEquals(248, int0);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(512);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector1.putUTF8("ExceptizWons");
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      methodWriter1.visitFrame((-1763), 1833, stringArray0, 2, stringArray0);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter2.put(byteVector1);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter2.visitTypeInsn((-1063), "ar]0dUr$P{:/'");
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitMethodInsn(0, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.78069643677882
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "org.objectweb.asm.jip.MethodWriter";
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2106);
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 314;
      MethodWriter.writeShort(classReader0.b, 314, (-1296));
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      
      Item item1 = classWriter0.newNameTypeItem("org.objectweb.asm.jip.MethodWriter", "");
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      
      String string1 = null;
      classWriter0.visitOuterClass("org.objectweb.asm.jip.MethodWriter", (String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string2 = ",JiykiU'i%VO)C$jZ<<";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 314, "e", ",JiykiU'i%VO)C$jZ<<", ",JiykiU'i%VO)C$jZ<<", stringArray0, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(96);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9591824302739718
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 178;
      ClassWriter classWriter0 = new ClassWriter(178);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "eEs~gP#";
      stringArray0[1] = "N";
      stringArray0[2] = "e";
      stringArray0[3] = "visitSwitchInsn";
      stringArray0[4] = "e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1202), "visitSwitchInsn", ",JiykiU'i%VO)C$jZ<<", "e", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(5, stringArray0.length);
      assertNotNull(methodWriter0);
      
      int int0 = (-1735);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-1735));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      int[] intArray0 = new int[2];
      intArray0[0] = (-3510);
      intArray0[1] = 3201;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-3510), 3201}, intArray0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-3510), 3201}, intArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7108767566603877
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      Item item0 = classWriter0.newInteger(3177);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[0] = "ar]0dUr$P{:/'";
      Item item1 = classWriter0.newInteger(104);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3177, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 1;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIincInsn(2, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitLocalVariable("ar]0dUr$P{:/'", "hiS:#RCnfU.[7s]", "c$bbHb0msTa_C", label0, label0, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = MethodWriter.CHOP_FRAME;
      assertEquals(248, int0);
      
      Integer integer0 = new Integer((-1799));
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-1799), (int)integer0);
      assertNotNull(integer0);
      
      methodWriter1.visitVarInsn(2, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(609, 609);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter1.visitTypeInsn(3247, "b(3");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("ExceptizWons", 3177);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter1.visitLocalVariable("visitInsn", "b(3", "ar]0dUr$P{:/'", label0, label0, 248);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.777158920057525
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertNotNull(classReader0);
      
      String string0 = classReader0.getClassName();
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals("org/objectweb/asm/jip/MethodWriter", string0);
      assertNotNull(string0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.visitOuterClass(")FhBhKk", (String) null, ")FhBhKk");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.writeShort(classReader0.b, 8, 8);
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("visitFrame", 155);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      short short0 = MethodWriter.readShort(classReader0.b, 1);
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals((short) (-326), short0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7912947304549363
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2106);
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = "Deprecated";
      stringArray0[2] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[3] = "org.objectweb.asm.jip.MethodWriter";
      classWriter0.visit(8859, 322, "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(4, stringArray0.length);
      
      MethodWriter.writeShort(classReader0.b, 322, (-1296));
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      
      String[] stringArray1 = new String[0];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 322, "e", ",JiykiU'i%VO)C$jZ<<", ",JiykiU'i%VO)C$jZ<<", stringArray1, false, true);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray1.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(322, 8);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray1.length);
      
      methodWriter0.visitTypeInsn(923, "org.objectweb.asm.jip.MethodWriter");
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray1.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(923, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.309015795371127
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      
      ClassWriter classWriter0 = new ClassWriter(1703);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newLong(1741L);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2123);
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.writeShort(classReader0.b, 322, (-1296));
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNotNull(methodWriter0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "org.objectweb.asm.jip.MethodWriter";
      objectArray0[1] = (Object) "org.objectweb.asm.jip.MethodWriter";
      objectArray0[5] = (Object) item0;
      objectArray0[3] = (Object) classWriter0;
      objectArray0[4] = (Object) item0;
      objectArray0[5] = (Object) classWriter0;
      methodWriter0.visitFrame(663, (-2049), stringArray0, 8, objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(5, stringArray0.length);
      assertEquals(6, objectArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@131c7e3e
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.602489098690763
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dU<$P{:/'";
      stringArray0[1] = "ar]0dU<$P{:/'";
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 20;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 20, "ar]0dU<$P{:/'", "ar]0dU<$P{:/'", "ar]0dU<$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-124);
      label0.info = (Object) (byte)12;
      label0.info = (Object) (byte)99;
      byteArray0[3] = (byte) (-69);
      label0.info = (Object) (byte)113;
      boolean boolean0 = label1.resolve(methodWriter0, 172, byteArray0);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertEquals(5, byteArray0.length);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte) (-124), (byte)0, (byte)0, (byte) (-69), (byte)0}, byteArray0);
      
      Label label2 = label1.successor;
      assertNull(label2);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label0, "ar]0dU<$P{:/'");
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitFieldInsn(9, "writeFrame", "Poo$x68:I6t", "C5Pl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIincInsn(21, 21);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitTypeInsn(3177, "yu");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitInsn(20);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIincInsn(21, 21);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitFrame((-2536), 20, stringArray0, 21, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "<init>";
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "<init>", "j", "<init>", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(132);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      pipedInputStream0.close();
      assertEquals(0, pipedInputStream0.available());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1450, "<init>", "<init>", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.782557377741088
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "org.objectweb.asm.jip.MethodWriter";
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2106);
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = (-1296);
      MethodWriter.writeShort(classReader0.b, 322, (-1296));
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 322, "e", ",JiykiU'i%VO)C$jZ<<", ",JiykiU'i%VO)C$jZ<<", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-171), 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7703122418560047
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      int int0 = classWriter0.newField("Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", "Deprecated");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(9, int0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2124);
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = 314;
      MethodWriter.writeShort(classReader0.b, 314, (-1300));
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 314, "e", ",JiykiU'i%VO)C$jZ<<", ",JiykiU'i%VO)C$jZ<<", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(96);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(314, 8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitTypeInsn(923, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      int int0 = classWriter0.newUTF8("RuntimeVisibleParameterAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      stringArray0[2] = "i/v)H6*H";
      stringArray0[3] = "i/v)H6*H";
      stringArray0[4] = "<init>";
      stringArray0[5] = "RuntimeVisibleParameterAnnotations";
      stringArray0[6] = "i/v)H6*H";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Item[] itemArray0 = new Item[2];
      Item item0 = classWriter0.newDouble((-3622.583));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      itemArray0[0] = item0;
      Item item1 = classWriter0.newInteger(64);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      item0.longVal = 32L;
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      stringArray0[7] = "i/v)H6*H";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j", "", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      assertNotNull(methodWriter0);
      
      item1.longVal = (long) 1;
      methodWriter0.classReaderOffset = 24117248;
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      assertEquals(6, int1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3058285002392311
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.visitSource("", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",D(~/`(\"_@X}");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      Item item0 = classWriter0.newFieldItem(">c00", "Xi", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = ",D(~/`(\"_@X}";
      stringArray0[1] = "Code";
      stringArray0[2] = "";
      stringArray0[3] = "visitLocalVariable";
      stringArray0[4] = "Xi";
      stringArray0[5] = ",D(~/`(\"_@X}";
      stringArray0[6] = "void";
      stringArray0[7] = "visitLocalVariable";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1443168256, "Xi", ">c00", "visitLocalVariable", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(8, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitLdcInsn(",D(~/`(\"_@X}");
      assertSame(methodWriter1, methodVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitIntInsn(1443168256, (-1274));
      assertSame(methodWriter1, methodVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitTypeInsn((-2271), "<init>");
      assertSame(methodWriter1, methodVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertSame(methodWriter0, methodVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(65, int0);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte) (-16);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte)6;
      int int1 = MethodWriter.readInt(byteArray0, 1);
      assertFalse(int1 == int0);
      assertEquals(5, byteArray0.length);
      assertEquals((-265111034), int1);
      assertArrayEquals(new byte[] {(byte) (-73), (byte) (-16), (byte)50, (byte) (-70), (byte)6}, byteArray0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5842683037173277
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, ".jar", ".jar", ".jar", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label0.frame = frame0;
      Label label2 = label1.next;
      assertNull(label2);
      
      label0.successor = label1;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, label1, ".jar");
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      Item item0 = classWriter0.newMethodItem(".jar", "", ".jar", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(285212681, "", "t|dRYXPbmZ3L\"^,", "", (String[]) null);
      assertFalse(methodVisitor0.equals((Object)methodWriter0));
      assertNotSame(methodVisitor0, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertFalse(methodWriter1.equals((Object)methodVisitor0));
      assertNotSame(methodWriter1, methodVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
      assertNotSame(methodWriter0, methodVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIntInsn(285212681, 1);
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
      assertNotSame(methodWriter0, methodVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitTypeInsn(32, "mA8ngzGr hTTol`N");
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
      assertNotSame(methodWriter0, methodVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      int int0 = methodWriter0.getSize();
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
      assertNotSame(methodWriter0, methodVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertEquals(61, int0);
      
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) ".jar";
      objectArray0[1] = (Object) methodWriter1;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) "t|dRYXPbmZ3L\"^,";
      methodWriter0.visitFrame(293, 1, objectArray0, 293, (Object[]) null);
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
      assertNotSame(methodWriter0, methodVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertEquals(4, objectArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1956595157147651
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int[] intArray0 = new int[7];
      intArray0[0] = 3192;
      intArray0[2] = 32;
      intArray0[3] = 3192;
      intArray0[6] = 3192;
      intArray0[1] = 32;
      intArray0[6] = 32;
      int int0 = MethodWriter.ACC_CONSTRUCTOR;
      assertEquals(262144, int0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      short short0 = MethodWriter.readShort(byteArray0, 3);
      assertEquals(9, byteArray0.length);
      assertEquals((short)0, short0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      Item item0 = classWriter0.newDouble(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(1796);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      methodWriter0.exceptionCount = (-290);
      ByteVector byteVector2 = byteVector0.putUTF8("ar]0dUr$P{:/'");
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      classWriter0.threshold = 32;
      methodWriter0.visitIincInsn(255, 32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3192, "LfBvp+", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2554262598550952
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      Item item0 = classWriter0.newMethodItem("void", "", "void", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationWriter annotationWriter0 = (AnnotationWriter)methodWriter1.visitAnnotation("Ljava/lang/Synthetic;", false);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationWriter0);
      
      methodWriter1.visitVarInsn(3247, 1443168256);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitLdcInsn("Ljava/lang/Synthetic;");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitIntInsn(1443168256, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 1443168256;
      intArray0[6] = 247;
      intArray0[7] = 1443168256;
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(3247);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("~?nJArn|H:>zm+_I|8");
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitFieldInsn(2, "Ljava/lang/Synthetic;", "", ">Tz}BpkPf,](");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.81681648049615
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2106);
      assertEquals(32, classReader0.getAccess());
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newUTF8("QC=T67s*>=@*4`V");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(641, int0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      Item item1 = classWriter0.newDouble((-3622.583));
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      
      Item item2 = classWriter0.newInteger(1);
      assertFalse(item2.equals((Object)item1));
      assertFalse(item2.equals((Object)item0));
      assertNotSame(item2, item1);
      assertNotSame(item2, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item2);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "resizeInstructions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "resizeInstructions", "'pm LT", "Signature", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, stringArray0.length);
      assertNotNull(methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, stringArray0.length);
      assertEquals(26, int1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4852029621988958
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      Item item0 = classWriter0.newMethodItem("visitIincInsn", ".jar", ".jar", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor0 = methodVisitor0.visitAnnotation("visitIincInsn", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(annotationVisitor0);
      
      methodVisitor0.visitLdcInsn("");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodVisitor0.visitIntInsn(3192, 32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(158);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      methodVisitor0.visitFrame((-1350), 1169, stringArray0, 223, stringArray0);
      assertSame(methodVisitor0, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(247, "visitIincInsn");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(25, ".jar", ".jar", "%D#");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Label[] labelArray0 = new Label[0];
      methodVisitor0.visitTableSwitchInsn(292552704, 3192, label1, labelArray0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertSame(methodVisitor0, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertEquals(0, labelArray0.length);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7485471551746843
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("Lava/lng/Synthetic;", "", "qw'@*iFVE");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      methodVisitor0.visitFieldInsn((-4215), "GF1,?T~n/ieOkC#~D", "", ",JiykiU'i%VO)C$jZ<<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      methodVisitor0.visitInsn(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Integer integer0 = new Integer((-317));
      assertEquals((-317), (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = new Integer(1937);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(1937, (int)integer1);
      assertNotNull(integer1);
      
      int int0 = Integer.compareUnsigned((-92), 285212675);
      assertEquals(1, int0);
      
      int int1 = Integer.remainderUnsigned(186, 186);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      methodVisitor0.visitLdcInsn(integer1);
      assertFalse(integer1.equals((Object)int1));
      assertFalse(integer1.equals((Object)int0));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      Label[] labelArray0 = new Label[0];
      methodVisitor0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, labelArray0.length);
      assertEquals(0, stringArray0.length);
      assertEquals(6, intArray0.length);
      assertArrayEquals(new int[] {(-92), (-447), (-92), 0, 0, 0}, intArray0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitLineNumber(63, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      byte[] byteArray0 = null;
      boolean boolean3 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, (-456));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5267749765308096
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ar]0dUr$P{:/'";
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 32;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 32, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      methodWriter0.visitLocalVariable("_", "W&L4xBkadZ_c7", (String) null, label1, label2, 3);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitInsn(361);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitTypeInsn(2, "W2H:GSC}e;lUo");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitLabel(label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitMethodInsn((-3369), "v!~Durm=l*`azeJi", "KZ]QWfs/r+NU~.u}Y]J", "0!-``jsF");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8378289174355014
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertNotNull(classReader0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      classReader0.accept((ClassVisitor) classWriter0, 2106);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.writeShort(classReader0.b, 314, (-1296));
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      
      classWriter0.visitOuterClass("org.objectweb.asm.jip.MethodWriter", (String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newConstItem(",JiykiU'i%VO)C$jZ<<");
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 314, "e", ",JiykiU'i%VO)C$jZ<<", ",JiykiU'i%VO)C$jZ<<", stringArray0, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(96);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      methodWriter0.visitMultiANewArrayInsn(",JiykiU'i%VO)C$jZ<<", 16777219);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int int0 = MethodWriter.readInt(classReader0.b, 3391);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4204617, int0);
      
      short short0 = MethodWriter.readShort(classReader0.b, 256);
      assertEquals(32, classReader0.getAccess());
      assertEquals(1, ClassReader.SKIP_CODE);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals((short)520, short0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.035016633484322
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      classWriter0.visitSource("", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",D(~/`(\"_@X}");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      Item item0 = classWriter0.newFieldItem("Ljava/ng/Syntheti;", "S-Fx5]V", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2, "", "", "", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 1443168256;
      intArray0[4] = 1;
      intArray0[5] = 1443168256;
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodVisitor0.visitFrame(2, (-1478), stringArray0, 131072, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1660851564864503
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 3192;
      intArray0[2] = 32;
      intArray0[3] = 3192;
      intArray0[6] = 3192;
      intArray0[1] = 32;
      intArray0[6] = 32;
      int int0 = MethodWriter.CHOP_FRAME;
      assertEquals(248, int0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      String string0 = "Exceptions";
      Item item0 = classWriter0.newDouble(3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(1796);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("ar]0dUr$P{:/'");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector2.putUTF8("ar]0dUr$P{:/'");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector3);
      
      methodWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      classWriter0.threshold = 32;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(255, 32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3192, "LfBvp+", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 1443168256;
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
      
      int int1 = 0;
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      byte byte0 = (byte) (-92);
      int int2 = (-452);
      int int3 = 131072;
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitLocalVariable("", "void", "", (Label) null, (Label) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5742993031283512
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(2, "org.objectweb.asm.jip.Frame");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      Item item0 = classWriter0.newMethodItem("visitIincInsn", ".jar", ".jar", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor0 = methodVisitor0.visitAnnotation("visitIincInsn", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(annotationVisitor0);
      
      methodVisitor0.visitLdcInsn("");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodVisitor0.visitIntInsn(3192, 32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(158);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("");
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-34);
      byteArray0[2] = (byte) (-34);
      byteArray0[3] = (byte)3;
      byteVector2.data = byteArray0;
      methodVisitor0.visitFrame((-1350), 1169, stringArray0, 223, stringArray0);
      assertSame(methodVisitor0, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1075861665291022
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[24];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      intArray0[4] = 1;
      Object[] objectArray0 = new Object[0];
      methodVisitor0.visitFrame((-92), 1, stringArray0, (-447), objectArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      intArray0[9] = 1443168256;
      methodVisitor0.visitVarInsn((byte) (-92), 1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitFrame(0, (-1478), stringArray0, 131072, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.7214636866925116
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      short short0 = MethodWriter.readShort(byteArray0, 3);
      assertEquals(14, byteArray0.length);
      assertEquals((short)0, short0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3177, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      Attribute attribute0 = new Attribute("ExceptizWons");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      classWriter0.visit(64, 330, "ExceptizWons", "ExceptizWons", (String) null, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      labelArray0[1] = label0;
      labelArray0[2] = null;
      // Undeclared exception!
      try { 
        methodWriter1.visitTableSwitchInsn(2539, 330, label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.8544149816001841
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 1443168256;
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
      
      int int1 = 0;
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int int2 = 131072;
      int[] intArray0 = new int[24];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[3] = 0;
      intArray0[4] = 1;
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        methodVisitor0.visitFrame(0, 1, stringArray0, (-447), objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte) (-14);
      int int0 = MethodWriter.readUnsignedShort(byteArray0, (byte)0);
      assertEquals(7, byteArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)122, (byte) (-14), (byte)0}, byteArray0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8237197315118312
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(3, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[24];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 3;
      intArray0[4] = 1;
      Object[] objectArray0 = new Object[0];
      methodVisitor0.visitFrame((-92), 1, stringArray0, (-447), objectArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      intArray0[9] = 1443168256;
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodVisitor0.visitFrame(3, (-1478), stringArray0, 131072, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3128158631338942
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(93, byteArray0.length);
      assertNotNull(byteArray0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      methodVisitor0.visitInsn(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodVisitor0.visitInsn(176);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      label0.outputStackMax = (-926);
      methodVisitor0.visitTypeInsn(1, "visitAttribute");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label1 = edge0.successor;
      assertNull(label1);
      
      label0.info = (Object) null;
      methodVisitor0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodVisitor0.visitJumpInsn(0, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Label label2 = label0.successor;
      assertNull(label2);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(sequenceInputStream0);
      
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-1599));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3816284886819388
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newMethodItem("visitIincInsn", ".jar", ".jar", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn(1, ".jar", "b%zkuY(e '/V.*MDTj", "AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      AnnotationWriter annotationWriter0 = (AnnotationWriter)methodWriter0.visitAnnotation("visitIincInsn", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(annotationWriter0);
      
      methodWriter0.visitLdcInsn("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIntInsn(3192, 32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      ByteVector byteVector0 = new ByteVector(32);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8(".jar");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector1.putInt(32);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector1.putUTF8("");
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertNotNull(byteVector3);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      ByteVector byteVector4 = byteVector3.put12(94, 74);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertNotNull(byteVector4);
      
      methodWriter1.visitFrame(172, 512, stringArray0, 512, stringArray0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.put(byteVector3);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitTypeInsn(3699, "/K?\"T[|Ko3f| kxJp");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter1.visitMethodInsn(158, "visitIincInsn", "addSuccessor", "addSuccessor");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1978271313102429
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(8859, classReader0.header);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Code";
      stringArray0[1] = "<init>";
      stringArray0[2] = "Code";
      stringArray0[3] = "Code";
      stringArray0[4] = "<init>";
      stringArray0[5] = "Code";
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8859, "org.objectweb.asm.jip.MethodWriter", "Code", "<init>", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(4, 2, stringArray0, 252, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, stringArray0.length);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, stringArray0.length);
      
      methodWriter0.visitIntInsn(8859, (-449));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, stringArray0.length);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      assertFalse(pipedInputStream1.equals((Object)pipedInputStream0));
      assertEquals(0, pipedInputStream1.available());
      assertNotNull(pipedInputStream1);
      
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8237197315118312
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[24];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      intArray0[4] = 1;
      Object[] objectArray0 = new Object[0];
      methodVisitor0.visitFrame((-92), 1, stringArray0, (-447), objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      intArray0[9] = 1443168256;
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitFrame(0, (-1478), stringArray0, 131072, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.435915591700531
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("Code", "Xi", ">c00");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-14), "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderLength = 118;
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(1443168256, 2);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(3329, "");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = (-14);
      intArray0[2] = 2;
      int int0 = methodWriter0.getSize();
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(53, int0);
      
      intArray0[3] = (-14);
      methodWriter0.visitVarInsn(1443168256, (-14));
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitSource("Deprecated", "Deprecated");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("Ljava/lang/Synthetic;", "S-Fx5]V", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 1443168256;
      intArray0[1] = 21;
      intArray0[2] = 0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5887603575482774
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      Item item0 = classWriter0.newInteger(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3177, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 1;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIincInsn(6473, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitLocalVariable("ar]0dUr$P{:/'", "hiS:#RCnfU.[7s]", "c$bbHb0msTa_C", label0, label0, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = MethodWriter.CHOP_FRAME;
      assertEquals(248, int0);
      
      Integer integer0 = new Integer((-1799));
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-1799), (int)integer0);
      assertNotNull(integer0);
      
      methodWriter1.visitVarInsn(2, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(609, 609);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter1.visitTypeInsn(3247, "b(3");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5910929054167249
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, ".jar", ".jar", ".jar", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.next;
      assertNull(label2);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, label1, ".jar");
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIincInsn((-4184), 285212681);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitMaxs(32, 3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      int[] intArray0 = new int[1];
      intArray0[0] = (-4184);
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitInsn(7);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitTypeInsn(3595, "visitJumpInsn");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.2554262598550952
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Item item0 = classWriter0.newMethodItem("void", "", "void", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationWriter annotationWriter0 = (AnnotationWriter)methodWriter1.visitAnnotation("Ljava/lang/Synthetic;", true);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationWriter0);
      
      methodWriter1.visitVarInsn(3247, 1443168256);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitLdcInsn("Ljava/lang/Synthetic;");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitIntInsn(1443168256, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 1443168256;
      intArray0[6] = 247;
      intArray0[7] = 1443168256;
      frame0.inputStack = intArray0;
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(3247);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("~?nJArn|H:>zm+_I|8");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      methodWriter1.visitFieldInsn(2, "Ljava/lang/Synthetic;", "", ">Tz}BpkPf,](");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.094056456831614
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      classWriter0.visitOuterClass(" ;E|<qROAakKG4", "", "z#tSs}");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 1443168256;
      intArray0[1] = 21;
      methodVisitor0.visitIntInsn(99, 1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = (int) (byte) (-92);
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitFrame(1, 1, stringArray0, (-92), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[3] = (byte)49;
      byteArray0[3] = (byte)66;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#TO.>P0eM=O)>>$r.");
      assertFalse(boolean0);
      
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte)23;
      byteArray0[7] = (byte)23;
      byteArray0[2] = (byte)66;
      int int0 = MethodWriter.readInt(byteArray0, (byte)5);
      assertEquals(9, byteArray0.length);
      assertEquals(1108809472, int0);
      assertArrayEquals(new byte[] {(byte)5, (byte)5, (byte)66, (byte)66, (byte)0, (byte)66, (byte)23, (byte)23, (byte)0}, byteArray0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-209));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -209
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 154);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 154
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4658712232324764
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = 3192;
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int int1 = 3;
      short short0 = MethodWriter.readShort(byteArray0, 3);
      assertEquals(9, byteArray0.length);
      assertEquals((short)0, short0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 32;
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "`xto*G?zr");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIincInsn((short)0, 1022);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitMaxs(3192, (-1090));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = null;
      labelArray0[1] = null;
      labelArray0[2] = null;
      labelArray0[3] = null;
      labelArray0[4] = null;
      labelArray0[5] = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(1022, (-2015307644), (Label) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.6791932659915256
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      assertEquals(32, classReader0.getAccess());
      assertEquals(2, ClassReader.SKIP_DEBUG);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      assertEquals(8859, classReader0.header);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
      assertEquals(1, ClassReader.SKIP_CODE);
      assertNotNull(classReader0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Code";
      stringArray0[1] = "<init>";
      stringArray0[2] = "Code";
      stringArray0[3] = "Code";
      stringArray0[4] = "<init>";
      stringArray0[5] = "Code";
      stringArray0[6] = "org.objectweb.asm.jip.MethodWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8859, "org.objectweb.asm.jip.MethodWriter", "Code", "<init>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newDouble(1943.2085);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Item item1 = classWriter0.newInteger(1);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-2), "Code", "Code", "<init>", stringArray1, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray1.length);
      assertNotNull(methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(methodWriter1, methodWriter0);
      assertNotSame(stringArray1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, stringArray1.length);
      assertEquals(38, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "j";
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNull(methodWriter0);
      
      classWriter0.lastMethod = null;
      stringArray0[1] = "j";
      stringArray0[2] = "<init>";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[3] = "j";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 3192, "#k^^~lpAgC|KO-N;Mef", "j", "<init>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(4, stringArray0.length);
      assertNotNull(methodWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = (-265);
      intArray0[2] = 1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 24;
      intArray0[6] = 1976;
      Label[] labelArray0 = new Label[6];
      labelArray0[1] = null;
      labelArray0[2] = null;
      Label label1 = new Label();
      assertNotNull(label1);
      
      labelArray0[3] = label1;
      labelArray0[4] = null;
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label1));
      assertNotNull(label2);
      
      labelArray0[5] = label2;
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn((Label) null, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.8486855577264172
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "<init>", "j", "<init>", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.invalidFrames = true;
      methodWriter0.visitMultiANewArrayInsn("joZ]Lx", 285212676);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.452463469304736
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      short short0 = MethodWriter.readShort(byteArray0, 3);
      assertEquals(9, byteArray0.length);
      assertEquals((short)0, short0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 32;
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      label0.successors = null;
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "`xto*G?zr");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitInsn(16777220);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      Label label2 = frame0.owner;
      assertNull(label2);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, label0, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn("Exceptions");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6715308017791348
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.objectweb.asm.jip.ClassWriter");
      assertFalse(boolean0);
      
      Item item0 = classWriter0.newFieldItem("Lava/lng/Synthetic;", "", "qw'@*iFVE");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      methodVisitor0.visitFieldInsn((-4215), "GF1,?T~n/ieOkC#~D", "", ",JiykiU'i%VO)C$jZ<<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[0] = 0;
      methodVisitor0.visitInsn(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodVisitor0.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      Integer integer0 = new Integer((-317));
      assertEquals((-317), (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = new Integer(1937);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(1937, (int)integer1);
      assertNotNull(integer1);
      
      int int0 = Integer.remainderUnsigned(186, 186);
      assertEquals(0, int0);
      
      methodVisitor0.visitLdcInsn(integer1);
      assertFalse(integer1.equals((Object)int0));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitLineNumber(63, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3653689861332956
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, ".jar", ".jar", ".jar", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.next;
      assertNull(label2);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, label1, ".jar");
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitIincInsn((-4184), 285212681);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitMaxs(32, 3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      int[] intArray0 = new int[1];
      intArray0[0] = (-4184);
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label1;
      Label label3 = label1.next;
      assertNull(label3);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label4 = edge0.successor;
      assertNull(label4);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "p");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, stringArray0.length);
      
      Integer integer0 = new Integer(32);
      assertEquals(32, (int)integer0);
      assertNotNull(integer0);
      
      long long0 = Integer.toUnsignedLong(285212681);
      assertEquals(285212681L, long0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(label1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value L12
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.8304717124362917
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 3180;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 3180, 16777220);
      assertEquals(9, intArray0.length);
      assertEquals(16774040, int0);
      assertArrayEquals(new int[] {3180, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter(3180);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNull(methodWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "rXZi_B/JO^a.:b}";
      stringArray0[1] = "rXZi_B/JO^a.:b}";
      stringArray0[2] = "";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-2801), "", "", "rXZi_B/JO^a.:b}", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(3, stringArray0.length);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitTypeInsn(556, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "void";
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitMultiANewArrayInsn((String) null, (byte) (-14));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4239032454127063
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ar]0dUr$P{:/'";
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 32;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 32, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodWriter0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.successor;
      assertNull(label2);
      
      Label label3 = new Label();
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertNotNull(label3);
      
      label0.next = null;
      Label label4 = label1.next;
      assertNull(label4);
      
      label3.position = 3177;
      methodWriter0.visitIincInsn((-2166), 330);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitJumpInsn(3380, label3);
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertNotSame(label3, label1);
      assertNotSame(label3, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitTypeInsn(32, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodWriter0.visitVarInsn(24117252, 251);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 1443168217);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7946534830291643
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitIntInsn(1, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean0);
      
      methodVisitor0.visitLocalVariable("", "v!~Durm=l*`azeJi", ".jar", label0, label0, 8388607);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      label0.position = 361;
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodVisitor0.visitInsn((-447));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodVisitor0.visitTypeInsn(0, "Y%J9");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodVisitor0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      methodVisitor0.visitMethodInsn((-2850), "kKM;$0$7wnh8ys_q", "Y%J9", "RuntimeVisibleParameterAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      
      // Undeclared exception!
      try { 
        MethodWriter.readShort((byte[]) null, 361);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.8647400965276372
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#k^^~lpAgC|KO-N;Mef");
      assertFalse(boolean0);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 3192;
      intArray0[2] = 32;
      intArray0[3] = 3192;
      intArray0[3] = 3192;
      Object object0 = new Object();
      assertNotNull(object0);
      
      ClassWriter classWriter0 = new ClassWriter(3192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-2740), "LocalVariableTypeTable", "LocalVariableTypeTable", "c)~C]fXs%NB 3NwzY", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) methodWriter0;
      Object[] objectArray1 = new Object[9];
      assertFalse(objectArray1.equals((Object)objectArray0));
      
      objectArray1[0] = (Object) "#k^^~lpAgC|KO-N;Mef";
      objectArray1[1] = object0;
      objectArray1[2] = (Object) 3192;
      objectArray1[3] = (Object) methodWriter0;
      objectArray1[4] = (Object) 3192;
      objectArray1[5] = (Object) 3192;
      objectArray1[6] = (Object) null;
      objectArray1[7] = (Object) "#k^^~lpAgC|KO-N;Mef";
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      objectArray1[8] = object1;
      methodWriter0.visitFrame(2803, 1, objectArray0, 2803, objectArray1);
      assertFalse(objectArray0.equals((Object)objectArray1));
      assertFalse(objectArray1.equals((Object)objectArray0));
      assertSame(methodWriter0, methodVisitor0);
      assertNotSame(objectArray0, objectArray1);
      assertNotSame(objectArray1, objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, objectArray0.length);
      assertEquals(9, objectArray1.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@4cabd26b
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0913030006468518
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      classWriter0.visitSource("", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("Ljava/lang/Synthetic;", "S-Fx5]V", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      int int0 = classWriter0.newClass("_gG<.Z*[*Qw=");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(9, int0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1443168256;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn(1723, "void", "org.objectweb.asm.jip.MethodWriter", "}E hey`H9sI`Ou`");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitFieldInsn((-92), "S-Fx5]V", "=x:iPE? _-", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.2554262598550952
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(0, "", "", "void", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      Item item0 = classWriter0.newMethodItem("void", "", "void", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationWriter annotationWriter0 = (AnnotationWriter)methodWriter1.visitAnnotation("Ljava/lang/Synthetic;", true);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationWriter0);
      
      methodWriter1.visitVarInsn(3247, 1443168256);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitLdcInsn("Ljava/lang/Synthetic;");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitIntInsn(1443168256, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 1443168256;
      intArray0[7] = 1443168256;
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(3247);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("~?nJArn|H:>zm+_I|8");
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-138), (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.6236548495681085
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3165);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3165, "<init>", "j", "<init>", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(16, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3192322887262589
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      Item item0 = classWriter0.newMethodItem("org.objectweb.asm.jip.ClassWriter", ".jar", ".jar", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("org.objectweb.asm.jip.ClassWriter", true);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitLdcInsn("");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newUTF8("");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, int0);
      
      Integer integer0 = new Integer(0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitVarInsn(3192, 1675);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Integer integer1 = new Integer(7);
      assertTrue(integer1.equals((Object)int0));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(7, (int)integer1);
      assertNotNull(integer1);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(64, int1);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4066777022503076
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("#k^^~lpAgC|KO-N;Mef", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "A=DGa??";
      stringArray0[1] = "S-Fx5]V";
      stringArray0[2] = "_gG<.Z*[*Qw=";
      stringArray0[3] = "_gG<.Z*[*Qw=";
      stringArray0[4] = "L";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1133, "S-Fx5]V", "_gG<.Z*[*Qw=", "RuntimeInvisibleAnnotations", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(5, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(1, "A=DGa??");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "L");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer((byte) (-92));
      assertEquals((-92), (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = new Integer(2);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(2, (int)integer1);
      assertNotNull(integer1);
      
      methodWriter0.visitLdcInsn("RuntimeInvisibleAnnotations");
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.getFirst();
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertNotNull(label1);
      
      methodWriter0.visitLineNumber(1133, label1);
      assertSame(label1, label0);
      assertSame(methodWriter0, methodVisitor0);
      assertSame(label0, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.4880360441781157
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("L/ava/>ng/Synthec;", "ar]0dUr$P{:/'", "qw'@*iFVE");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-7), "", "", "void", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(1443168256, "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      methodVisitor0.visitFieldInsn((-4215), "GF,?~nieOkC#~", "", ",JiykiU'i%VO)C$jZ<<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = (-7);
      methodVisitor0.visitInsn((-7));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      Integer integer0 = new Integer((-317));
      assertEquals((-317), (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = new Integer(1937);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(1937, (int)integer1);
      assertNotNull(integer1);
      
      Integer integer2 = new Integer(1937);
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertEquals(1937, (int)integer2);
      assertNotNull(integer2);
      
      Integer integer3 = Integer.getInteger("GF,?~nieOkC#~", integer2);
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertTrue(integer3.equals((Object)integer1));
      assertFalse(integer3.equals((Object)integer0));
      assertEquals(1937, (int)integer3);
      assertNotNull(integer3);
      
      int int0 = Integer.remainderUnsigned(186, 186);
      assertEquals(0, int0);
      
      methodVisitor0.visitLdcInsn(integer1);
      assertFalse(integer1.equals((Object)integer0));
      assertTrue(integer1.equals((Object)integer2));
      assertTrue(integer1.equals((Object)integer3));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitLineNumber(63, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7448970866286704
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int int0 = 3201;
      int[] intArray0 = new int[9];
      intArray0[0] = 3201;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 8859;
      intArray0[4] = 8;
      intArray0[5] = 1;
      intArray0[6] = (-344);
      ClassWriter classWriter0 = new ClassWriter(2250);
      Attribute[] attributeArray0 = new Attribute[0];
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 8);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(32);
      int int0 = 0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      Attribute attribute0 = new Attribute(".jar");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        methodVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.2700181519104905
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      classWriter0.newFieldItem("Lava/lng/Synthetic;", "", "qw'@*iFVE");
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodVisitor0.visitTypeInsn(1443168256, "void");
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      methodVisitor0.visitFieldInsn((-4215), "GF1,?T~n/ieOkC#~D", "", ",JiykiU'i%VO)C$jZ<<");
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      methodVisitor0.visitInsn(0);
      Integer integer0 = new Integer((-317));
      Integer integer1 = new Integer(1937);
      Integer.remainderUnsigned(186, 186);
      methodVisitor0.visitLdcInsn(integer1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        methodVisitor0.visitLdcInsn(pipedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.PipedInputStream@1e5833f
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 3180;
      MethodWriter.getNewOffset(intArray0, intArray0, 3180, 16777220);
      Frame frame0 = new Frame();
      Label label0 = new Label();
      Frame frame1 = label0.frame;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, intArray0, 16774040, 16774040);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.430349831409688
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      String string0 = null;
      String string1 = "voiQ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "voiQ", stringArray0);
      methodVisitor0.visitAnnotation("", false);
      methodVisitor0.visitLdcInsn("voiQ");
      int int0 = 1690;
      int int1 = (-531);
      methodVisitor0.visitIntInsn((-531), (-524));
      // Undeclared exception!
      try { 
        methodVisitor0.visitParameterAnnotation(2, "Y%Ae,5=K.>J<w'*}", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.2634794940650305
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.visitSource("", (String) null);
      classWriter0.newFieldItem("Ljava/lang/Synthetic;", "S-Fx5]V", "org.objectweb.asm.jip.MethodWriter");
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodVisitor0.visitTypeInsn(1443168256, "void");
      int[] intArray0 = new int[5];
      intArray0[0] = 1443168256;
      intArray0[1] = 21;
      intArray0[2] = 0;
      methodVisitor0.visitFieldInsn((-2028393057), "", "org.objectweb.asm.jip.MethodWriter", "NVup9r^gUGDwt:J");
      methodVisitor0.visitMethodInsn(21, "56nF +xg.,Q>k+ _+", "M", "j");
      AnnotationVisitor annotationVisitor0 = methodVisitor0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      classWriter0.visitSource("", (String) null);
      String[] stringArray0 = new String[0];
      classWriter0.visitOuterClass(" ;E|<qROAakKG4", "", "z#tSs}");
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodVisitor0.visitTypeInsn(1443168256, "void");
      int[] intArray0 = new int[5];
      intArray0[0] = 1443168256;
      intArray0[1] = 21;
      methodVisitor0.visitIntInsn(99, 1443168256);
      intArray0[2] = 0;
      intArray0[3] = 1;
      methodVisitor0.visitInsn(256);
      methodVisitor0.visitIincInsn(99, 2931);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.331660286822432
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodVisitor0.visitTypeInsn(1443168256, "void");
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      methodVisitor0.visitFieldInsn((-4215), "GF1,?T~n/ieOkC#~D", "", ",JiykiU'i%VO)C$jZ<<");
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      methodVisitor0.visitIincInsn((byte) (-92), (-92));
      methodVisitor0.visitIntInsn((-447), (-447));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      try { 
        pipedInputStream0.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3180238017106034
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      classWriter0.visitSource("", "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",D(~/`(\"_@X}");
      String string0 = "";
      classWriter0.newFieldItem("Ljava/lang/Synthetic;", "S-Fx5]V", "org.objectweb.asm.jip.MethodWriter");
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2, "", "", "voiA", stringArray0);
      methodVisitor0.visitTypeInsn(1443168256, "voiA");
      int int0 = 21;
      methodVisitor0.visitIincInsn(2, (-679));
      methodVisitor0.visitTypeInsn(4206, "St5mK1jh]");
      methodVisitor0.visitInsn(4206);
      methodVisitor0.visitIincInsn(867, 21);
      methodVisitor0.visitIntInsn(50, 21);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((PipedOutputStream) null, (-801));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.2409471487372976
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      classWriter0.newFieldItem("Lava/lng/Synthetic;", "", "qw'@*iFVE");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodWriter0.visitTypeInsn(1443168256, "void");
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      methodWriter0.getSize();
      methodWriter0.visitFieldInsn((-4215), "GF1,?T~n/ieOkC#~D", "", ",JiykiU'i%VO)C$jZ<<");
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      methodWriter0.visitInsn(0);
      Label label0 = new Label();
      Integer integer0 = new Integer((-317));
      Integer integer1 = new Integer(1937);
      Integer.remainderUnsigned(186, 186);
      methodWriter0.visitLdcInsn("|{a#p*~otE");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@11a8c626
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8701944874833767
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(32);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      classWriter0.newMethodItem("visitIincInsn", ".jar", ".jar", true);
      methodVisitor0.visitAnnotation("visitIincInsn", true);
      methodVisitor0.visitLdcInsn("S?]");
      methodVisitor0.visitIntInsn(3192, 32);
      Frame frame1 = new Frame();
      ByteVector byteVector0 = classWriter0.pool;
      methodVisitor0.visitInsn(2);
      methodVisitor0.visitMaxs(3049, (-92));
      methodVisitor0.visitMultiANewArrayInsn("java/lang/dyn/Dynamic", 32);
      Label label0 = new Label();
      methodVisitor0.visitTypeInsn(2, "0aN4yTm*?&++N");
      methodVisitor0.visitJumpInsn(923, label0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eEs~gP#");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      int int0 = MethodWriter.readUnsignedShort(classReader0.b, 229);
      assertEquals(778, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.5297061990576545
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 1443168256;
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      String string0 = null;
      classWriter0.visitSource("", (String) null);
      String string1 = "void";
      String[] stringArray0 = new String[0];
      classWriter0.visit(1443168256, 1443168256, "oF'P", "Deprecated", (String) null, stringArray0);
      String[] stringArray1 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-11), "", "", "void", stringArray1);
      // Undeclared exception!
      try { 
        methodVisitor0.visitJumpInsn(1443168256, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.3884492798585994
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      classWriter0.visitSource("", "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",D(~/`(\"_@X}");
      classWriter0.newFieldItem(">c00", "Xi", "");
      String[] stringArray0 = new String[8];
      stringArray0[0] = ",D(~/`(\"_@X}";
      stringArray0[1] = "Code";
      stringArray0[2] = "";
      classWriter0.newClass("StackMap");
      stringArray0[3] = "visitLocalVariable";
      stringArray0[4] = "Xi";
      stringArray0[5] = ",D(~/`(\"_@X}";
      stringArray0[6] = "void";
      stringArray0[7] = "visitLocalVariable";
      classWriter0.visitMethod(1443168256, "Xi", ">c00", "visitLocalVariable", stringArray0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn((-2523), (-879));
      methodWriter1.visitLdcInsn(",D(~/`(\"_@X}");
      methodWriter1.visitIntInsn(1443168256, (-1274));
      methodWriter1.visitFieldInsn(179, "Code", "Xi", "Xi");
      assertSame(methodWriter1, methodWriter0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.6765259604934999
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      String[] stringArray0 = new String[8];
      classWriter0.newUTF8("RuntimeVisibleParameterAnnotations");
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      stringArray0[2] = "i/v)H6*H";
      stringArray0[3] = "i/v)H6*H";
      stringArray0[4] = "<init>";
      stringArray0[5] = "i/v)H6*H";
      stringArray0[6] = "i/v)H6*H";
      Item[] itemArray0 = new Item[2];
      Item item0 = classWriter0.newDouble((-3622.583));
      itemArray0[0] = item0;
      item0.strVal1 = "i/v)H6*H";
      Item item1 = classWriter0.newInteger(64);
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      stringArray0[7] = "i/v)H6*H";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j", "", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.495615780172503
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(32);
      String string0 = ".jar";
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, ".jar", ".jar", ".jar", stringArray0);
      methodVisitor0.visitFieldInsn(2, "<}fHxp7U", ".jar", "L,iKS");
      String string1 = "org.objectweb.asm.jip.ClassWriter";
      classWriter0.newMethodItem("org.objectweb.asm.jip.ClassWriter", ".jar", ".jar", true);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.ClassWriter", true);
      methodWriter0.visitLdcInsn("");
      int int0 = 1690;
      methodWriter0.visitIntInsn(3192, 1690);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3192, ",JiykiU'i%VO)C$jZ<<", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      stringArray0[2] = "4b00Xddp{";
      stringArray0[3] = "4b00Xddp{";
      stringArray0[5] = "<init>";
      stringArray0[5] = "4b00Xddp{";
      stringArray0[6] = "4b00Xddp{";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[7] = "4b00Xddp{";
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-90);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 25165824);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25165824
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1828));
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-77);
      byteArray0[5] = (byte) (-1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "qh0l\"xc[TmUQ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 2, "", "qh0l\"xc[TmUQ", "", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.458895450407514
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(3177);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dU<$P{:/'";
      stringArray0[1] = "ar]0dU<$P{:/'";
      Label label0 = new Label();
      label0.outputStackMax = 32;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 32, "ar]0dU<$P{:/'", "ar]0dU<$P{:/'", "ar]0dU<$P{:/'", stringArray0, false, false);
      Label label1 = new Label();
      Label label2 = label1.successor;
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "ar]0dU<$P{:/'");
      methodWriter0.visitIincInsn(16777216, (-32768));
      methodWriter0.visitTypeInsn(16777216, "ar]0dU<$P{:/'");
      methodWriter0.visitInsn(21);
      methodWriter0.visitIincInsn(32, (-32768));
      methodWriter0.visitIntInsn(21, 32);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      try { 
        pipedInputStream0.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.6434263483462597
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodVisitor0.visitInsn(0);
      classWriter0.newMethodItem("void", "", "void", false);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitAnnotation("Ljava/langSynthetic;", false);
      methodWriter0.visitVarInsn(3247, 1443168256);
      methodWriter0.visitLdcInsn("Ljava/langSynthetic;");
      methodWriter0.visitIntInsn(1443168256, 2);
      Frame frame0 = new Frame();
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 1443168256;
      intArray0[6] = 247;
      intArray0[7] = 1443168256;
      frame0.inputStack = intArray0;
      methodWriter0.visitFieldInsn(2, "7A:28{Hzc\"K5$fA&',r", "~8YDx", "z5L3eqJ");
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 0, "StackMap", (String) null, "StackMap", (String[]) null, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      Label label0 = new Label();
      Frame frame0 = label0.frame;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Label label0 = new Label();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int[] intArray0 = new int[9];
      label0.position = 3201;
      intArray0[0] = (-3510);
      intArray0[1] = 3201;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {(-3510), 3201, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7673996298015213
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "", "", "void", stringArray0);
      methodVisitor0.visitTypeInsn(1443168256, "void");
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-92);
      intArray0[1] = (-447);
      intArray0[2] = (int) (byte) (-92);
      intArray0[3] = 0;
      methodVisitor0.visitInsn(0);
      Label label0 = new Label();
      methodVisitor0.visitInsn(176);
      label0.outputStackMax = (-926);
      methodVisitor0.visitTypeInsn(1, "visitAttribute");
      Edge edge0 = new Edge();
      Label label1 = edge0.successor;
      label0.info = (Object) null;
      methodVisitor0.visitLabel(label0);
      methodVisitor0.visitJumpInsn(0, label0);
      Label label2 = label0.successor;
      methodVisitor0.visitLdcInsn("Y%J9");
      methodVisitor0.visitVarInsn((-1), (-2143));
  }

  /**
  //Test case number: 92
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",D(~/`(\"_@X}");
      String[] stringArray0 = new String[0];
      int[] intArray0 = new int[6];
      intArray0[1] = 0;
      intArray0[3] = 3;
      intArray0[5] = 0;
      MethodWriter.getNewOffset(intArray0, intArray0, 0, 0);
      Object object0 = new Object();
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6593732027792605
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "org.objectweb.asm.jip.MethodWriter";
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(1703);
      classWriter0.newLong(1741L);
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, 2106);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1443168256);
      classWriter0.visitSource("", (String) null);
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod(0, "", "", "void", stringArray0);
      classWriter0.newMethodItem("void", "", "void", false);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      ClassWriter classWriter1 = new ClassWriter(1);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter1, 12, "", "", "Ljava/lang/Synthetic;", (String[]) null, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "getSize");
      int int0 = MethodWriter.readInt(byteArray0, (byte)5);
      assertEquals(0, int0);
      
      short short0 = MethodWriter.readShort(byteArray0, 0);
      assertEquals((short)1285, short0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4694533729842756
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      Frame frame0 = new Frame();
      MethodWriter.readShort(byteArray0, 3);
      ClassWriter classWriter0 = new ClassWriter(3183);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3183, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(1, (-171));
      methodWriter0.visitTypeInsn((-171), "Deprecated");
      methodWriter0.visitInsn(16777225);
      methodWriter0.visitIincInsn((short)0, 1);
      MethodWriter.readInt(byteArray0, 3);
      MethodWriter.readShort(byteArray0, 0);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort((byte[]) null, 0, (-171));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(3192);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ar]0dUr$P{:/'";
      stringArray0[1] = "ExceptizWons";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3192, "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", "ar]0dUr$P{:/'", stringArray0, false, false);
      Label label0 = new Label();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ExceptizWons");
      Label label1 = label0.next;
      Attribute attribute0 = new Attribute("ExceptizWons");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-66);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte) (-56);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 83, (-2335));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 83
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 144;
      intArray0[1] = (-2762);
      intArray0[2] = (-32768);
      intArray0[3] = 322;
      intArray0[4] = 191;
      intArray0[5] = Integer.MAX_VALUE;
      int[] intArray1 = new int[1];
      intArray1[0] = 144;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray0, intArray1, 322, 21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      Label label0 = new Label();
      Frame frame0 = label0.frame;
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)0;
      intArray0[1] = (int) (byte)122;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = (-32768);
      intArray0[4] = (int) (byte) (-14);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 122, 0, (-32768), (-14)}, intArray0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "<init>";
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      stringArray0[3] = "i/v)H6*H";
      stringArray0[4] = "<init>";
      Object object0 = new Object();
      int[] intArray0 = new int[7];
      intArray0[0] = (int) (byte) (-84);
      intArray0[1] = (int) (byte)32;
      intArray0[2] = (int) (byte)32;
      intArray0[3] = (int) (byte) (-84);
      intArray0[4] = (int) (byte)73;
      intArray0[5] = (int) (byte) (-84);
      intArray0[6] = 1022;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-84), 285212683);
      assertEquals(285213926, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 64;
      ClassWriter classWriter0 = new ClassWriter(64);
      String[] stringArray0 = new String[8];
      classWriter0.newUTF8("RuntimeVisibleParameterAnnotations");
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      classWriter0.addUninitializedType("RuntimeVisibleParameterAnnotations", (-681));
      stringArray0[2] = "i/v)H6*H";
      stringArray0[3] = "i/v)H6*H";
      stringArray0[4] = "<init>";
      stringArray0[5] = "i/v)H6*H";
      stringArray0[6] = "i/v)H6*H";
      stringArray0[7] = "i/v)H6*H";
      String string0 = "#k^^~lpAgC|KO-N;Mef";
      classWriter0.newMethod("#k^^~lpAgC|KO-N;Mef", "RuntimeVisibleParameterAnnotations", "&9On5eY:", false);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "<nit>", "i/v)H6*H", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`j";
      stringArray0[1] = "`j";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 3192, "`j", "`j", "`j", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
