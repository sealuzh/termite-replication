/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 13:25:32 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.event.ComponentEvent;
import java.net.URI;
import java.net.URL;
import java.util.Collection;
import java.util.Locale;
import javax.help.FavoritesView;
import javax.help.HelpSet;
import javax.help.IndexView;
import javax.swing.JColorChooser;
import javax.swing.JScrollBar;
import javax.swing.JSpinner;
import javax.swing.JTree;
import javax.swing.SpinnerNumberModel;
import javax.swing.colorchooser.DefaultColorSelectionModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      StyleContext styleContext0 = new StyleContext();
      StyleContext styleContext1 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle();
      GapContent gapContent0 = new GapContent();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      String string0 = "";
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle();
      StyleContext styleContext2 = new StyleContext();
      styleContext2.getBackground(styleContext_NamedStyle0);
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden((ComponentEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-74);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)12;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MindMapMode mindMapMode0 = new MindMapMode();
      mindMapMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      Frame frame0 = null;
      try {
        frame0 = new Frame();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JScrollBar jScrollBar0 = new JScrollBar();
      Color color0 = Color.gray;
      System.setCurrentTimeMillis(127L);
      Collection collection0 = Controller.getPropertyChangeListeners();
      assertNotNull(collection0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel();
      defaultColorSelectionModel0.getChangeListeners();
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel((-4160), (-4160), (-4160), 0);
      JSpinner jSpinner0 = new JSpinner(spinnerNumberModel0);
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      defaultColorSelectionModel0.removeChangeListener(jSpinner_DefaultEditor0);
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      jColorChooser0.firePropertyChange((String) null, 'm', '9');
      assertFalse(jColorChooser0.getIgnoreRepaint());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      FavoritesView.DefaultFavoritesFactory favoritesView_DefaultFavoritesFactory0 = new FavoritesView.DefaultFavoritesFactory();
      URI uRI0 = MockURI.aFTPURI;
      URL uRL0 = MockURI.toURL(uRI0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HelpSet helpSet0 = new HelpSet(classLoader0);
      IndexView.parse(uRL0, helpSet0, (Locale) null, favoritesView_DefaultFavoritesFactory0);
      favoritesView_DefaultFavoritesFactory0.parsingEnded((DefaultMutableTreeNode) null);
      JTree jTree0 = new JTree((TreeNode) null);
      defaultTreeCellRenderer0.getTreeCellRendererComponent(jTree0, (Object) null, false, false, false, 200, true);
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      defaultTreeCellRenderer0.getTextNonSelectionColor();
      Color color0 = Color.lightGray;
      try { 
        Controller.showCommonJColorChooserDialog(defaultTreeCellRenderer0, "", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
