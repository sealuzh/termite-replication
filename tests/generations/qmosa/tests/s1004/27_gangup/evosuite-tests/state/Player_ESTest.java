/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 14:55:14 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 1;
      Player player0 = new Player(1, (String) null, (String) null, 1, 1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0293980059486403
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(14220, "", "", 14220);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player1 = new Player(14220, "vEq6nIuAqpz7{R\"ZBsd", (-18433));
      player0.id = 1;
      player0.add(player1);
      Player player2 = new Player((short)4919);
      player0.setConnected(true);
      player0.setX(0.0F);
      player0.setConnected(true);
      player0.head = (Party) player2;
      player0.setConnected(false);
      player2.setDead((long) 14220);
      player0.setConnected(false);
      player2.id = 14220;
      player0.isJoinOK(player2, true);
      player0.type();
      player2.pack();
      player2.pack();
      player2.gangStrength();
      player2.getX();
      System.setCurrentTimeMillis(5);
      player0.getX();
      assertFalse(player0.isConnected());
      
      System.setCurrentTimeMillis(1);
      int int0 = player1.gangStrength();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0, "mT+WA[V'#d", "'S& (", 5, 0);
      int int0 = player0.getStrength();
      assertEquals(5, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("mT+WA[V'#d", player0.getIP());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-21831));
      player0.setDead();
      Player player1 = new Player();
      boolean boolean0 = true;
      player0.type();
      player0.setConnected(false);
      int int0 = Packable.GAME_STATE;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-30);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1641), (byte)5);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1813);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.242894687106955
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player1.setDead((-335L));
      player0.setZ(1.0F);
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setConnected(true);
      player0.getTimeOfDeath();
      player1.reset(true);
      player1.head = (Party) player0;
      player1.id = (int) (short)4919;
      player1.getX();
      player0.gangStrength();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-70);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.type();
      player1.setDead((-335L), true);
      player1.getTimeOfDeath();
      player1.gangStrength();
      System.setCurrentTimeMillis(4919L);
      player1.getStrength();
      player1.setDead(4919L, true);
      player1.head = player0.boss;
      player0.setConnected(true);
      player1.getX();
      System.setCurrentTimeMillis(1);
      player0.pack();
      player0.getStrength();
      int int0 = player1.getStrength();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3900426200110347
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(14379L);
      Player player0 = new Player(Integer.MAX_VALUE, "", "", 2147339550, Integer.MAX_VALUE);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Party");
      Player player1 = new Player(5, "", "", 2485);
      player0.setJoinOK(player1, true);
      int int0 = player0.gangStrength();
      assertEquals(Integer.MAX_VALUE, int0);
      
      player1.isJoinOK(player0, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      player0.isJoinOK(player1, false);
      player1.isJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(2485, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals(Integer.MAX_VALUE, player0.getStrength());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2518217906291524
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(604, "Player", 604);
      Player player1 = new Player((-621));
      player1.boss = (Party) player0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.setZ(0.2F);
      player1.setX((short)4919);
      player0.setJoinOK(player1, false);
      player1.boss.remove(player0);
      player1.boss = (Party) player0;
      player1.getX();
      float float0 = Player.TOLERANCE;
      player1.toString();
      player0.isConnected();
      player0.isConnected();
      player0.isJoinOK(player1, false);
      player0.getMoney();
      player1.getZ();
      player1.getMoney();
      player1.type();
      Player player2 = new Player((short)4919, "JRTIA?($", "Player", 604);
      player2.setConnected(true);
      Player player3 = new Player();
      player1.gangStrength();
      assertEquals(0.2F, player1.getZ(), 0.01F);
      
      player0.gangStrength();
      int int0 = player3.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4195682404295034
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(382, "", "", (-414), (-10524));
      player0.setDead();
      player0.setMoney((-414));
      player0.setDead((long) (-10524));
      player0.pack();
      Player player1 = new Player((-3341));
      player1.gangStrength();
      player1.getMoney();
      player0.getX();
      float float0 = Player.TOLERANCE;
      player0.isConnected();
      player1.isConnected();
      player1.isJoinOK(player0, true);
      player1.getMoney();
      player1.getZ();
      player0.getMoney();
      player1.type();
      Player player2 = new Player((-10524), "", "", (-414));
      player0.setConnected(false);
      Player player3 = new Player();
      player1.gangStrength();
      System.setCurrentTimeMillis(382);
      player3.setDead();
      player0.gangStrength();
      assertEquals((-414.0F), player0.getMoney(), 0.01F);
      
      player1.type();
      float float1 = player3.getX();
      assertEquals(10.0F, float1, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5245483222621035
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-29183));
      player0.setDead();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.type();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.setConnected(false);
      player0.gangStrength();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.setDead();
      player0.setMoney(10.0F);
      player0.setDead((long) 5);
      player0.pack();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getMoney();
      player0.getX();
      player0.getMoney();
      System.setCurrentTimeMillis((short)4919);
      player0.toString();
      player0.isConnected();
      player1.isConnected();
      player0.isJoinOK(player1, true);
      player1.getZ();
      player0.getMoney();
      Player player2 = new Player((-29183), (String) null, (String) null, (short)4919, 0);
      player2.toString();
      player0.toString();
      player1.getMoney();
      System.setCurrentTimeMillis(679L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(663);
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0298322221883276
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      float float0 = Player.TOLERANCE;
      Player player0 = new Player(0, "", "", 0, 4919);
      player0.toString();
      player0.isConnected();
      player0.isConnected();
      Player player1 = new Player(4919, "&FX\"wlbQm0;G,", "", 4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      player1.getMoney();
      float float1 = player1.getZ();
      assertEquals(0.0F, float1, 0.01F);
      
      float float2 = player1.getMoney();
      assertEquals(0.0F, float2, 0.01F);
      
      player0.type();
      assertEquals(0, player0.getPictureId());
      assertEquals(4919, player0.getStrength());
      
      Player player2 = new Player(4919, "", "^", 1);
      player2.setConnected(true);
      Player player3 = new Player();
      player3.gangStrength();
      System.setCurrentTimeMillis(1630L);
      int int0 = player3.gangStrength();
      assertEquals(0, player3.getPictureId());
      assertEquals(1, int0);
      assertEquals("Player-1", player3.toString());
      assertEquals("0.0.0.0", player3.getIP());
      
      int int1 = player2.type();
      assertTrue(player2.isConnected());
      assertEquals(5, int1);
      assertEquals(1, player2.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals("", player2.getIP());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.476792189711597
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-29183));
      player0.setDead();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.setDead();
      player0.setConnected(false);
      player0.gangStrength();
      player1.setDead();
      player0.setMoney(10.0F);
      player0.setDead((long) (short)4919);
      player0.pack();
      player0.getMoney();
      player0.getX();
      float float0 = Player.TOLERANCE;
      player0.toString();
      player0.isConnected();
      player1.isConnected();
      player0.isJoinOK(player1, true);
      player1.getMoney();
      player1.getZ();
      player0.getMoney();
      player0.type();
      assertFalse(player0.isConnected());
      
      Player player2 = new Player(5, (String) null, "x*o|#m2^5US#Z/-oDQ", (-365));
      player2.setConnected(true);
      Player player3 = new Player();
      player3.gangStrength();
      System.setCurrentTimeMillis(4919L);
      player3.gangStrength();
      int int0 = player3.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1796), "z-`nQ M8/wzM.", "z-`nQ M8/wzM.", (-1796));
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-3071), "", "", 10, 10);
      float float0 = Player.TOLERANCE;
      Player player1 = new Player(2, "", "", (byte)5, (short)4919);
      player1.setX(0.0F);
      player1.isJoinOK(player0, false);
      player1.getName();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = (-1826);
      Player player0 = new Player((-1826), ":t{S_eK>a,(OD0HLY", "S@5%TXI)fj", (-1826));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(2050, "'S& (", "ym <V_u:~&Gc<9", 2050, (-973));
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(2050, player0.getPictureId());
      assertEquals("'S& (", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-973), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      party0.head = (Party) player0;
      player0.boss.add(party0.head);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.boss = party0;
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-10), "mT+WA[V'#d", "'S& (", (-10));
      Player player1 = new Player((-10), "mT+WA[V'#d", "'S& (", 5, (-10));
      player1.head = (Party) player0;
      assertEquals(1, player0.getStrength());
      assertEquals((-10), player0.getPictureId());
      
      int int0 = player1.getStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("mT+WA[V'#d", player1.getIP());
      assertEquals((-10), int0);
      assertEquals(5, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1, "><)Iww?v;", "><)Iww?v;", 1, 24);
      int int0 = Packable.GAME_EVENT;
      int int1 = player0.getStrength();
      assertEquals(1, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(24, int1);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-116);
      Player player0 = new Player((-116));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1859));
      player0.setX((-1859));
      player0.getX();
      System.setCurrentTimeMillis((-569L));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1.0F);
      player0.setDead((-1L));
      player0.pack();
      player0.id = 1;
      player0.setY((-1L));
      player0.getY();
      player0.reset(false);
      player0.setY(1);
      player0.setDead(2759L);
      player0.getY();
      player0.setDead((long) 1);
      player0.setMoney(0.0F);
      assertEquals(1.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(2, (String) null, 2);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.174317417693044
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-29183));
      player0.setDead();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setX((-29183));
      player0.type();
      player0.setConnected(false);
      player0.gangStrength();
      player1.setDead();
      player0.setMoney(10.0F);
      player0.setDead((long) 5);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-29183.0F), player0.getX(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-3071), "", "", 10, 10);
      player0.getY();
      Player player1 = new Player(2, "", (String) null, (-1815), (short)4919);
      player1.setX(0.0F);
      player1.isJoinOK(player0, false);
      player1.getName();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "z-`nQ M8/wzM.";
      int int0 = (-1796);
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      Enumeration<InputStream> enumeration0 = null;
      player0.unpack(byteArray0);
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-2129), "?3cmQ", (-2129));
      Player player1 = new Player((short)4919, "", " s", 1135, (-2129));
      player0.setDead();
      player1.setConnected(true);
      Player player2 = new Player(0, "?3cmQ", " s", (-782));
      player0.setMoney(1001.8F);
      player1.setJoinOK(player2, true);
      player0.setJoinOK(player1, false);
      player0.getZ();
      player0.getPictureId();
      player0.type();
      player0.getIP();
      player0.isDead();
      player0.toString();
      assertEquals(1001.8F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(382, "", "", 0, 382);
      player0.pack();
      player0.boss = null;
      player0.setMoney(382);
      player0.setX(0);
      player0.setZ(0.0F);
      player0.reset(true);
      player0.setMoney((-2555.436F));
      player0.getSubparty();
      player0.getIP();
      player0.setX(0.0F);
      player0.setX(382);
      player0.getX();
      player0.pack();
      player0.setX(0.0F);
      player0.isConnected();
      assertEquals((-2555.436F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setDead();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = (-1826);
      Player player0 = new Player((-1826), ":t{S_eK>a,(OD0HLY", "S@5%TJXI)fj}", (-1826));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte) (-98);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-321), (-1));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7873780055103263
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      System.setCurrentTimeMillis((-1201L));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(604, "Player", 604);
      Player player1 = new Player((-621));
      player1.boss = (Party) player0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.setZ(0.1F);
      player1.setX((-0.06823266F));
      player1.setJoinOK(player0, false);
      player1.boss.remove(player0);
      player1.gangStrength();
      player0.type();
      System.setCurrentTimeMillis(604);
      System.setCurrentTimeMillis((-1472L));
      int int0 = Packable.UNDEFINED;
      System.setCurrentTimeMillis((-1L));
      player0.remove(player1);
      player1.type();
      System.setCurrentTimeMillis(1L);
      player1.setY(0.0F);
      System.setCurrentTimeMillis((short)4919);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis((short)4919);
      player1.isDead();
      int int1 = Packable.GAME_STATE;
      int int2 = player1.gangStrength();
      assertEquals((-0.06823266F), player1.getX(), 0.01F);
      assertEquals(1, int2);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9447978161695705
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(0, ")iE9H|K7m9zQ\"E<!", "Player.unpack(): *** WARNING *** data is not of proper type!", 0, 4901);
      player0.setMoney(0.0F);
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(4901, int0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int1 = player0.type();
      assertEquals(5, int1);
      
      int int2 = player0.getPictureId();
      assertEquals(0, int2);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals(")iE9H|K7m9zQ\"E<!", player0.getIP());
      
      Player player1 = new Player((-547), "-'2L8#L*}]rt", "-'2L8#L*}]rt", 5, (-523));
      assertEquals(5, player1.getPictureId());
      
      Player player2 = new Player((-523));
      int int3 = player2.gangStrength();
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
      assertEquals(1, int3);
      assertEquals("Player-523", player2.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(862, "", "s_*MUXL9>S++1Gs", 1445, 862);
      int int0 = player0.getPictureId();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertEquals(862, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(1445, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.418954868930832
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(6470);
      player0.setZ(6470);
      player0.gangStrength();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player((short)4919, "Q>8TW$SiMk|_e3_", "Q>8TW$SiMk|_e3_", 6470, 6470);
      player0.next = (Party) player1;
      Player player2 = new Player();
      player0.setJoinOK(player2, true);
      player2.pack();
      Player player3 = (Player)player0.next;
      player2.setDead((long) (short)4919);
      player0.prev = (Party) player3;
      player0.getTimeOfDeath();
      player0.setX(10.0F);
      player0.type();
      player2.boss = player0.prev;
      player2.pack();
      player0.setY(0.1F);
      player1.isJoinOK(player2, true);
      player0.prev.boss = player2.boss;
      Player player4 = new Player((-21831), "Q>8TW$SiMk|_e3_", "", (short)4919);
      player2.isJoinOK(player4, false);
      player0.prev.id = 1;
      player0.type();
      player2.type();
      player0.getX();
      player2.getTimeOfDeath();
      player1.getX();
      player1.isJoinOK(player0, false);
      player2.isJoinOK(player3, false);
      assertTrue(player2.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0, "Zwfc%", "5NXNLSOL<{", 0);
      int int0 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("Zwfc%", player0.getIP());
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-217.92F));
      player0.gangStrength();
      player0.getY();
      Player player1 = new Player((-139), "state.Party", "state.Party", (short)4919, 1);
      player1.setX((-2887.6213F));
      player1.setDead(1L);
      player0.getZ();
      player1.getName();
      player0.toString();
      assertEquals((-217.92F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = (-116);
      Player player0 = new Player((-116));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = (-1826);
      Player player0 = new Player((-1), ":t{S_eKa,(OD0HLY", "S@5%TJXI)fj}", (-1826));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 1);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-1826);
      Player player0 = new Player((-1826), ":t{S_eK>a,(OD0HLY", "S@5%TXI)fj", (-1826));
      player0.id = (-1826);
      player0.setY((-869.2F));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, "mT+WA[V'#d", "'S& (", 0, 0);
      Party party0 = new Party();
      player0.remove(party0);
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertEquals("mT+WA[V'#d", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(1, "", "Pw=hbs9r;jC@J", 2259, (-21494));
      int int0 = player0.gangStrength();
      assertEquals(2259, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-21494), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player((-1), ":t{Sz_eK>a,(OD0HLY", "S@5%TJXI)fj}", (-1826));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-2129), "?3cmQ", (-2129));
      Player player1 = new Player((short)4919, "?3cmQ", 262);
      player0.setDead();
      Player player2 = new Player(0, "?3cmQ", "?3cmQ", (-782));
      player0.setMoney(1001.8F);
      int int0 = Packable.UNDEFINED;
      player0.getZ();
      player0.getPictureId();
      player0.type();
      player0.id = (int) (short)4919;
      player0.getIP();
      player1.setZ((short)4919);
      player0.toString();
      int int1 = Packable.GAME_STATE;
      player1.getX();
      player2.gangStrength();
      int int2 = player0.type();
      assertEquals(1001.8F, player0.getMoney(), 0.01F);
      assertEquals(5, int2);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-1826), ":t{S_eK>a,(OD0HLY", "S@5%TXI)fj", (-1826));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      Party party0 = new Party();
      assertEquals("", party0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(2835, (String) null, "_T5e^XS{", 2835, (-239));
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2835, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-239), player0.getStrength());
      assertNull(string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":t{S_eK>a,(OD0HLY");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":t{S_eK>a,(OD0HLY");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = Packable.GAME_EVENT;
      Player player0 = new Player((-1), ":t{S_eK>a,(OD0HLY", "S@5%TJXI)fj}", (-1826));
      player0.reset(false);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-1826), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(1, "><)Iww?v;", "><)Iww?v;", 1, 24);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-16);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      int int0 = Packable.GAME_EVENT;
      assertEquals(3, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-14), ":t{S_eKa,(OD0HLY", "S@5%TJXI)fj}", (-1826));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 1);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-355), "module.ModuleBrowserDialog$ModuleFilter", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-355), 1300);
      player0.pack();
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(1300, player0.getStrength());
      assertEquals((-355), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-217.92F));
      player0.getY();
      Player player1 = new Player((short)4919, "state.Party", "state.Party", (short)4919, (short)4919);
      player1.setX((-2887.6213F));
      player0.setDead((long) (short)4919);
      player1.setDead(1L);
      player0.isJoinOK(player1, false);
      float float0 = player1.getX();
      assertEquals((-2887.6213F), float0, 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = (-1826);
      int int1 = (-1);
      Player player0 = new Player((-1), ":t{S_eK>a,(OD0HLY", "S@5%TJXI)fj}", (-1826));
      player0.setDead((long) (-1), true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }
}
