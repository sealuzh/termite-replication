/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 15:35:59 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.PriorityBlockingQueue;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.services.io.ArrayInputStream;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.sql.execute.NoPutResultSet;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.BasicDatabase;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.GenericLanguageFactory;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.AlterTableNode;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.apache.derby.impl.store.raw.xact.TransactionTable;
import org.databene.commons.collection.OrderedNameMap;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBConnection;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "U'Pg/**ein?d1|KI$";
      // Undeclared exception!
      SQLUtil.isDML("U'Pg/**ein?d1|KI$");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6200155105291458
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      SQLUtil.normalize(" - (", true);
      System.setCurrentTimeMillis(0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, "inner", "inner");
      SQLUtil.normalize(" - (", true);
      stringBuilder0.append("- (");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("- (", stringBuilder0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1475760096165346
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DBCatalog dBCatalog0 = new DBCatalog("create tablerenametriggernewtransit`onrous");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dBCatalog0.getTable("KjbQHVqbK@R#_Etw0b", false);
      DBDataType dBDataType0 = DBDataType.getInstance((-2100), "KjbQHVqbK@R#_Etw0b");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("-g x'cT:tGvK3#v", (DBTable) null, dBDataType0);
      constraintDescriptorList0.add((Object) defaultDBColumn0);
      Object object0 = new Object();
      Object object1 = new Object();
      SQLUtil.isDDL("create tablerenametriggernewtransit`onrous");
      SQLUtil.isProcedureCall("create tablerenametriggernewtransit`onrous");
      dBCatalog0.getSchema("u=*7{hmO&");
      SQLUtil.typeAndName((DBObject) null);
      SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.383461415329958
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("d5Wlw5t$F");
      Integer integer0 = RawTransaction.ABORT;
      DBDataType dBDataType0 = DBDataType.getInstance(514, "k/:=2t{ItQfnN");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d5Wlw5t$F", defaultDBTable0, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "k/:=2t{ItQfnN";
      Object object0 = new Object();
      File file0 = FileUtil.canonicalFile("\ngYj_8FNCv:");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("k/:=2t{ItQfnN");
      mockPrintWriter0.println((long) 514);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(file0);
      mockPrintWriter1.print('M');
      Locale locale0 = Locale.JAPAN;
      mockPrintWriter0.println('z');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockPrintWriter0.print((double) 514);
      mockPrintWriter2.printf("unknown BLOB value repr", (Object[]) dBColumnArray0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("k/:=2t{ItQfnN");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("\ngYj_8FNCv:", stringBuilder0);
      assertEquals("\ngYj_8FNCv:", stringBuilder0.toString());
      
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(";>CubmFcW>", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, k/:=2t{ItQfnN, , , , , ) REFERENCES d5Wlw5t$F(, k/:=2t{ItQfnN, , , , , )", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.690978935491759
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      defaultDBTable0.equals("B,Q+yzWof[oo Iwh[");
      stringArray0[1] = stringArray0[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(stringArray0[0], false, dBUniqueConstraint0);
      dBUniqueIndex0.isIdentical(defaultDBTable0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, (NameSpec) null);
      assertEquals("UNIQUE (, )", string0);
      
      dBUniqueConstraint0.setName("B,Q+yzWof[oo Iwh[");
      dBUniqueConstraint0.isIdentical(dBUniqueIndex0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[1], true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(4851);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, (NameSpec) null);
      assertEquals("PRIMARY KEY (, )", string1);
      
      String string2 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND null = null", string2);
      
      boolean boolean0 = SQLUtil.isProcedureCall("create table'xsdyu{0lqala[hd_=");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.550438436883685
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = "m\"uJgz7";
      SQLUtil.isQuery("m\"uJgz7");
      SQLUtil.join("S=|6w?bt_($C<#", "m\"uJgz7", stringArray0, "ih}eAR5 bn0CdN", "S=|6w?bt_($C<#", stringArray0);
      // Undeclared exception!
      SQLUtil.mutatesStructure("Vo?v$RV3p/*![");
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.099725220583486
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "rbZV=uq@GI%s~55";
      DBSchema dBSchema0 = new DBSchema((String) null);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema1 = new DBSchema("z}i>", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ih}eAR5 bn0CdN", dBSchema1);
      DBDataType dBDataType0 = DBDataType.getInstance((-875), "eGT");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.COMMIT;
      defaultDBTable0.equals(dBDataType0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter indexcreate materialized view", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.setDefaultValue("alter indexcreate materialized view");
      Integer.divideUnsigned((-429), (-875));
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("alter indexcreate materialized view EGT(0) DEFAULT alter indexcreate materialized view NULL", string0);
      
      Integer.toUnsignedString((-875));
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("Y2'yz _UhRl:");
      Integer integer2 = new Integer((-875));
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("CM`7", defaultDBTable1, dBDataType0, integer1, integer2);
      System.setCurrentTimeMillis((-875));
      String string1 = SQLUtil.normalize("5bm~{fl", false);
      assertEquals("5bm ~ { fl", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.568413258053965
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.equals("B,Q+yzWof[oo Iwh[");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      stringArray0[1] = "rbZV=uq@GI%s~55";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      defaultDBTable0.getReferrers();
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("rbZV=uq@GI%s~55", true, dBUniqueConstraint0);
      dBUniqueIndex0.isIdentical(dBUniqueConstraint0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.addIndex(dBUniqueIndex0);
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, (NameSpec) null);
      assertEquals("UNIQUE (B,Q+yzWof[oo Iwh[, rbZV=uq@GI%s~55)", string0);
      
      dBUniqueConstraint0.isIdentical(defaultDBTable1);
      dBUniqueConstraint0.setName("7S+B>pn");
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rbZV=uq@GI%s~55", defaultDBTable1, 34, "@8{>gA2^wJ=`Ej2UrX");
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable1, (String) null, true, "rbZV=uq@GI%s~55");
      defaultDBColumn0.setNotNullConstraint(dBNotNullConstraint0);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("rbZV=uq@GI%s~55 @8{>GA2^WJ=`EJ2URX NOT NULL", string1);
      
      String string2 = SQLUtil.substituteMarkers("B,Q+yzWof[oo Iwh[", "i", "@8{>gA2^wJ=`Ej2UrX");
      assertEquals("B,Q+yzWof[oo Iwh[", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "U'Pg/**ein?d1|KI$";
      // Undeclared exception!
      SQLUtil.isQuery("U'Pg/**ein?d1|KI$");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Object object0 = new Object();
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DBCatalog dBCatalog0 = new DBCatalog("create tablerenametriggernewtransit`onrous");
      dBCatalog0.getTable("rename", false);
      DBDataType dBDataType0 = DBDataType.getInstance((-2100), "rename");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("-g x'cT:tGvK3#v", (DBTable) null, dBDataType0, integer0);
      constraintDescriptorList0.add((Object) defaultDBColumn0);
      constraintDescriptorList0.stream();
      constraintDescriptorList0.add((Object) "create tablerenametriggernewtransit`onrous");
      Object object0 = new Object();
      Object object1 = new Object();
      constraintDescriptorList0.add((Object) null);
      constraintDescriptorList0.add((Object) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8256506464948656
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CL!B");
      SQLUtil.mutatesDataOrStructure("alter matPrialize view");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("9^H=n");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("9^H=n", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      mockPrintWriter0.print((-79));
      PrintWriter printWriter0 = mockPrintWriter0.append('T');
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      assertSame(printWriter0, mockPrintWriter0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("d5Wlw5t$F");
      Integer integer0 = RawTransaction.ABORT;
      DBDataType dBDataType0 = DBDataType.getInstance(514, "k/:=2t{ItQfnN");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d5Wlw5t$F", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "k/:=2t{ItQfnN";
      stringArray0[1] = "k/:=2t{ItQfnN";
      stringArray0[2] = "execcreate table";
      stringArray0[3] = "k/:=2t{ItQfnN";
      stringArray0[4] = "execcreate table";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "execcreate table", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (k/:=2t{ItQfnN, k/:=2t{ItQfnN, execcreate table, k/:=2t{ItQfnN, execcreate table)", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      defaultDBTable0.getReferrers();
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("B,Q+yzWof[oo Iwh[", false, dBUniqueConstraint0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      Integer.toUnsignedLong((-1727752756));
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.renderValue(defaultDBTable0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      assertEquals("table", defaultDBTable1.getObjectType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3015574568421027
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.isProcedureCall("delete");
      DBDataType.getInstance((-1879048189), "y|%");
      SQLUtil.isDDL("HSQLDB");
      SQLUtil.removeComments("d+i<Wd");
      SQLUtil.mutatesStructure("\"/v6ix xHWC@");
      SQLUtil.isQuery("-6j8,#S~&-0X");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockFile mockFile0 = new MockFile("create tablerenametrxgernewtrnsit`onrouo", "create materialized viewdh)");
      MockFile mockFile1 = new MockFile(mockFile0, "Y\u0004X");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Locale locale0 = Locale.KOREAN;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "vj+88v:I{[Q<Mi";
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) "create tablerenametrxgernewtrnsit`onrouo";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "vj+88v:I{[Q<Mi", objectArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4472483959455777
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.COMMIT;
      Object object0 = new Object();
      SQLUtil.isDDL("updateleft");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select into");
      SQLUtil.mutatesDataOrStructure("op_dummy received");
      SQLUtil.isQuery("select into");
      SQLUtil.isDML("UNIQUE ");
      String string0 = SQLUtil.removeComments("e] {dpb*{A#rQe@i;_");
      assertEquals("e] {dpb*{A#rQe@i;_", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.717020786717215
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      boolean boolean0 = SQLUtil.isDDL("org.postgresql.jdbc2.AbstractJdbc2ResultSet");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.postgresql.jdbc2.AbstractJdbc2ResultSet");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean1);
      assertFalse(boolean1);
      
      boolean boolean2 = SQLUtil.isDML("select");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.divideUnsigned((-42), (-65));
      Integer.toUnsignedLong(0);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.codePoints();
      System.setCurrentTimeMillis((-177L));
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ypC`>0JSf}`BC", true, "inner", "inner");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      dBCheckConstraint0.toString();
      stringBuilder0.append("inner");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("innerCONSTRAINT ypC`>0JSf}`BC ", stringBuilder0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2488215410938253
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, "");
      DBSchema dBSchema0 = new DBSchema("alter materialized view");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      dBSchema0.removeTable(defaultDBTable0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("MAX_OPERATION_MEMORY", dBSchema0);
      Integer integer1 = RawTransaction.COMMIT;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SQLUtil.isProcedureCall("create table");
      FromVTI fromVTI0 = new FromVTI();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "alter materialized view";
      stringArray0[1] = "";
      stringArray0[2] = "";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("a;u nL@8xi", false, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      defaultDBTable1.addForeignKey(dBForeignKeyConstraint0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, " X U'z(spE5X", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec1);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "+TLa6n,|>iRqc";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("+TLa6n,|>iRqc");
      int int0 = 8;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(8);
      SQLUtil.isQuery("selectivity from statistics");
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      // Undeclared exception!
      try { 
        slaveDatabase0.setupConnection((ContextManager) null, "+TLa6n,|>iRqc", "`i{I", "`i{I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.db.BasicDatabase", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1950865325403197
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "+TLa6n,|>iRqc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+TLa6n,|>iRqc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "renamenreg<zv7&0&x");
      SQLUtil.mutatesDataOrStructure("selectnreg<zv7&0&x");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "from");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("alter materialized view");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized view", dBSchema0);
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "<mxT&IToNT8~*~E+'k", true, stringArray0);
      defaultDBTable0.getReferrers();
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("NS", defaultDBTable0, 1, "UNIQUE ()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBSchema dBSchema0 = new DBSchema("alter materialized view");
      jdbcClob jdbcClob0 = new jdbcClob(" NOT NULL");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      SQLUtil.renderNumber(streamTokenizer0);
      DBCatalog dBCatalog0 = new DBCatalog("- 0");
      TableContainer tableContainer0 = new TableContainer((String) null);
      dBCatalog0.getSchemas();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("FH{>'-bdepZ/2'qx");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "FH{>'-bdepZ/2'qx";
      stringArray0[1] = "alter materialized view";
      stringArray0[2] = " NOT NULL";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.constraintName(dBUniqueConstraint0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-4), "$M5#]v5'D{");
      StringBuilder stringBuilder1 = new StringBuilder();
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7753724947312084
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Object object0 = new Object();
      boolean boolean0 = SQLUtil.isDML("execute");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isDDL("execute");
      boolean boolean2 = SQLUtil.isProcedureCall("execute");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1742117415907836
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, "");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " NOT NULL", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("MAX_OPERATION_MEMORY", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      SQLUtil.normalize("alter materialized view", true);
      SQLUtil.mutatesStructure("&");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view6mc+", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      SQLUtil.renderValue("MAX_OPERATION_MEMORY");
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      SQLUtil.ownerDotComponent(defaultDBTable0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("(2,1)CONSTRAINT \" NOT NULL\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      DBSchema dBSchema0 = new DBSchema("IRWWE5Vs8,9A|)");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UNIQUE ", dBSchema0);
      Integer integer0 = new Integer(5413);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      DBDataType dBDataType0 = DBDataType.getInstance(44, "G%m[1JM");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = new Integer(44);
      Integer integer3 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("org.databene.jdbacl.SQLUtil", defaultDBTable0, dBDataType0, integer3, (Integer) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      Integer.compare(44, 44);
      defaultDBColumn0.addUkConstraint((DBUniqueConstraint) null);
      defaultDBColumn0.setTable(defaultDBTable0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      AlterTableNode alterTableNode0 = new AlterTableNode();
      AlterTableNode alterTableNode1 = new AlterTableNode();
      AlterTableNode alterTableNode2 = new AlterTableNode();
      TableDescriptor tableDescriptor0 = alterTableNode0.baseTable;
      TransactionTable transactionTable0 = null;
      try {
        transactionTable0 = new TransactionTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.TransactionTable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "MW|EHVL0K:", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TP.Id~jd>A-;W", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("create tableu.u`%t", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(stringArray0[0], true, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      DBSchema dBSchema1 = new DBSchema("G#=&XQ8%shDx:\"", (DBCatalog) null);
      dBSchema1.getTable("G#=&XQ8%shDx:\"");
      dBForeignKeyConstraint0.setTable((DBTable) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT MW|EHVL0K: PRIMARY KEY (, )", string0);
      
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT MW|EHVL0K: ", string1);
      
      String string2 = SQLUtil.typeAndName(dBForeignKeyConstraint0);
      assertEquals("foreign key constraint constraint", string2);
      assertNotNull(string2);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9295986650375077
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, "");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5212);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      mockPrintWriter0.print((Object) delayQueue0);
      Locale locale0 = Locale.KOREA;
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintWriter0.printf(locale0, " on ", objectArray0);
      mockPrintWriter0.printf("", objectArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "&", false, stringArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" on ", true, dBUniqueConstraint0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = defaultDBTable0.getPrimaryKeyConstraint();
      assertNull(dBPrimaryKeyConstraint0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SQLUtil.normalize("'4e^!M{j", true);
      TransactionTable transactionTable0 = null;
      try {
        transactionTable0 = new TransactionTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.TransactionTable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "KBPTo`5yS&=?";
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("KBPTo`5yS&=?", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, "");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(8);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      charArrayWriter0.writeTo(mockPrintWriter0);
      Locale locale0 = Locale.KOREA;
      Object[] objectArray0 = new Object[13];
      mockPrintWriter0.println(',');
      Object object0 = new Object();
      mockPrintWriter0.println((long) 8);
      mockPrintWriter0.checkError();
      mockPrintWriter0.printf(locale0, " on ", objectArray0);
      charArrayWriter0.flush();
      mockPrintWriter0.printf("", objectArray0);
      mockPrintWriter0.append((CharSequence) stringBuilder0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("$VK_},xbj~");
      PrintWriter printWriter0 = mockPrintWriter1.format(locale0, "$VK_},xbj~", objectArray0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter0, false);
      mockPrintWriter2.print(8L);
      mockPrintWriter0.println("R\"v9?lm2/'K$tXtU<");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals(",\n8\n on R\"v9?lm2/'K$tXtU<\ncreate table  (\n)", charArrayWriter0.toString());
      assertEquals(43, charArrayWriter0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "deleter2";
      stringArray0[1] = "deleter2";
      stringArray0[2] = "deleter2";
      stringArray0[3] = "deleter2";
      stringArray0[4] = "deleter2";
      stringArray0[5] = "deleter2";
      String[] stringArray1 = new String[4];
      stringArray1[0] = null;
      stringArray1[1] = ",";
      stringArray1[2] = null;
      stringArray1[3] = "deleter2";
      // Undeclared exception!
      try { 
        SQLUtil.join("deleter2", "deleter2", stringArray0, (String) null, "truncate", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3447004957129813
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.codePoints();
      System.setCurrentTimeMillis((-177L));
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ypC`>0JSf}`BC", false, "org.apache.derby.catalog.ReferencedColumns", "inner");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec1);
      stringBuilder1.append("inner");
      stringBuilder1.append(55.031605);
      stringBuilder0.reverse();
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder1, nameSpec0);
      assertEquals("CONSTRAINT ypC`>0JSf}`BC inner55.031605", stringBuilder1.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unknown constraint type: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Unknown constraint type: ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Unknown constraint type: ";
      stringArray0[1] = "Unknown constraint type: ";
      stringArray0[2] = "Unknown constraint type: ";
      stringArray0[3] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("delete", false, dBUniqueConstraint0);
      dBUniqueConstraint0.toString();
      dBUniqueIndex0.isIdentical(defaultDBTable0);
      dBUniqueIndex0.equals("Unknown constraint type: ");
      dBUniqueIndex0.isIdentical(dBUniqueConstraint0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      dBUniqueConstraint0.setName("rename'ih_(");
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("h", defaultDBTable0, 1, "(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("REUERENdES ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(16380);
      streamTokenizer0.commentChar(34);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "3(iV4Y";
      stringArray0[1] = null;
      stringArray0[2] = "call(_u0*tw@n$=ew, alter index, org.h2.table.tablelink, org.apache.derby.iapi.store.raw.log.logfactory, compression, l}pfhqzjt1n7t<}w)";
      streamTokenizer0.pushBack();
      stringArray0[3] = "3(iV4Y";
      stringArray0[4] = null;
      stringArray0[5] = "call(_u0*tw@n$=ew, alter index, org.h2.table.tablelink, org.apache.derby.iapi.store.raw.log.logfactory, compression, l}pfhqzjt1n7t<}w)";
      stringArray0[6] = "REUERENdES ";
      stringArray0[7] = null;
      stringArray0[8] = "3(iV4Y";
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getLanguageConnectionContext();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("create tableselect");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      streamTokenizer0.commentChar((-441558276));
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.676428115487582
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?\"$%3YS";
      stringArray0[1] = "fn";
      stringArray0[2] = "fn";
      stringArray0[3] = "fn";
      stringArray0[4] = "fn";
      String string0 = SQLUtil.renderColumnListWithTableName("fn", stringArray0);
      assertEquals("fn.?\"$%3YS, fn.fn, fn.fn, fn.fn, fn.fn", string0);
      
      SQLUtil.substituteMarkers("", "fn", "fn");
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(?\"$%3YS, fn, fn, fn, fn)", string1);
      
      String string2 = SQLUtil.substituteMarkers("?\"$%3YS", "Blob read problem: ", (Object) null);
      assertEquals("?\"$%3YS", string2);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = SQLUtil.renderValue(object0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "create unique index");
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.normalize("7zOZZa`Ej@(#!-Yx}~K", false);
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      // Undeclared exception!
      try { 
        slaveDatabase0.unfreeze();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.db.BasicDatabase", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unknown constraint type: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("Unknown constraint type: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      Object[] objectArray0 = delayQueue0.toArray();
      delayQueue0.poll();
      mockPrintWriter0.print((Object) delayQueue0);
      Locale locale0 = Locale.KOREA;
      Object object0 = new Object();
      mockPrintWriter0.println((-1568L));
      mockPrintWriter1.printf(locale0, "constraint", objectArray0);
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) null;
      objectArray1[1] = (Object) "Unknown constraint type: ";
      objectArray1[2] = (Object) null;
      objectArray1[3] = (Object) mockPrintWriter1;
      mockPrintWriter1.printf(" on ", objectArray1);
      mockPrintWriter0.append((CharSequence) "Unknown constraint type: ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Object[] objectArray0 = new Object[16];
      Object object0 = new Object();
      objectArray0[0] = (Object) "j";
      String string0 = "sele`tivity from statistics";
      String string1 = "C]0.";
      // Undeclared exception!
      try { 
        SQLUtil.join("C]0.", "C]0.", (String[]) null, "sele`tivity from statistics", "j", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 's';
      charArray0[1] = 'h';
      charArray0[2] = 'i';
      charArray0[3] = 'U';
      charArray0[2] = '}';
      charArray0[5] = 's';
      charArray0[6] = 'U';
      charArray0[7] = '{';
      charArray0[8] = '{';
      CharBuffer charBuffer0 = CharBuffer.allocate('h');
      charBuffer0.codePoints();
      charBuffer0.slice();
      charBuffer0.put("NCL2$OB");
      CharBuffer.allocate(126);
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Locale.getISOLanguages();
      locale0.clone();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("execfaild predi(ate {");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: execfaild predi(ate {
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      defaultDBTable0.equals("B,Q+yzWof[oo Iwh[");
      stringArray0[1] = stringArray0[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(stringArray0[0], false, dBUniqueConstraint0);
      dBUniqueIndex0.isIdentical(defaultDBTable0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      SQLUtil.ukSpec(dBUniqueConstraint0, (NameSpec) null);
      dBUniqueConstraint0.setName("B,Q+yzWof[oo Iwh[");
      dBUniqueConstraint0.isIdentical(dBUniqueIndex0);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("Executing ", defaultDBTable0, (-1156935999), "UNIQUE (, )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, "");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5212);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      charArrayWriter0.writeTo(mockPrintWriter0);
      Locale locale0 = Locale.KOREA;
      Object[] objectArray0 = new Object[13];
      Object object0 = new Object();
      mockPrintWriter0.println((long) 8);
      mockPrintWriter0.checkError();
      objectArray0[0] = object0;
      mockPrintWriter0.printf(locale0, "", objectArray0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("", true, defaultDBTable0, "DES/CBC/NoPadding");
      dBCheckConstraint0.toString();
      stringBuilder0.append("CONSTRAINT CHECK DES/CBC/NoPadding");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT CHECK DES/CBC/NoPadding", stringBuilder0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "p:rvH8";
      String[] stringArray0 = null;
      String[] stringArray1 = new String[4];
      stringArray1[0] = "p:rvH8";
      stringArray1[1] = "MD5";
      stringArray1[2] = "h),9K";
      stringArray1[3] = "h),9K";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("p:rvH8", (String[]) null, "h),9K", "%kz^npN9ls:&b!X", stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog((String) null);
      DBSchema dBSchema0 = new DBSchema("wnr6H`Qp2(", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("j{", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("cr", dBPackage0);
      String string0 = SQLUtil.ownerDotComponent(dBProcedure0);
      assertEquals("j{.cr", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.440981419536016
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ONAp,9-}5BYODo8&#E");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5212);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      mockPrintWriter0.print((Object) delayQueue0);
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[10];
      Object object0 = new Object();
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) null;
      objectArray1[1] = (Object) mockPrintWriter0;
      objectArray1[2] = (Object) mockPrintWriter0;
      objectArray1[3] = (Object) mockPrintWriter0;
      objectArray0[0] = object0;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(" on ");
      String string0 = "$VK_},xbj~";
      mockPrintWriter0.printf("$VK_},xbj~", objectArray0);
      mockPrintWriter0.printf("$VK_},xbj~", objectArray0);
      mockPrintWriter0.append((CharSequence) "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = " on ";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string1 = "CREATE SCHEMA";
      Object[] objectArray2 = new Object[1];
      objectArray2[0] = (Object) "";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "kZ";
      stringArray0[1] = "alter sessionreferences";
      stringArray0[2] = "uArLKa*Srlk2H<Ub@";
      stringArray0[3] = "s?=ZK}qHJm,#q!i{z:";
      stringArray0[4] = "o";
      StringReader stringReader0 = new StringReader("delete");
      stringReader0.close();
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9714549503478573
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unknown constraint type: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CL!B");
      SQLUtil.mutatesStructure("executeorg.apache.derby.impl.sql.compile.halfouterjoinnode");
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("executecreate tablerenametriggernewtransit`onrous", (DBTable) null, 44, "L004");
      defaultDBColumn0.setType((DBDataType) null);
      StringBuilder stringBuilder0 = new StringBuilder("}=u+dd_X_-U");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "NCL2$OB";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NCL2$OB");
      SQLUtil.normalize("5Bm~{FlIQ`>i4G*^", true);
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      SlaveDatabase slaveDatabase1 = new SlaveDatabase();
      Locale locale0 = Locale.GERMANY;
      SlaveDatabase slaveDatabase2 = new SlaveDatabase();
      SlaveDatabase slaveDatabase3 = new SlaveDatabase();
      // Undeclared exception!
      try { 
        slaveDatabase3.getJarFile(",g>pMy1-/Wq%[N4 ", "5Bm ~ { FlIQ ` > i4G * ^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.db.BasicDatabase", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\";<PKf!vGvx1\"}_/gca");
      jdbcClob jdbcClob0 = new jdbcClob("\";<PKf!vGvx1\"}_/gca");
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.ITALY;
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("e@q(c+f1yr/]&/Nc5", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("truncate");
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*HY-Kd*F\"}fyw.l 1R");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.3190095981344987
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("truncate");
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "alter indexd5wlw5t$f, d5wlw5t$f, d5wlw5t$f, d5wlw5t$f, d5wlw5t$f");
      SQLUtil.mutatesDataOrStructure("truncate");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"nto");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.002968262595361
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, ",Y^YU Vh*uvIZN}");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(8);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      delayQueue1.poll();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Unknown table detail token type", false, (String[]) null);
      mockPrintWriter0.print((Object) dBPrimaryKeyConstraint0);
      Locale locale0 = Locale.KOREA;
      Object object0 = new Object();
      mockPrintWriter0.println((long) 5212);
      mockPrintWriter0.printf(locale0, "($V6LR_.4xv*8", (Object[]) null);
      mockPrintWriter0.printf("", (Object[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertEquals(157, charArrayWriter0.size());
      assertEquals("CONSTRAINT \"Unknown table detail token type\" PRIMARY KEY ()5212\n($V6LR_.4xv*8create table  (,\n\tCONSTRAINT \"Unknown table detail token type\" PRIMARY KEY ()\n)", charArrayWriter0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBSchema dBSchema0 = new DBSchema("alter materialized view");
      BasicUUID basicUUID0 = new BasicUUID(" NOT NULL");
      BTreeController bTreeController0 = new BTreeController();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      SlaveDatabase slaveDatabase1 = new SlaveDatabase();
      BasicDatabase basicDatabase0 = new BasicDatabase();
      basicDatabase0.getId();
      Integer integer0 = RawTransaction.COMMIT;
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      BasicUUID basicUUID1 = new BasicUUID(9, 9, 90119);
      boolean boolean0 = SQLUtil.isDDL("alter materialized view");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "create unique index";
      stringArray0[1] = "create unique index";
      stringArray0[2] = "create unique index";
      stringArray0[3] = "create unique index";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create unique index", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create unique index", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1114, "create unique index");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create unique index", dBTable0, dBDataType0, integer0, integer1);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.mutatesStructure("create materialized viewinsertdefault");
      ArrayInputStream arrayInputStream0 = new ArrayInputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      AlterTableNode alterTableNode0 = new AlterTableNode();
      AlterTableNode alterTableNode1 = new AlterTableNode();
      alterTableNode1.setNodeType(2);
      TableDescriptor tableDescriptor0 = alterTableNode1.baseTable;
      VersionNumber versionNumber0 = VersionNumber.valueOf("deleteorg.postgresql.jdbc2.abstractjdbc2resultset");
      assertNotNull(versionNumber0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      SQLUtil.mutatesDataOrStructure("drop materialized viewfailed predicate: {");
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("W");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.580249873688779
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("d5Wlw5t$F");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      int int0 = (-3754);
      DBDataType dBDataType0 = DBDataType.getInstance((-3754), "k/:=2t{ItQfnN");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d5Wlw5t$F", defaultDBTable0, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "k/:=2t{ItQfnN";
      stringArray0[1] = "k/:=2t{ItQfnN";
      SQLUtil.normalize("k/:=2t{ItQfnN", false);
      SQLUtil.renderColumnListWithTableName("k/:=2t{ItQfnN", stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "k/:=2t{ItQfnN", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4001443355569787
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.codePoints();
      System.setCurrentTimeMillis((-177L));
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ypC`>0JSf}`BC", true, "inner", "inner");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      stringBuilder0.append("inner");
      stringBuilder0.append(55.031605);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("inner55.031605CONSTRAINT ypC`>0JSf}`BC CONSTRAINT ypC`>0JSf}`BC ", stringBuilder0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.3190095981344987
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Boolean.valueOf((String) null);
      SQLUtil.mutatesDataOrStructure("calltiigene");
      BasicUUID basicUUID0 = new BasicUUID("calltiigene");
      BTreeController bTreeController0 = new BTreeController();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      SlaveDatabase slaveDatabase1 = new SlaveDatabase();
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1273525491449161
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob(">4aSj{Z+.VkhTA%ia");
      Reader reader0 = jdbcClob0.getCharacterStream();
      Reader reader1 = jdbcClob0.getCharacterStream();
      reader1.read();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">4aSj{Z+.VkhTA%ia";
      stringArray0[1] = "BLOB";
      stringArray0[2] = "wM>?;*so;Xoji:";
      stringArray0[3] = ">4aSj{Z+.VkhTA%ia";
      stringArray0[4] = "629f8094-0116-d8f9-5f97-ffffe275b270";
      stringArray0[5] = "BLOB";
      stringArray0[6] = "629f8094-0116-d8f9-5f97-ffffe275b270";
      stringArray0[7] = ">4aSj{Z+.VkhTA%ia";
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) reader0;
      objectArray0[1] = (Object) ">4aSj{Z+.VkhTA%ia";
      objectArray0[2] = (Object) ">4aSj{Z+.VkhTA%ia";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("V,I>Hqle", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.016496301416993
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      ArrayInputStream arrayInputStream0 = new ArrayInputStream();
      defaultDBTable0.equals("B,Q+yzWof[oo Iwh[");
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">4aSj{Z+.VkhTA%ia";
      stringArray0[1] = ">4aSj{Z+.VkhTA%ia";
      stringArray0[2] = ">4aSj{Z+.VkhTA%ia";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", false, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(">4aSj{Z+.VkhTA%ia", false, dBUniqueConstraint0);
      dBUniqueConstraint0.toString();
      dBUniqueIndex0.isIdentical(dBUniqueConstraint0);
      String[] stringArray1 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(">4aSj{Z+.VkhTA%ia", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      dBUniqueIndex0.equals(dBForeignKeyConstraint0);
      dBUniqueIndex0.isIdentical(dBUniqueConstraint0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex("CONSTRAINT \"B,Q+yzWof[oo Iwh[\" UNIQUE (>4aSj{Z+.VkhTA%ia, >4aSj{Z+.VkhTA%ia, >4aSj{Z+.VkhTA%ia)", false, dBUniqueConstraint0);
      defaultDBTable0.addIndex(dBUniqueIndex1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      dBUniqueConstraint0.setName("G(Z+qf/mJBuJ#o");
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable0, "XQnH>l", false, stringArray1);
      dBUniqueConstraint1.isIdentical(dBUniqueIndex0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("UNIQUE (>4aSj{Z+.VkhTA%ia, >4aSj{Z+.VkhTA%ia, >4aSj{Z+.VkhTA%ia)", defaultDBTable0, 1, "B,Q+yzWof[oo Iwh[");
      assertNull(defaultDBColumn0.getSize());
      assertNull(defaultDBColumn0.getDoc());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      ArrayInputStream arrayInputStream0 = new ArrayInputStream();
      defaultDBTable0.equals(arrayInputStream0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      stringArray0[2] = "B,Q+yzWof[oo Iwh[";
      stringArray0[3] = "\";<PKf!vGv1w7\"}_/gca";
      SQLUtil.normalize("K+ccn0A>)Eu0", false);
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      SlaveDatabase slaveDatabase1 = new SlaveDatabase();
      SlaveDatabase slaveDatabase2 = new SlaveDatabase();
      SlaveDatabase slaveDatabase3 = new SlaveDatabase();
      try { 
        slaveDatabase1.verifyShutdownSlave();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected error when trying to stop replication slave mode. To stop repliation slave mode, use operation 'stopSlave' or 'failover'.
         //
         verifyException("org.apache.derby.iapi.error.StandardException", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCatalog dBCatalog0 = new DBCatalog(" Y/P.4-Cr");
      dBCatalog0.getTables();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBSchema dBSchema0 = new DBSchema(" Y/P.4-Cr", dBCatalog0);
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertNotNull(string0);
      assertEquals("schema  Y/P.4-Cr", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("drop materialized view");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop materialized view", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringArray0[0] = "#9;_k}U#2r";
      stringArray0[1] = "#9;_k}U#2r";
      stringArray0[2] = "#9;_k}U#2r";
      stringArray0[3] = "#9;_k}U#2r";
      stringArray0[4] = "#9;_k}U#2r";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "#9;_k}U#2r", false, stringArray0);
      dBPrimaryKeyConstraint0.equals("#9;_k}U#2r");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (#9;_k}U#2r, #9;_k}U#2r, #9;_k}U#2r, #9;_k}U#2r, #9;_k}U#2r)", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X(amvi-NP;+)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar((-3));
      streamTokenizer0.commentChar(4515);
      streamTokenizer0.pushBack();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      PriorityBlockingQueue<Object> priorityBlockingQueue0 = new PriorityBlockingQueue<Object>();
      delayQueue0.iterator();
      delayQueue0.drainTo((Collection<? super Delayed>) priorityBlockingQueue0, 90140);
      delayQueue0.poll();
      char[] charArray0 = new char[9];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = '$';
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.setIndexConglomerateNumber(90140);
      constantActionActivation0.getResultDescription();
      constantActionActivation0.checkStatementValidity();
      constantActionActivation0.getMaxDynamicResults();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      constantActionActivation0.getLanguageConnectionContext();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(jzWvQ*T");
      defaultDBTable0.getIndex("");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      stringArray0[2] = "B,Q+yzWof[oo Iwh[";
      stringArray0[3] = "B,Q+yzWof[oo Iwh[";
      stringArray0[4] = "B,Q+yzWof[oo Iwh[";
      stringArray0[5] = "B,Q+yzWof[oo Iwh[";
      stringArray0[6] = "B,Q+yzWof[oo Iwh[";
      stringArray0[7] = "B,Q+yzWof[oo Iwh[";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("B,Q+yzWof[oo Iwh[", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[) REFERENCES null(B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[)", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("d5Wlw5t$F");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DBDataType dBDataType0 = DBDataType.getInstance((-3754), "k/:=2t{ItQfnN");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d5Wlw5t$F", defaultDBTable0, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      Integer.toUnsignedString((-3754));
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setOwner(defaultDBTable0);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnTypeWithSize(dBColumnArray0[0]);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "k/:=2t{ItQfnN";
      stringArray0[1] = "k/:=2t{ItQfnN";
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      doReturn((GDSHelper) null).when(fBManagedConnection0).getGDSHelper();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DBCatalog dBCatalog0 = new DBCatalog("create tablerenametriggernewtransit`onrous");
      DBDataType.getInstance((-2100), "rename");
      constraintDescriptorList0.stream();
      Object object0 = new Object();
      Object object1 = new Object();
      constraintDescriptorList0.add((Object) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.COMMIT;
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      ConstraintDescriptorList constraintDescriptorList1 = new ConstraintDescriptorList();
      constraintDescriptorList1.add((Object) constraintDescriptorList0);
      constraintDescriptorList1.add((Object) "Ps]!vAn,c 5<C9;");
      Object object0 = new Object();
      Object object1 = new Object();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Ps]!vAn,c 5<C9;";
      stringArray0[1] = "dh)";
      stringArray0[2] = "dh)";
      stringArray0[4] = "Ps]!vAn,c 5<C9;";
      stringArray0[5] = "Ps]!vAn,c 5<C9;";
      stringArray0[6] = "dh)";
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      DataDictionaryImpl dataDictionaryImpl1 = new DataDictionaryImpl();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "dh)";
      stringArray1[1] = "Ps]!vAn,c 5<C9;";
      stringArray1[2] = "dh)";
      stringArray1[3] = "dh)";
      stringArray1[4] = "Ps]!vAn,c 5<C9;";
      stringArray1[5] = "dh)";
      stringArray1[6] = "dh)";
      stringArray1[7] = "dh)";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("dh)", stringArray1, "<%4t;(G@eO O8=5", "Ps]!vAn,c 5<C9;", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8688245196701632
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.codePoints();
      System.setCurrentTimeMillis((-177L));
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ypC`>0JSf}`BC", true, "inner", "inner");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT ypC`>0JSf}`BC CHECK inner", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      String string0 = "q{(/$P:I\"aHGp";
      String string1 = "l";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("l");
      int int0 = 8;
      DBDataType.getInstance(0, "l");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(883);
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      charArrayWriter0.writeTo(mockPrintWriter0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.toArray();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      delayQueue1.poll();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "q{(/$P:I\"aHGp", false, stringArray0);
      mockPrintWriter0.print((Object) dBPrimaryKeyConstraint0);
      Locale locale0 = Locale.KOREA;
      String string2 = " on ";
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter1 = null;
      try {
        mockPrintWriter1 = new MockPrintWriter(" on ", "iS$A1,!v{H");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // iS$A1,!v{H
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      PriorityBlockingQueue<Object> priorityBlockingQueue0 = new PriorityBlockingQueue<Object>();
      delayQueue0.iterator();
      delayQueue0.drainTo((Collection<? super Delayed>) priorityBlockingQueue0, 90140);
      delayQueue0.poll();
      char[] charArray0 = new char[9];
      charArray0[0] = '$';
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("truncate");
      SQLUtil.normalize("executefaild predi(ate {", true);
      SQLUtil.normalize("(RR+,y o2@F9Hm", true);
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      SlaveDatabase slaveDatabase1 = new SlaveDatabase();
      SlaveDatabase slaveDatabase2 = new SlaveDatabase();
      try { 
        slaveDatabase0.verifyShutdownSlave();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected error when trying to stop replication slave mode. To stop repliation slave mode, use operation 'stopSlave' or 'failover'.
         //
         verifyException("org.apache.derby.iapi.error.StandardException", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(8);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      charArrayWriter0.writeTo(mockPrintWriter0);
      Object[] objectArray0 = new Object[13];
      mockPrintWriter0.println(',');
      Object object0 = new Object();
      mockPrintWriter0.println((long) 8);
      mockPrintWriter0.checkError();
      objectArray0[0] = object0;
      charArrayWriter0.flush();
      mockPrintWriter0.printf(" on ", objectArray0);
      OrderedNameMap<Object> orderedNameMap0 = OrderedNameMap.createCaseSensitiveMap();
      List<Object> list0 = orderedNameMap0.values();
      VersionNumber versionNumber0 = new VersionNumber(list0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase(" on ", " on ", versionNumber0);
      String string0 = SQLUtil.ownerDotComponent(defaultDatabase0);
      assertEquals(" on ", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      charBuffer0.codePoints();
      CharBuffer charBuffer1 = charBuffer0.slice();
      CharBuffer.allocate(0);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer1);
      charBuffer2.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NCL2$OB");
      stringReader0.mark(1112);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("create materialized view", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CmV#$VX3;i4VV");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "CmV#$VX3;i4VV";
      stringArray0[1] = "CmV#$VX3;i4VV";
      stringArray0[2] = "delete";
      stringArray0[3] = "CmV#$VX3;i4VV";
      stringArray0[4] = "CmV#$VX3;i4VV";
      stringArray0[5] = "CmV#$VX3;i4VV";
      stringArray0[6] = "k_i,P8mLFYiqgoXW ";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.4392218245163404
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      SQLUtil.isQuery("Unknown constraint type: ");
      DBDataType.getInstance((-1388), "Unknown constraint type: ");
      SQLUtil.isDDL("Unknown constraint type: ");
      SQLUtil.removeComments("insert");
      SQLUtil.mutatesStructure("/As~Jf:+;1ZK3DYnG");
      SQLUtil.isQuery("Unknown constraint type: ");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("KfXzc!3\"mIPG.7S^", (String[]) null, "insert", "Unknown constraint type: ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x86_64");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "aSr%u6 1-");
      boolean boolean0 = SQLUtil.isDML("callreferences");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation2 = new ConstantActionActivation();
      SQLUtil.normalize("huO3><.&<sq", false);
      // Undeclared exception!
      try { 
        constantActionActivation1.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      delayQueue0.poll();
      SQLUtil.normalize("q{(/$P:I\"aHGp", false);
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      // Undeclared exception!
      try { 
        slaveDatabase0.unfreeze();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.db.BasicDatabase", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      SQLUtil.normalize("", true);
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      // Undeclared exception!
      try { 
        slaveDatabase0.unfreeze();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.db.BasicDatabase", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "";
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("ArVEn}@Z<Z_HFe1", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append(131072L);
      StringBuilder stringBuilder3 = stringBuilder2.append((double) 0);
      StringBuilder stringBuilder4 = stringBuilder3.insert(0, (Object) sQLUtil0);
      char[] charArray0 = new char[5];
      charArray0[0] = '?';
      charArray0[1] = 'd';
      charArray0[3] = '2';
      // Undeclared exception!
      try { 
        stringBuilder4.insert((-427), charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -427
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TP.Id~jd>A-;W", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("create tableu.u`%t", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("=:!Y,A!p", true, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      DBSchema dBSchema1 = new DBSchema("G#=&XQ8%shDx:\"", (DBCatalog) null);
      dBSchema1.getTable("G#=&XQ8%shDx:\"");
      dBForeignKeyConstraint0.setTable((DBTable) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"B,Q+yzWof[oo Iwh[\" PRIMARY KEY (B,Q+yzWof[oo Iwh[, )", string0);
      
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \"B,Q+yzWof[oo Iwh[\" ", string1);
      
      String string2 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string2);
      assertNotNull(string2);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")#?qH");
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("q{(/$P:I\"aHGp", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder0.append((-3870L));
      stringBuilder0.append(0.0);
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = 'A';
      charArray0[2] = 'O';
      charArray0[3] = 'e';
      charArray0[4] = '(';
      charArray0[5] = 'y';
      charArray0[0] = '\"';
      charArray0[7] = 'X';
      charArray0[8] = 'L';
      stringBuilder0.insert(0, charArray0);
      StringBuilder stringBuilder3 = stringBuilder2.append((float) (-3870L));
      stringBuilder3.insert(0, false);
      char[] charArray1 = new char[7];
      stringBuilder0.append(0);
      stringBuilder0.insert(0, (float) 0);
      stringBuilder0.reverse();
      stringBuilder1.append((-731L));
      stringBuilder3.insert(0, (double) (-771));
      stringBuilder2.append((float) (-3870L));
      SQLUtil.addOptionalCondition("q{(/$P:I\"aHGp", stringBuilder0);
      assertEquals("-771.000.0783-0.00783-pGHa\"I:P$/({qLX\u0000y(eOA\"eslaf0.0-731-3870.0 or q{(/$P:I\"aHGp", stringBuilder0.toString());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "rbZV=uq@GI%s~55";
      stringArray0[1] = "rbZV=uq@GI%s~55";
      stringArray0[2] = "ih}eAR5 bn0CdN";
      stringArray0[3] = "rbZV=uq@GI%s~55";
      stringArray0[4] = "rbZV=uq@GI%s~55";
      stringArray0[5] = "rbZV=uq@GI%s~55";
      stringArray0[6] = "rbZV=uq@GI%s~55";
      SQLUtil.renderColumnListWithTableName("rbZV=uq@GI%s~55", stringArray0);
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("REUERENdES ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(16380);
      streamTokenizer0.commentChar(34);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "REUERENdES ";
      stringArray0[1] = null;
      stringArray0[2] = "call(_u0*tw@n$=ew, alter index, org.h2.table.tablelink, org.apache.derby.iapi.store.raw.log.logfactory, compression, l}pfhqzjt1n7t<}w)";
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation2 = new ConstantActionActivation();
      constantActionActivation2.getLanguageConnectionContext();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?\"$%3YS";
      String[] stringArray1 = new String[6];
      stringArray1[4] = "hsqldb.catalogs";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(stringArray0[2], stringArray1, "executeconnection is autocommit", "GENERATED ALWAYS AS ( ", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "rbZV=uq@GI%s~55";
      stringArray0[1] = "rbZV=uq@GI%s~55";
      stringArray0[2] = "ih}eAR5 bn0CdN";
      stringArray0[3] = "rbZV=uq@GI%s~55";
      stringArray0[4] = "rbZV=uq@GI%s~55";
      stringArray0[6] = "rbZV=uq@GI%s~55";
      String[] stringArray1 = new String[6];
      stringArray1[0] = " NULL";
      stringArray1[1] = " NULL";
      stringArray1[2] = "ih}eAR5 bn0CdN";
      stringArray1[3] = " NULL";
      stringArray1[4] = "rbZV=uq@GI%s~55";
      stringArray1[5] = "*}J/I21R";
      String string0 = SQLUtil.leftJoin(" NULL", stringArray1, "}_\"-(&Qv$}c^1[`oDZ=", " NULL", stringArray0);
      assertEquals("left join }_\"-(&Qv$}c^1[`oDZ= as  NULL on  NULL. NULL =  NULL.rbZV=uq@GI%s~55 and  NULL. NULL =  NULL.rbZV=uq@GI%s~55 and  NULL.ih}eAR5 bn0CdN =  NULL.ih}eAR5 bn0CdN and  NULL. NULL =  NULL.rbZV=uq@GI%s~55 and  NULL.rbZV=uq@GI%s~55 =  NULL.rbZV=uq@GI%s~55 and  NULL.*}J/I21R =  NULL.null", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob(">4aSj{Z+.VkhTA%ia");
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.ITALY;
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">4aSj{Z+.VkhTA%ia";
      stringArray0[1] = "NCL2$OB";
      stringArray0[2] = ">4aSj{Z+.VkhTA%ia";
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      System.setCurrentTimeMillis((-177L));
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" REFERENCES ", true, "ypC`>0JSf}`BC", "inner");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      stringBuilder0.reverse();
      assertEquals(" \" SECNEREFER \" TNIARTSNOC", stringBuilder0.toString());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.256494175364925
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      ArrayInputStream arrayInputStream0 = new ArrayInputStream();
      defaultDBTable0.equals(arrayInputStream0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      stringArray0[2] = "B,Q+yzWof[oo Iwh[";
      stringArray0[3] = "\";<PKf!vGv17\"}_/gca";
      stringArray0[4] = "B,Q+yzWof[oo Iwh[";
      stringArray0[5] = "\";<PKf!vGv17\"}_/gca";
      stringArray0[6] = "B,Q+yzWof[oo Iwh[";
      stringArray0[7] = "\";<PKf!vGv17\"}_/gca";
      stringArray0[8] = "\";<PKf!vGv17\"}_/gca";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "\";<PKf!vGv17\"}_/gca", false, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("lZOA})rx?92I", false, dBUniqueConstraint0);
      dBUniqueConstraint0.toString();
      dBUniqueIndex0.isIdentical(dBUniqueConstraint0);
      dBUniqueIndex0.setDoc("selectexecute");
      dBUniqueIndex0.equals("B,Q+yzWof[oo Iwh[");
      dBUniqueIndex0.isIdentical(dBUniqueConstraint0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      dBUniqueConstraint0.setName("B,Q+yzWof[oo Iwh[");
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("^VHtoQ.dpR&5N|A/-", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.fkSpec(dBForeignKeyConstraint0, (NameSpec) null);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("\";<PKf!vGv17\"}_/gca", defaultDBTable0, 1, "CONSTRAINT \";<PKf!vGv17\"}_/gca UNIQUE (B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[, \";<PKf!vGv17\"}_/gca, B,Q+yzWof[oo Iwh[, \";<PKf!vGv17\"}_/gca, B,Q+yzWof[oo Iwh[, \";<PKf!vGv17\"}_/gca, \";<PKf!vGv17\"}_/gca)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"B\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\";<PKf!vGv17\"}_/gca");
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.close();
      stringReader0.close();
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      defaultDBTable0.equals("B,Q+yzWof[oo Iwh[");
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      defaultDBTable0.getReferrers();
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("B,Q+yzWof[oo Iwh[", false, dBUniqueConstraint0);
      defaultDBTable0.addIndex(dBUniqueIndex0);
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) dBUniqueConstraint0;
      objectArray0[1] = (Object) dBUniqueIndex0;
      objectArray0[2] = (Object) dBUniqueConstraint0;
      objectArray0[3] = (Object) "B,Q+yzWof[oo Iwh[";
      objectArray0[4] = (Object) "B,Q+yzWof[oo Iwh[";
      objectArray0[5] = (Object) "B,Q+yzWof[oo Iwh[";
      objectArray0[6] = (Object) "B,Q+yzWof[oo Iwh[";
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) "B,Q+yzWof[oo Iwh[";
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
      assertEquals("SELECT * FROM null WHERE B,Q+yzWof[oo Iwh[ = CONSTRAINT \"B,Q+yzWof[oo Iwh[\" UNIQUE (B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[) AND B,Q+yzWof[oo Iwh[ = B,Q+yzWof[oo Iwh[ (B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[) unique", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("tiggenetra");
      tableContainer0.getTable("tiggenetra");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.5669499167988556
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "drop tablefailed predicate: {");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CL!B");
      SQLUtil.mutatesDataOrStructure("alter matPrialize view");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "truncatereuerendes", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TableContainer tableContainer0 = new TableContainer("nI- ? ?");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create table ");
      DBDataType dBDataType0 = DBDataType.getInstance(461, "exec");
      dBDataType0.isAlpha();
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("exec", defaultDBTable0, dBDataType0, (Integer) null, integer2);
      defaultDBColumn0.setTable(defaultDBTable0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      AlterTableNode alterTableNode0 = new AlterTableNode();
      AlterTableNode alterTableNode1 = new AlterTableNode();
      AlterTableNode alterTableNode2 = new AlterTableNode();
      TableDescriptor tableDescriptor0 = alterTableNode0.baseTable;
      VersionNumber.valueOf(" AND ");
      System.setCurrentTimeMillis(3);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("EXECEXEC", stringBuilder0.toString());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Character character0 = Character.valueOf(';');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("';'", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema1 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ih}eAR5 bn0CdN", dBSchema1);
      DBDataType dBDataType0 = DBDataType.getInstance((-875), "eGT");
      Integer integer0 = RawTransaction.ABORT;
      dBSchema1.setDoc("eGT");
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter indexcreate materialized view", defaultDBTable0, dBDataType0, integer1);
      SQLUtil.renderColumn(defaultDBColumn0);
      Integer.toUnsignedString((-875));
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "drop tablefailed predicate: {");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CL!B");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.codePoints();
      stringBuilder0.append('r');
      StringWriter stringWriter0 = new StringWriter(6);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      stringBuffer0.append(stringBuffer1);
      StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
      SQLUtil.addRequiredCondition("alter ", stringBuilder1);
      assertEquals("r and alter ", stringBuilder1.toString());
      assertEquals("r and alter ", stringBuilder0.toString());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "M)9dQ";
      stringArray0[1] = "M)9dQ";
      stringArray0[2] = "M)9dQ";
      stringArray0[3] = "M)9dQ";
      stringArray0[4] = "M)9dQ";
      stringArray0[5] = "M)9dQ";
      String string0 = SQLUtil.innerJoin("M)9dQ", stringArray0, "org.databene.commons.OrderedMap$ProxyEntry", "//", stringArray0);
      assertEquals("org.databene.commons.OrderedMap$ProxyEntry as // on M)9dQ.M)9dQ = //.M)9dQ and M)9dQ.M)9dQ = //.M)9dQ and M)9dQ.M)9dQ = //.M)9dQ and M)9dQ.M)9dQ = //.M)9dQ and M)9dQ.M)9dQ = //.M)9dQ and M)9dQ.M)9dQ = //.M)9dQ", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = " = ";
      stringArray0[1] = "Jhl&9e>'";
      stringArray0[2] = "I:O #l";
      stringArray0[3] = "3R}`aDsPuS)QS";
      stringArray0[4] = "3R}`aDsPuS)QS";
      stringArray0[5] = "3R}`aDsPuS)QS";
      stringArray0[6] = " = ";
      stringArray0[7] = " = ";
      stringArray0[8] = " = ";
      String string0 = SQLUtil.join("3R}`aDsPuS)QS", " = ", stringArray0, "org.h2.index.IndexCursor", " = ", stringArray0);
      assertEquals("3R}`aDsPuS)QS join org.h2.index.IndexCursor as  =  on  = . =  =  = . =  and  = .Jhl&9e>' =  = .Jhl&9e>' and  = .I:O #l =  = .I:O #l and  = .3R}`aDsPuS)QS =  = .3R}`aDsPuS)QS and  = .3R}`aDsPuS)QS =  = .3R}`aDsPuS)QS and  = .3R}`aDsPuS)QS =  = .3R}`aDsPuS)QS and  = . =  =  = . =  and  = . =  =  = . =  and  = . =  =  = . = ", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.setForCreateTable();
      constantActionActivation0.informOfRowCount((NoPutResultSet) null, 678L);
      constantActionActivation0.getLanguageConnectionContext();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "drop table";
      stringArray0[1] = null;
      stringArray0[2] = "drop table";
      stringArray0[3] = null;
      stringArray0[4] = "drop table";
      stringArray0[5] = null;
      stringArray0[6] = "drop table";
      stringArray0[7] = null;
      stringArray0[8] = null;
      String string0 = SQLUtil.join((String) null, "drop table", stringArray0, stringArray0[5], "drop table", stringArray0);
      assertEquals("null as drop table on drop table.drop table = drop table.drop table and drop table.null = drop table.null and drop table.drop table = drop table.drop table and drop table.null = drop table.null and drop table.drop table = drop table.drop table and drop table.null = drop table.null and drop table.drop table = drop table.drop table and drop table.null = drop table.null and drop table.null = drop table.null", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SQLUtil.mutatesStructure(" faild predi(ate {");
      Locale locale0 = Locale.KOREAN;
      Locale locale1 = Locale.ENGLISH;
      Locale.getISOLanguages();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("sele`tivity from statistics");
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(SD(@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (SD(@
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
