/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 15:17:22 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "<NO=\\qw";
      StringReader stringReader0 = new StringReader("<NO=qw");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-46);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1131), 85);
      javaCharStream0.maxNextCharInd = (int) (byte) (-46);
      MockFile mockFile0 = new MockFile("NV", "NV");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      mockFile0.getCanonicalPath();
      mockPrintStream0.write((-1131));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5115023512853927
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      stringReader0.markSupported();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("6jrj?jQEr9h#d~q=Q");
      stringReader1.markSupported();
      int int0 = (-9);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 71, (-9));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = null;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6919986262286044
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"super\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`I.@wFlYm@/");
      StringReader stringReader2 = new StringReader("Mco&");
      stringReader2.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), 3581);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3584, javaCharStream1.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0123480970569054
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*{;@YGAwv(26ce)");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), (-1881));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4684350769931567
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      stringReader0.markSupported();
      stringReader0.read();
      int int0 = JavaParserConstants.DEFAULT;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      int int1 = JavaParserConstants.MINUSASSIGN;
      StringReader stringReader1 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 111, 64, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1881, column 2.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5901505689188404
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("\"-=\"");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 37, (-1881), 1612);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken((-1));
      javaParserTokenManager0.SkipLexicalActions(token0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.reset();
      Token.newToken(0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-1878), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5280088959552418
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"extends\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 34, 3108);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaParserConstants.RPAREN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=U!");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"catch\"");
      StringReader stringReader1 = new StringReader("package");
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 101, 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 34, column 3115.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9691769115545716
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("l8 ]J?\u0004#A.%qe'.'*");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-903), (-1448));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/6");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 81, (-1881), 23);
      StringReader stringReader1 = new StringReader("e|&;J|");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 23, (-1881));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader1.reset();
      javaCharStream2.readChar();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader1.reset();
      Token token0 = Token.newToken((-2516));
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals("&", token2.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.965008734027864
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("l8 ]J?\u0004#Aqe'.'*");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("l8 ]J?\u0004#Aqe'.'*");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[DI_H,']kJ^d!t 6Qki");
      StringReader stringReader2 = new StringReader("Ux}rEr)}{|ip}R#");
      stringReader2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2996, 95);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(")", token0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.503592592712301
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, (-713));
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      charArray0[1] = 'K';
      charArray0[2] = 'T';
      stringReader0.read(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",66");
      StringReader stringReader1 = new StringReader("abstract");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 119, 474, 108);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.image = stringBuffer0;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token2 = javaParserTokenManager0.jjFillToken();
      assertEquals(481, javaCharStream1.getBeginColumn());
      assertEquals("", token2.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9703891735114212
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      StringReader stringReader1 = new StringReader("fl)Ho");
      stringReader1.markSupported();
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2570), 4329);
      StringReader stringReader2 = new StringReader("P#)F}5O-Rn3P");
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = 'j';
      charArray0[2] = 'i';
      charArray0[3] = ',';
      charArray0[4] = 'F';
      stringReader2.read(charArray0);
      stringReader1.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[DI_H,']kJ^d!t 6Qki");
      StringReader stringReader3 = new StringReader("[DI_H,']kJ^d!t 6Qki");
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 36, 108);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9821534943295547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?fL&4BGTgg?");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'K';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = 'H';
      int int0 = JavaParserConstants.RPAREN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5/Bd-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("+-/|1S`D6{B");
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 78, 127);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 36);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 36. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5347482362381712
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Hq$e6qstO");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, 1666);
      StringReader stringReader1 = new StringReader("1gjY/V3ueMEtw2PGk");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'q';
      charArray0[2] = 'a';
      charArray0[3] = 'X';
      charArray0[4] = 'i';
      charArray0[5] = '5';
      charArray0[6] = 'a';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-991), 23, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.skip((-1L));
      StringReader stringReader2 = new StringReader("(");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.setDebugStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9655489730831615
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Hq$e6qstO");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, 1666);
      StringReader stringReader1 = new StringReader("1gjY/V3ueMEtw2PGk");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[DI_H,']kJ^d!t 6Qki");
      StringReader stringReader2 = new StringReader("(|A1w{t7kd}krs!");
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-991), 1666);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(16, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals("V3ueMEtw2PGk", token0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4684350769931567
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      StringReader stringReader1 = new StringReader("fl)Ho");
      stringReader1.markSupported();
      stringReader1.read();
      StringReader stringReader2 = new StringReader("P#)F}5O-Rn3P");
      stringReader1.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[DI_H,']kJ^d!t 6Qki");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 36, 108);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 36, column 109.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9549638330301855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("l8 ]J?\u0004#A.%qe'.'*");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-903), (-1448));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/6");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 74, (-1881), 23);
      StringReader stringReader1 = new StringReader("e|&;J|");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 23, (-1881));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader1.reset();
      Token token0 = Token.newToken((-2516));
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals("|", token1.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9801407966096858
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 35, 56, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      token1.kind = 28;
      javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.jjFillToken();
      token2.beginLine = (-934);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token2);
      Token token3 = javaParserTokenManager0.getNextToken();
      token3.endLine = (-1881);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token3);
      javaParserTokenManager0.SkipLexicalActions(token0);
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("a", token0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9796227115786853
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      StringReader stringReader1 = new StringReader("*{;@YGAwv(26ce)");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1881), (-1881));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      assertEquals(1, javaCharStream0.bufpos);
      
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager4.getNextToken();
      assertEquals(86, token0.kind);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6396313222800365
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("l8 ]J?\u0004#Aqe'.'*");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-811), (-811));
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 17);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 17. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.192652937037111
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      StringReader stringReader1 = new StringReader("fl)Ho");
      stringReader1.markSupported();
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2570), 4329);
      StringReader stringReader2 = new StringReader("P#)F}5O-Rn3P");
      stringReader1.read();
      StringReader stringReader3 = new StringReader("fl)Ho");
      StringReader stringReader4 = new StringReader("<IDENTIFIER>");
      stringReader4.markSupported();
      StringReader stringReader5 = new StringReader("<IDENTIFIER>");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader5, (-124), 102);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(103, javaCharStream1.getBeginColumn());
      assertEquals("IDENTIFIER", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.993818570590212
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Hq$e6qstO");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, 1666);
      StringReader stringReader1 = new StringReader("1gjY/V3ueMEtw2PGk");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[DI_H,']kJ^d!t 6Qki");
      StringReader stringReader2 = new StringReader("(|A1w{t7kd}krs!");
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'q';
      charArray0[2] = 'a';
      charArray0[3] = 'X';
      charArray0[4] = 'i';
      charArray0[5] = '5';
      charArray0[6] = 'a';
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-991), 23, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader2.skip((-1L));
      StringReader stringReader3 = new StringReader("(");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.setDebugStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.971843624172741
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Hq$e6qstO");
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = 'k';
      charArray0[2] = 'N';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 1666);
      StringReader stringReader1 = new StringReader("1gjY/V3ueMEtw2PGk");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[DI_H,']kJ^d!t 6Qki");
      StringReader stringReader2 = new StringReader("(|A1w{t7kd}krs!");
      stringReader2.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-2358), 24);
      javaCharStream1.GetImage();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals("t7kd", token0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.454718559595903
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",so");
      stringReader0.mark(1172);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("floak");
      stringReader1.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "floak");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 68, (-1881), 2406);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(1172);
      javaParserTokenManager0.SkipLexicalActions(token0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader1.reset();
      Token token1 = Token.newToken((-1));
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-1877), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1788985183245537
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9406051352845455
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Ib/`-I`w3N/");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 550, 128);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken(35);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 73, 0, 73);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      MockFile mockFile0 = new MockFile("b", "1");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.printf("b", (Object[]) javaParserTokenManager0.jjstrLiteralImages);
      Locale locale0 = Locale.ITALIAN;
      mockPrintStream0.printf(locale0, "b", (Object[]) javaParserTokenManager0.lexStateNames);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(128, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5100309650875299
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"assert\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("*{;@YGAwv(26ce)");
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 43);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-2949), 122);
      javaCharStream2.inputStream = (Reader) stringReader1;
      JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4833627828683267
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"assert\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"assert\"");
      token0.image = "\"final\"";
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaCharStream0.readChar();
      Token token1 = javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.jjFillToken();
      token2.next = token1;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      token2.kind = 1634;
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 17.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.536945866700547
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",so");
      stringReader0.mark(1172);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("floak");
      stringReader1.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "floak");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1172, (-2783));
      StringReader stringReader2 = new StringReader("?6%zb&=imq2a6~X,");
      stringReader1.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?");
      StringReader stringReader3 = new StringReader("?");
      stringReader2.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 114, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3293481238928986
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("fl)Ho");
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fl)Ho");
      StringReader stringReader2 = new StringReader("native");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 95, 2996);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      assertEquals(3001, javaCharStream0.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9539480161429454
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 35, 56, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream(stringReader0, 71, (-1041), (-1087));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4865557359393953
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Hq$e6qstO");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 38, 18);
      StringReader stringReader1 = new StringReader("P#)F}5O-Rn3P");
      stringReader1.read();
      StringReader stringReader2 = new StringReader("P#)F}5O-Rn3P");
      StringReader stringReader3 = new StringReader("Hq$e6qstO");
      stringReader1.markSupported();
      StringReader stringReader4 = new StringReader("AP<#,S{*HjRHR7S");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader4, (-2300), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 38);
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, 25, (-1));
      javaParserTokenManager0.input_stream = javaCharStream2;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(25, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.02595665647532
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aZn})=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.next = null;
      stringReader0.reset();
      token0.image = "\"final\"";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-116);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaCharStream0.readChar();
      Token token1 = javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.jjFillToken();
      token2.next = token1;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.167012062932737
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      StringReader stringReader1 = new StringReader("fl)Ho");
      stringReader1.markSupported();
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2570), 4329);
      StringReader stringReader2 = new StringReader("P#)F}5O-Rn3P");
      stringReader1.read();
      StringReader stringReader3 = new StringReader("fl)Ho");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4333, javaCharStream0.getBeginColumn());
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.030331904767745
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("{!@c>'S1\"%(hNW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3156, 52, 52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token token0 = javaParserTokenManager0.getNextToken();
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      mockPrintStream0.flush();
      mockPrintStream0.write((-633));
      mockPrintStream0.checkError();
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3156, column 59.  Encountered: \"1\" (49), after : \"\\'S\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1993913192474057
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",so");
      stringReader0.mark(1172);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("float");
      stringReader1.read();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "float");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 68, (-1881), 2406);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(1172);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)101;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Token.newToken(39);
      javaParserTokenManager0.SkipLexicalActions(token0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader1.reset();
      Token token1 = Token.newToken((-1));
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals((-1881), javaCharStream0.getBeginColumn());
      assertEquals("float", token2.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0187441044930297
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",so");
      stringReader0.mark(1172);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      stringReader0.read(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'eZQAh4A$[B|\"C4");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, (-866), 65533);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 106, 539);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      token0.beginColumn = (-537);
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals("", token1.toString());
      
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("o", token0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0979951298660313
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?fL&4BGTgg?");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = 'H';
      int int0 = JavaParserConstants.RPAREN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5/Bd-");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 474, 516);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      token1.image = "vdM";
      javaParserTokenManager0.SkipLexicalActions(token0);
      StringBuffer stringBuffer0 = new StringBuffer("DM3;f1Za=vaT!1");
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.SwitchTo(3);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1881, column 11.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0152271123401135
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".@wFlYm@/");
      StringReader stringReader1 = new StringReader(".@wFlYm@/");
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader(".@wFlYm@/");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1880), 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.column = 102;
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(103, javaCharStream0.getBeginColumn());
      assertEquals(107, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4840738207644795
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-811), 2836);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.skip(1720L);
      javaCharStream0.adjustBeginLineColumn(2836, 2836);
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      javaCharStream0.bufpos = (int) 'D';
      charArray0[2] = 'D';
      charArray0[3] = 'I';
      charArray0[4] = 'u';
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4694559076473963
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      StringReader stringReader1 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      StringReader stringReader2 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1881), 2117);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1881, column 2119.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9644286621899105
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      StringReader stringReader1 = new StringReader("fl)Ho");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Mco&");
      StringReader stringReader2 = new StringReader(" f(\u0003j");
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9755644756390875
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = (-1880);
      StringReader stringReader0 = new StringReader("fl)Ho");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("vXw$,T&+@.Z.");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1880), 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 739, 4, 354);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager5 = null;
      try {
        javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream1, javaCharStream1.bufpos);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3299825171242272
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`I.@wFlYm@/");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("`I.@wFlYm@/");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1880), 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1880, column 46.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.042402280852458
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("I/`-I`w3N/");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2480), 73);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 393, 73, 113);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager3.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4933851746050826
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"assert\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"assert\"");
      token0.image = "\"final\"";
      StringReader stringReader1 = new StringReader("L~N`#3AZbh5");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 11, 1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2362827349299477
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S?fL&4BGTgg?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2406, 29, 5);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = 'E';
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2406);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2406. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2077908197914415
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",so");
      stringReader0.mark(1172);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("floak");
      stringReader1.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "floak");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 68, (-1881), 2406);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(1172);
      javaParserTokenManager0.SkipLexicalActions(token0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-1878), javaCharStream0.getBeginColumn());
      
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token2 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals("loak", token1.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.649744426385523
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 1666);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-8);
      byteArray0[6] = (byte)83;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 4, (byte)109, 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 4, column 110.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.9562540195867186
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".@wFlYm@/");
      StringReader stringReader1 = new StringReader("<STRING_LITERAL>");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1881), (-1881));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.963733230835712
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",so");
      stringReader0.mark(1172);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("ED><(6G>-12;'F");
      stringReader1.read();
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 69, 1172);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager3.getNextToken();
      javaParserTokenManager3.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0103030031307347
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S?fL&4BGTgg?");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("+ibtb{rTi");
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-991), (-2455));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-2454), javaCharStream1.getBeginColumn());
      
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9466031246274895
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("I/`-I`w3N/");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2480), 128);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-1));
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = null;
      javaParserTokenManager0.curLexState = 128;
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6052847139267983
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"extends\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaParserConstants.DECR;
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 3108);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = JavaParserConstants.RPAREN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"catch\"");
      StringReader stringReader1 = new StringReader("package");
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 34, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 100, column 3116.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.3211195282198993
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1764, 15, 15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = (-5136);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      mockPrintStream0.write(16);
      mockPrintStream0.checkError();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.debugStream = (PrintStream) mockPrintStream0;
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token1);
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager1.image = stringBuffer0;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1764, column 20.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2527851817582927
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aZn})=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[0];
      token0.next = null;
      stringReader0.reset();
      token0.image = "\"final\"";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-116);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaCharStream0.readChar();
      Token token1 = javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.jjFillToken();
      token2.next = token1;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9633169874051835
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aZn})=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 29);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 0, (byte)109, 106);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.792383011118817
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2152), (-2152), (-2152));
      sequenceInputStream0.available();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager1.SkipLexicalActions(token_GTToken1);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken1);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("b");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      javaCharStream0.backup(17);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(68);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.jjimageLen = 4078;
      javaParserTokenManager0.curChar = 'w';
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9723240296227669
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?fL&4BGTgg?");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), 1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      StringReader stringReader1 = new StringReader("P#)F}5O-Rn3P");
      StringReader stringReader2 = new StringReader("M+!Q/");
      stringReader2.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@5mBoB |70sCgF2c<#");
      StringReader stringReader3 = new StringReader("[DI_H,']kJ^d!t 6Qki");
      StringReader stringReader4 = new StringReader("\"*\"");
      stringReader4.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1070, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(40, javaCharStream1.getBeginColumn());
      assertEquals("BGTgg", token0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9754107343330785
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("l8 ]J?\u0004#Aqe'.'*");
      StringReader stringReader1 = new StringReader("l8 ]J?\u0004#Aqe'.'*");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 46, (-924));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-919), javaCharStream0.getBeginColumn());
      assertEquals(91, token0.kind);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9714612979147075
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("Hq$e6qstO");
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = 'k';
      charArray0[2] = 'N';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 1666);
      StringReader stringReader1 = new StringReader("1gjY/V3ueMEtw2PGk");
      stringReader0.read();
      StringReader stringReader2 = new StringReader("1gjY/V3ueMEtw2PGk");
      stringReader2.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-2358), 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(29, javaCharStream1.getBeginColumn());
      assertEquals("V3ueMEtw2PGk", token0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.027843337704409
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*{;@YGAwv(26ce)");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1881), (-1881));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (-1881));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1881. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.976981472750288
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("@QV!'1d");
      stringReader1.read();
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 137);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 143.  Encountered: <EOF> after : \"\\'1d\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.9847683994197194
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<NO=qw");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-46);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1131), 85);
      MockFile mockFile0 = new MockFile("NV", "NV");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      mockFile0.getCanonicalPath();
      mockPrintStream0.write((-1131));
      mockPrintStream0.checkError();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.beginLine = (int) (byte) (-46);
      Token token0 = token_GTToken0.specialToken;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<NO=qw");
      Token token1 = new Token();
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(86, javaCharStream0.getBeginColumn());
      assertEquals("NO", token2.toString());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(1030);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1030. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("l8 ]J?\u0004#A.%qe'.'*");
      stringReader0.markSupported();
      stringReader0.read();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-903), (-1448));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/6");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 74, (-1885), 23);
      StringReader stringReader1 = new StringReader("e|&;J|");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 23, (-1885));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-903));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -903. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fl)Ho");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fl)Ho");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.SwitchTo(0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2152), (-2152), (-2152));
      sequenceInputStream0.available();
      sequenceInputStream0.close();
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = "GT#a=8S^Gp'Vt\"@.";
      StringReader stringReader0 = new StringReader("GT#a=8S^Gp'Vt\"@.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-811), 2836);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-811), (-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream2 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
