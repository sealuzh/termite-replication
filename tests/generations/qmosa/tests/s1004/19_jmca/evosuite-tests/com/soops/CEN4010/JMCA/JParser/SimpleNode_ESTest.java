/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 15:30:10 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Enumeration;
import java.util.List;
import java.util.Locale;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5497498265588043
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EPDL=Fj(wyLy2%25T5");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u(P)DkM>*!}FRq4g");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "u(P)DkM>*!}FRq4g");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "HiMrk}dw/mf");
      SimpleNode simpleNode1 = new SimpleNode((byte)0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "R\"|$}VG2oa+");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.jjtAddChild(simpleNode0, 0);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      FileSystemHandling.createFolder(evoSuiteFile2);
      simpleNode1.dump((String) null, stringWriter0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, (String) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.flush();
      stringWriter2.write(69);
      stringWriter1.close();
      stringWriter2.write((-2622));
      stringWriter1.getBuffer();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      arrayList0.add("{");
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter('\u0082');
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = stringWriter1.append((CharSequence) "{");
      char[] charArray0 = new char[11];
      charArray0[10] = '\u0082';
      charArray0[1] = '\u0082';
      stringWriter0.write(0);
      charArray0[2] = '\u0082';
      stringWriter7.write(charArray0);
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter9 = new StringWriter(0);
      stringWriter1.write(charArray0);
      arrayList0.add(":");
      stringWriter7.write("{");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      StringWriter stringWriter10 = new StringWriter(0);
      simpleNode0.dump(":", stringWriter7);
      assertEquals("{\u0000\u0082\u0082\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0082\u0000\u0082\u0082\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0082{<CompilationUnit>\n  <identifier>:</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      assertEquals("{\u0000\u0082\u0082\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0082\u0000\u0082\u0082\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0082{<CompilationUnit>\n  <identifier>:</identifier>\n</CompilationUnit>\n", stringWriter7.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2002856251318685
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)37;
      byteArray0[3] = (byte)30;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1089767832), (-1089767832));
      JavaParser javaParser0 = new JavaParser("&+7IAHg>");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)30);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("}");
      arrayList0.add("wW4nj0J|N`dH&_lI`6");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SystemInUtil.addInputLine("Q");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.mark((-1737));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      SystemInUtil.addInputLine("");
      arrayList1.add("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString("N+fGa1L+>=@tppXk6G");
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>wW4nj0J|N`dH&_lI`6</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8001573041913385
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator(0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate.isEqual((Object) predicate2);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      predicate3.and(predicate2);
      predicate4.or(predicate3);
      Object object0 = new Object();
      predicate2.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate.isEqual((Object) arrayList0);
      predicate5.negate();
      predicate1.or(predicate3);
      predicate4.test((Object) null);
      predicate5.test("*ge");
      arrayList0.removeIf(predicate5);
      Object object1 = new Object();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add("ConditionalExpression");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("&&");
      stringWriter0.flush();
      simpleNode0.dump("</", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*ge</identifier>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)30;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1089767832), (-1089767832));
      JavaParser javaParser0 = new JavaParser(">>");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)30);
      byteArrayInputStream0.reset();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      InputStream[] inputStreamArray0 = new InputStream[8];
      inputStreamArray0[0] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[1] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[2] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[3] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[4] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[6] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[2] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[7] = (InputStream) byteArrayInputStream0;
      arrayList0.toArray(inputStreamArray0);
      arrayList0.add(">>");
      Token token0 = javaParser0.getNextToken();
      token0.next = null;
      javaParser0.jj_nt = token0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(inputStreamArray0[3], inputStreamArray0[2]);
      sequenceInputStream0.close();
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.markSupported();
      javaParser0.token_source.jjFillToken();
      sequenceInputStream0.mark((-1737));
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("ApAa[r~hj&`", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>*rshft</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3090);
      StringReader stringReader0 = new StringReader("Literal");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 3090);
      simpleNode1.parser = javaParser0;
      stringReader0.skip(3090);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(3090);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = (-1099978048);
      SimpleNode simpleNode0 = new SimpleNode((-1099978048));
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator(0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate2.or(predicate0);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      predicate0.and(predicate3);
      predicate1.or(predicate2);
      predicate1.or(predicate0);
      predicate0.and(predicate1);
      arrayList0.add("\"iiNFl<1#*");
      arrayList0.removeIf(predicate0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add((String) null);
      arrayList1.listIterator(0);
      arrayList0.add("VariableDeclaratorId");
      StringWriter stringWriter0 = new StringWriter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      simpleNode0.setIdentifier("<=");
      stringWriter0.write("<=");
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'G';
      charArray0[2] = 'G';
      stringWriter0.flush();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<=<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1776976980589526
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.listIterator(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "VariableeclaratorId", 0, 0);
      char[] charArray0 = new char[5];
      stringWriter0.flush();
      charArray0[0] = '2';
      charArray0[1] = ';';
      charArray0[2] = ';';
      charArray0[3] = ';';
      charArray0[4] = ';';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "VariableeclaratorId");
      stringWriter1.flush();
      simpleNode0.dump("VariableeclaratorId", stringWriter2);
      StringWriter stringWriter3 = new StringWriter(0);
      StringWriter stringWriter4 = new StringWriter(0);
      StringWriter stringWriter5 = new StringWriter(0);
      StringWriter stringWriter6 = stringWriter2.append((CharSequence) "VariableeclaratorId");
      StringWriter stringWriter7 = stringWriter6.append((CharSequence) "VariableeclaratorId");
      stringWriter7.flush();
      StringWriter stringWriter8 = new StringWriter(0);
      arrayList0.toArray();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      StringWriter stringWriter9 = new StringWriter();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("VariableeclaratorId", stringWriter7);
      assertEquals("2;;;;VariableeclaratorIdVariableeclaratorIdVariableeclaratorId<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter2.toString());
      
      simpleNode0.toString("IFl]yi>Bp[");
      String string0 = simpleNode0.toString("*");
      assertEquals("*CompilationUnit : >", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9978238864736304
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)37;
      byteArray0[3] = (byte)30;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1089767820), (-1089767820));
      JavaParser javaParser0 = new JavaParser("&+7IAHg>");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)30);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("y");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&+7IAHg>");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Object object0 = new Object();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "&+7IAHg>");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, (byte)37);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*le");
      // Undeclared exception!
      simpleNode0.dump("&+7IAHg>", stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("NameL&Zist");
      arrayList0.listIterator(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "VariableeclaratorId", 0, 0);
      stringWriter1.append((CharSequence) "VariableeclaratorId");
      char[] charArray0 = new char[23];
      stringWriter0.flush();
      charArray0[0] = '2';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      charArray0[4] = '4';
      stringWriter0.append((CharSequence) "VariableeclaratorId");
      stringWriter1.write(charArray0);
      stringWriter1.append((CharSequence) "VariableeclaratorId");
      stringWriter1.flush();
      SystemInUtil.addInputLine("<");
      Locale locale0 = Locale.GERMANY;
      locale0.getUnicodeLocaleKeys();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("<");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("VariableeclaratorIdVariableeclaratorId24444\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000VariableeclaratorId<CompilationUnit>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)37;
      byteArray0[3] = (byte)55;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("Hi8rdwmf");
      Object object0 = new Object();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) arrayList0;
      objectArray0[2] = (Object) javaParser0;
      objectArray0[3] = (Object) arrayList0;
      objectArray0[4] = object0;
      Object object1 = new Object();
      objectArray0[5] = object1;
      arrayList0.toArray(objectArray0);
      arrayList0.toArray(objectArray0);
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList2.add(";");
      SystemInUtil.addInputLine("Hjl/O");
      arrayList2.add(";");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump(";P;gUppW<B/L#D<NP", stringWriter0);
      assertEquals("<NameList>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6061920506332319
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "VariableDeclaratorId");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "VariableDeclaratorId");
      stringWriter1.flush();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter2.write(0);
      stringWriter1.flush();
      stringWriter2.append('^');
      stringWriter2.close();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      stringWriter1.close();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-619));
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.mark((-2429));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      SystemInUtil.addInputLine((String) null);
      arrayList1.add("&");
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump("aaD$71PNGDJ6b7c", stringWriter0);
      assertEquals("VariableDeclaratorIdVariableDeclaratorId\u0000^<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)55;
      SystemInUtil.addInputLine(".]z3,rbbZu");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 890);
      byteArrayInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)55);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(3418);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      SimpleNode simpleNode0 = new SimpleNode((byte)55);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SystemInUtil.addInputLine("<<");
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("char", stringWriter0);
      assertEquals("<UnaryExpressionNotPlusMinus>\n  <identifier>*lshft</identifier>\n</UnaryExpressionNotPlusMinus>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)55;
      SystemInUtil.addInputLine("0;");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 890);
      byteArrayInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)55);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(3418);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      SimpleNode simpleNode0 = new SimpleNode((byte)55);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SystemInUtil.addInputLine("<<");
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("char", stringWriter0);
      assertEquals("<UnaryExpressionNotPlusMinus>\n  <identifier>*lshft</identifier>\n</UnaryExpressionNotPlusMinus>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(69);
      stringWriter2.write((-2620));
      stringWriter2.getBuffer();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      arrayList0.add("");
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = stringWriter1.append((CharSequence) "");
      char[] charArray0 = new char[11];
      charArray0[10] = 'i';
      charArray0[1] = '4';
      stringWriter0.write(0);
      charArray0[2] = '4';
      charArray0[3] = '4';
      stringWriter7.write(charArray0);
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter9 = new StringWriter(0);
      arrayList0.add("");
      arrayList0.add(":");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add((String) null);
      StringWriter stringWriter10 = new StringWriter(0);
      simpleNode0.dump(":", stringWriter7);
      assertEquals("\u0000444\u0000\u0000\u0000\u0000\u0000\u0000i<CompilationUnit>\n  <identifier>:</identifier>\n</CompilationUnit>\n", stringWriter7.toString());
      assertEquals("\u0000444\u0000\u0000\u0000\u0000\u0000\u0000i<CompilationUnit>\n  <identifier>:</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Fp/Oex?*O%iU)");
      stringReader0.markSupported();
      stringReader0.ready();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(4312);
      SimpleNode simpleNode1 = new SimpleNode(4312);
      simpleNode0.jjtAddChild(simpleNode1, 4312);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode1, 4313);
      assertEquals(4314, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5084965683569505
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, ",Bab|NY;Z&#1{,D");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u(P)DkM>*!}FRq4g");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "HiMrk}dw/mf");
      SimpleNode simpleNode1 = new SimpleNode((byte)0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "R\"|$}VG2oa+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.jjtAddChild(simpleNode0, 0);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      simpleNode1.dump((String) null, stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      
      FileSystemHandling.appendStringToFile(evoSuiteFile2, (String) null);
      Node node0 = simpleNode1.jjtGetChild((byte)0);
      assertEquals(0, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("u(La)DkM>*!}.aG4+g");
      simpleNode0.identifiers = arrayList0;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("</");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 3);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode0, 119);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (byte) (-86));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.304438279306519
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)39;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u(La)DkM>*!}9RG4+g");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "u(La)DkM>*!}9RG4+g");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "HiMrk}dw/mf");
      SimpleNode simpleNode1 = new SimpleNode((byte)0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.jjtAddChild(simpleNode0, (byte)39);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      simpleNode0.parser = javaParser0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u(La)DkM>*!}9RG4+g");
      simpleNode1.dump((String) null, stringWriter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2015));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5084965683569505
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)114;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u(La)DkM>*!}9RG4+g");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "u(La)DkM>*!}9RG4+g");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      stringWriter0.append((CharSequence) "u(La)DkM>*!}9RG4+g");
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "HiMrk}dw/mf");
      SimpleNode simpleNode1 = new SimpleNode((byte)0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.jjtAddChild(simpleNode0, 0);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u(La)DkM>*!}9RG4+g");
      simpleNode1.dump((String) null, stringWriter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2015));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)30;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1089767832), (-1089767832));
      JavaParser javaParser0 = new JavaParser("VariableDeclaratorId");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (byte)30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      StringReader stringReader1 = new StringReader("");
      stringReader1.read(charBuffer0);
      Node node1 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 96);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator(0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate2.or(predicate4);
      Predicate<Object> predicate7 = predicate2.negate();
      Object object0 = new Object();
      predicate7.test(object0);
      predicate0.negate();
      predicate6.and(predicate7);
      Predicate<Object> predicate8 = predicate5.and(predicate1);
      Predicate.isEqual((Object) predicate2);
      predicate8.negate();
      StringReader stringReader0 = new StringReader(",");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "EPDL=Fj(wyLy2%25T5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "HiMrk}dw/mf");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "R\"|$}VG2oa+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtAddChild(simpleNode0, 0);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R\"|$}VG2oa+");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      simpleNode0.jjtGetChild((byte)0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4704586557966834
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      SimpleNode simpleNode0 = new SimpleNode((byte)10);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&&");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter((byte)10);
      stringWriter0.flush();
      stringWriter0.append((CharSequence) null);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (byte)10);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtAddChild(simpleNode1, 12);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.jjtGetChild(0);
      assertEquals(13, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator(0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate2.or(predicate4);
      Predicate<Object> predicate7 = predicate2.negate();
      predicate0.negate();
      predicate6.and(predicate7);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) predicate2);
      Predicate<Object> predicate9 = predicate8.or(predicate4);
      Object object0 = new Object();
      Predicate<Object> predicate10 = predicate0.or(predicate9);
      predicate2.or(predicate10);
      predicate6.and(predicate5);
      arrayList0.add("TypeParameter");
      predicate4.test(arrayList0);
      predicate6.test(predicate8);
      arrayList0.removeIf(predicate6);
      StringWriter stringWriter0 = new StringWriter(0);
      SystemInUtil.addInputLine("TypeParameter");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("TypeParameter");
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump("TypeParameter", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>TypeParameter</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator(0);
      CharBuffer.allocate(96);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 96);
      simpleNode0.jjtAddChild((Node) null, 96);
      assertEquals(97, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)65;
      Object object0 = new Object();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("C");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((String) null);
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      unaryOperator0.apply("`3R-oow,![n");
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function0);
      Function<Object, Integer> function2 = unaryOperator1.compose((Function<? super Object, ? extends Integer>) function1);
      function2.apply(unaryOperator1);
      unaryOperator0.apply((String) null);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function2);
      Function<Object, Object> function3 = Function.identity();
      Function.identity();
      function1.apply("GlC");
      UnaryOperator<Integer> unaryOperator3 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator3.andThen((Function<? super Integer, ?>) function3);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter(84);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList1.add((String) null);
      arrayList2.add((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("IxYI}J=", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.iterator();
      arrayList0.add("&");
      ArrayList<SimpleNode> arrayList1 = new ArrayList<SimpleNode>();
      SimpleNode simpleNode0 = new SimpleNode((-1494));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("&");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("B_(RZY+^s. 0D8$I#");
      stringWriter0.flush();
      // Undeclared exception!
      try { 
        simpleNode0.dump("&", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "jT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&&");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "&&");
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      javaParser0.CompilationUnit();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "R\"|$}VG2oa+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&&");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      // Undeclared exception!
      try { 
        simpleNode0.toString("&&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 114
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-15));
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, ",B:b|NeY;Z&#1{bD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",B:b|NeY;Z&#1{bD");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",B:b|NeY;Z&#1{bD");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "u(P)DkM>*!}FRq4g");
      JavaParser javaParser0 = new JavaParser(",B:b|NeY;Z&#1{bD");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, ",B:b|NeY;Z&#1{bD");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "R\"|$}VG2oa+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R\"|$}VG2oa+");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, (String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 5637);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5637
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)30;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1089767832), (-1089767832));
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser("VariableDeclaratorId");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)30);
      byteArrayInputStream0.reset();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      InputStream[] inputStreamArray0 = new InputStream[13];
      byteArrayInputStream0.close();
      inputStreamArray0[0] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[1] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[2] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[3] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[4] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[6] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[2] = (InputStream) byteArrayInputStream0;
      inputStreamArray0[7] = (InputStream) byteArrayInputStream0;
      arrayList0.toArray(inputStreamArray0);
      byteArrayInputStream0.markSupported();
      arrayList0.add("wW4nj0J|N`dH&_lI`6");
      Token token0 = javaParser0.getNextToken();
      token0.next = null;
      javaParser0.jj_nt = token0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(inputStreamArray0[3], inputStreamArray0[2]);
      sequenceInputStream0.close();
      sequenceInputStream0.close();
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.markSupported();
      javaParser0.token_source.jjFillToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamArray0[6], 0, 0);
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceType : wW4nj0J|N`dH&_lI`6", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "jT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u(LP)DkM>*!}FRq4+g");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "u(LP)DkM>*!}FRq4+g");
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      javaParser0.CompilationUnit();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)114);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "R\"|$}VG2oa+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte)114;
      byteArray0[7] = (byte)114;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u(LP)DkM>*!}FRq4+g");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, (String) null);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "EPDL=Fj(wyLy2%25T5");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "HiMrk}dw/mf");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " : ");
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EPDL=Fj(wyLy2%25T5");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "R\"|$}VG2oa+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("HiMrk}dw/mf");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R\"|$}VG2oa+");
      SimpleNode simpleNode0 = new SimpleNode((byte)114);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, (byte)114);
      assertEquals(115, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Locale locale0 = Locale.KOREA;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) null, locale_FilteringMode0);
      ArrayList<String> arrayList1 = new ArrayList<String>(list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1, locale_FilteringMode1);
      Locale locale1 = Locale.ITALY;
      locale0.toLanguageTag();
      locale0.getDisplayLanguage(locale1);
      locale0.getUnicodeLocaleKeys();
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList2.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("[5)U7z0/*uH]E", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*ge</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.539790510000903
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "HiMrk}dw/mf");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HiMrk}dw/mf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u(La)DkM>*!}9RG4+g");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("HiMrk}dw");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "u(La)DkM>*!}9RG4+g");
      StringWriter stringWriter0 = new StringWriter((byte)0);
      JavaParser javaParser0 = new JavaParser("HiMrk}dw/mf");
      SimpleNode simpleNode0 = new SimpleNode((-2914));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("YEZd1M6|a&E");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      arrayList0.add("HiMrk}dw/mf");
      SystemInUtil.addInputLine("SingleMemberAnnotation");
      StringWriter stringWriter1 = new StringWriter(54);
      javaParser0.EqualityExpression();
      // Undeclared exception!
      try { 
        simpleNode0.dump("HiMrk}dw/mf", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
