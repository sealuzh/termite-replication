/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 08:29:07 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9568016124420415
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4881, (-1564));
      javaCharStream0.backup((byte)101);
      javaCharStream0.bufsize = 19;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@<aIP");
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      assertEquals(3997, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.AdjustBuffSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream1.adjustBeginLineColumn(1, 3061);
      javaCharStream1.GetImage();
      javaCharStream1.GetImage();
      assertEquals(2, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9163403268005843
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)55, (-296));
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.UpdateLineColumn('\n');
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9041911973400678
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader2 = new StringReader(" column ");
      stringReader2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3062, 3062, 1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.BeginToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(1, (-1));
      assertEquals(2, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8261674308051874
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-296), (-296));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, (byte)40, (-296));
      javaCharStream0.backup((-1));
      char[] charArray0 = javaCharStream1.buffer;
      javaCharStream1.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1);
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('7', char0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("=$v[D*U&2$2>1mMC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 4, (byte)5);
      javaCharStream0.backup((byte)14);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -9
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5052711207827818
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader2 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3062, 3062, 3062);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.getEndColumn());
      assertEquals('o', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)55, (-296));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream2);
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('\n', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("sGN$Vp{4L}~=em`");
      StringReader stringReader1 = new StringReader("VYb5&Z99m,dT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 3062, 3062);
      javaCharStream0.backup((-1417));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(3062, 67);
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t?wXo+#");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3056);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.available();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      pipedOutputStream0.flush();
      pipedInputStream0.skip((-931));
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-4245), 3048, (-931));
      bufferedInputStream0.markSupported();
      pipedOutputStream0.flush();
      javaCharStream0.bufcolumn = null;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9513496062520657
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(7);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(3062, 0);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(3062, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3535913521346064
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5:sun JW>\"Tnwa4j");
      StringReader stringReader2 = new StringReader("5:sun JW>\"Tnwa4j");
      stringReader2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1, 3062, 3062);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.readChar();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('s', char0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)5, 8, 468);
      javaCharStream0.backup((-515));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9151551755947063
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1141), (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      javaCharStream0.backup(1);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-1141), javaCharStream0.getBeginLine());
      assertEquals('c', char0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4064, 3560);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      javaCharStream0.available = (int) (byte)0;
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      javaCharStream0.bufcolumn = intArray0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6637367559970504
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.bufpos = 398;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.reset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byteArray0[1] = (byte)0;
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      assertEquals(6542, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1183, 1183);
      javaCharStream0.Done();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-2213), 15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9504543117424777
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(398, javaCharStream0.getBeginLine());
      assertEquals(398, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.212256610922266
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup(2726);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2726, 1372, 2726);
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(4073, (-1871));
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, (-1), (-1871));
      String string0 = javaCharStream2.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|f");
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 3062, 4068, 4102);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, (byte)4);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'I';
      charArray0[1] = '*';
      charArray0[2] = ')';
      charArray0[3] = 'e';
      charArray0[4] = 'r';
      charArray0[5] = '7';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream2, 1580, 4086, (-3866));
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream2, sequenceInputStream1);
      javaCharStream0.backup(95);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.BeginToken();
      assertEquals(4002, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 89);
      javaCharStream0.backup(3316);
      char[] charArray0 = javaCharStream0.buffer;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3227
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.tokenBegin = 398;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.reset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6094379124341003
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4064, 3560);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      javaCharStream0.available = (int) (byte)0;
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      javaCharStream0.bufcolumn = intArray0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6");
      stringReader0.reset();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-108), 66, 1515);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-108), int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0X]V2Dt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-603), (-603));
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2004), 3389, 3389);
      assertEquals((-1), javaCharStream0.bufpos);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QgQ.g^TCTPU|t>tV9");
      StringReader stringReader1 = new StringReader("{Mnf'BP!d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1101), (-1896), 2076);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      stringReader1.skip(332L);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("{Mnf'BP!d");
      stringReader0.read();
      boolean boolean0 = stringReader0.markSupported();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0880919427638154
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2048;
      intArray0[3] = 2048;
      intArray0[4] = (int) '$';
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "QOo9";
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)2;
      stringReader0.skip(420L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'P';
      charArray0[1] = '<';
      charArray0[2] = '0';
      charArray0[3] = 'J';
      charArray0[4] = 'p';
      charArray0[5] = '&';
      charArray0[6] = '5';
      charArray0[7] = '\"';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9792045174343245
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4064, 3560);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[3];
      javaCharStream0.available = (int) (byte)0;
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.tokenBegin = 398;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.reset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      StringReader stringReader1 = new StringReader(" column ");
      stringReader1.markSupported();
      javaCharStream0.adjustBeginLineColumn((byte)0, 398);
      assertEquals(398, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaCharStream.hexval('F');
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)67;
      StringReader stringReader0 = new StringReader("htWdzj(od%~$uJcK:2");
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.5221513024111673
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wtMZxwd6M;I>2_Dzn,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-598), (-598));
      int[] intArray0 = new int[8];
      intArray0[0] = (-598);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      stringReader0.skip((-1624L));
      intArray0[4] = (-598);
      intArray0[5] = (-598);
      intArray0[6] = (-598);
      intArray0[7] = (-1);
      javaCharStream0.bufline = intArray0;
      char[] charArray0 = new char[18];
      charArray0[0] = 'Z';
      charArray0[1] = 'F';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      stringReader0.ready();
      JavaCharStream.hexval('C');
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(4, (-1657));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1383972463477243
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("22#,=c_l6>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)71, 72);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 2908, 78);
      javaCharStream1.nextCharInd = 1;
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      assertFalse(stringReader1.equals((Object)stringReader0));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = " \\column ";
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.inBuf = (-1141);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = null;
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 72, 398);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader("HQ%1t4xc");
      StringReader stringReader2 = new StringReader("HQ%1t4xc");
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3030924037617193
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)15;
      byteArray0[0] = (byte)15;
      stringReader0.reset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 2487;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3030924037617193
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      stringReader0.reset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = 2487;
      javaCharStream0.adjustBeginLineColumn((-1126), (byte)15);
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getLine();
      assertEquals(15, javaCharStream0.getBeginColumn());
      assertEquals((-1126), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9853608199541368
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 68, 1);
      javaCharStream0.BeginToken();
      stringReader0.skip(10);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      StringReader stringReader2 = new StringReader(" column ");
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('o', char0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.2286421233170073
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('p');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "$NW,J2b";
      StringReader stringReader0 = new StringReader("$NW,J2b");
      char char0 = 'D';
      JavaCharStream.hexval('D');
      char char1 = '9';
      JavaCharStream.hexval('9');
      char char2 = '?';
      JavaCharStream.hexval('9');
      char char3 = 'x';
      char char4 = 'T';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.021178108219679
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 68, 1);
      javaCharStream0.BeginToken();
      stringReader0.skip(10);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      StringReader stringReader2 = new StringReader(" column ");
      javaCharStream0.AdjustBuffSize();
      stringReader0.reset();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getColumn();
      assertEquals(69, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.720193459219825
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      char[] charArray0 = new char[1];
      charArray0[0] = '_';
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('c', char0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-179));
      char[] charArray0 = new char[8];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[6] = 'k';
      charArray0[4] = ' ';
      charArray0[6] = '.';
      charArray0[0] = 'b';
      javaCharStream0.prevCharIsCR = true;
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-179));
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray0 = new char[8];
      charArray0[0] = '8';
      charArray0[1] = 'w';
      charArray0[2] = 'k';
      charArray0[4] = ' ';
      charArray0[5] = 'P';
      charArray0[6] = '.';
      charArray0[0] = 'b';
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.889159163754021
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2073);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.ExpandBuff(false);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 79, 2073);
      javaCharStream1.GetImage();
      javaCharStream0.adjustBeginLineColumn((-1), (-1976));
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1, 4853);
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-1976), javaCharStream0.getBeginColumn());
      
      int int1 = javaCharStream2.getBeginLine();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1742933185645
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)124;
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)105;
      byteArray0[7] = (byte)73;
      byteArray0[8] = (byte) (-35);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      assertEquals(897, javaCharStream0.getEndColumn());
      
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetImage();
      assertEquals(897, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.059044366009098
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, (-1), 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(":");
      StringReader stringReader2 = new StringReader("m");
      stringReader2.ready();
      stringReader2.read();
      stringReader2.markSupported();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaCharStream.hexval('6');
      PipedInputStream pipedInputStream0 = new PipedInputStream(6);
      PipedInputStream pipedInputStream1 = new PipedInputStream(52);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream((PipedOutputStream) null, (-4924));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4064, 3560);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4064, 3560);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, (-1), 3560);
      // Undeclared exception!
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int1 = JavaCharStream.hexval('5');
      assertEquals(5, int1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("22#,=c_l6>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rNP)'p");
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = 'b';
      charArray0[2] = 's';
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-8), 646);
      stringReader0.skip(0L);
      stringReader0.ready();
      char char0 = 'g';
      javaCharStream0.Done();
      stringReader0.ready();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('g');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o@.`|");
      StringReader stringReader1 = new StringReader("o@.`|");
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)14;
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S^}Y1,=\"^HlrwH3*j");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('3');
      PipedInputStream pipedInputStream0 = new PipedInputStream(9);
      pipedInputStream0.markSupported();
      pipedInputStream0.markSupported();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[0];
      try { 
        pipedOutputStream1.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9792045174343245
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2004), 3389, 3389);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 4086, 8, (-1));
      javaCharStream1.backup(3389);
      javaCharStream1.GetSuffix(1737);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.171591331630622
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.452956367916732
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O/YJkm\"8+;N]7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2);
      javaCharStream0.adjustBeginLineColumn(2, 2);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      int[] intArray0 = new int[6];
      stringReader0.reset();
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = 2;
      stringReader0.reset();
      javaCharStream0.bufline = intArray0;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.ReInit((Reader) stringReader0, 94, 1, 0);
      stringReader0.read(charArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      stringReader0.close();
      javaCharStream0.nextCharInd = (-594);
      javaCharStream0.AdjustBuffSize();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JavaCharStream.hexval('d');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o@.`|");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaCharStream.hexval('e');
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("`S[]W/a");
      StringReader stringReader2 = new StringReader("`S[]W/a");
      stringReader2.read();
      boolean boolean0 = stringReader0.markSupported();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      stringReader0.ready();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((byte)0, (-2666));
      assertEquals((-2666), javaCharStream0.getBeginColumn());
      
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaCharStream.hexval('4');
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.1742933185644997
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals(2048, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      byte[] byteArray0 = new byte[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader2 = new StringReader(" column ");
      stringReader2.skip((-1L));
      stringReader2.reset();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(80);
      stringReader0.read(charBuffer0);
      charArray0[0] = ';';
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.tokenBegin = 398;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)88;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-128), (byte)0);
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(398, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "";
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-521), 1472);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2908, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = '\"';
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-508), (-1070));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      javaCharStream0.ExpandBuff(false);
      int int0 = (-2595);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (int) (byte)0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0625354080615974
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      javaCharStream0.bufpos = 2487;
      javaCharStream0.adjustBeginLineColumn((-1126), (byte)15);
      javaCharStream0.UpdateLineColumn('i');
      assertEquals(15, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0097091818941455
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("VYb5&Z99m,dT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3062, 3062);
      javaCharStream0.backup(3062);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VYb5&Z99m,dT");
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(67, (-1));
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0898810398247725
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u2#/,=c_l6>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(897);
      javaCharStream0.GetImage();
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      javaCharStream0.adjustBeginLineColumn((-411), 897);
      assertEquals(1151, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("v'sgeh%V'Jj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, 13, 0);
      javaCharStream0.ReInit((Reader) stringReader0, 606, (int) (byte)0, 631);
      javaCharStream0.ReInit((Reader) null, 2497, (-1581));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 76, 68, 76);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      stringReader0.skip((-1903));
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("c");
      stringReader2.read();
      StringReader stringReader3 = null;
      try {
        stringReader3 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7728746523964811
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(52);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-179));
      char[] charArray0 = new char[8];
      charArray0[0] = '8';
      charArray0[1] = 'w';
      charArray0[2] = 'k';
      charArray0[4] = ' ';
      charArray0[5] = 'P';
      charArray0[6] = '.';
      charArray0[0] = 'b';
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3049, 3049);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Bq(}b%/c5{Or+?u ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Pj");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 0, 15);
      javaCharStream0.bufpos = 2482;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.6035681031705156
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-296), (-296));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, (byte)40, (-296));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      javaCharStream1.readChar();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4976864074866398
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A]7+8P\u0000$E^K}<b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, (-5225));
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('n', char0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = (-1219);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1095, (-1219), 4096);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 66, 0);
      stringReader1.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(67);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1580, 2015, 2015);
      sequenceInputStream0.markSupported();
      javaCharStream0.adjustBeginLineColumn(0, (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wtMZxd6M;I2_Dzn,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-598), (-598));
      javaCharStream0.ReadByte();
      StringReader stringReader1 = new StringReader("htWdzj(od%~$uJcK:2");
      assertFalse(stringReader1.equals((Object)stringReader0));
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      StringReader stringReader2 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")Ht8^<@<xDQI]#5-7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      char[] charArray0 = new char[4];
      stringReader0.mark(4646);
      charArray0[0] = 'q';
      charArray0[1] = 'F';
      charArray0[2] = 'Z';
      charArray0[3] = '\"';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      char char0 = '=';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4062, 4089);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 4062, 4060, 4060);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.191716260236951
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(897, int0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.3066687254045313
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)5, (byte) (-22));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte)5);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      javaCharStream0.getEndLine();
      String string0 = "";
      String string1 = "";
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 578, 578);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1742933185645
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$^@e`S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.tokenBegin = 241;
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 2484, (-2004), (-2004));
      javaCharStream0.adjustBeginLineColumn((-2004), (-781));
      assertEquals((-781), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.114698279466819
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)14, 1587);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 4080, 398, 0);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream2.markSupported();
      javaCharStream0.adjustBeginLineColumn(1580, 1619);
      assertEquals(1619, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream2, 1580, 4086, (-3866));
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream2, sequenceInputStream1);
      sequenceInputStream3.markSupported();
      StringReader stringReader0 = new StringReader("");
      String string0 = javaCharStream0.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PW]wzX&~Ww");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringReader stringReader0 = new StringReader("1W`~OOlxh6UBfTv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 79, 8, 79);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("QOo9");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, 987, (-1047), (-1047));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N,=$\"tWTTzMoHa");
      StringReader stringReader1 = new StringReader("N,=$\"tWTTzMoHa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1174, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1172));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Pj");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 0, 15);
      char[] charArray0 = javaCharStream0.GetSuffix(6);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(6, charArray0.length);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4pBmg:~*w)N66");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.8462202193216333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-23));
      char[] charArray0 = javaCharStream0.buffer;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6728640383473359
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader2 = new StringReader(" column ");
      stringReader2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3062, 3062, 1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.readChar();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('o', char0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      StringReader stringReader2 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3062, 3062, 1);
      javaCharStream0.backup(1);
      char[] charArray0 = javaCharStream0.buffer;
      StringReader stringReader3 = null;
      try {
        stringReader3 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.720193459219825
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("KbX1r}#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)5, (byte)107);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('K', char0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      String string0 = "vXR#>!:@V";
      StringReader stringReader2 = new StringReader("vXR#>!:@V");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1141));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      javaCharStream0.FillBuff();
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      StringReader stringReader2 = new StringReader("p@Bm@$28");
      StringReader stringReader3 = new StringReader("p@Bm@$28");
      assertFalse(stringReader3.equals((Object)stringReader1));
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1581, 2015, 2015);
      sequenceInputStream0.markSupported();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)9, (byte)0);
      byteArrayInputStream0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 94, (int) (byte)2, 4096);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("mQZA{Q&v3IiN_");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      stringReader3.markSupported();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('Q', char0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.64622455382987
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)125;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte) (-5);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.adjustBeginLineColumn((byte)125, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A]7+8P\u0000$E^K}<b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = (-1);
      int int1 = 8;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1), 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        JavaCharStream.hexval('!');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JavaCharStream.hexval('E');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("7'3m&:ChuG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)14, (-3658), (byte)14);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('7', char0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.297295830625819
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream2, 1580, 4086, (-3866));
      javaCharStream0.ReInit((InputStream) sequenceInputStream2, 811, 4083);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream2, sequenceInputStream1);
      sequenceInputStream3.markSupported();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('S');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1267, (-1545), (-2948));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = (-2004);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-2004), (-2004), 3389);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream2, sequenceInputStream1);
      sequenceInputStream3.markSupported();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1), (-1064));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invlid escape character at line ");
      stringReader0.mark(1937);
      StringReader stringReader1 = new StringReader("Invlid escape character at line ");
      stringReader1.skip((-774L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1937, 3052, 3052);
      stringReader1.ready();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 69, 19);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1511);
      byte byte0 = (byte)0;
      byte byte1 = (byte) (-36);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-1), 1);
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-74);
      try { 
        bufferedInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 2484, 3389, (-2004));
      sequenceInputStream0.markSupported();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("mQZA{Q&v3IiN_");
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader2, (-1047), 26, 10);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("mQZA{Q&v3IiN_");
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader2, (-1047), 0, 6120);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 398, (-1137));
      assertEquals((-1), javaCharStream0.bufpos);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QOo9");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("mQZA{Q&v3IiN_");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("mQZA{Q&v3IiN_");
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
