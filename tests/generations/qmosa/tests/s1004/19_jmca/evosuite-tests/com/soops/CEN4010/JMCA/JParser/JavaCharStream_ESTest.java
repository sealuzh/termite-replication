/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 13:50:28 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 63, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-46);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-91);
      byteArray1[1] = (byte) (-91);
      javaCharStream0.bufpos = (int) (byte)102;
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 103
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-155), 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte) (-125);
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.read(byteArray0);
      pipedInputStream0.mark(125);
      javaCharStream0.BeginToken();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = javaCharStream0.getEndLine();
      assertEquals((-155), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6485099169813684
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("${2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '1';
      javaCharStream0.inBuf = 12;
      charArray0[4] = '2';
      javaCharStream0.BeginToken();
      javaCharStream0.column = (-607);
      javaCharStream0.getBeginColumn();
      javaCharStream0.UpdateLineColumn('7');
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getLine();
      assertEquals((-606), javaCharStream0.getBeginColumn());
      assertEquals(12, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "pUuB$1D");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1212), 1, 655);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = 3;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("$I&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5374887617326025
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-118), (byte)92);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("j");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream2);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1);
      // Undeclared exception!
      try { 
        javaCharStream2.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.687544037603175
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 11);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.maxNextCharInd = 11;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream0.skip(897);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 11, 897, 11);
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1087793131104093
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)92);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\n', char0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.624307495840657
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.available = 0;
      StringReader stringReader1 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-725), 0);
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.BeginToken();
      javaCharStream1.getLine();
      assertEquals(4096, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3436799873410004
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 63, 1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-46);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-91);
      byteArray1[1] = (byte) (-91);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray1[2] = (byte)102;
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.readChar();
      assertEquals((-1), javaCharStream0.getBeginLine());
      assertEquals('x', char0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2938821146629427
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)127;
      StringReader stringReader0 = new StringReader("@U2(IA^lBq'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-112), (byte)8);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.616593929073245
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 0, 1, 95);
      javaCharStream0.backup(95);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7129516529929876
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 82, (byte)11, (byte)11);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      bufferedInputStream0.skip((-688L));
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (int) (byte)11, 490, (int) (byte)11);
      javaCharStream0.backup(2025);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4093071059006217
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-118), (byte)92);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream2.mark((byte)92);
      byteArrayInputStream2.reset();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream2);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-1), (byte)92, (byte)92);
      javaCharStream2.readChar();
      char char0 = javaCharStream2.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.346135199365585
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream4.skip((-1L));
      byteArrayInputStream1.close();
      boolean boolean0 = JavaCharStream.staticFlag;
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, (byte)11, 1931);
      byteArrayInputStream5.reset();
      byteArrayInputStream5.skip(1087L);
      byteArrayInputStream2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.inBuf = (-2975);
      javaCharStream0.BeginToken();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.adjustBeginLineColumn((byte)11, (byte)11);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-118), (byte)92);
      byteArrayInputStream1.mark(79);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4881951497246875
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 63, 1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5061784394097097
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 1746);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 63, (-1), 0);
      javaCharStream1.bufsize = 1;
      javaCharStream1.AdjustBuffSize();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.751146388182052
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.backup(2039);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Gl2[Rj/ue+");
      JavaCharStream.hexval('E');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-118), 1277);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      byteArrayInputStream0.mark(117);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.reset();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream1);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4746907339508297
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte) (-16);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.ReInit((InputStream) dataInputStream0);
      char[] charArray0 = new char[6];
      charArray0[0] = '%';
      charArray0[1] = 'N';
      charArray0[2] = '`';
      charArray0[3] = 'v';
      charArray0[4] = 'W';
      charArray0[5] = 'u';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-118), (byte)92);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2580, (-725), (byte)92);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, (-195), 76, (-618));
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3954102438258458
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 1746);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.adjustBeginLineColumn(2609, 1746);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      char char0 = ':';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.595455413778436
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      javaCharStream0.GetImage();
      javaCharStream0.available = 0;
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '1';
      javaCharStream0.inBuf = 12;
      charArray0[4] = '2';
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(0, 12);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 63, 1);
      byte[] byteArray0 = new byte[5];
      stringReader0.close();
      byteArray0[0] = (byte) (-46);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-91);
      byteArray1[1] = (byte) (-91);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray1[2] = (byte)102;
      javaCharStream0.maxNextCharInd = (int) (byte) (-46);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.381593110439918
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('T');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.594683213006235
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      javaCharStream0.GetImage();
      javaCharStream0.available = 0;
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '1';
      javaCharStream0.inBuf = 12;
      charArray0[4] = '2';
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(0, 12);
      javaCharStream0.ExpandBuff(true);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.154495808699948
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-4183), (byte)92);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 152, 86);
      byteArrayInputStream3.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.mark((-297));
      byteArrayInputStream4.reset();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream1);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Sm|aVA{AQ1Q~^Ui5la");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8550121712768144
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(897);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)12;
      javaCharStream0.adjustBeginLineColumn(92, (-1867));
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.readChar();
      javaCharStream0.getEndLine();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.375269713872619
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-155), 0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark((-155));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte) (-11);
      byteArray0[4] = (byte) (-125);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte) (-125));
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark((-27));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream2);
      byteArrayInputStream1.read();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getEndColumn());
      assertEquals(0, javaCharStream0.getBeginColumn());
      assertEquals('c', char0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D3Bk@vG[6]!M5,=2Aj9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2497336340073364
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&]~ZM4D jta!w,Yl");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 1746);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = '\"';
      charArray0[2] = ':';
      charArray0[3] = '$';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-40);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, 4);
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'U';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('f');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      stringReader0.markSupported();
      char[] charArray0 = new char[9];
      charArray0[0] = 'c';
      charArray0[1] = 'r';
      charArray0[2] = ',';
      charArray0[3] = 'N';
      charArray0[4] = '3';
      charArray0[5] = 'V';
      charArray0[6] = '>';
      charArray0[7] = '%';
      charArray0[8] = '#';
      stringReader0.read(charArray0);
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.538259529269428
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("w");
      CharBuffer.allocate(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'x';
      charArray0[1] = '\u000B';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      byteArrayInputStream3.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 2047, 0);
      javaCharStream1.GetImage();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      char char0 = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = '\"';
      charArray0[2] = ':';
      charArray0[3] = '$';
      charArray0[4] = '2';
      charArray0[5] = 'k';
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$NW,J2b");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('5');
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("p'V");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte)73;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 62, 5);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      try { 
        dataInputStream0.readUnsignedShort();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PJ4CG>VO=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "oTxOJ;");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_}5EQU~bwtv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0eU5");
      JavaCharStream.hexval('4');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.572257719637985
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.available = 0;
      StringReader stringReader1 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-725), 0);
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream1.getBeginLine();
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 0, (-1));
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6237951065726832
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaCharStream.hexval('C');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-247), 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
      
      int int1 = JavaCharStream.hexval('C');
      assertEquals(12, int1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      StringReader stringReader1 = new StringReader("$NW,J2b");
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char char0 = '<';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-112);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-112);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[8];
      charArray0[1] = '\"';
      charArray0[3] = '$';
      charArray0[4] = '\"';
      charArray0[5] = 'k';
      charArray0[6] = '8';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('A');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)117;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringReader stringReader1 = new StringReader("");
      char char0 = 'R';
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6779036183906686
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-684), (-17));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.adjustBeginLineColumn((-17), 119);
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(119);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn((-684), 119);
      javaCharStream0.backup((-684));
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn(119, (-684));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-521), (-1), 81);
      javaCharStream1.buffer = null;
      javaCharStream0.inBuf = 81;
      javaCharStream0.getBeginLine();
      javaCharStream1.FillBuff();
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix(1143);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6671973506872453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '1';
      javaCharStream0.inBuf = 12;
      charArray0[4] = '2';
      charArray0[5] = '$';
      charArray0[6] = '$';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D3Bk@vG[6]!M5,=2Aj9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      pipedInputStream0.read(byteArray0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (-608), (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)73;
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = '\"';
      charArray0[2] = ':';
      charArray0[3] = '$';
      charArray0[4] = '2';
      charArray0[5] = 'k';
      charArray0[6] = '8';
      charArray0[7] = 'A';
      stringReader0.read(charArray0, 0, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 91, 91);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(129);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.757637858307174
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      pipedInputStream0.read(byteArray0);
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 4096, (-1));
      javaCharStream0.adjustBeginLineColumn(0, (-1));
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.skip((-1L));
      byteArrayInputStream0.close();
      boolean boolean0 = JavaCharStream.staticFlag;
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray1, 3577, 3126);
      byteArrayInputStream0.reset();
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0, 96, (byte)11);
      byteArrayInputStream6.skip(0L);
      byteArrayInputStream2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream4);
      javaCharStream0.BeginToken();
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)70;
      ByteArrayInputStream byteArrayInputStream7 = new ByteArrayInputStream(byteArray2);
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, byteArrayInputStream4.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      pipedInputStream0.read(byteArray0);
      StringReader stringReader0 = new StringReader("F\"A`sJIpOv3W30iEK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('F', char0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.340534377469851
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[11] = (byte)116;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte) (-16);
      StringReader stringReader0 = new StringReader("r`O)><Q[.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2614), (byte)73);
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'S';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'U';
      stringReader0.read(charArray0);
      String string0 = javaCharStream0.GetImage();
      stringReader0.read();
      StringReader stringReader1 = new StringReader(string0);
      String string1 = javaCharStream0.GetImage();
      StringReader stringReader2 = new StringReader(string1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[2] = ':';
      charArray0[3] = '$';
      charArray0[4] = '2';
      charArray0[5] = 'k';
      charArray0[6] = '2';
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2001658109230795
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 1793, 4099);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream2);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.mark((-2106));
      byteArrayInputStream3.reset();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.4461402049996117
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)41;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      byteArrayInputStream0.close();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaCharStream.hexval('C');
      StringReader stringReader0 = new StringReader("u");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 12, 0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      JavaCharStream.hexval('b');
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")4(CIo;roWWqGZCIg");
      JavaCharStream.hexval('B');
      try { 
        JavaCharStream.hexval('*');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v");
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[4] = (byte)116;
      byteArray0[3] = (byte)116;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('c');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6659202114790714
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '1';
      charArray0[4] = '2';
      charArray0[5] = '$';
      charArray0[6] = '$';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.inBuf = 0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetSuffix('$');
      assertEquals(12, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.475143011156855
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("5cK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(897);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      byteArrayInputStream2.close();
      byteArrayInputStream1.close();
      byteArrayInputStream1.markSupported();
      byteArrayInputStream0.skip((byte)11);
      byteArrayInputStream0.skip((byte)11);
      byteArrayInputStream2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.BeginToken();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix((byte)11);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("@'*z<k!SM@3q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(0, charArray0.length);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6433919641999526
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 569);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream1.adjustBeginLineColumn(0, 5);
      javaCharStream0.BeginToken();
      javaCharStream1.getBeginColumn();
      javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      
      int int0 = javaCharStream1.getBeginLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OW,J_b");
      StringReader stringReader1 = new StringReader("}D0,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.GetSuffix(93);
      assertEquals(93, charArray0.length);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.477512467439675
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte) (-16);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 14, (-359), 4082);
      javaCharStream1.FillBuff();
      char char0 = javaCharStream1.ReadByte();
      assertEquals('.', char0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JavaCharStream.hexval('8');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('8');
      StringReader stringReader1 = new StringReader(".");
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.4865498370764083
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.available = 0;
      stringReader0.read();
      StringReader stringReader1 = new StringReader(string0);
      StringReader stringReader2 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 36, (-1), 36);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.62562475227064
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader1 = new StringReader("V&<2}?3U#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1591), 82);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(82, (-1));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(6144, javaCharStream0.bufpos);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('0');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaCharStream.hexval('3');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)11;
      byteArray1[2] = (byte)11;
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, (byte)11, (-1));
      byteArrayInputStream2.close();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream1.close();
      byteArrayInputStream2.markSupported();
      byteArrayInputStream4.markSupported();
      StringReader stringReader0 = new StringReader("0??u>I`FSHt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('0', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)116;
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4096, 57, 4054);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(4096);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      char char0 = '=';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3, (-535), 3);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.5961797609483006
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte)7;
      StringReader stringReader0 = new StringReader("EJ?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-105), 4079);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(4070, 4079);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(4070, javaCharStream0.getBeginLine());
      assertEquals(4079, int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4801770234044787
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("${2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-521));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '1';
      javaCharStream0.inBuf = 12;
      charArray0[4] = '2';
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("k_\"#L HR|m+TDD");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1943), 89);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 1014, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn((-1943), (-521));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3770, 3770, 3770);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$NW,J2b");
      stringReader0.ready();
      byte[] byteArray0 = new byte[4];
      stringReader0.markSupported();
      byteArray0[3] = (byte) (-1);
      byteArray0[2] = (byte)99;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'm';
      stringReader0.read(charArray0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.available = 0;
      stringReader0.read();
      StringReader stringReader1 = new StringReader(string0);
      stringReader0.skip(0L);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-835), (-835), 249);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.getLine();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.6314103392082417
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5*){");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(897);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 70);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.readChar();
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.getEndLine());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)73;
      StringReader stringReader0 = new StringReader("g;&bLgY");
      stringReader0.ready();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.mark(94);
      StringReader stringReader1 = new StringReader("g;&bLgY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2918, (byte)116);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('g', char0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("@U2(IA^lBq'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0, 168, 126);
      javaCharStream0.ReInit((Reader) stringReader0, 168, 126, 324);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.5961797609483006
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 91, (-1339));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(84, 12);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(84, javaCharStream0.getBeginLine());
      assertEquals(12, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.skip(1L);
      byteArrayInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.adjustBeginLineColumn((-3268), 84);
      assertEquals(84, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byteArrayInputStream2.markSupported();
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PW]wzX&~Ww");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/U2(TA^lBq'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("xX\"3+K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 63, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 807, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v");
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[4] = (byte)116;
      byteArray0[3] = (byte)116;
      byteArray0[6] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1$E(]vBU]1/RiPz(a!");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("@'*z<k!SM@3q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1469));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4168), 83);
      char[] charArray0 = new char[6];
      charArray0[0] = 'n';
      charArray0[1] = '0';
      charArray0[2] = '3';
      charArray0[3] = 'g';
      charArray0[4] = '4';
      charArray0[5] = 'g';
      javaCharStream0.nextCharBuf = charArray0;
      char[] charArray1 = javaCharStream0.GetSuffix(1035);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(1035, charArray1.length);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)8, 152);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark((byte)8);
      byteArrayInputStream2.reset();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream2);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.4395720605004327
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 897);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      stringReader0.ready();
      byte[] byteArray0 = new byte[0];
      javaCharStream0.backup((-2931));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2714, 93);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.367629954267816
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream2.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.BeginToken();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      assertFalse(byteArrayInputStream3.equals((Object)byteArrayInputStream1));
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.193237504999303
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 1544, 1);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream1.skip(2110L);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)8, (-1951));
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte)8;
      byteArray1[2] = (byte)8;
      byteArray1[3] = (byte)8;
      byteArray1[4] = (byte)8;
      byteArray1[5] = (byte)8;
      byteArray1[6] = (byte)8;
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream2.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream2);
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream4.mark(1);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream2);
      byteArrayInputStream6.read();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream4);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = (-1219);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1219), (-1219), 0);
      javaCharStream0.ReInit((Reader) null, 0, 0, 0);
      javaCharStream0.available = 0;
      javaCharStream0.Done();
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Q');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-352), 74);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 74, 98);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-1441L));
      byteArrayInputStream1.close();
      boolean boolean0 = JavaCharStream.staticFlag;
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, 9, (byte)116);
      byteArrayInputStream0.reset();
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream6.skip(0L);
      byteArrayInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream3);
      javaCharStream0.BeginToken();
      ByteArrayInputStream byteArrayInputStream7 = new ByteArrayInputStream(byteArray0);
      assertFalse(byteArrayInputStream7.equals((Object)byteArrayInputStream5));
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.0172089238352386
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (-1177), 116);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0, 456, (byte)11);
      byteArrayInputStream6.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream2);
      ByteArrayInputStream byteArrayInputStream7 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream6.mark((byte)11);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream4);
      byteArrayInputStream0.read();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream2.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-118), (byte)92);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream2.mark((byte)92);
      byteArrayInputStream2.reset();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream4.skip((byte)92);
      byteArrayInputStream4.close();
      byteArrayInputStream2.markSupported();
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte) (-118), (byte)92);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.445805476579477
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream4.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2);
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream6);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 2075, 2075);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D3Bk@vG[6]!M5,=2Aj9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D3Bk@vG[6]!M5,=2Aj9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D3Bk@vG[6]!M5,=2Aj9");
      try { 
        JavaCharStream.hexval('v');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream1.reset();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (-1177), 116);
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0, 456, (byte)11);
      byteArrayInputStream6.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream2);
      ByteArrayInputStream byteArrayInputStream7 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.skip((-1465L));
      byteArrayInputStream4.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream4);
      javaCharStream0.BeginToken();
      ByteArrayInputStream byteArrayInputStream8 = new ByteArrayInputStream(byteArray0);
      assertEquals(12, byteArrayInputStream8.available());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.skip((byte)8);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream1.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)8, (int) (byte)8);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 470, 0, (-828));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.3514857073378668
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5cK{");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 897, 897, 11);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.maxNextCharInd = 11;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream0.skip(897);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 11, 897, 11);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.0820791305808437
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@U2(IA^lBq'");
      StringReader stringReader0 = new StringReader("xX\"3+K");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('x', char0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1, 1337, 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = '\"';
      charArray0[2] = ':';
      charArray0[3] = '$';
      charArray0[4] = '2';
      charArray0[5] = 'k';
      charArray0[6] = '8';
      charArray0[7] = 'A';
      stringReader0.read(charArray0, 0, 0);
      int int0 = 11;
      String string0 = "f]~t<j[u}$";
      StringReader stringReader1 = new StringReader("f]~t<j[u}$");
      int int1 = 2704;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader1, 2704, 7, (-3189));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      pipedInputStream0.read(byteArray0);
      byteArray0[0] = (byte)0;
      pipedOutputStream0.write(byteArray0, (int) (byte)0, (int) (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-3964), (-3964));
      pipedInputStream0.markSupported();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 955, (-1));
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 4480, (byte)92);
      StringReader stringReader1 = new StringReader("");
      stringReader1.mark((byte)92);
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte)92, 88);
      javaCharStream0.ReInit((Reader) stringReader0, 470, 470, 71);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4480, 1, 3);
      StringReader stringReader1 = new StringReader("");
      stringReader0.mark(4480);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 92);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 12, (-2235));
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader1, 3, 92, (-1460));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";VM0p?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 88);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
