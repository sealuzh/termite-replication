/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 15:31:46 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.ScrollPane;
import java.awt.dnd.DropTarget;
import java.awt.event.MouseMotionListener;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import java.util.Locale;
import javax.swing.JApplet;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JWindow;
import javax.swing.KeyStroke;
import javax.swing.plaf.basic.BasicMenuBarUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0794057662397671
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "* ");
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.coma = 42;
      jSJshop0.testParser();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "* ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(" plans found.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2H");
      byte byte0 = (byte) (-1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "wqw|ImL;2>PemB!!z");
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      String string0 = "DT/atd?)t.u==";
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop("DT/atd?)t.u==", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "* ");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      Frame frame0 = null;
      try {
        frame0 = new Frame((String) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5710772959641663
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " ^w IK}F9.gWVh!A&p");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(u{24Df)PKm3>./pqA");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      JSJshop.corbaToHicap = true;
      jSJshop0.testParser();
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5425058673927379
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "Ky_~u|a]?e(7'{'zb";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Ky_~u|a]?e(7'{'zb");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedReader pipedReader0 = new PipedReader();
      KeyStroke.getKeyStroke(' ');
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.remove((MouseMotionListener) defaultCaret1, mouseMotionListener0);
      AWTEventMulticaster.add(mouseMotionListener1, mouseMotionListener0);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      BasicMenuBarUI basicMenuBarUI0 = new BasicMenuBarUI();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(572.112);
      defaultCaret1.getPathIterator(affineTransform0, (double) 0);
      Point point0 = new Point();
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      JWindow jWindow0 = null;
      try {
        jWindow0 = new JWindow();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.pushBack();
      String[] stringArray0 = new String[3];
      streamTokenizer1.whitespaceChars(41, 41);
      stringArray0[0] = " plans found.";
      streamTokenizer0.parseNumbers();
      pipedReader0.markSupported();
      stringArray0[1] = null;
      streamTokenizer0.commentChar((-4));
      stringArray0[2] = "1";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.sval = null;
      streamTokenizer1.commentChar((-4));
      streamTokenizer1.slashStarComments(true);
      streamTokenizer0.wordChars((-4), 58);
      streamTokenizer1.resetSyntax();
      streamTokenizer1.sval = "OQwYkI!pi28~@oHWjv";
      streamTokenizer0.sval = "OQwYkI!pi28~@oHWjv";
      streamTokenizer0.commentChar((-4));
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      JSJshopVars.leftPar = (-4);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.commentChar(2);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      streamTokenizer4.commentChar((-3023));
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " TNu6[6`");
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.exclamation = 51;
      jSJshop0.testParser();
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Returning successfully from find-satisfiers : No more goals to satisfy");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      int int0 = 2;
      JMenu jMenu0 = new JMenu("Returning successfully from find-satisfiers : No more goals to satisfy", true);
      JMenuBar jMenuBar0 = new JMenuBar();
      // Undeclared exception!
      try { 
        jMenuBar0.getHelpMenu();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // getHelpMenu() not yet implemented.
         //
         verifyException("javax.swing.JMenuBar", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSOperator jSOperator0 = new JSOperator();
      JSOperator jSOperator1 = new JSOperator();
      jSOperator0.head();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "afi'vq#di-pj8cu*>g ";
      stringArray0[1] = "vRCl,[2";
      stringArray0[2] = "2gG+H2";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "afi'vq#di-pj8cu*>g ";
      stringArray1[1] = "afi'vq#di-pj8cu*>g ";
      stringArray1[2] = "all";
      stringArray1[3] = "vRCl,[2";
      JSJshop.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.ttype = (-4);
      streamTokenizer0.commentChar((-4));
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.wordChars((-4), 1642);
      streamTokenizer1.wordChars((-74), 1642);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.wordChars((-74), 1);
      streamTokenizer3.commentChar((-4));
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(pipedReader0);
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader((String) null, (String) null, (JApplet) null);
      JSOperator jSOperator0 = new JSOperator();
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop("JdsVa6HdA_TiMDp1Ll", ")  ");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("Solving Problem :", "k6J(9RFeU~b<eF", (JApplet) null);
      PipedReader pipedReader0 = new PipedReader();
      JMenu jMenu0 = new JMenu("/", false);
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      jPopupMenu0.getInvoker();
      jMenu0.firePropertyChange(".YUYN;1,$i", (double) (-1861), (double) 2);
      KeyStroke.getKeyStroke('b');
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) null);
      jPopupMenu0.addMouseMotionListener((MouseMotionListener) null);
      BasicMenuBarUI basicMenuBarUI0 = new BasicMenuBarUI();
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane(jMenu0, (-550), (-28785970));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSOperator jSOperator0 = new JSOperator();
      jSOperator0.head();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "vRCVl,[2";
      stringArray0[1] = "one";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedWriter pipedWriter2 = new PipedWriter();
      String[] stringArray0 = new String[4];
      JSJshop jSJshop0 = new JSJshop();
      boolean boolean0 = jSJshop0.parserFile("[ ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      System.setCurrentTimeMillis(0L);
      JSPlanningProblem jSPlanningProblem0 = jSJshop0.prob();
      assertNull(jSPlanningProblem0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = (-21);
      System.setCurrentTimeMillis((-21));
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(" plans found.");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "2H");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(" plans found.");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.setPermissions(evoSuiteFile1, false, true, true);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-128);
      byteArray0[8] = (byte) (-13);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      JSOperator jSOperator0 = new JSOperator();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(" plans found.", " plans found.");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "~->^]GfOg4_%");
      streamTokenizer0.commentChar(403);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("one", (String) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("v$");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "v$");
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.add((Object) "v$");
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      styledEditorKit_ItalicAction0.getValue("fCfuyTW&+Vmy96VYRt");
      jSTaskAtom0.add((Object) styledEditorKit_ItalicAction0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(720, 720);
      jSTaskAtom0.add((Object) defaultTableModel0);
      JSTaskAtom jSTaskAtom1 = new JSTaskAtom();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("v$", jSTaskAtom1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.commentChar(6);
      streamTokenizer1.wordChars((-4), 66);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.commentChar(0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.parseNumbers();
      streamTokenizer0.whitespaceChars(91, 2);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.commentChar(91);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(pipedReader0);
      streamTokenizer5.eolIsSignificant(false);
      streamTokenizer3.whitespaceChars(58, (-4));
      streamTokenizer2.commentChar((-3));
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.commentChar((-4));
      streamTokenizer0.wordChars(1, 58);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.wordChars((-1), (-1));
      streamTokenizer1.resetSyntax();
      streamTokenizer2.commentChar((-4));
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = null;
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.sval = null;
      streamTokenizer1.commentChar((-4));
      streamTokenizer0.wordChars((-4), 58);
      streamTokenizer1.resetSyntax();
      streamTokenizer0.sval = streamTokenizer0.sval;
      streamTokenizer0.sval = null;
      streamTokenizer0.commentChar((-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer0.ttype = streamTokenizer0.ttype;
      streamTokenizer1.whitespaceChars(58, 58);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      JSJshopVars.leftPar = (-4);
      streamTokenizer0.commentChar((-4));
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        JSJshop.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.sval = null;
      streamTokenizer1.commentChar((-4));
      streamTokenizer0.wordChars((-4), 58);
      streamTokenizer1.resetSyntax();
      streamTokenizer0.sval = streamTokenizer0.sval;
      streamTokenizer0.sval = null;
      streamTokenizer0.commentChar((-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer0.ttype = streamTokenizer0.ttype;
      streamTokenizer1.whitespaceChars(58, 58);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      JSJshopVars.leftPar = (-4);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.commentChar((-4));
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer4.whitespaceChars((-4), 47);
      streamTokenizer2.commentChar((-4));
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("di5zuv_<i o@a", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "defAp>omain";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, "defAp>omain");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)96;
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      JSJshopNode jSJshopNode0 = jSJshop0.getTree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      int int0 = 44;
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane(8, 44);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      PipedWriter pipedWriter2 = new PipedWriter();
      JSJshop jSJshop0 = new JSJshop();
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      JSOperator jSOperator0 = new JSOperator();
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.dom();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.sval = null;
      streamTokenizer1.commentChar((-4));
      streamTokenizer1.slashStarComments(true);
      streamTokenizer0.wordChars((-4), 58);
      streamTokenizer1.resetSyntax();
      streamTokenizer1.sval = "OQwYkI!pi28~@oHWjv";
      streamTokenizer0.sval = "OQwYkI!pi28~@oHWjv";
      streamTokenizer0.commentChar((-4));
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      JSJshopVars.leftPar = (-4);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.commentChar(2);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSJshop0.setFile("ky4~uga]e(7'{'zb", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.commentChar((-5547));
      streamTokenizer0.wordChars(4, 58);
      streamTokenizer0.sval = "OQwYkI!pi28~@oHWjv";
      streamTokenizer0.commentChar((-4));
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.commentChar((-1585));
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.pushBack();
      streamTokenizer2.pushBack();
      streamTokenizer2.whitespaceChars(4, (-4));
      streamTokenizer2.quoteChar((-46));
      streamTokenizer0.commentChar(40);
      streamTokenizer1.whitespaceChars((-1445023633), (-4));
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.wordChars((-4), 40);
      streamTokenizer3.wordChars((-4), 1601);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(pipedReader0);
      streamTokenizer5.resetSyntax();
      streamTokenizer5.wordChars(40, 4);
      StreamTokenizer streamTokenizer6 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.eolIsSignificant(true);
      streamTokenizer6.commentChar((-1475));
      StreamTokenizer streamTokenizer7 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer8 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.parseNumbers();
      StreamTokenizer streamTokenizer9 = new StreamTokenizer(pipedReader0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      JSJshop.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.apostrophe = (-2);
      jSJshop0.sol();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, (-598));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedWriter0.flush();
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      PipedWriter pipedWriter2 = new PipedWriter();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iqm";
      stringArray0[1] = "iqm";
      stringArray0[2] = "iqm";
      JSJshop.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      PipedWriter pipedWriter2 = new PipedWriter();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iqm";
      stringArray0[1] = "iqm";
      stringArray0[2] = "iqm";
      JSJshop.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedWriter pipedWriter2 = new PipedWriter();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "iqm";
      stringArray0[1] = "iqm";
      stringArray0[2] = "iqm";
      JSJshop.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "mRx2x<4r}WH6zy,\"";
      stringArray0[2] = "S";
      stringArray0[3] = "one";
      stringArray0[4] = ")/![g`nNusT:ud+Wx2}";
      stringArray0[5] = "d`s/gz[c[syq";
      stringArray0[6] = "+s,sTxI";
      stringArray0[7] = "0 plans found";
      stringArray0[8] = "l";
      JSJshop.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.CANADA;
      locale0.getDisplayName(locale1);
      ScrollPane scrollPane0 = null;
      try {
        scrollPane0 = new ScrollPane(2147483645);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
