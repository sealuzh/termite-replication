/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 04:05:53 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Button;
import java.awt.Component;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.DefaultFocusTraversalPolicy;
import java.awt.HeadlessException;
import java.awt.ImageCapabilities;
import java.awt.event.ActionListener;
import java.awt.event.ComponentListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.Statement;
import java.time.temporal.ChronoField;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.PriorityBlockingQueue;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileSystemView;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.plaf.metal.MetalRootPaneUI;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.JTextComponent;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DataTypeInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.javax.swing.MockJFileChooser;
import org.evosuite.runtime.mock.javax.swing.filechooser.MockFileSystemView;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.time.Quarter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, (ISQLDriver) null);
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      metalComboBoxUI0.configureArrowButton();
      metalComboBoxUI0.createPropertyChangeListener();
      DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, "Pbk$Sk f!Qy=D88$;W");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("sO5j_Dn <RD", "decode(", "|+n]@L\"c4ig]X1'", "Catalogs loaded in ", 910, (String) null, 92, (-6), 910, (-4), "*H\",Ie4nxTt", "jO|", 1, (-4), "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-382));
      assertFalse(boolean0);
      
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean1 = FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBUtil.typesAreEquivalent(16, 16);
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      System.setCurrentTimeMillis(16);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getEditWhereColsFile();
      applicationFiles1.getUserSpecificWikiConfigurationsFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("okq[E!LpnM]I^vX6$zH", "oru.hibernate.dialect.Cache71Dialect$1", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setUseTruncate(true);
      dBCopyPreferenceBean0.clone();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setPromptForDialect(true);
      dBCopyPreferenceBean0.setClientName((String) null);
      dBCopyPreferenceBean0.setAppendRecordsToExisting(false);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      int int0 = 17;
      DBUtil.typesAreEquivalent(17, 1376);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      SQLAliasConnectionProperties sQLAliasConnectionProperties1 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties1.setEnableConnectionKeepAlive(false);
      int int1 = (-4849);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-4849));
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("rlM;|b", "MA9{rmwq<J;+P>$_wW", "Avsz;:s_2EQI", "MA9{rmwq<J;+P>$_wW", (-648), "rlM;|b", (-648), 377, (-1614), 2776, (String) null, "rlM;|b", 6, 3961, "gq9y1(-]");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      DBUtil.typesAreEquivalent(1128, 2776);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, (-664), "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", 17, (-664), (-664), (-664), "DBUtil.info.executequery", "DBUtil.info.executequery", 910, 2800, "selet");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      DBUtil.replaceDistinctDataType(2002, tableColumnInfo0, (ISession) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.setDisplayedMnemonic('-');
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      Style style0 = defaultStyledDocument0.getLogicalStyle(17);
      AttributeSet attributeSet0 = styleContext0.addAttributes(style0, style0);
      styleContext0.getForeground(attributeSet0);
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument1, "Could not instantiate renderer [", 2002);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      MockPrintStream mockPrintStream0 = new MockPrintStream("DatabaseObjectType.primarykey");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) stringContent0;
      objectArray0[1] = (Object) "DBUtil.info.executequery";
      objectArray0[2] = (Object) defaultStyledDocument1;
      objectArray0[3] = (Object) styleContext0;
      MockPrintStream mockPrintStream1 = null;
      try {
        mockPrintStream1 = new MockPrintStream((String) null, "Could not instantiate renderer [");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      defaultListCellRenderer_UIResource0.getRegisteredKeyStrokes();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.removeDriverProperty("uWid_cBr;ate");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-zz");
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(193);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      Integer integer0 = new Integer(193);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "#";
      String string1 = null;
      ITableInfo iTableInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "DBUtil.error.firebirdcommit");
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-1384));
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setAutoLogon(true);
      SQLAliasConnectionProperties sQLAliasConnectionProperties1 = new SQLAliasConnectionProperties();
      SQLAliasConnectionProperties sQLAliasConnectionProperties2 = sQLAlias0.getConnectionProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties2);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean1 = DBUtil.typesAreEquivalent((-614), (-1384));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Wx\"*t7 b@SGfxJ@}yG");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 818);
      assertFalse(boolean0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-43);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean1 = FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      FileSystemHandling.shouldAllThrowIOExceptions();
      defaultListCellRenderer_UIResource0.getRegisteredKeyStrokes();
      defaultListCellRenderer_UIResource0.getHorizontalAlignment();
      JSpinner jSpinner0 = new JSpinner();
      defaultListCellRenderer_UIResource0.setAlignmentX(600.9181F);
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(10);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      boolean boolean1 = DBUtil.typesAreEquivalent((-7), 16);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-111);
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-111);
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte) (-111);
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte) (-111);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.fixCase((ISession) null, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getName();
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      defaultListCellRenderer_UIResource0.removeKeyListener((KeyListener) null);
      defaultListCellRenderer_UIResource0.getVetoableChangeListeners();
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginJarFilePath();
      DatabaseObjectType.createNewDatabaseObjectType("DatabaseObjectType.primarykey");
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "jO|", "-u!4g", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "C", (String) null, 93, "C", 93, 578, 93, 578, (String) null, "C", 27, Integer.MIN_VALUE, (String) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      System.setCurrentTimeMillis(Integer.MIN_VALUE);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      SQLAliasConnectionProperties sQLAliasConnectionProperties1 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties1.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties1.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("");
      sQLAliasConnectionProperties1.setKeepAliveSqlStatement(",#:");
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAlias1.setConnectionProperties(sQLAliasConnectionProperties0);
      SQLAliasConnectionProperties sQLAliasConnectionProperties2 = sQLAlias1.getConnectionProperties();
      sQLAliasConnectionProperties2.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties2.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties2.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties2);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2651));
      sQLAliasConnectionProperties1.setKeepAliveSleepTimeSeconds((-2147483627));
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue(873);
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue((-2651));
      ImageIcon imageIcon0 = new ImageIcon("2j|\"A  sjEW|", ". Skipping FK cnnstraint");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      SQLAliasConnectionProperties sQLAliasConnectionProperties1 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties1.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties1.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("");
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("");
      sQLAliasConnectionProperties1.setKeepAliveSqlStatement(",#:");
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAlias1.setConnectionProperties(sQLAliasConnectionProperties0);
      SQLAliasConnectionProperties sQLAliasConnectionProperties2 = sQLAlias1.getConnectionProperties();
      sQLAliasConnectionProperties1.setKeepAliveSleepTimeSeconds((-2698));
      sQLAliasConnectionProperties2.setEnableConnectionKeepAlive(false);
      sQLAliasConnectionProperties2.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties2.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties2);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2651));
      sQLAliasConnectionProperties1.setKeepAliveSleepTimeSeconds((-2147483627));
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue(873);
      ImageIcon imageIcon0 = new ImageIcon("2j|\"A  sjEW|", ". Skipping FK cnnstraint");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("-46d356df:16e725d6bdd:-7ce5", uidIdentifier0.toString());
      
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPruneDuplicateIndexDefs(false);
      dBCopyPreferenceBean0.setWriteScript(false);
      dBCopyPreferenceBean0.setCopyPrimaryKeys(false);
      dBCopyPreferenceBean0.setUseTruncate(false);
      dBCopyPreferenceBean0.clone();
      dBCopyPreferenceBean0.setCopyData(true);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean1.setClientVersion("I#u<");
      dBCopyPreferenceBean1.setClientName(". Skipping FK constraint");
      dBCopyPreferenceBean1.setAppendRecordsToExisting(false);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.setAlignmentX(0.0F);
      DBUtil.typesAreEquivalent(3, (-2674));
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setAutoLogon(false);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(true);
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(false);
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = DBUtil.typesAreEquivalent((-2048), 3);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("M\"H", "N9Ef", (String) null, "jD", (-696), "k&XQ&3>v /=G", (-805), 2336, 1130, (-805), "M6ZVX}HUd", "net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean", (-696), 2336, "N9Ef");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("M\"H", "i'", "M6ZVX}HUd", "*=c4J", (-2), "y0ZNC>sl['7]", (-696), 6, 2336, (-696), "jD", "75", (-2), (-2281), (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "next_day";
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("2j|-\"oA  sjEW|", "2j|-\"oA  sjEW|", "HI:C wCp`{eIMmeB", "next_day", (-3), "\n", (-3), (-3), 2000, 2000, "2j|-\"oA  sjEW|", "0'f", 2000, 1003, (String) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF;
      String string1 = ",P*aoh@<~kJ-3";
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      defaultListCellRenderer_UIResource0.createVolatileImage(3944, 3646, imageCapabilities0);
      defaultListCellRenderer_UIResource0.setEnabled(true);
      defaultListCellRenderer_UIResource0.getRegisteredKeyStrokes();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.removeDriverProperty("uuid_create");
      sQLDriverPropertyCollection0.removeDriverProperty("J}G+xP:!j>,MR[(!");
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-215));
      SQLDriver sQLDriver0 = new SQLDriver();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("J}G+xP:!j>,MR[(!", "J}G+xP:!j>,MR[(!");
      driverPropertyInfo0.required = true;
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo0);
      sQLDriverPropertyCollection0.addDriverProperty(sQLDriverProperty0);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      Integer integer0 = new Integer((-215));
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "org.apache.commons.cli.UnrecognizedOptionException", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.ScriptWriter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBUtil.convertTableToObjectList(arrayList0);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("g{-:fdq8u:>flfR2gn/", (Icon) imageIcon0);
      assertEquals("g{-:fdq8u:>flfR2gn/", databaseObjectType0.getKeyForSerializationReplace());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      FileSystemHandling.shouldAllThrowIOExceptions();
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "p=u9 FFvqCr(", "p=u9 FFvqCr(");
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "l\"uj?*g!}(V6CR", "X");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster1, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((FocusListener) aWTEventMulticaster11, (FocusListener) aWTEventMulticaster7);
      byte[] byteArray0 = new byte[5];
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster10, (ComponentListener) aWTEventMulticaster6);
      byteArray0[0] = (byte) (-12);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster10, (HierarchyListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster3, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster13, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster7, (FocusListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((FocusListener) aWTEventMulticaster14, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster10, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster8, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster4);
      System.setCurrentTimeMillis(4960L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPruneDuplicateIndexDefs(true);
      dBCopyPreferenceBean0.setWriteScript(false);
      dBCopyPreferenceBean0.setCopyPrimaryKeys(false);
      dBCopyPreferenceBean0.setUseTruncate(true);
      dBCopyPreferenceBean0.clone();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setClientName("2j|-\"oA  sjEW|");
      dBCopyPreferenceBean0.setAppendRecordsToExisting(true);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.setAlignmentX(0.0F);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(3);
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setAutoLogon(true);
      SQLAliasConnectionProperties sQLAliasConnectionProperties1 = new SQLAliasConnectionProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties1);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean1 = DBUtil.typesAreEquivalent(18, 3);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setUrl("blob");
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAlias1.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2147483627));
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds((-2147483627));
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias1.getColorProperties();
      sQLAliasColorProperties0.setOverrideStatusBarBackgroundColor(true);
      sQLAlias1.setColorProperties(sQLAliasColorProperties0);
      sQLAlias1.setAutoLogon(false);
      sQLAlias1.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLAlias1.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      jSpinner0.addPropertyChangeListener((PropertyChangeListener) metalRootPaneUI0);
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      MetalRootPaneUI metalRootPaneUI1 = new MetalRootPaneUI();
      metalRootPaneUI0.getPreferredSize(jSpinner_DefaultEditor0);
      MetalRootPaneUI metalRootPaneUI2 = new MetalRootPaneUI();
      jSpinner0.addPropertyChangeListener((PropertyChangeListener) metalRootPaneUI0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, (String) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ChronoField chronoField0 = ChronoField.YEAR_OF_ERA;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getUserSpecificWikiConfigurationsFile();
      Icon icon0 = mockJFileChooser0.getIcon(file0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("MqqQS2FHZ", icon0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "MqqQS2FHZ");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BasicComboBoxUI basicComboBoxUI0 = new BasicComboBoxUI();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PriorityBlockingQueue<DataTypeInfo> priorityBlockingQueue0 = new PriorityBlockingQueue<DataTypeInfo>();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>(priorityBlockingQueue0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte) (-30);
      byteArray0[6] = (byte) (-120);
      byteArray0[7] = (byte)27;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(":V']##{ic99", "o", "foUnFDE.OHUa;C`8r.[");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      linkedList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster9);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((ActionListener) aWTEventMulticaster1, (ActionListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster11, (HierarchyBoundsListener) aWTEventMulticaster0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("tvC", "tvC", "e", "tvC", (-1844), "SApll$yE*U.Q", (-1758), 2147483645, (byte) (-12), 1267, "e", "tvC", 1980, (-1844), "e");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 2776;
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 2776);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setConnectAtStartup(false);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(Integer.MIN_VALUE);
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("\"0O96(2igc");
      sQLAliasConnectionProperties0.setKeepAliveSqlStatement("\"0O96(2igc");
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(3127);
      sQLAlias1.setAutoLogon(true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("HI:C wCp`{eIMmeB", "", "", "", 3127, "", 3127, 30, 110, 128, "", "Could not instantiate renderer [", 1721, (-450), "");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener1);
      AWTEventMulticaster.remove(mouseWheelListener2, mouseWheelListener2);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseMotionListener0, mouseMotionListener0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster1, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster4);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster3, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster11, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster6, (FocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster4);
      System.setCurrentTimeMillis(4960L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Couldn't find an exact match for destination table ", "%**}r?");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel();
      JSpinner jSpinner0 = new JSpinner(spinnerNumberModel0);
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      jSpinner0.getAutoscrolls();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      jSpinner0.putClientProperty(spinnerNumberModel0, integer0);
      JSpinner jSpinner1 = new JSpinner();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener1);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseMotionListener0, mouseMotionListener0);
      defaultListCellRenderer_UIResource0.addMouseMotionListener((MouseMotionListener) null);
      defaultListCellRenderer_UIResource0.addHierarchyBoundsListener(hierarchyBoundsListener1);
      defaultListCellRenderer_UIResource0.getRegisteredKeyStrokes();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Yk~M,{clz+Ph1,}", "Pb$Sk f!Qy=D88$;W", "", "", (-461), "?a9xYH4'R", 0, 1466, 4, 0, "?a9xYH4'R", "?a9xYH4'R", 77, 1466, "7_1g@ ?D/");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      defaultListCellRenderer_UIResource0.getRegisteredKeyStrokes();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("position", "=", "oFtH78[Uu", "oE~}l$H0P/U", (-1599), "oFtH78[Uu", (-736), (-2489), (-1599), (-2489), ":y)@9d.!6id6@S.fs", "oFtH78[Uu", 778, 1, "`),V[mb?f%@&]/WYT*7");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster8);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((ActionListener) aWTEventMulticaster1, (ActionListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster10, (HierarchyBoundsListener) aWTEventMulticaster0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("75", "75", "e", "75", (-1844), "SApll$yE*U.Q", (-1758), 2147483645, (byte) (-12), 1267, "e", "75", 1980, (-1844), "e");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "~%<?C!,a(", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginJarFilePath();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", (short)1111, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", (short)1111, (short)1111, 14, 358, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "8AV1,xH~yx{EM|i6G", (short)1111, 382, " NOT NULL");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile.createTempFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", (File) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1111, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "_", "*H\",Ie4nxTt");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_";
      stringArray0[1] = "*H\",Ie4nxTt";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginJarFilePath();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.getDestSession();
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 211);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "K:DX!jD)f@1,?B#L48");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "8AV1,~yx{EV|i6G", "K:DX!jD)f@1,?B#L48", "o$iH", 382, "isnumeric", (-963), 14, (-1389), 1096, "isnumeric", "nw", 14, (-3), "K:DX!jD)f@1,?B#L48");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ChronoField chronoField0 = ChronoField.SECOND_OF_MINUTE;
      ChronoField chronoField1 = ChronoField.MICRO_OF_DAY;
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "Missing argument for option: ", "gd6Jhd4oh~D8r|h]", "gd6Jhd4oh~D8r|h]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBUtil.fixCase((ISession) null, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getName();
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      defaultListCellRenderer_UIResource0.removeKeyListener((KeyListener) null);
      defaultListCellRenderer_UIResource0.getVetoableChangeListeners();
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile2);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      String[] stringArray0 = new String[0];
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster3);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getRegisteredKeyStrokes();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster7, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ActionListener) aWTEventMulticaster1, (ActionListener) aWTEventMulticaster6);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "fdj,)3b[XL'2KTzp", "fdj,)3b[XL'2KTzp", "", (byte) (-12), "~", 4, 0, 6, 0, "", "fdj,)3b[XL'2KTzp", Integer.MIN_VALUE, 1000, "@9$`{Q;=pd");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("fdj,)3b[XL'2KTzp", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = new Integer(2776);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyPrimaryKeys(true);
      dBCopyPreferenceBean0.setCopyData(true);
      dBCopyPreferenceBean0.setClientName("$2j-\"oA  sjEW|");
      dBCopyPreferenceBean0.setRecordDelayMillis(315L);
      dBCopyPreferenceBean0.setCommitAfterTableDefs(true);
      dBCopyPreferenceBean0.setAppendRecordsToExisting(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "N-4`S(+0-", "ojrkA?qB9", "menu.", 3, "$2j-\"oA  sjEW|", 3, 3, 3, 16777215, ".", "menu.", 3, 16777215, "$2j-\"oA  sjEW|");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin1.setApplicationFiles(applicationFileWrappersImpl0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("$2j-\"oA  sjEW|", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "{", "$2j-\"oA  sjEW|", 1000, "{", (-108), (-108), 1482, 1482, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 93, 3973, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo1, "!UW^72", "{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster4, (KeyListener) aWTEventMulticaster6);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster8, (HierarchyBoundsListener) aWTEventMulticaster0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("mHW%)", "mHW%)", "mHW%)", "mHW%)", 317, "JiZp pzeV[Z:k6ya -:", 1989, (-156), (-631), (-2253), "mHW%)", " in schema ", 2430, 248, "j");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(317, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.getInsets();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ". Uwsing 'length'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ". Uwsing 'length'");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "8AV1,xH~yx{EM|i6G");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("#", "c.hhN<Z6/^:K7r", "Ho&ren7AYit^kS.", "e", 4000, (String) null, 358, (byte)5, 358, (-47), "8AV1,xH~yx{EM|i6G", "j", (-47), (byte)5, ". Skipping FK constraint");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(4000, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      Component.BaselineResizeBehavior component_BaselineResizeBehavior0 = jSpinner_NumberEditor0.getBaselineResizeBehavior();
      ChronoField chronoField0 = ChronoField.SECOND_OF_MINUTE;
      jSpinner_NumberEditor0.setFocusTraversalPolicyProvider(false);
      ChronoField chronoField1 = ChronoField.DAY_OF_WEEK;
      jSpinner0.putClientProperty(component_BaselineResizeBehavior0, chronoField1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(")&=pd0", "selet", "~7Rfh1!r*Z9N-]$t", "NLLFB", 883, "sp#fz.h$9", 883, (-871), 45, 1777, "~7Rfh1!r*Z9N-]$t", "~7Rfh1!r*Z9N-]$t", 1470, 1917, "~@\"*k^O=h@f\"KL_mls");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("NLLFB, NLLFB", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      int[] intArray0 = Quarter.LAST_MONTH_IN_QUARTER;
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, (SQLDriverPropertyCollection) null, (ISQLDriver) null);
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      metalComboBoxUI0.configureArrowButton();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      sQLConnection0.addPropertyChangeListener(propertyChangeListener0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBUtil.setLastStatementValues("j@=5g;UT?}:.1n!");
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.getColorModel();
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      jSpinner0.getAlignmentX();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      containerOrderFocusTraversalPolicy0.getLastComponent(jSpinner0);
      containerOrderFocusTraversalPolicy0.getFirstComponent(jSpinner_DefaultEditor0);
      jSpinner_DefaultEditor0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      jSpinner_DefaultEditor0.getMaximumSize();
      jSpinner0.getInputContext();
      jSpinner0.setAutoscrolls(false);
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer.compareUnsigned(32767, 32767);
      Integer.remainderUnsigned(32767, (-1354));
      Integer.getInteger("{", integer1);
      jSpinner_DefaultEditor0.resetKeyboardActions();
      Integer.divideUnsigned(785, 8000);
      Integer.max(32767, (-2262));
      Integer.getInteger("{", (-1634));
      Integer.divideUnsigned(14, (-1721));
      jSpinner0.putClientProperty(jSpinner_DefaultEditor0, integer0);
      JSpinner jSpinner1 = new JSpinner();
      int int0 = 0;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "R;jIG.I~?2R6X8\"Ab", (ITableInfo) null, 8000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.getColorModel();
      jSpinner0.setAutoscrolls(false);
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      jSpinner_DefaultEditor0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      jSpinner_DefaultEditor0.resetKeyboardActions();
      Integer.divideUnsigned(785, 2004);
      Integer.divideUnsigned(14, (-1721));
      jSpinner0.putClientProperty(jSpinner_DefaultEditor0, integer0);
      JSpinner jSpinner1 = new JSpinner();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("R;jIG.I~?2R6X8\"Ab", "R;jIG.I~?2R6X8\"Ab", "y0ZNC>sl['7]", (ISession) null, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBUtil.setLastStatement("xBkxc{c?B!zdoE ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCommitAfterTableDefs(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SQLDatabaseMetaData sQLDatabaseMetaData0 = schemaInfo0.getSQLDatabaseMetaData();
      assertNull(sQLDatabaseMetaData0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer integer0 = new Integer(1898);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "jg/UKQ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy1 = new DefaultFocusTraversalPolicy();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer.sum(53, (-2377));
      Integer.getInteger("s#XE");
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("s#XE", integer1);
      Integer.getInteger("-07-", (-2377));
      Integer.divideUnsigned((-1998), 2153);
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "-07-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1K#7Px8~GVy");
      int[] intArray0 = Quarter.LAST_MONTH_IN_QUARTER;
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, (SQLDriverPropertyCollection) null, (ISQLDriver) null);
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      metalComboBoxUI0.configureArrowButton();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      sQLConnection0.addPropertyChangeListener(propertyChangeListener0);
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, (SQLDriverPropertyCollection) null, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection1, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "6LG:.x<hvB6+0");
      byte[] byteArray0 = new byte[8];
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder(evoSuiteFile1);
      byteArray0[2] = (byte)78;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-59);
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[4] = (byte)42;
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.setPermissions(evoSuiteFile2, false, true, false);
      Integer.divideUnsigned((byte) (-41), (-3));
      JSpinner jSpinner0 = new JSpinner();
      DBUtil dBUtil0 = new DBUtil();
      jSpinner0.putClientProperty(dBUtil0, dBUtil0);
      JSpinner jSpinner1 = new JSpinner();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("!iiq6)W-vKHJ&?N`{~", "!iiq6)W-vKHJ&?N`{~", "{", "Label.font", 2002, "BOM~h", 2002, (-464), 2002, (-464), "2]q", "INTEGER", 2002, 2002, "SELECT data_type FROM information_schema.columns where column_name = ? ");
      DBUtil.replaceDistinctDataType((-464), tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getApplication();
      // Undeclared exception!
      try { 
        dBCopyPlugin0.load((IApplication) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null IApplication passed
         //
         verifyException("net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.executequery", "DBUtil.info.executequery", "DBUtil.info.executequery", "Q`4QH)5+K5t\"7\"nm-", 0, "Couldn't find an exact match for destination table ", 2340, (-5), 0, (-2701), " in schema ", "Q`4QH)5+K5t\"7\"nm-", (-5), (-2140), "select ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "#";
      int int0 = (-1017);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("lujmLxhy", "lujmLxhy", "#", "#", 3048, "lujmLxhy", 3048, 3048, 3048, (-1017), "lujmLxhy", "lujmLxhy", 3048, 3048, "lujmLxhy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(1989, tableColumnInfo0, (ISession) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("lujmLxhy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-1611), (-1611));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin1.getPluginJarFilePath();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "{G;0*'#", "vlm/L!vxXR-J4Z", "vlm/L!vxXR-J4Z", 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ChronoField chronoField0 = ChronoField.PROLEPTIC_MONTH;
      ChronoField chronoField1 = ChronoField.DAY_OF_WEEK;
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "PreferencesPanel.fetchSizeTextFieldToolTip", "axion", "axion", (-624));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setConnectAtStartup(false);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAlias0.setAutoLogon(false);
      sQLAlias1.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLAlias1.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(linkedList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      jSpinner0.addPropertyChangeListener((PropertyChangeListener) jSpinner_DefaultEditor0);
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = null;
      String string1 = "( i[kXmxq{+\"n~@8Yen";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "( i[kXmxq{+\"n~@8Yen", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      ChronoField chronoField1 = ChronoField.MICRO_OF_DAY;
      Integer integer0 = new Integer(93);
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, ")crD+=<2vgFRB", ")crD+=<2vgFRB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DBUtil.getLastStatement();
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "org.hibernate.dialect.Cache71Dialect$1", "G^bO`+k:3hwAk]r", ") has a particular foreign ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      jSpinner0.getAlignmentX();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("Y-sWr]HDR0$;_',`", (-945));
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      containerOrderFocusTraversalPolicy0.getLastComponent(jSpinner0);
      containerOrderFocusTraversalPolicy0.getFirstComponent(jSpinner_DefaultEditor0);
      jSpinner0.getWidth();
      jSpinner_DefaultEditor0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      jSpinner_DefaultEditor0.getMaximumSize();
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer.sum(32767, 32767);
      Integer.getInteger("s#XE");
      Integer integer2 = new Integer(0);
      Integer.getInteger("s#XE", integer1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("P5@:;FLU@^}S2/:@%~A", "P5@:;FLU@^}S2/:@%~A", "9GQ.NcXhEdI%sOi}", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriver sQLDriver0 = new SQLDriver();
      int int0 = (-3);
      int int1 = 1899;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("DXK+`DWS", (-3), 1899, 4658);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(". Using 'max'", "vZ\"u2UE[}\":Redy^", "vZ\"u2UE[}\":Redy^", "vZ\"u2UE[}\":Redy^", 0, (String) null, 0, 0, 0, 4039, (String) null, ". Using 'max'", 0, 4039, "kUdz@>-=6JQ%t&fx,");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ActionListener) aWTEventMulticaster3, (ActionListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster4);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("y0ZNC>sl['7]", "y0ZNC>sl['7]", (String) null, "HnE", (-846), "y0ZNC>sl['7]", (byte)4, (-104), 5000, (-1821), (String) null, "y0ZNC>sl['7]", (-4770), (-1113), ";>&J|!k&ws8");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-846), int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("j", "j", "_XXW", "#", 590, (String) null, 590, (-7), 3258, 3258, "varchar(1000000000)", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 590, (-7), "_XXW");
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getName();
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      defaultListCellRenderer_UIResource0.removeKeyListener((KeyListener) null);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("blob", (String) null, (String) null, "Y!fcj/", (-696), "blob", 2149, 31, (-2300), (-2300), "f!xed($p,$s)", "75", (-988), (-2300), (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("#643(I~");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("y0ZNC>sl['7]");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("blob", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q=dKHhS`nv6 H([");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1/F~");
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }
}
