/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 03:03:51 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.Writer;
import java.sql.Connection;
import java.util.HashSet;
import java.util.List;
import java.util.Properties;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.access.TransactionController;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.iapi.types.SQLClob;
import org.apache.derby.impl.db.BasicDatabase;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.sql.GenericLanguageFactory;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics;
import org.apache.derby.impl.sql.execute.rts.RealHashLeftOuterJoinStatistics;
import org.apache.derby.impl.sql.execute.rts.RealInsertResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealMaterializedResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealRowResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealWindowResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.ResultSetStatistics;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.apache.derby.impl.store.access.heap.HeapController;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.engine.SessionRemote;
import org.h2.expression.Parameter;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.value.Transfer;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3944289409249895
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MockFile mockFile0 = new MockFile("g*-Wplx=3TBFY%l#b`");
      MockFileWriter mockFileWriter0 = new MockFileWriter("o.>uDG,A");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object object0 = new Object();
      mockPrintWriter0.print(1369.0);
      Object[] objectArray0 = new Object[3];
      Object object1 = new Object();
      objectArray0[0] = object1;
      objectArray0[1] = (Object) "5d";
      objectArray0[2] = (Object) defaultDBTable0;
      mockPrintWriter0.printf("W", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileWriter0);
      mockPrintWriter1.print("W");
      mockPrintWriter1.println();
      mockFile0.mkdirs();
      DBDataType dBDataType0 = DBDataType.getInstance(352, " AND ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("delete", defaultDBTable0, dBDataType0);
      mockFile0.setLastModified(95);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter1);
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("5d", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn1.setDoc("D!pN");
      defaultDBColumn1.getNotNullConstraint();
      System.setCurrentTimeMillis((-61441L));
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter1);
      assertFalse(mockPrintWriter1.equals((Object)mockPrintWriter0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.634413756715666
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SQLUtil.mutatesStructure("*/");
      String string0 = "j/#kG{ /oa";
      SQLUtil.mutatesStructure("j/#kG{ /oa");
      SQLUtil.normalize("*/", true);
      byte[] byteArray0 = new byte[0];
      SQLUtil.isDML("j/#kG{ /oa");
      SQLUtil.normalize("MATERIALIZE", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("MATERIALIZE");
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("*/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '*_/' not found in table 'MATERIALIZE'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "vuC^lgg}MxAG[TmeJ";
      objectArray0[1] = (Object) "vuC^lgg}MxAG[TmeJ";
      objectArray0[2] = (Object) "'";
      objectArray0[3] = (Object) "vuC^lgg}MxAG[TmeJ";
      objectArray0[4] = (Object) "'";
      objectArray0[5] = (Object) "vuC^lgg}MxAG[TmeJ";
      objectArray0[6] = (Object) "vuC^lgg}MxAG[TmeJ";
      SQLUtil.renderWhereClause(stringArray0, objectArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      DBDataType dBDataType0 = DBDataType.getInstance(42, "drop materialized view");
      Integer integer0 = new Integer((-5046));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized view", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      String string0 = "create materialized viewinner";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "vuC^lgg}MxAG[TmeJ");
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      int int0 = (-925);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt((-925));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -925
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[7];
      stringArray0[1] = "nZv6$lT~P";
      stringArray0[1] = "Id3U!`n'NuIPom0";
      stringArray0[4] = "Id3U!`n'NuIPom0";
      stringArray0[6] = "Id3U!`n'NuIPom0";
      Random.setNextRandom((-1698));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom((-1698));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " REFERENCES ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \" REFERENCES \" PRIMARY KEY (, Id3U!`n'NuIPom0, , , Id3U!`n'NuIPom0, , Id3U!`n'NuIPom0)", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, Id3U!`n'NuIPom0, , , Id3U!`n'NuIPom0, , Id3U!`n'NuIPom0)", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2801336877336102
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "org.apache.derby.impl.store.raw.xact.XactId";
      stringArray0[3] = "org.apache.derby.impl.store.raw.xact.XactId";
      stringArray0[4] = "org.apache.derby.impl.store.raw.xact.XactId";
      Integer.valueOf(13);
      StringBuilder stringBuilder0 = new StringBuilder(13);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("org.apache.derby.impl.store.raw.xact.XactId", stringBuilder0);
      stringBuilder1.append('t');
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.addOptionalCondition("selectcreate materialized viewbooting mod", stringBuilder1);
      assertEquals("org.apache.derby.impl.store.raw.xact.XactIdt or selectcreate materialized viewbooting mod", stringBuilder1.toString());
      
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("N", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec1);
      assertEquals("FOREIGN KEY (, org.apache.derby.impl.store.raw.xact.XactId, , org.apache.derby.impl.store.raw.xact.XactId, org.apache.derby.impl.store.raw.xact.XactId, , , , ) REFERENCES null(, org.apache.derby.impl.store.raw.xact.XactId, , org.apache.derby.impl.store.raw.xact.XactId, org.apache.derby.impl.store.raw.xact.XactId, , , , )", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("exec", true, (String) null, "exec");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      stringBuilder1.append("create tablvuc^lgg}mxag[tmej");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte) (-60);
      Boolean boolean0 = new Boolean(true);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult((boolean) boolean0);
      isc_stmt_handle_impl0.setRsr_id((byte) (-1));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setExecutionPlan("b=t#`Y#f]Ej&,I[&~'");
      isc_stmt_handle_impl1.setAllRowsFetched(false);
      System.setCurrentTimeMillis((-1811L));
      Random.setNextRandom((byte) (-60));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6258752060646575
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Boolean.valueOf("we0ec");
      Boolean.valueOf("we0ec");
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("we0ec");
      assertNull(boolean0);
      
      SQLUtil.isDML("we0ec");
      Boolean boolean1 = SQLUtil.mutatesStructure("executedefault");
      assertFalse(boolean1);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      TableContainer tableContainer0 = new TableContainer("executedefault");
      tableContainer0.getSchema();
      defaultDBTable0.setSchema((DBSchema) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, (-1511), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3914337620844703
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setExecutionPlan((String) null);
      isc_stmt_handle_impl1.registerTransaction((AbstractIscTrHandle) null);
      isc_stmt_handle_impl2.setSingletonResult(false);
      isc_stmt_handle_impl1.setRsr_id((-1762531469));
      isc_stmt_handle_impl0.setRsr_id((-1795625039));
      isc_stmt_handle_impl1.getRsr_rdb();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      boolean boolean0 = SQLUtil.isQuery("SELECT * FROM ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Hh");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SELECT * FROM ";
      stringArray0[1] = "SELECT * FROM ";
      stringArray0[2] = "N<gCbJS% 1}Va^-";
      stringArray0[3] = "SELECT * FROM ";
      stringArray0[4] = "Hh";
      stringArray0[5] = null;
      defaultDBTable0.setSchema((DBSchema) null);
      stringArray0[6] = "SELECT * FROM ";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      String string0 = SQLUtil.typeAndName(dBUniqueConstraint0);
      assertEquals("unique constraint constraint", string0);
      
      boolean boolean1 = SQLUtil.isQuery("hQCxX");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5650904515357
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[3] = "";
      stringArray0[4] = "(";
      stringArray0[5] = "UQ's6maX%-QNr4`";
      stringArray0[6] = "1zz";
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      PrintWriter printWriter0 = mockPrintWriter0.format("vuC^lgg}MxAG[TmeJ", (Object[]) stringArray0);
      printWriter0.print(false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSequence dBSequence0 = new DBSequence((String) null, "(", "");
      String string0 = SQLUtil.typeAndName(dBSequence0);
      assertEquals("sequence null", string0);
      
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("vuC^lgg}MxAG[TmeJ = 'vuC^lgg}MxAG[TmeJ' AND null = null AND null = null AND  = '' AND ( = '(' AND UQ's6maX%-QNr4` = 'UQ's6maX%-QNr4`' AND 1zz = '1zz'", string1);
      
      SQLClob sQLClob0 = new SQLClob("");
      String string2 = SQLUtil.renderValue(sQLClob0);
      assertEquals("", string2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5481182678652012
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.newTransactionParameterBuffer();
      javaGDSImpl0.createDatabaseParameterBuffer();
      SQLUtil.isQuery("g*-wplx");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      SQLUtil.isDML(">$S,SXvNhVwX{;");
      System.setCurrentTimeMillis(13L);
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.getLobConnection();
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedWriter0.flush();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.nval = (double) 6;
      streamTokenizer0.pushBack();
      sessionRemote1.autoCommitIfCluster();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      System.setCurrentTimeMillis(7);
      SQLUtil.mutatesStructure("4Xt]`ed:p");
      System.setCurrentTimeMillis(4);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("'IjpQ9G");
      assertNull(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("exec", true, (String) null, "exec");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      stringBuilder1.append("create tablvuc^lgg}mxag[tmej");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte) (-60);
      Boolean boolean0 = new Boolean(true);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult((boolean) boolean0);
      isc_stmt_handle_impl0.setRsr_id((byte) (-1));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setExecutionPlan("b=`Y#f]Ej&,I[&~'");
      isc_stmt_handle_impl1.setAllRowsFetched(false);
      System.setCurrentTimeMillis((-1811L));
      Random.setNextRandom((byte) (-60));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("DM=efe(SOC|v2K#Y", false, (String) null, "C");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      stringBuilder1.append("update>$s,sxvnhvwx{;");
      Boolean boolean0 = new Boolean(true);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.setRsr_id((byte) (-49));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setAllRowsFetched(false);
      System.setCurrentTimeMillis((byte) (-1));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      File file0 = MockFile.createTempFile("n!l:R_U7AL`", "n!l:R_U7AL`");
      file0.getCanonicalFile();
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      mockFileWriter0.write("n!l:R_U7AL`");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      PrintWriter printWriter0 = mockPrintWriter0.format("( /* ", (Object[]) null);
      printWriter0.print("( /* ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSequence dBSequence0 = new DBSequence("( /* ", "drop table", "( /* ");
      SQLUtil.typeAndName(dBCatalog0);
      SQLUtil.ownerDotComponent(dBSequence0);
      // Undeclared exception!
      SQLUtil.isProcedureCall("( /* ");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      char char0 = '';
      Character character0 = Character.valueOf('');
      SQLUtil.renderValue(character0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      int int0 = 9172;
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider(9172);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 9172, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Integer integer0 = RawTransaction.ABORT;
      HashSet<DBNotNullConstraint> hashSet0 = new HashSet<DBNotNullConstraint>();
      columnDescriptorList0.removeAll(hashSet0);
      columnDescriptorList0.iterator();
      columnDescriptorList0.add((Object) integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3498781205135455
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isQuery("rename");
      SQLUtil.normalize("rename", false);
      String[] stringArray0 = new String[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = "rename";
      stringArray0[2] = "rename";
      stringArray0[3] = "rename";
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[0] = "org.databene.commons.file.PatternFileFilter";
      stringArray0[3] = "";
      stringArray0[4] = "(";
      stringArray0[5] = "UQ's6maX%-QNr4`";
      stringArray0[6] = "1zz";
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      SQLUtil.isDML("\u0002]xLv<y-");
      System.setCurrentTimeMillis(0);
      SessionRemote sessionRemote1 = new SessionRemote();
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.getLobConnection();
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedWriter0.flush();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 7);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      System.setCurrentTimeMillis((byte)64);
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("5d");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      file0.getCanonicalPath();
      MockFile.createTempFile("/home/ubuntu/termite/projects/13_jdbacl/5d", "ex");
      mockFileWriter0.write("ex");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "5d";
      stringArray0[1] = "/home/ubuntu/termite/projects/13_jdbacl/5d";
      stringArray0[2] = "/home/ubuntu/termite/projects/13_jdbacl/5d";
      DBSchema dBSchema0 = new DBSchema("5d", dBCatalog0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("L|:=yJ<r1MJI(\"z", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("ex", true, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec1, mockPrintWriter0);
      assertEquals(45L, file0.length());
      assertEquals(45L, mockFile0.length());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "DM=efe(SOC|v2K#Y";
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("truncate");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DM=efe(SOC|v2K#Y", dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "inner";
      stringArray0[1] = "DM=efe(SOC|v2K#Y";
      stringArray0[2] = "truncate";
      stringArray0[3] = "inner";
      stringArray0[4] = "inner";
      stringArray0[5] = "truncate";
      stringArray0[6] = "DM=efe(SOC|v2K#Y";
      SQLUtil.join("inner", "DM=efe(SOC|v2K#Y", stringArray0, (String) null, "inner", stringArray0);
      Random.setNextRandom((-1841756874));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      Object object0 = new Object();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "ALTER TABLE ";
      stringArray0[3] = "";
      stringArray0[4] = "delete";
      stringArray0[5] = "delete";
      stringArray0[6] = ":QQ>A,!I@Rq";
      stringArray0[7] = "delete";
      stringArray0[8] = "ALTER TABLE ";
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null., null., null.ALTER TABLE , null., null.delete, null.delete, null.:QQ>A,!I@Rq, null.delete, null.ALTER TABLE ", string0);
      
      DBDataType dBDataType0 = DBDataType.getInstance(46, "delete");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer2, integer1);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "org.databene.commons.file.PatternFileFilter";
      stringArray0[2] = "_/BH51w59mmF/PVtN`@";
      stringArray0[3] = "org.databene.commons.file.PatternFileFilter";
      byte byte0 = (byte)95;
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("55uXL#94AMMA");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("A,", defaultDBTable0, (-3384), "alter materialized viewcreate materialized viewalter in}exdte");
      columnDescriptorList0.add((Object) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
      StringBuilder stringBuilder0 = new StringBuilder();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp2 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("sele", (String[]) null, "A,", "55uXL#94AMMA", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      String string0 = jdbcDataSource0.getTraceObjectName();
      assertEquals("ds289", string0);
      
      jdbcDataSource0.getLogWriter();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("ds1127");
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      Object object0 = new Object();
      TableContainer tableContainer0 = new TableContainer("null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.null", defaultDBTable0);
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(stringArray0[0], true, defaultDBTable0, stringArray0, defaultDBTable2, stringArray0);
      dBForeignKeyConstraint0.isIdentical(defaultDBTable1);
      StringBuilder stringBuilder0 = new StringBuilder("unknown");
      StringBuilder stringBuilder1 = stringBuilder0.append((-2995L));
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder1);
      assertEquals("unknown-2995", stringBuilder0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5490252973436593
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SQLUtil.isQuery("g*-wplx");
      SessionRemote sessionRemote0 = new SessionRemote();
      SQLUtil.isDML(">$S,SXvNhVwX{;");
      System.setCurrentTimeMillis(13L);
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.getLobConnection();
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedWriter0.flush();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.lowerCaseMode(true);
      pipedWriter0.flush();
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      SQLUtil.isDDL("g*-wplx");
      charArray0[1] = '8';
      charArray0[2] = '`';
      charArray0[3] = 't';
      charArray0[4] = 'B';
      pipedWriter0.write(charArray0);
      streamTokenizer0.pushBack();
      streamTokenizer0.wordChars(490, 5);
      sessionRemote0.autoCommitIfCluster();
      sessionRemote1.autoCommitIfCluster();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      SQLUtil.mutatesStructure(">$S,SXvNhVwX{;");
      System.setCurrentTimeMillis(4);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SysschemasIdentifier");
      assertNull(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1950865325403197
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      isc_stmt_handle_impl2.setInSqlda(xSQLDA0);
      isc_stmt_handle_impl0.setExecutionPlan((String) null);
      isc_stmt_handle_impl1.registerTransaction((AbstractIscTrHandle) null);
      isc_stmt_handle_impl2.setSingletonResult(false);
      isc_stmt_handle_impl1.setRsr_id((-1762531469));
      isc_stmt_handle_impl0.setRsr_id((-1795625039));
      isc_stmt_handle_impl1.getRsr_rdb();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9714549503478573
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure(")pqB&V`ZED9lo9K?wc");
      assertFalse(boolean0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean1);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7697590704283859
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "hL}WE";
      stringArray0[1] = "Id3U!`n'NuIPom0";
      int int0 = 1423;
      Random.setNextRandom((-540));
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("", false, "execx0y63.s.1", "SYNTAX");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "/zHx", false, stringArray0);
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec1);
      // Undeclared exception!
      try { 
        stringBuilder0.deleteCharAt(2113);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2113
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("2Eq;Q+_tn$(0hX");
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource2 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "2Eq;Q+_tn$(0hX";
      stringArray0[1] = "NCLOB";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("NCLOB", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte) (-1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_stmt_handle_impl0.removeRows();
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SQLUtil.isProcedureCall("callsysschemasidentifier");
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      ContextService contextService0 = null;
      try {
        contextService0 = new ContextService();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.services.monitor.Monitor", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "oEX1RG\"+v?J9B.R\"Y");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("oEX1RG\"+v?J9B.R\"Y", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "nz7EIG?\"XwYVE";
      stringArray0[0] = "nz7EIG?\"XwYVE";
      stringArray0[3] = "nz7EIG?\"XwYVE";
      stringArray0[4] = "bz'S$^/Y";
      stringArray0[6] = "1zz";
      String string0 = SQLUtil.normalize("nz7EIG?\"XwYVE", true);
      assertEquals("nz7EIG ? \"XwYVE\"", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "$cK7j:VzUeYDR9Fkt=";
      stringArray0[3] = "$cK7j:VzUeYDR9Fkt=";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll((-136L), timeUnit0);
      delayQueue0.clear();
      delayQueue0.peek();
      SQLUtil.renderValue(defaultDBTable0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      System.setCurrentTimeMillis(2283L);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = SQLUtil.normalize("(zn<-ja(DcEb", true);
      assertEquals("(zn < - ja (DcEb", string0);
      
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "Z>/fHK`Lo&^(r");
      String string1 = SQLUtil.normalize("(zn < - ja (DcEb", false);
      assertEquals("(zn < - ja (DcEb", string1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1128269022900783
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Booting Module   ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Booting Module   ";
      stringArray0[1] = "ALTER TABLE ";
      TableContainer tableContainer0 = new TableContainer("Booting Module   ", defaultDBTable0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", false, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("org.databen");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.addOptionalCondition("Booting Module   ", stringBuilder0);
      assertEquals("org.databen or Booting Module   ", stringBuilder0.toString());
      
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)95, "Booting Module   ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Booting Module   ", defaultDBTable1, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "ALTER TABLE ";
      stringArray1[1] = "org.databen";
      stringArray1[2] = "ALTER TABLE ";
      stringArray1[3] = "ALTER TABLE ";
      stringArray1[4] = "Booting Module   ";
      stringArray1[5] = "Booting Module   ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, "ALTER TABLE ", false, stringArray1);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec1);
      NameSpec nameSpec2 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec2);
      assertEquals("FOREIGN KEY (Booting Module   , ALTER TABLE ) REFERENCES null(Booting Module   , ALTER TABLE )", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[6] = "ZW>Yl)R3U[-0/}R";
      stringArray0[3] = "";
      stringArray0[4] = "(";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MockFile mockFile0 = new MockFile("g*-Wplx=3TBFY%l#b`");
      FileUtil.canonicalFile((File) mockFile0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("o.>uDG,A");
      char char0 = 'x';
      Writer writer0 = mockFileWriter0.append('x');
      mockFile0.getCanonicalPath();
      File file0 = MockFile.createTempFile("exec", "g*-Wplx=3TBFY%l#b`");
      mockFileWriter0.write(1);
      MockFileWriter mockFileWriter1 = new MockFileWriter(file0, true);
      mockFileWriter1.write((-1843274813));
      mockFileWriter1.write("z/2kyo_,):G,Er>");
      mockFileWriter1.write("5d");
      mockFile0.renameTo(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(writer0, false);
      mockFile0.toURI();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-3001), "alter in}e");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter in}e", defaultDBTable0, dBDataType0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      DBSchema dBSchema0 = new DBSchema("org.databene.jdbacl.sql.FunctionInvocation", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tableupdate_rule", dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "org.databene.jdbacl.sql.FunctionInvocation";
      stringArray0[2] = "";
      stringArray0[3] = "K`NA<;A{]Zh9%";
      stringArray0[4] = "org.databene.jdbacl.sql.FunctionInvocation";
      stringArray0[5] = "(5N2i|2Of$)H";
      stringArray0[6] = "org.databene.jdbacl.sql.FunctionInvocation";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "alter tableupdate_rule", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, org.databene.jdbacl.sql.FunctionInvocation, , K`NA<;A{]Zh9%, org.databene.jdbacl.sql.FunctionInvocation, (5N2i|2Of$)H, org.databene.jdbacl.sql.FunctionInvocation)", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$wg";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[1] = "J8)/Pq";
      stringArray0[2] = "org.apache.derby.impl.sql.compile.ReferencedTablesVisitor";
      stringArray0[4] = "org.postgresql.core.Field";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "alter session";
      stringArray1[1] = "J8)/Pq";
      stringArray1[2] = "alter session";
      stringArray1[3] = "$wg";
      stringArray1[4] = "ZfxqT54=oXHeT7hh";
      stringArray1[5] = "drop index";
      stringArray1[6] = "org.apache.derby.impl.sql.compile.ReferencedTablesVisitor";
      stringArray1[7] = "J8)/Pq";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("alter session", stringArray0, "org.databene.jdbacl.model.DBTrigger", "drop index", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = SQLUtil.normalize("'ijpq", false);
      assertEquals("'ijpq'", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte)6;
      byteArray0[6] = (byte) (-79);
      byteArray0[7] = (byte)10;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.setRsr_id(96);
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      System.setCurrentTimeMillis((byte)6);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ZW>Yl)R3U[-0/}R";
      stringArray0[1] = "ZW>Yl)R3U[-0/}R";
      stringArray0[2] = "&$piXv";
      stringArray0[3] = "ZW>Yl)R3U[-0/}R";
      stringArray0[4] = "alter tablealter in}exdte";
      stringArray0[5] = "alter in}exdte";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      MockFile mockFile0 = new MockFile("g*-Wplx=3TBFY%l#b`");
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HKvkZ[T$ >7{yHW,oG5");
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl2.setRsr_id((-2005806787));
      isc_stmt_handle_impl0.getRsr_rdb();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(1717L);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createDatabaseParameterBuffer();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      SQLUtil.isDML("truncate");
      System.setCurrentTimeMillis(10);
      SessionRemote sessionRemote1 = new SessionRemote();
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.getLobConnection();
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedWriter0.flush();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 33);
      System.setCurrentTimeMillis((-908L));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.3065868781693233
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter indexdate");
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("delete");
      assertTrue(boolean1);
      assertNotNull(boolean1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.derby.impl.store.raw.xact.XactId";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      System.setCurrentTimeMillis(0L);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "org.apache.derby.impl.store.raw.xact.XactId = 'org.apache.derby.impl.store.raw.xact.XactId'");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7552951290313565
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("truncate");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DM=efe(SOC|v2K#Y", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      DBDataType dBDataType0 = DBDataType.getInstance((-179), "xZH");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("truncate", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLoginTimeout();
      jdbcDataSource0.getLogWriter();
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("xZH", defaultDBTable0, dBDataType0, integer1, integer2);
      defaultDBColumn1.toString();
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      Integer integer3 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("truncate", defaultDBTable0, dBDataType0, integer3);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("constraint", 47);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "aq$:Ii|G K";
      stringArray0[1] = "k*4:<+lyedz(?_";
      stringArray0[2] = "truncate";
      stringArray0[3] = "truncate";
      stringArray0[4] = "qS(8:.0n`I'Y";
      stringArray0[5] = "truncate";
      stringArray0[6] = "xZH : XZH(1,1)";
      stringArray0[7] = "xZH, truncate, truncate, xZH";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "p xInPQw:5_2/e ";
      stringArray0[1] = "p xInPQw:5_2/e ";
      stringArray0[1] = "selectob";
      stringArray0[3] = "W";
      stringArray0[4] = "bht@Vh8}> ";
      Integer integer0 = RawTransaction.ABORT;
      DBCatalog dBCatalog0 = new DBCatalog("p xInPQw:5_2/e ");
      DBSchema dBSchema0 = new DBSchema("bht@Vh8}> ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("p xInPQw:5_2/e ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "/home/u");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("W", defaultDBTable0, dBDataType0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("W : /HOME/U", string0);
      
      Integer.toUnsignedString((-2));
      Integer integer1 = RawTransaction.ABORT;
      Integer.toUnsignedString(90078);
      Integer integer2 = new Integer(65531);
      Integer integer3 = RawTransaction.ABORT;
      Integer.getInteger("bht@Vh8}> ", integer2);
      Integer integer4 = RawTransaction.COMMIT;
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("W, W, W", string1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "org.databene.commons.file.PatternFileFilter";
      stringArray0[2] = "_/BH51w59mmF/PVtN`@";
      stringArray0[3] = "_/BH51w59mmF/PVtN`@";
      stringArray0[4] = "";
      stringArray0[5] = "UQ's6maX%-QNr4`";
      Object object0 = new Object();
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("_/BH51w59mmF/PVtN`@", compositeDBObject0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("call");
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("drop indexauc<;5_<y6)s8k^");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'drop indexauc<;5_<y6)s8k^' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      boolean boolean0 = true;
      SQLUtil.normalize("(zn<-ja(DcEb", true);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(zn < - ja (DcEb");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (zn < - ja (DcEb
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.272336416778445
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T}.F@=");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "T}.F@=";
      stringArray0[1] = "T}.F@=";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("_8X.n@C*<*oE", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      String[] stringArray1 = new String[0];
      SQLUtil.renderColumnNames(stringArray1);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "T}.F@=");
      StringBuilder stringBuilder1 = stringBuilder0.append((CharSequence) "T}.F@=");
      stringBuilder1.append((Object) null);
      stringBuilder1.insert(0, false);
      SQLUtil.addOptionalCondition("T}.F@=", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "hL}WE";
      stringArray0[1] = "Id3:U!`n'NuIPom0";
      stringArray0[2] = "Id3:U!`n'NuIPom0";
      String string0 = SQLUtil.normalize("9v$,EcU", true);
      assertEquals("9v $, EcU", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DBDataType.getInstance((-1398), "[=~b1i?q)~11E/3{l");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      assertEquals(52, jdbcDataSource0.getTraceId());
      
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer(880);
      Integer integer2 = RawTransaction.ABORT;
      Integer.toUnsignedString(65531);
      Integer integer3 = RawTransaction.ABORT;
      Integer.toUnsignedString(4);
      Integer integer4 = new Integer(15);
      Integer integer5 = RawTransaction.ABORT;
      Integer integer6 = RawTransaction.COMMIT;
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      String string0 = SQLUtil.normalize("[=~b1i?q)~11E/3{l", true);
      assertEquals("[ = ~ b1i ? q) ~ 11E / 3 { l", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("4s5|YPIL2[`4S(");
      DBSchema dBSchema0 = new DBSchema("4s5|YPIL2[`4S(", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("H~23y1*<", dBSchema0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "gVavO2` mdx|vy";
      stringArray0[1] = "gVavO2` mdx|vy";
      stringArray0[2] = "gVavO2` mdx|vy";
      stringArray0[3] = "gVavO2` mdx|vy";
      stringArray0[4] = "H~23y1*<";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "gVavO2` mdx|vy", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (gVavO2` mdx|vy, gVavO2` mdx|vy, gVavO2` mdx|vy, gVavO2` mdx|vy, H~23y1*<)", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MockFile mockFile0 = new MockFile("g*-Wplx=3TBFY%l#b`");
      FileUtil.canonicalFile((File) mockFile0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("o.>uDG,A");
      Writer writer0 = mockFileWriter0.append('x');
      mockFile0.getCanonicalPath();
      File file0 = MockFile.createTempFile("exec", "g*-Wplx=3TBFY%l#b`");
      mockFileWriter0.write(1);
      MockFileWriter mockFileWriter1 = new MockFileWriter(file0, true);
      mockFileWriter1.write("5d");
      mockFile0.renameTo(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(writer0, false);
      mockFile0.toURI();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("5d");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "5x#}98");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-3001), "alter in}e");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter in}e", defaultDBTable0, dBDataType0);
      SQLUtil.renderColumn(defaultDBColumn0);
      Random.setNextRandom((-1518));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "org.databene.commons.file.PatternFileFilter";
      stringArray0[2] = "_/BH51w59mmF/PVtN`@";
      stringArray0[3] = "org.databene.commons.file.PatternFileFilter";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)95;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.databene.commons.file.PatternFileFilter");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("_/BH51w59mmF/PVtN`@", compositeDBObject0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("Glk/KM)&o1", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.databene.commons.file.PatternFileFilter");
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.autoReconnect(8);
      Connection connection0 = sessionRemote0.getLobConnection();
      assertNull(connection0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = stringArray0[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      String[] stringArray1 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(stringArray0[1], false, defaultDBTable0, stringArray1, defaultDBTable0, stringArray0);
      SQLUtil.renderColumnNames(stringArray1);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.deleteCharAt(222);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 222
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.1531782505128936
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = "$cK7j:VzUeYDR9Fkt=";
      stringArray0[1] = "$cK7j:VzUeYDR9Fkt=";
      stringArray0[3] = "$cK7j:VzUeYDR9Fkt=";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      String[] stringArray1 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("$cK7j:VzUeYDR9Fkt=", false, defaultDBTable0, stringArray1, defaultDBTable0, stringArray0);
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.renderColumnNames(stringArray1);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      int int0 = 222;
      // Undeclared exception!
      try { 
        stringBuilder0.deleteCharAt(222);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 222
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Unknown constraint type: ");
      SQLUtil.addRequiredCondition("Unknown constraint type: ", stringBuilder0);
      assertEquals("Unknown constraint type:  and Unknown constraint type: ", stringBuilder0.toString());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("DM=efe(SOC|v2K#Y", false, (String) null, "C");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      stringBuilder1.append("update>$s,sxvnhvwx{;");
      Boolean boolean0 = new Boolean(false);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.setSingletonResult(false);
      isc_stmt_handle_impl0.setRsr_id((byte) (-60));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setAllRowsFetched(false);
      System.setCurrentTimeMillis((byte) (-1));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3230994163312477
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      SQLUtil.mutatesStructure("alter indexdate");
      System.setCurrentTimeMillis(1L);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(";");
      assertNull(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4358532144078109
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("UP#ATE_RLE");
      Boolean boolean1 = new Boolean(false);
      boolean boolean2 = SQLUtil.isDML("5)*");
      assertTrue(boolean2 == boolean0);
      
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "UP#ATE_RLE");
      System.setCurrentTimeMillis(4096L);
      boolean boolean3 = SQLUtil.isDDL("alter index");
      assertFalse(boolean3 == boolean2);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9939326599479297
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "zuC^lgg}MxAGmeJ";
      stringArray0[1] = "org.databene.commons.file.PatternFileFilter";
      stringArray0[2] = "_/BH51w59mmF/PVtN`@";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "UQ's6maX%-QNr4`";
      stringArray0[6] = "x";
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "x";
      objectArray0[2] = (Object) "zuC^lgg}MxAGmeJ";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "_/BH51w59mmF/PVtN`@";
      objectArray0[5] = (Object) "UQ's6maX%-QNr4`";
      objectArray0[6] = (Object) "x";
      String string0 = SQLUtil.renderWhereClause(stringArray0, objectArray0);
      TableContainer tableContainer0 = new TableContainer(" or ");
      tableContainer0.getTable((String) null);
      DBDataType dBDataType0 = DBDataType.getInstance((-4442), "");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(": b-tree node", (DBTable) null, dBDataType0, integer0, integer0);
      dBDataType0.isAlpha();
      defaultDBColumn0.isEquivalent((DBObject) null);
      String string1 = SQLUtil.substituteMarkers("", " DEFAULT ", defaultDBColumn0);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      
      String string2 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(": b-tree node (1,1) NULL", string2);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "hdnqpo\"^";
      stringArray0[1] = "8aca-W";
      stringArray0[2] = "exec";
      stringArray0[3] = "b?x~`W<7m|";
      stringArray0[4] = "8aca-W";
      stringArray0[5] = "b?x~`W<7m|";
      stringArray0[6] = "callalter in}exdte";
      stringArray0[7] = "exec";
      stringArray0[8] = "hdnqpo\"^";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "8aca-W";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("hdnqpo\"^", stringArray0, "alter in", "b?x~`W<7m|", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder("org.firebirdsql.jca.FBStandAloneConnectionManager");
      DBSchema dBSchema0 = new DBSchema("org.firebirdsql.jca.FBStandAloneConnectionManager");
      DBPackage dBPackage0 = new DBPackage("org.firebirdsql.jca.FBStandAloneConnectionManager", (DBSchema) null);
      dBPackage0.isIdentical(defaultDBTable0);
      DBProcedure dBProcedure0 = new DBProcedure("wK{'*n(yG", dBPackage0);
      dBProcedure0.getOwner();
      String string0 = SQLUtil.ownerDotComponent(dBProcedure0);
      assertEquals("org.firebirdsql.jca.FBStandAloneConnectionManager.wK{'*n(yG", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$wg";
      stringArray0[1] = "J8)/Pq";
      stringArray0[2] = "org.apache.derby.impl.sql.compile.ReferencedTablesVisitor";
      stringArray0[4] = "org.postgresql.core.Field";
      stringArray0[5] = "org.postgresql.core.Field";
      stringArray0[6] = "$wg";
      stringArray0[7] = "J8)/Pq";
      stringArray0[8] = "J8)/Pq";
      DBSchema dBSchema0 = new DBSchema("insert].");
      DBPackage dBPackage0 = new DBPackage("$wg", dBSchema0);
      Parameter parameter0 = new Parameter(97);
      dBSchema0.equals(parameter0);
      dBPackage0.isIdentical(dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("J8)/Pq", dBPackage0);
      Random.setNextRandom(97);
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("4vu(-J9wF", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "execute43y61.u";
      stringArray0[1] = "nZv6$lT~P";
      stringArray0[2] = "Id3U!`n'NuIPom0";
      stringArray0[3] = "Id3U!`n'NuIPom0";
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nZv6$lT~P");
      defaultDBTable0.getReferrers();
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray1);
      assertEquals("SELECT * FROM nZv6$lT~P WHERE ", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "Id3U!`n'NuIPom0";
      stringArray0[2] = "Id3U!`n'NuIPom0";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "execute43y61.u";
      stringArray1[1] = "G";
      stringArray1[4] = "G";
      stringArray1[4] = "G";
      Random.setNextRandom((-4231));
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte)39;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7116562872701007
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter materialized viewcceate unique ind+x");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized viewcceate unique ind+x");
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      String string0 = SQLUtil.normalize("alter materialized viewcceate unique ind+x", (boolean) boolean0);
      assertEquals("alter materialized viewcceate unique ind + x", string0);
      
      SQLUtil.normalize("updatecceate unique ind+x", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "A)43^MsO";
      stringArray0[1] = "updatecceate unique ind+x";
      stringArray0[2] = "A)43^MsO";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[3] = "updatecceate unique ind+x";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "from");
      boolean boolean1 = SQLUtil.isQuery(":mrj%/\"3hGI");
      assertFalse(boolean1);
      
      Random.setNextRandom(90042);
      Random.setNextRandom(137);
      Character character0 = new Character('`');
      String string1 = SQLUtil.substituteMarkers("UPDATERULE", ":", character0);
      assertEquals("UPDATERULE", string1);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder("org.firebirdsql.jca.FBStandAloneConnectionManager");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "7t.GcMs";
      stringArray0[1] = "7t.GcMs";
      stringArray0[2] = "org.firebirdsql.jca.FBStandAloneConnectionManager";
      stringArray0[3] = "7t.GcMs";
      stringArray0[4] = "7t.GcMs";
      stringArray0[6] = "org.firebirdsql.jca.FBStandAloneConnectionManager";
      StringBuilder stringBuilder1 = new StringBuilder("7t.GcMs");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "hL}WE";
      stringArray0[1] = "Id3U!`n'NuIPom0";
      stringArray0[2] = "Id3U!`n'NuIPom0";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "execute43y61.u";
      stringArray1[1] = "G";
      stringArray1[2] = "G";
      stringArray1[3] = "G";
      stringArray1[4] = "G";
      DBSequence dBSequence0 = new DBSequence("execute43y61.u", "Ih9<R!iSpl", "G");
      String string0 = SQLUtil.typeAndName(dBSequence0);
      assertEquals("sequence execute43y61.u", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("8aca-W", stringBuilder0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp4 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      assertTrue(databaseParameterBufferImp7.equals((Object)databaseParameterBufferImp2));
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("8aca-W", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("exec", true, (String) null, "exec");
      dBCheckConstraint0.setName("X0Y28.S");
      StringBuilder stringBuilder0 = new StringBuilder();
      char[] charArray0 = new char[14];
      charArray0[0] = 'Z';
      stringBuilder0.append(charArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      BasicDatabase basicDatabase0 = new BasicDatabase();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("7e>H", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT 7e>H FOREIGN KEY () REFERENCES null()", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Object object0 = new Object();
      TableContainer tableContainer0 = new TableContainer("UQ's6maX%-QNr4`", (CompositeDBObject<? extends DBObject>) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " NULL";
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "execute43y61.u";
      stringArray0[1] = "nZv6$lT~P";
      stringArray0[2] = "Id3U!`n'NuIPom0";
      stringArray0[3] = "Id3U!`n'NuIPom0";
      stringArray0[4] = "Id3U!`n'NuIPom0";
      Object object0 = new Object();
      String string0 = SQLUtil.renderValue("Id3U!`n'NuIPom0");
      assertEquals("'Id3U!`n'NuIPom0'", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("5d");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("5d");
      mockFileWriter0.append('f');
      file0.getCanonicalPath();
      MockFile.createTempFile("/home/ubuntu/termite/projects/13_jdbacl/5d", "ex");
      mockFileWriter0.write("ex");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      Object object0 = new Object();
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance(1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte) (-96);
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)13;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "794|U8g}UKug,r^");
      String string0 = SQLUtil.normalize("org.apache.derby.impl.store.raw.data.PhysicalPageOperation", false);
      assertEquals("org.apache.derby.impl.store.raw.data.PhysicalPageOperation", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      String string0 = "55uXL#94AMMA";
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      // Undeclared exception!
      try { 
        SQLUtil.join("drop table", "drop table", (String[]) null, "d[Lj'Gf^Gc6A[W+t", "7", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "$?y{";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "cceate uni(que ind+x";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "cceate uni(que ind+x", stringArray0, "cceate uni(que ind+x", "L~~D!uhLr", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, (NameSpec) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("Re?Bg7i");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#qP*jZn%:>({W(");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "#qP*jZn%:>({W(";
      stringArray0[2] = "#qP*jZn%:>({W(";
      stringArray0[3] = stringArray0[0];
      stringArray0[6] = "j/#kg{ ";
      stringArray0[7] = "#qP*jZn%:>({W(";
      stringArray0[8] = "alter tblej/#kg{ /oa";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, "alter tblej/#kg{ /oa", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("Ztur}_Kea--");
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable1);
      dBPrimaryKeyConstraint0.setTable(defaultDBTable1);
      dBPrimaryKeyConstraint0.toString();
      dBPrimaryKeyConstraint0.equals(defaultDBTable1);
      dBPrimaryKeyConstraint0.setDoc("Updat6c");
      defaultDBTable1.setPrimaryKey(dBPrimaryKeyConstraint0);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("#qP*jZn%:>({W(", defaultDBTable1, 2623, "lzq<(1b~Hf>tVD");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: lzq<(1b~Hf>tVD
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("map");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("truncate");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DM=Ffe(SOC_v2K#Y", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.8672900914093027
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "DM=efe(SOC|v2K#Y";
      DBSchema dBSchema0 = new DBSchema("truncate");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("DM=efe(SOC|v2K#Y", true, "DM=efe(SOC|v2K#Y", "truncate");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BTreeController bTreeController0 = new BTreeController();
      bTreeController0.getXactMgr();
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      BasicDatabase basicDatabase0 = new BasicDatabase();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      int int0 = 41;
      GenericLanguageConnectionContext genericLanguageConnectionContext0 = null;
      try {
        genericLanguageConnectionContext0 = new GenericLanguageConnectionContext((ContextManager) null, (TransactionController) null, genericLanguageFactory0, genericLanguageConnectionFactory0, basicDatabase0, "CONSTRAINT ", 41, "CONSTRAINT DM=efe(SOC|v2K#Y CHECK truncate", "truncate");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.services.context.ContextImpl", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Random.setNextRandom(1423);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Boolean boolean0 = new Boolean("create materialized view");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("z");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "g*-Wplx=3TBFY%l#b`";
      stringArray0[1] = "g*-Wplx=3TBFY%l#b`";
      String string0 = "/][wuhq|g['";
      stringArray0[2] = "/][wuhq|g['";
      stringArray0[3] = "/][wuhq|g['";
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("delete", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      stringArray0[4] = "g*-Wplx=3TBFY%l#b`";
      stringArray0[5] = "g*-Wplx=3TBFY%l#b`";
      SQLUtil.renderColumnNames(stringArray0);
      int int0 = (-860);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("/][wuhq|g['", (DBTable) null, (-860), "(g*-Wplx=3TBFY%l#b`, g*-Wplx=3TBFY%l#b`, /][wuhq|g[', /][wuhq|g[', g*-Wplx=3TBFY%l#b`, g*-Wplx=3TBFY%l#b`)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"g*-Wplx=3TBFY%l#b`\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "$cK7j:VzUeYDR9Fkt=";
      stringArray0[3] = "$cK7j:VzUeYDR9Fkt=";
      stringArray0[4] = "";
      stringArray0[5] = "UQ's6maX%-QNr4`";
      Object object0 = new Object();
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[20];
      stringArray0[15] = "hL}WE";
      stringArray0[1] = stringArray0[0];
      stringArray0[2] = stringArray0[1];
      String[] stringArray1 = new String[5];
      stringArray1[1] = "G";
      stringArray1[3] = "G";
      stringArray1[4] = "G";
      // Undeclared exception!
      try { 
        SQLUtil.join("hL}WE", "l%,6a", stringArray0, "G", stringArray0[0], stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "executesysschemasidentifier";
      SQLUtil.join("l%,6a", "executesysschemasidentifier", stringArray0, "l%,6a", "G", stringArray0);
      BTreeController bTreeController0 = new BTreeController();
      bTreeController0.getXactMgr();
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      Transfer transfer0 = new Transfer(sessionRemote0);
      Transfer transfer1 = new Transfer(sessionRemote1);
      // Undeclared exception!
      try { 
        transfer1.writeBoolean(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.value.Transfer", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Object object0 = new Object();
      String string0 = SQLUtil.renderValue(object0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "lft");
      String string0 = SQLUtil.normalize("vegV!}F]L}a/!j", true);
      assertEquals(" vegV ! } F ] L } a / ! j", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "g*-Wplx=3TBFY%l#b`");
      String string0 = SQLUtil.normalize("g*-Wplx=3TBFY%l#b`", false);
      assertEquals("g * - Wplx = 3TBFY % l # b `", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      SQLUtil.normalize("$g-=", true);
      BTreeController bTreeController0 = new BTreeController();
      int int0 = (-366295878);
      int int1 = (-18);
      int int2 = (-848);
      long long0 = 0L;
      long long1 = 0L;
      long long2 = 4194304L;
      int int3 = 1028;
      int[] intArray0 = new int[1];
      int int4 = 1;
      intArray0[0] = 1;
      String string0 = "Xid[";
      Properties properties0 = null;
      ResultSetStatistics[] resultSetStatisticsArray0 = new ResultSetStatistics[7];
      int int5 = 90103;
      long long3 = 2449L;
      int int6 = (-2925);
      RealMaterializedResultSetStatistics realMaterializedResultSetStatistics0 = new RealMaterializedResultSetStatistics(1, (-848), (-2925), 1L, 1L, 2113L, (-366295878), 61, 6L, 18, 61, 1L, (ResultSetStatistics) null);
      RealHashLeftOuterJoinStatistics realHashLeftOuterJoinStatistics0 = new RealHashLeftOuterJoinStatistics((-18), (-18), 61, 0L, (-18), 2449L, 1, 1823, 1, 90103, 1, 2449L, 1, (-2380.69741), "$ g - =", realMaterializedResultSetStatistics0, realMaterializedResultSetStatistics0, 1028);
      RealInsertResultSetStatistics realInsertResultSetStatistics0 = new RealInsertResultSetStatistics(1, true, 90103, false, true, false, 1, realHashLeftOuterJoinStatistics0);
      resultSetStatisticsArray0[0] = (ResultSetStatistics) realInsertResultSetStatistics0;
      RealWindowResultSetStatistics realWindowResultSetStatistics0 = new RealWindowResultSetStatistics(1, (-366295878), (-3058), 240518168576L, 0L, 0L, (-18), 277, (-1082.0), 1.0, (ResultSetStatistics) null);
      resultSetStatisticsArray0[1] = (ResultSetStatistics) realWindowResultSetStatistics0;
      int int7 = 4156;
      RealDistinctScanStatistics realDistinctScanStatistics0 = new RealDistinctScanStatistics(1, 18, 4156, 90103, (-3058), 0L, 90103, 61, "btapn<)7c;rTD<", "ex", false, 90103, intArray0, "$ g - =", (String) null, (Properties) null, "$g-=", "ex", "*hoaq", (String) null, 0L, 489.017318017);
      resultSetStatisticsArray0[2] = (ResultSetStatistics) realDistinctScanStatistics0;
      int int8 = 65;
      RealRowResultSetStatistics realRowResultSetStatistics0 = new RealRowResultSetStatistics(65, (-1790145684), 1823, 0L, 0L, 1, 6L, 90103, (-4), (-129.0), (-18L));
      resultSetStatisticsArray0[3] = (ResultSetStatistics) realRowResultSetStatistics0;
      int int9 = 15;
      int int10 = (-115);
      long long4 = 1L;
      long long5 = 985162418487298L;
      long long6 = (-32L);
      String string1 = "5zAx=7v\\";
      boolean boolean0 = false;
      HeapController heapController0 = new HeapController();
      // Undeclared exception!
      try { 
        heapController0.getInternalTablePropertySet((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.access.conglomerate.GenericController", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte) (-52);
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte)24;
      byteArray0[5] = (byte) (-120);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("_yJp&]v", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("VyUMD!~");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create uni\"que index", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      DBDataType dBDataType0 = DBDataType.getInstance((-1398), "[=~b1i?q)~11E/3{l");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("VyUMD!~", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      //  // Unstable assertion: assertEquals(10, jdbcDataSource0.getTraceId());
      
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer(880);
      Integer integer2 = RawTransaction.ABORT;
      defaultDBColumn0.toString();
      Integer.toUnsignedString(65531);
      Integer integer3 = RawTransaction.ABORT;
      Integer.toUnsignedString(4);
      Integer integer4 = new Integer(15);
      Integer integer5 = RawTransaction.ABORT;
      Integer.getInteger("create uni\"que index", integer5);
      Integer integer6 = RawTransaction.COMMIT;
      Boolean boolean0 = SQLUtil.mutatesStructure("D6A9./Ti~2z}g%");
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("VyUMD!~");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create uni\"que index", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      DBDataType dBDataType0 = DBDataType.getInstance((-1398), "[=~b1i?q)~11E/3{l");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("VyUMD!~", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer(880);
      Integer integer2 = RawTransaction.ABORT;
      defaultDBColumn0.toString();
      Integer.toUnsignedString(65531);
      Integer integer3 = RawTransaction.ABORT;
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp2 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("[=~B1I?Q)~11E/3{L", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(".", 40);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4|<eH(");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SQLUtil.isProcedureCall("TP<");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createDatabaseParameterBuffer();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      assertTrue(databaseParameterBufferImp4.equals((Object)databaseParameterBufferImp0));
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SQLUtil.isProcedureCall("TP<");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      javaGDSImpl1.createDatabaseParameterBuffer();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl3 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      System.setCurrentTimeMillis(96L);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getReference();
      jdbcDataSource0.getTraceObjectName();
      jdbcDataSource0.getLogWriter();
      DBDataType.getInstance(235, "ds1114");
      DBDataType.getInstance(3, "&=");
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource2 = new JdbcDataSource();
      jdbcDataSource2.getLogWriter();
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.ABORT;
      Integer.toUnsignedString(235);
      Integer integer3 = RawTransaction.ABORT;
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("235", integer4);
      Integer integer5 = RawTransaction.COMMIT;
      Integer integer6 = RawTransaction.LOCK_ESCALATE;
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Integer.toUnsignedString(3394);
      Integer integer0 = RawTransaction.ABORT;
      Integer.toUnsignedString(65531);
      Integer.getInteger("65531", integer0);
      Integer integer1 = RawTransaction.ABORT;
      Integer.getInteger("65531", integer1);
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SQLUtil.isDML("cceate unique ind+x");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      assertEquals("Activation", constantActionActivation0.getClassType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[3] = "";
      stringArray0[3] = "(";
      stringArray0[5] = "UQ's6maX%-NRr4`";
      stringArray0[6] = "1zz";
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "1zz";
      objectArray0[3] = (Object) "(";
      String string0 = SQLUtil.substituteMarkers("1zz", "1zz", "");
      assertEquals("''", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[0] = "ZW>Yl)R3U[-0/}R";
      stringArray0[3] = "";
      stringArray0[3] = "(";
      stringArray0[5] = "UQ's6maX%-NRr4`";
      stringArray0[6] = "1zz";
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "1zz";
      objectArray0[2] = (Object) "vuC^lgg}MxAG[TmeJ";
      objectArray0[3] = (Object) "(";
      objectArray0[4] = (Object) "_/BH51w59mmF/PVtN`@";
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("1zz", (String) null, "1zz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.322122307526584
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter in}exdte");
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      BTreeController bTreeController0 = new BTreeController();
      int[] intArray0 = new int[9];
      intArray0[0] = 204;
      intArray0[4] = (-372486963);
      intArray0[7] = (-372486963);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[0] = "ZW>Yl)R3U[-0/}R";
      stringArray0[3] = "";
      stringArray0[4] = "(";
      stringArray0[5] = "UQ's6maX%-QNr4`";
      stringArray0[6] = "1zz";
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      PrintWriter printWriter0 = mockPrintWriter0.format("ZW>Yl)R3U[-0/}R", (Object[]) stringArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      DBCatalog dBCatalog0 = new DBCatalog();
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("UQ's6maX%-QNr4`", "", versionNumber0);
      defaultDatabase0.getTable("l/z;YkuTnYdPWaXv?=", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("7e>H", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("7e>H", (String[]) null, "PURE_JAVA", "PURE_JAVA", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "S";
      stringArray0[1] = "S";
      stringArray0[2] = "S";
      stringArray0[3] = "S";
      stringArray0[4] = "S";
      String[] stringArray1 = new String[5];
      stringArray1[0] = " NOT";
      stringArray1[1] = "L1qbt~ohvmX5?";
      stringArray1[2] = "ZVHa8z{Fja:KlPLsj";
      stringArray1[3] = "(";
      stringArray1[4] = " NOT";
      String string0 = SQLUtil.innerJoin("S", stringArray0, "L1qbt~ohvmX5?", " NOT", stringArray1);
      assertEquals("L1qbt~ohvmX5? as  NOT on S.S =  NOT. NOT and S.S =  NOT.L1qbt~ohvmX5? and S.S =  NOT.ZVHa8z{Fja:KlPLsj and S.S =  NOT.( and S.S =  NOT. NOT", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "WHB?|k$Es>iYta";
      stringArray0[1] = "+=;cFuPa[5Kr:'|B'C";
      stringArray0[2] = "+=;cFuPa[5Kr:'|B'C";
      stringArray0[3] = "b?x~`W<7m|";
      stringArray0[4] = "+=;cFuPa[5Kr:'|B'C";
      stringArray0[5] = "WHB?|k$Es>iYta";
      stringArray0[7] = "+=;cFuPa[5Kr:'|B'C";
      String string0 = SQLUtil.leftJoin("WHB?|k$Es>iYta", stringArray0, "hdnqpo\"^", "exec", stringArray0);
      assertEquals("left join hdnqpo\"^ as exec on WHB?|k$Es>iYta.WHB?|k$Es>iYta = exec.WHB?|k$Es>iYta and WHB?|k$Es>iYta.+=;cFuPa[5Kr:'|B'C = exec.+=;cFuPa[5Kr:'|B'C and WHB?|k$Es>iYta.+=;cFuPa[5Kr:'|B'C = exec.+=;cFuPa[5Kr:'|B'C and WHB?|k$Es>iYta.b?x~`W<7m| = exec.b?x~`W<7m| and WHB?|k$Es>iYta.+=;cFuPa[5Kr:'|B'C = exec.+=;cFuPa[5Kr:'|B'C and WHB?|k$Es>iYta.WHB?|k$Es>iYta = exec.WHB?|k$Es>iYta and WHB?|k$Es>iYta.null = exec.null and WHB?|k$Es>iYta.+=;cFuPa[5Kr:'|B'C = exec.+=;cFuPa[5Kr:'|B'C and WHB?|k$Es>iYta.null = exec.null", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "vuC^lgg}MxAG[TmeJ";
      stringArray0[0] = "ZW>Yl)R3U[-0/}R";
      stringArray0[3] = "_/BH51w59mmF/PVtN`@";
      stringArray0[4] = "(";
      stringArray0[6] = "1zz";
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "1zz";
      objectArray0[2] = (Object) "vuC^lgg}MxAG[TmeJ";
      objectArray0[3] = (Object) "(";
      objectArray0[4] = (Object) "_/BH51w59mmF/PVtN`@";
      objectArray0[5] = (Object) "UQ's6maX%-QNr4`";
      objectArray0[6] = (Object) "1zz";
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      SQLUtil.removeComments("$g-=");
      BTreeController bTreeController0 = new BTreeController();
      bTreeController0.getXactMgr();
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }
}
