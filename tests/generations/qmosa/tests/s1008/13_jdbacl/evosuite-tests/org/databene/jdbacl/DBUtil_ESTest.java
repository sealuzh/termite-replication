/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 03:48:35 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.Vector;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.catalog.types.BaseTypeIdImpl;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.services.i18n.LocaleFinder;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.iapi.sql.compile.OptimizablePredicateList;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.types.DataTypeDescriptor;
import org.apache.derby.iapi.types.SQLChar;
import org.apache.derby.iapi.types.TypeId;
import org.apache.derby.impl.db.BasicDatabase;
import org.apache.derby.impl.sql.compile.AllResultColumn;
import org.apache.derby.impl.sql.compile.CreateIndexNode;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.compile.HashJoinStrategy;
import org.apache.derby.impl.sql.compile.PredicateList;
import org.apache.derby.impl.sql.compile.ProjectRestrictNode;
import org.apache.derby.impl.sql.compile.SelectNode;
import org.apache.derby.impl.sql.compile.TableName;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics;
import org.apache.derby.impl.store.raw.xact.ConcurrentXactFactory;
import org.apache.derby.impl.store.raw.xact.GlobalXactId;
import org.apache.derby.impl.store.raw.xact.TransactionTable;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.Driver;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.SessionRemote;
import org.h2.jdbc.JdbcResultSet;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueNull;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;
import org.postgresql.jdbc4.Jdbc4Connection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error getting statement from result set");
      String string0 = "(";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)51;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string1 = "'read committed' AS DEFAULT_TRANSACTION_ISOLATION FROM DUAL";
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("'read committed' AS DEFAULT_TRANSACTION_ISOLATION FROM DUAL", level0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<Object> class0 = Object.class;
      ErrorHandler errorHandler1 = new ErrorHandler(class0);
      try { 
        DBUtil.runScript("Error getting statement from result set", "Error getting statement from result set", (Connection) null, false, errorHandler1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Recover recover0 = new Recover();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('D');
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote0.autoReconnect(2238);
      sessionRemote1.getLobConnection();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      SessionRemote sessionRemote3 = new SessionRemote();
      DBUtil.available("\t;NszQo;d&pX$v", "org.databene.jdbacl.DBUtil", (String) null, (String) null);
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      ValueNull valueNull0 = ValueNull.DELETED;
      valueNull0.getDate();
      MockCalendar.getInstance();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      csv0.setEscapeCharacter('%');
      csv0.setFieldSeparatorRead('e');
      Csv csv1 = Csv.getInstance();
      csv1.setLineSeparator("hgO;_a{r^(1P3E3#?");
      DBUtil.available("-Wj('my2", "5LkcGgufw0\"A78^,X", "--6Xz{+MT_+OJk7G", "--");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv1);
      Object[] objectArray0 = DBUtil.currentLine(simpleResultSet0);
      assertEquals(0, objectArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Driver driver0 = new Driver();
      FromVTI fromVTI0 = new FromVTI();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      driver0.connect("", formatableProperties0);
      Driver.load();
      formatableProperties0.put(fromVTI0, driver0);
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      DBUtil.runScript("", 'I', (Connection) null, false, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify(" failed: ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Driver driver0 = new Driver();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.close((Connection) jdbcConnection0);
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      AllResultColumn allResultColumn0 = new AllResultColumn();
      allResultColumn0.getTableNameObject();
      fromVTI0.setOrigTableName((TableName) null);
      fromVTI0.getContextManager();
      ErrorHandler.getDefault();
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray(".qh\"akh8DWf~JR*@t~2", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Properties properties0 = new Properties();
      FormatableProperties formatableProperties0 = new FormatableProperties(properties0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Ty");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)18;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        DBUtil.runScript("Ty", "", '[', (Connection) null, true, errorHandler0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.nextLine(simpleResultSet0);
      DataTypeDescriptor dataTypeDescriptor0 = DataTypeDescriptor.INTEGER;
      TypeId typeId0 = TypeId.CHAR_ID;
      DataTypeDescriptor dataTypeDescriptor1 = new DataTypeDescriptor(typeId0, false, (-240));
      dataTypeDescriptor1.getCollatedType((-44316474), 6);
      CreateIndexNode createIndexNode0 = new CreateIndexNode();
      TypeId.getBuiltInTypeId(1007);
      DataTypeDescriptor dataTypeDescriptor2 = null;
      try {
        dataTypeDescriptor2 = new DataTypeDescriptor((TypeId) null, 130, (-209212034), true, 1, (-1186), 90073);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.types.DataTypeDescriptor", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Csv.getInstance();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR1.deepCopy();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/----Connecting the database failed silently - probably due to wrong driver (.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "gBrWgZt*");
      boolean boolean0 = DBUtil.existsEnvironment("----Connecting the database failed silently - probably due to wrong driver (");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.342066629322488
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Csv.getInstance();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte) (-46);
      byteArray0[4] = (byte) (-46);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Recover recover0 = new Recover();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      recover0.getLobConnection();
      String string0 = "\u0002\uFFFF\u0003%\u0003\uFFFF\u0011%\u0001\uFFFF\u0001%\u0002\uFFFF\u0001c\u0001e\u0001\uFFFF\u0001g\u0001\uFFFF\u0001h\u0007\uFFFF\u0012%\u0001\u0086\u0002%\u0001\u008B\u0001\u008C\u0003%\u0001\u0092\u0001\u0093\u0013%\u0001\u00AC\u0007%\b\uFFFF\u0016%\u0001\u00CC\u0006%\u0001\uFFFF\u0002%\u0001\u00D5\u0001%\u0002\uFFFF\u0005%\u0002\uFFFF\u0005%\u0001\u00E7\u000F%\u0001\u00F7\u0002%\u0001\uFFFF\u0001%\u0001\u00FB\u0001\u00FC\u0003%\u0001\u0100\u0001%\u0001\u0102\b%\u0001\u010C\u0003%\u0001\u0110\u0004%\u0001\u0115\u0004%\u0001\uFFFF\u0001\u011A\u0002%\u0001\u011D\u0001%\u0001\u011F\u0002%\u0001\uFFFF\u000F%\u0001\u0132\u0001%\u0001\uFFFF\u0006%\u0001\u013A\u0001\u013B\u0003%\u0001\u0140\u0001\u0141\u0001\u0142\u0001%\u0001\uFFFF\u0003%\u0002\uFFFF\u0003%\u0001\uFFFF\u0001%\u0001\uFFFF\u0005%\u0001\u0150\u0001%\u0001\u0152\u0001\u0153\u0001\uFFFF\u0002%\u0001\u0157\u0001\uFFFF\u0003%\u0001\u015B\u0001\uFFFF\u0004%\u0001\uFFFF\u0002%\u0001\uFFFF\u0001%\u0001\uFFFF\u000B%\u0001\u016F\u0006%\u0001\uFFFF\u0001\u0176\u0001\u0177\u0005%\u0002\uFFFF\u0001%\u0001\u017E\u0002%\u0003\uFFFF\u0003%\u0001\u0184\u0001\u0185\u0002%\u0001\u0188\u0002%\u0001\u018B\u0001%\u0001\u018D\u0001\uFFFF\u0001%\u0002\uFFFF\u0001\u018F\u0002%\u0001\uFFFF\u0002%\u0001\u0194\u0001\uFFFF\u0004%\u0001\u0199\u0003%\u0001\u019D\n%\u0001\uFFFF\u0005%\u0001\u01AD\u0002\uFFFF\u0003%\u0001\u01B1\u0002%\u0001\uFFFF\u0003%\u0001\u01B7\u0001%\u0002\uFFFF\u0001\u01B9\u0001%\u0001\uFFFF\u0002%\u0001\uFFFF\u0001\u01BD\u0001\uFFFF\u0001\u01BE\u0001\uFFFF\u0002%\u0001\u01C1\u0001%\u0001\uFFFF\u0002%\u0001\u01C5\u0001%\u0001\uFFFF\u0002%\u0001\u01C9\u0001\uFFFF\u0001%\u0001\u01CB\u0001\u01CC\u0003%\u0001\u01D0\u0001%\u0001\u01D2\u0006%\u0001\uFFFF\u0002%\u0001\u01DB\u0001\uFFFF\u0001\u01DC\u0001\u01DD\u0002%\u0001\u01E0\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01E2\u0001%\u0001\u01E4\u0002\uFFFF\u0002%\u0001\uFFFF\u0003%\u0001\uFFFF\u0003%\u0001\uFFFF\u0001%\u0002\uFFFF\u0003%\u0001\uFFFF\u0001\u01F1\u0001\uFFFF\u0001%\u0001\u01F3\u0001%\u0001\u01F5\u0004%\u0003\uFFFF\u0001%\u0001\u01FB\u0001\uFFFF\u0001\u01FC\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01FE\u0001%\u0001\u0200\u0001\u0201\u0002%\u0001\u0204\u0004%\u0001\u020A\u0001\uFFFF\u0001\u020B\u0001\uFFFF\u0001%\u0001\uFFFF\u0002%\u0001\u020F\u0002%\u0002\uFFFF\u0001\u0213\u0001\uFFFF\u0001\u0214\u0002\uFFFF\u0001\u0215\u0001\u0216\u0001\uFFFF\u0003%\u0001\u021A\u0001\u021B\u0002\uFFFF\u0001\u021C\u0001\u021D\u0001\u021E\u0001\uFFFF\u0001\u021F\u0001%\u0001\u0221\u0004\uFFFF\u0001\u0222\u0001%\u0001\u0224\u0006\uFFFF\u0001%\u0002\uFFFF\u0001\u0226\u0001\uFFFF\u0001\u0228\u0001\uFFFF\u0001\u0229\u0002\uFFFF";
      ErrorHandler errorHandler0 = new ErrorHandler("preparing statement: ");
      // Undeclared exception!
      try { 
        DBUtil.runScript("\u0002\uFFFF\u0003%\u0003\uFFFF\u0011%\u0001\uFFFF\u0001%\u0002\uFFFF\u0001c\u0001e\u0001\uFFFF\u0001g\u0001\uFFFF\u0001h\u0007\uFFFF\u0012%\u0001\u0086\u0002%\u0001\u008B\u0001\u008C\u0003%\u0001\u0092\u0001\u0093\u0013%\u0001\u00AC\u0007%\b\uFFFF\u0016%\u0001\u00CC\u0006%\u0001\uFFFF\u0002%\u0001\u00D5\u0001%\u0002\uFFFF\u0005%\u0002\uFFFF\u0005%\u0001\u00E7\u000F%\u0001\u00F7\u0002%\u0001\uFFFF\u0001%\u0001\u00FB\u0001\u00FC\u0003%\u0001\u0100\u0001%\u0001\u0102\b%\u0001\u010C\u0003%\u0001\u0110\u0004%\u0001\u0115\u0004%\u0001\uFFFF\u0001\u011A\u0002%\u0001\u011D\u0001%\u0001\u011F\u0002%\u0001\uFFFF\u000F%\u0001\u0132\u0001%\u0001\uFFFF\u0006%\u0001\u013A\u0001\u013B\u0003%\u0001\u0140\u0001\u0141\u0001\u0142\u0001%\u0001\uFFFF\u0003%\u0002\uFFFF\u0003%\u0001\uFFFF\u0001%\u0001\uFFFF\u0005%\u0001\u0150\u0001%\u0001\u0152\u0001\u0153\u0001\uFFFF\u0002%\u0001\u0157\u0001\uFFFF\u0003%\u0001\u015B\u0001\uFFFF\u0004%\u0001\uFFFF\u0002%\u0001\uFFFF\u0001%\u0001\uFFFF\u000B%\u0001\u016F\u0006%\u0001\uFFFF\u0001\u0176\u0001\u0177\u0005%\u0002\uFFFF\u0001%\u0001\u017E\u0002%\u0003\uFFFF\u0003%\u0001\u0184\u0001\u0185\u0002%\u0001\u0188\u0002%\u0001\u018B\u0001%\u0001\u018D\u0001\uFFFF\u0001%\u0002\uFFFF\u0001\u018F\u0002%\u0001\uFFFF\u0002%\u0001\u0194\u0001\uFFFF\u0004%\u0001\u0199\u0003%\u0001\u019D\n%\u0001\uFFFF\u0005%\u0001\u01AD\u0002\uFFFF\u0003%\u0001\u01B1\u0002%\u0001\uFFFF\u0003%\u0001\u01B7\u0001%\u0002\uFFFF\u0001\u01B9\u0001%\u0001\uFFFF\u0002%\u0001\uFFFF\u0001\u01BD\u0001\uFFFF\u0001\u01BE\u0001\uFFFF\u0002%\u0001\u01C1\u0001%\u0001\uFFFF\u0002%\u0001\u01C5\u0001%\u0001\uFFFF\u0002%\u0001\u01C9\u0001\uFFFF\u0001%\u0001\u01CB\u0001\u01CC\u0003%\u0001\u01D0\u0001%\u0001\u01D2\u0006%\u0001\uFFFF\u0002%\u0001\u01DB\u0001\uFFFF\u0001\u01DC\u0001\u01DD\u0002%\u0001\u01E0\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01E2\u0001%\u0001\u01E4\u0002\uFFFF\u0002%\u0001\uFFFF\u0003%\u0001\uFFFF\u0003%\u0001\uFFFF\u0001%\u0002\uFFFF\u0003%\u0001\uFFFF\u0001\u01F1\u0001\uFFFF\u0001%\u0001\u01F3\u0001%\u0001\u01F5\u0004%\u0003\uFFFF\u0001%\u0001\u01FB\u0001\uFFFF\u0001\u01FC\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01FE\u0001%\u0001\u0200\u0001\u0201\u0002%\u0001\u0204\u0004%\u0001\u020A\u0001\uFFFF\u0001\u020B\u0001\uFFFF\u0001%\u0001\uFFFF\u0002%\u0001\u020F\u0002%\u0002\uFFFF\u0001\u0213\u0001\uFFFF\u0001\u0214\u0002\uFFFF\u0001\u0215\u0001\u0216\u0001\uFFFF\u0003%\u0001\u021A\u0001\u021B\u0002\uFFFF\u0001\u021C\u0001\u021D\u0001\u021E\u0001\uFFFF\u0001\u021F\u0001%\u0001\u0221\u0004\uFFFF\u0001\u0222\u0001%\u0001\u0224\u0006\uFFFF\u0001%\u0002\uFFFF\u0001\u0226\u0001\uFFFF\u0001\u0228\u0001\uFFFF\u0001\u0229\u0002\uFFFF", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Oy1");
      DBUtil.getOpenPreparedStatementCount();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/-k*1Y@`'t..env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "--Rk$'Jk@i");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("-k*1Y@`'t.", true, true, true, false, ">Q9!Z!W)EL;jqFH", true, false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 6
         // >Q9!Z!W)EL;jqFH
         //       ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("There are unclosed database resources: ", level0);
      errorHandler0.setLoggingStackTrace(true);
      Level level1 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.setDefaultLevel(level1);
      Level level2 = Level.error;
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.trace;
      ErrorHandler.setDefaultLevel(level3);
      errorHandler0.handleError("nil");
      Random.setNextRandom((-487));
      // Undeclared exception!
      try { 
        DBUtil.runScript("@3R9", 'T', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("Th");
      tableContainer0.toString();
      Level level0 = Level.error;
      Level level1 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("Th", level1);
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.setDefaultLevel(level1);
      Level level2 = Level.error;
      ErrorHandler.setDefaultLevel(level2);
      Class<Jdbc4Connection> class0 = Jdbc4Connection.class;
      ErrorHandler errorHandler1 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (String) null, 'f', (Connection) null, true, errorHandler1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Statement statement0 = jdbcConnection0.createStatement();
      DBUtil.createLoggingStatementHandler(statement0, false);
      // Undeclared exception!
      try { 
        DBUtil.logMetaData(jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4041391222621928
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Csv.getInstance();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVAR2.deepCopy();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = new XSQLVAR();
      FBArray fBArray0 = new FBArray();
      FBArray fBArray1 = new FBArray();
      fBArray1.getResultSet();
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Recover recover0 = new Recover();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('D');
      Csv.getInstance();
      csv0.setFieldSeparatorRead('D');
      Csv.getInstance();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("--%\u0001\uFFFF\u0005%\u0001\u01AD\u0002\uFFFF\u0003%\u0001\u01B1\u0002%\u0001\uFFFF\u0003%\u0001\u01B7\u0001%\u0002\uFFFF\u0001\u01B9\u0001%\u0001\uFFFF\u0002%\u0001\uFFFF\u0001\u01BD\u0001\uFFFF\u0001\u01BE\u0001\uFFFF\u0002%\u0001\u01C1\u0001%\u0001\uFFFF\u0002%\u0001\u01C5\u0001%\u0001\uFFFF\u0002%\u0001\u01C9\u0001\uFFFF\u0001%\u0001\u01CB\u0001\u01CC\u0003%\u0001\u01D0\u0001%\u0001\u01D2\u0006%\u0001\uFFFF\u0002%\u0001\u01DB\u0001\uFFFF\u0001\u01DC\u0001\u01DD\u0002%\u0001\u01E0\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01E2\u0001%\u0001\u01E4\u0002\uFFFF\u0002%\u0001\uFFFF\u0003%\u0001\uFFFF\u0003%\u0001\uFFFF\u0001%\u0002\uFFFF\u0003%\u0001\uFFFF\u0001\u01F1\u0001\uFFFF\u0001%\u0001\u01F3\u0001%\u0001\u01F5\u0004%\u0003\uFFFF\u0001%\u0001\u01FB\u0001\uFFFF\u0001\u01FC\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01FE\u0001%\u0001\u0200\u0001\u0201\u0002%\u0001\u0204\u0004%\u0001\u020A\u0001\uFFFF\u0001\u020B\u0001\uFFFF\u0001%\u0001\uFFFF\u0002%\u0001\u020F\u0002%\u0002\uFFFF\u0001\u0213\u0001\uFFFF\u0001\u0214\u0002\uFFFF\u0001\u0215\u0001\u0216\u0001\uFFFF\u0003%\u0001\u021A\u0001\u021B\u0002\uFFFF\u0001\u021C\u0001\u021D\u0001\u021E\u0001\uFFFF\u0001\u021F\u0001%\u0001\u0221\u0004\uFFFF\u0001\u0222\u0001%\u0001\u0224\u0006\uFFFF\u0001%\u0002\uFFFF\u0001\u0226\u0001\uFFFF\u0001\u0228\u0001\uFFFF\u0001\u0229\u0002\uFFFF", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Driver driver0 = new Driver();
      DBUtil.getOpenResultSetCount();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      Proxy proxy0 = (Proxy)DBUtil.createLoggingResultSet((ResultSet) null, (Statement) null);
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("MGVTfq", level0);
      ErrorHandler errorHandler1 = new ErrorHandler("MGVTfq", level0);
      Connection connection0 = null;
      Level level1 = Level.ignore;
      errorHandler0.handleError("MGVTfq");
      errorHandler0.handleError((String) null);
      ErrorHandler errorHandler2 = new ErrorHandler("MGVTfq", level1);
      String string0 = "g'";
      errorHandler0.handleError("g'");
      String string1 = "--?,]\"*1WC IOL";
      boolean boolean0 = true;
      DBUtil.runScript("--?,]\"*1WC IOL", (Connection) null, true, errorHandler1);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, 'g', (Connection) null, false, errorHandler2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      csv0.setFieldSeparatorRead('R');
      csv0.setFieldSeparatorRead('z');
      Csv.getInstance();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      List<Object[]> list0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("W-8", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Recover recover0 = new Recover();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('D');
      csv0.setFieldSeparatorRead('D');
      Csv.getInstance();
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      int int0 = (-114448447);
      short short0 = (short) (-82);
      try { 
        DBUtil.parseResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Recover recover0 = new Recover();
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("Tyes.ARRA : ", level0);
      Level level1 = Level.ignore;
      Level level2 = Level.info;
      ErrorHandler errorHandler1 = new ErrorHandler("org.databene.jdbacl.sql.SQLParserUtil", level2);
      Level level3 = Level.trace;
      ErrorHandler.setDefaultLevel(level1);
      Level level4 = Level.ignore;
      ErrorHandler.setDefaultLevel(level4);
      ErrorHandler.setDefaultLevel(level3);
      Level level5 = Level.error;
      ErrorHandler.setDefaultLevel(level5);
      errorHandler0.handleError("Tyes.ARRA : ");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.stringPropertyNames();
      int[] intArray0 = new int[24];
      intArray0[12] = (-1438);
      intArray0[1] = (-1438);
      intArray0[2] = 3031;
      intArray0[3] = 3031;
      intArray0[4] = (-1438);
      intArray0[5] = 4028;
      intArray0[6] = (-233);
      intArray0[7] = 1;
      RealDistinctScanStatistics realDistinctScanStatistics0 = new RealDistinctScanStatistics(3031, (-1438), 15, 16777216L, 0L, (-661L), 0L, 1, "res:", "3c*hs'p#EQ&", false, 2314, intArray0, "3c*hs'p#EQ&", "(Z+X7ojWw4%cOdiv?t", properties0, "MGVTfq", "--6Xz{+MT_+OJk7G", "(Z+X7ojWw4%cOdiv?t", "M%(J.5:5", 4028, 4028);
      FormatableProperties formatableProperties0 = new FormatableProperties(realDistinctScanStatistics0.scanProperties);
      realDistinctScanStatistics0.scanProperties = formatableProperties0;
      FormatableProperties formatableProperties1 = realDistinctScanStatistics0.scanProperties;
      FormatableProperties formatableProperties2 = new FormatableProperties(properties0);
      // Undeclared exception!
      try { 
        DBUtil.queryString((PreparedStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Level level0 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("Ty", level0);
      ErrorHandler errorHandler1 = new ErrorHandler("Ty");
      Level level1 = Level.error;
      ErrorHandler errorHandler2 = new ErrorHandler("Ty", level1);
      Level level2 = Level.debug;
      errorHandler1.setLoggingStackTrace(false);
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.fatal;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.error;
      ErrorHandler.setDefaultLevel(level4);
      ErrorHandler.setDefaultLevel((Level) null);
      // Undeclared exception!
      try { 
        DBUtil.runScript("^_YwH$#hX)ZW%", (Connection) null, true, errorHandler1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Csv.getInstance();
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("Tyes.ARRA : ", level0);
      Level level1 = Level.ignore;
      ErrorHandler errorHandler1 = new ErrorHandler("org.databene.jdbacl.sql.SQLParserUtil", level1);
      Level level2 = Level.ignore;
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.warn;
      Level level4 = Level.warn;
      ErrorHandler.setDefaultLevel(level4);
      Level level5 = Level.warn;
      ErrorHandler.setDefaultLevel(level5);
      ErrorHandler.setDefaultLevel(level3);
      errorHandler1.handleError("Tyes.ARRA : ");
      // Undeclared exception!
      try { 
        DBUtil.runScript("Tyes.ARRA : ", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("Th");
      tableContainer0.toString();
      tableContainer0.getTables();
      tableContainer0.getTables(true);
      TableContainer tableContainer1 = new TableContainer((String) null, tableContainer0);
      tableContainer1.isIdentical(tableContainer0);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("cl*We>X?", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".env.properties";
      stringArray0[1] = ".env.properties";
      stringArray0[2] = ".env.properties";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(".env.properties", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.columnReferencedBy(".env.properties", true);
      dBForeignKeyConstraint0.setTable(defaultDBTable0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^q2,tXSrzI*Va";
      stringArray0[1] = "^q2,tXSrzI*Va";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("^q2,tXSrzI*Va", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.setTable(defaultDBTable0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBForeignKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '^q2,tXSrzI*Va' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = "W%OmAy&pJvn.9Fidy";
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableContainer tableContainer0 = new TableContainer("Th");
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Driver driver0 = new Driver();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.close((Connection) jdbcConnection0);
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        DBUtil.runScript("", "4SASI\"", '[', (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)51;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      String string0 = DBUtil.escape("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Properties properties0 = new Properties();
      FormatableProperties formatableProperties0 = new FormatableProperties(properties0);
      BaseTypeIdImpl baseTypeIdImpl0 = new BaseTypeIdImpl(6);
      TypeId typeId0 = new TypeId(6, baseTypeIdImpl0);
      String string0 = DBUtil.escape("INTEGER");
      assertEquals("INTEGER", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8720520186532996
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Driver driver0 = new Driver();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-24);
      boolean boolean0 = false;
      DBUtil.assertAllDbResourcesClosed(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      String string0 = null;
      simpleResultSet0.addColumn((String) null, (byte)1, 1, (byte) (-24));
      try { 
        DBUtil.parseResultRow(simpleResultSet0);
        fail("Expecting exception: JdbcSQLException");
      
      } catch(JdbcSQLException e) {
         //
         // No data is available [2000-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Level level0 = Level.error;
      Level level1 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("Ty", level1);
      ErrorHandler errorHandler1 = new ErrorHandler("`5", level0);
      Level level2 = Level.error;
      ErrorHandler errorHandler2 = new ErrorHandler("Ty", level2);
      Level level3 = Level.fatal;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.warn;
      ErrorHandler.setDefaultLevel(level4);
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.readSessionState();
      // Undeclared exception!
      try { 
        DBUtil.query("`5", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetVTI();
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Recover recover0 = new Recover();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('D');
      csv0.setFieldSeparatorRead('D');
      Csv.getInstance();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("--%\u0001\uFFFF\u0005%\u0001\u01AD\u0002\uFFFF\u0003%\u0001\u01B1\u0002%\u0001\uFFFF\u0003%\u0001\u01B7\u0001%\u0002\uFFFF\u0001\u01B9\u0001%\u0001\uFFFF\u0002%\u0001\uFFFF\u0001\u01BD\u0001\uFFFF\u0001\u01BE\u0001\uFFFF\u0002%\u0001\u01C1\u0001%\u0001\uFFFF\u0002%\u0001\u01C5\u0001%\u0001\uFFFF\u0002%\u0001\u01C9\u0001\uFFFF\u0001%\u0001\u01CB\u0001\u01CC\u0003%\u0001\u01D0\u0001%\u0001\u01D2\u0006%\u0001\uFFFF\u0002%\u0001\u01DB\u0001\uFFFF\u0001\u01DC\u0001\u01DD\u0002%\u0001\u01E0\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01E2\u0001%\u0001\u01E4\u0002\uFFFF\u0002%\u0001\uFFFF\u0003%\u0001\uFFFF\u0003%\u0001\uFFFF\u0001%\u0002\uFFFF\u0003%\u0001\uFFFF\u0001\u01F1\u0001\uFFFF\u0001%\u0001\u01F3\u0001%\u0001\u01F5\u0004%\u0003\uFFFF\u0001%\u0001\u01FB\u0001\uFFFF\u0001\u01FC\u0001\uFFFF\u0001%\u0001\uFFFF\u0001\u01FE\u0001%\u0001\u0200\u0001\u0201\u0002%\u0001\u0204\u0004%\u0001\u020A\u0001\uFFFF\u0001\u020B\u0001\uFFFF\u0001%\u0001\uFFFF\u0002%\u0001\u020F\u0002%\u0002\uFFFF\u0001\u0213\u0001\uFFFF\u0001\u0214\u0002\uFFFF\u0001\u0215\u0001\u0216\u0001\uFFFF\u0003%\u0001\u021A\u0001\u021B\u0002\uFFFF\u0001\u021C\u0001\u021D\u0001\u021E\u0001\uFFFF\u0001\u021F\u0001%\u0001\u0221\u0004\uFFFF\u0001\u0222\u0001%\u0001\u0224\u0006\uFFFF\u0001%\u0002\uFFFF\u0001\u0226\u0001\uFFFF\u0001\u0228\u0001\uFFFF\u0001\u0229\u0002\uFFFF", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.existsEnvironment("SHs{qCrI~,M>x\"ZL9xd");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("}LV8me['=#Pw", false, false, false, false, "SHs{qCrI~,M>x\"ZL9xd", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '}LV8me['=#Pw.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Driver driver0 = new Driver();
      DBUtil.getOpenResultSetCount();
      ConnectionInfo connectionInfo0 = new ConnectionInfo("kK$Dmzn9");
      String string0 = "Connecting ";
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "fzqKWx/eWD$", false, 0, 393216, 393216);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000004
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Properties properties0 = new Properties();
      FormatableProperties formatableProperties0 = new FormatableProperties(properties0);
      formatableProperties0.elements();
      formatableProperties0.propertyNames();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (String) null, (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^8Qdx'D@9");
      DBUtil.getOpenPreparedStatementCount();
      boolean boolean0 = false;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/-k*1Y@`'t..env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-k*1Y@`'t.");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      try { 
        DBUtil.getMetaData("-k*1Y@`'t.", false, false, false, false, "-k*1Y@`'t.", true, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("Th");
      tableContainer0.toString();
      tableContainer0.getTables();
      List<DBTable> list0 = tableContainer0.getTables(true);
      TableContainer tableContainer1 = new TableContainer((String) null, tableContainer0);
      List<DBTable> list1 = DBUtil.dependencyOrderedTables(tableContainer0);
      assertTrue(list1.equals((Object)list0));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Driver driver0 = new Driver();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryLong("", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ETe]~M.-Lw#*11S#");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("ETe]~M.-Lw#*11S#", level0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.countRows("", (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      Class<Object> class0 = Object.class;
      errorHandler0.handleError("");
      ErrorHandler errorHandler1 = new ErrorHandler(class0);
      try { 
        DBUtil.runScript("", "", (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      String string0 = "Q(OGKeC";
      int int0 = (-953);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "\"txQp0", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: \"txQp0
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      String string0 = "Q(OGKeC";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "Q(OGKeC", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error getting statement from result set");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)51;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("'read committed' AS DEFAULT_TRANSACTION_ISOLATION FROM DUAL", level0);
      Class<Object> class0 = Object.class;
      ErrorHandler errorHandler1 = new ErrorHandler(class0);
      try { 
        DBUtil.runScript("Error getting statement from result set", "Error getting statement from result set", (Connection) null, false, errorHandler1);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Csv.getInstance();
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("Tyes.ARRA : ", level0);
      Level level1 = Level.ignore;
      ErrorHandler errorHandler1 = new ErrorHandler("org.databene.jdbacl.sql.SQLParserUtil", level1);
      Level level2 = Level.trace;
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.info;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.error;
      Level level5 = Level.warn;
      ErrorHandler.setDefaultLevel(level5);
      Level level6 = Level.warn;
      ErrorHandler.setDefaultLevel(level6);
      ErrorHandler.setDefaultLevel(level4);
      errorHandler1.handleError("Tyes.ARRA : ");
      // Undeclared exception!
      try { 
        DBUtil.runScript("Tyes.ARRA : ", "!b N.fa=", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: Tyes.ARRA : 
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Level level0 = Level.error;
      Level level1 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("Ty", level1);
      ErrorHandler errorHandler1 = new ErrorHandler("`5", level0);
      Level level2 = Level.error;
      ErrorHandler errorHandler2 = new ErrorHandler("Ty", level2);
      Level level3 = Level.debug;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.fatal;
      ErrorHandler.setDefaultLevel(level4);
      Level level5 = Level.error;
      ErrorHandler.setDefaultLevel(level5);
      Level level6 = Level.fatal;
      ErrorHandler.setDefaultLevel(level6);
      // Undeclared exception!
      try { 
        DBUtil.runScript("`5", "+e0N8{Z^", 'f', (Connection) null, false, errorHandler1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: `5
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Properties properties0 = new Properties();
      FormatableProperties formatableProperties0 = new FormatableProperties(properties0);
      formatableProperties0.propertyNames();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jdbcDriver.getConnection("Bit set cannot shrink from ", formatableProperties0);
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("Bit set cannot shrink from ", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.close((Statement) null);
      org.postgresql.Driver driver0 = new org.postgresql.Driver();
      TypeId typeId0 = TypeId.BOOLEAN_ID;
      typeId0.equals(errorMessages0);
      TypeId typeId1 = TypeId.BOOLEAN_ID;
      Integer.compare(7, 50);
      TypeId.getUserDefinedTypeId("NUMERIC", "BOOLEAN", "NATIONAL CHAR VARYING");
      int int0 = (-2100);
      BaseTypeIdImpl baseTypeIdImpl0 = new BaseTypeIdImpl(69);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(7);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      // Undeclared exception!
      try { 
        baseTypeIdImpl0.writeExternal(objectOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetVTI();
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Recover recover0 = new Recover();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('D');
      csv0.setFieldSeparatorRead('D');
      Csv.getInstance();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      TypeId typeId0 = TypeId.getSQLTypeForJavaType("`9rp?&D:k-y/2h:+o");
      typeId0.getSQLTypeName();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery(">", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote1 = new SessionRemote();
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.readSessionState();
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 result set(s), 1 statement(s)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte)51;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      boolean boolean0 = DBUtil.available("org.apache.derby.impl.store.raw.data.PhysicalUndoOperation", "org.apache.derby.impl.store.raw.data.PhysicalUndoOperation", "", "org.apache.derby.impl.store.raw.data.PhysicalUndoOperation");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/--Q(OGKeC.env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("--Q(OGKeC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for '--Q(OGKeC'
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("MiC?2aj<<.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "DV/vv`a@|,}F");
      DBUtil.getConnectData("MiC?2aj<<");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Recover recover0 = new Recover();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      FromVTI fromVTI0 = new FromVTI();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseResultRow(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      FromVTI fromVTI0 = new FromVTI();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Recover recover1 = new Recover();
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.getLobConnection();
      sessionRemote1.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      SessionRemote sessionRemote3 = new SessionRemote();
      sessionRemote3.readSessionState();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Recover recover1 = new Recover();
      DBUtil.executeUpdate((String) null, (Connection) null);
      org.postgresql.Driver driver0 = new org.postgresql.Driver();
      Driver driver1 = Driver.load();
      assertEquals(1, driver1.getMajorVersion());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Recover recover1 = new Recover();
      DBUtil.executeUpdate("", (Connection) null);
      org.postgresql.Driver driver0 = new org.postgresql.Driver();
      TypeId typeId0 = TypeId.BOOLEAN_ID;
      Driver.load();
      typeId0.getSQLTypeName();
      BaseTypeIdImpl baseTypeIdImpl0 = new BaseTypeIdImpl(4);
      TypeId typeId1 = new TypeId((-470), (BaseTypeIdImpl) null);
      TypeId.getUserDefinedTypeId("VARBINARY", "nbwa?0GSG`~~^Y", "TIMESTAMP");
      typeId1.getNull();
      // Undeclared exception!
      try { 
        typeId1.getSQLTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.types.TypeId", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Recover recover1 = new Recover();
      recover1.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("HSQL Database Engine Driver", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.format(simpleResultSet0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte) (-46);
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "!`a;eS:r0Sb{", "", "", "", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^8Qdx'D@9");
      DBUtil.getOpenPreparedStatementCount();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/-k*1Y@`'t..env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "^8Qdx'D@9");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      try { 
        DBUtil.getMetaData("-k*1Y@`'t.", true, false, false, true, "-k*1Y@`'t.", true, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.getOpenPreparedStatementCount();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = true;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/-k*1Y@`'t..env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-k*1Y@`'t.");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      try { 
        DBUtil.getMetaData("-k*1Y@`'t.", true, false, true, true, "-k*1Y@`'t.", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "_S@[[mIX+BT";
      try { 
        DBUtil.getMetaData((Connection) null, "_S@[[mIX+BT", "_S@[[mIX+BT", true, false, false, false, "3#!r&", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.getOpenPreparedStatementCount();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = true;
      boolean boolean1 = true;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/-k*1Y@`'t..env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-k*1Y@`'t.");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      try { 
        DBUtil.getMetaData("-k*1Y@`'t.", true, true, true, true, "-k*1Y@`'t.", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Connection connection0 = null;
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      String string0 = "%.1?7qX";
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) proxy0, "%.1?7qX", "%.1?7qX", false, false, false, true, "%.1?7qX", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "\"*&hU4S&LX]!");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "\"*&hU4S&LX]!", false, false, true, true, "7p(.u3h+'ueop:6d", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 16
         // 7p(.u3h+'ueop:6d
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "(~z[MIrK.s?Mgp{y");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "\"*&hU4S&LX]!", true, true, true, true, "7p(.u3h+'ueop:6d", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 16
         // 7p(.u3h+'ueop:6d
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) errorMessages0);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Driver driver0 = new Driver();
      ConnectionInfo connectionInfo0 = new ConnectionInfo("");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "", true, 393216, 393216, 513);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      String string0 = "Q(OGKeC";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "\"txQp0", false, (-953), 87, 78);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      try { 
        DBUtil.connect((String) null, (String) null, "6N?]%sE{+`:KA^a", "p.r/Glob!(w#", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "F9DzAe");
      Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0);
      xSQLVAR0.decodeDate((Date) null, calendar0);
      ValueNull valueNull0 = ValueNull.INSTANCE;
      valueNull0.getDate();
      MockCalendar.getInstance();
      Csv.getInstance();
      boolean boolean0 = DBUtil.available("aI", (String) null, (String) null, "F9DzAe");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Driver driver0 = new Driver();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      csv0.setFieldSeparatorRead('a');
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBArray fBArray0 = new FBArray();
      FBArray fBArray1 = new FBArray();
      fBArray0.getResultSet();
      FBArray fBArray2 = new FBArray();
      fBArray2.getResultSet();
      DBUtil.close((ResultSet) null);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Locale locale0 = Locale.CHINESE;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      BasicDatabase basicDatabase0 = new BasicDatabase();
      SQLChar.getDate((Calendar) mockGregorianCalendar0, (String) null, (LocaleFinder) basicDatabase0);
      xSQLVAR0.decodeDate((Date) null, (Calendar) mockGregorianCalendar0);
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultRow(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Csv.getInstance();
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.getLobConnection();
      sessionRemote1.readSessionState();
      SessionRemote sessionRemote3 = new SessionRemote();
      SessionRemote sessionRemote4 = new SessionRemote();
      SessionRemote sessionRemote5 = new SessionRemote();
      sessionRemote0.readSessionState();
      sessionRemote3.cancelStatement(32);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("Ty", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte) (-67);
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte) (-24);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("EFZ.4rG.c&C(?g^", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DBUtil.resetMonitors();
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      FromVTI fromVTI1 = new FromVTI();
      fromVTI1.getProperties();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      // Undeclared exception!
      try { 
        DBUtil.connect("", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Driver driver0 = new Driver();
      Class<Long> class0 = Long.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("One-row database query returned multiple rows: ", "", ")", "", "One-row database query returned multiple rows: ", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      FromVTI fromVTI1 = new FromVTI();
      fromVTI1.getProperties();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".env.properties");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte)40;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      byte[] byteArray1 = new byte[6];
      Random.setNextRandom(2152);
      byteArray1[0] = (byte)48;
      byteArray1[1] = (byte)72;
      byteArray1[2] = (byte)22;
      byteArray1[3] = (byte)27;
      byteArray1[4] = (byte)2;
      byteArray1[5] = (byte) (-88);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      // Undeclared exception!
      try { 
        DBUtil.connect("", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("?,", "?,", " BiOuE", "--|Q", "--|Q", " BiOuE");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting ?, failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = null;
      FBArray fBArray0 = new FBArray();
      Hashtable<JdbcResultSet, jdbcConnection> hashtable0 = new Hashtable<JdbcResultSet, jdbcConnection>();
      fBArray0.getResultSet((Map) hashtable0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultSet(simpleResultSet0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation0.getCurrentConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.format(simpleResultSet0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-80);
      FromVTI fromVTI0 = new FromVTI();
      HashJoinStrategy hashJoinStrategy0 = new HashJoinStrategy();
      SelectNode selectNode0 = new SelectNode();
      PredicateList predicateList0 = new PredicateList();
      ProjectRestrictNode projectRestrictNode0 = new ProjectRestrictNode();
      PredicateList predicateList1 = projectRestrictNode0.restrictionList;
      hashJoinStrategy0.nonBasePredicateSelectivity(fromVTI0, predicateList0);
      selectNode0.getWherePredicates();
      HashJoinStrategy hashJoinStrategy1 = new HashJoinStrategy();
      selectNode0.getWherePredicates();
      // Undeclared exception!
      try { 
        hashJoinStrategy1.getBasePredicates((OptimizablePredicateList) null, (OptimizablePredicateList) null, fromVTI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.compile.HashJoinStrategy", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CreateIndexNode createIndexNode0 = new CreateIndexNode();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      xSQLVAR2.deepCopy();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      DBUtil.close((Connection) null);
      ConcurrentXactFactory concurrentXactFactory0 = new ConcurrentXactFactory();
      TransactionTable transactionTable0 = concurrentXactFactory0.ttab;
      GlobalXactId globalXactId0 = null;
      try {
        globalXactId0 = new GlobalXactId(1, (byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.GlobalXactId", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      try { 
        DBUtil.connect("", "", "", "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Level level0 = Level.error;
      Level level1 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("Ty", level1);
      ErrorHandler errorHandler1 = new ErrorHandler("`5", level0);
      Level level2 = Level.error;
      ErrorHandler errorHandler2 = new ErrorHandler("Ty", level2);
      Level level3 = Level.fatal;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.error;
      ErrorHandler.setDefaultLevel(level4);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("42Z39.U", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DBUtil.checkReadOnly("No JDBC drier class name provide", false);
      FromVTI fromVTI0 = new FromVTI();
      HashJoinStrategy hashJoinStrategy0 = new HashJoinStrategy();
      SelectNode selectNode0 = new SelectNode();
      PredicateList predicateList0 = new PredicateList();
      ProjectRestrictNode projectRestrictNode0 = new ProjectRestrictNode();
      PredicateList predicateList1 = projectRestrictNode0.restrictionList;
      hashJoinStrategy0.nonBasePredicateSelectivity(fromVTI0, (OptimizablePredicateList) null);
      selectNode0.getWherePredicates();
      HashJoinStrategy hashJoinStrategy1 = new HashJoinStrategy();
      selectNode0.getWherePredicates();
      // Undeclared exception!
      try { 
        hashJoinStrategy1.getBasePredicates((OptimizablePredicateList) null, predicateList0, projectRestrictNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.compile.HashJoinStrategy", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("No JDBC driver class name provided", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: No JDBC driver class name provided
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      TypeId typeId0 = TypeId.BOOLEAN_ID;
      typeId0.equals("VARCHAR () FOR BIT DATA");
      typeId0.getSQLTypeName();
      TypeId typeId1 = TypeId.getSQLTypeForJavaType("BOOLEAN");
      AllResultColumn allResultColumn0 = new AllResultColumn();
      allResultColumn0.getTypeServices();
      DataTypeDescriptor dataTypeDescriptor0 = new DataTypeDescriptor(typeId1, 4, 8, false, 12, 3358, 15);
      CreateIndexNode createIndexNode0 = new CreateIndexNode();
      // Undeclared exception!
      try { 
        createIndexNode0.createTypeDependency(dataTypeDescriptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.compile.QueryTreeNode", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FormatableProperties formatableProperties0 = new FormatableProperties();
      DBUtil.getOpenStatementCount();
      GDSType.getType("Us");
      NativeGDSImpl nativeGDSImpl0 = null;
      try {
        nativeGDSImpl0 = new NativeGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      boolean boolean0 = new Boolean(false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBUtil.getOpenStatementCount();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      List<Object[]> list0 = new Vector<Object[]>();
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Csv.getInstance();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVAR1.deepCopy();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = new XSQLVAR();
      XSQLVAR xSQLVAR6 = new XSQLVAR();
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getConnectData((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'null.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
