/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 03:58:14 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Order order0 = new Order();
      order0.m_scaleInitLevelSize = (-454);
      order0.m_algoStrategy = "2lW+wE";
      OrderState orderState0 = new OrderState((String) null, "2lW+wE", (String) null, (String) null, 1.7976931348623157E308, 1, 0, (String) null, (String) null);
      order0.m_origin = Integer.MAX_VALUE;
      OrderState orderState1 = new OrderState((String) null, (String) null, (String) null, (String) null, 0, 1.7976931348623157E308, 0, "", "aT?gHh");
      order0.m_stockRangeUpper = 1.0;
      order0.m_orderId = (int) 'c';
      Contract contract0 = new Contract(0, (String) null, "2lW+wE", (String) null, (-2168.13767), "v", "b~(tOK`ra=Kj<OI", "", (String) null, (String) null, (Vector) null, "aT?gHh", false, "OMaKk*gruet", (String) null);
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      Order order1 = new Order();
      OrderState orderState2 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState2);
      assertNotNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Order order0 = new Order();
      order0.m_algoStrategy = "2lW+wE";
      OrderState orderState0 = new OrderState((String) null, "2lW+wE", (String) null, (String) null, (-2168.13767), 1, 0, (String) null, (String) null);
      order0.m_origin = Integer.MAX_VALUE;
      order0.m_firmQuoteOnly = true;
      order0.m_account = null;
      Order order1 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(0, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = (-1844554184);
      EWrapperMsgGenerator.nextValidId((-1844554184));
      EWrapperMsgGenerator.contractDetailsEnd((-1844554184));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer0 = new Integer(13);
      vector1.add(integer0);
      Integer integer1 = new Integer(13);
      vector0.add((Object) integer1);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1467, 13, (-304.9136205354721), 13, (-304.9136205354721), 1.7976931348623157E308);
      assertEquals("id=1467  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Order order0 = new Order();
      order0.m_algoStrategy = "2lW+wE";
      OrderState orderState0 = new OrderState((String) null, "2lW+wE", (String) null, (String) null, 0, 1, 0, (String) null, (String) null);
      order0.m_origin = Integer.MAX_VALUE;
      orderState0.m_maxCommission = 1.7976931348623157E308;
      orderState0.m_equityWithLoan = "";
      Contract contract0 = new Contract(13, (String) null, "2lW+wE", "dNz4\"x>b>27:|L", Integer.MAX_VALUE, "convertible = ", "", "?n/hii&,fhCNm[", (String) null, "2lW+wE", (Vector) null, (String) null, false, "XfzlLyA%g%", "ScQ'F3+Q");
      order0.m_firmQuoteOnly = true;
      order0.m_account = null;
      Order order1 = new Order();
      contract0.m_exchange = "3UV8s{0\"nx.sX<PzNX";
      OrderState orderState1 = new OrderState();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 0, 0, 1.0, 0.0);
      assertEquals("id=0  modelOptComp: vol = 0.0 delta = 0.0: modelPrice = 1.0: pvDividend = 0.0", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Order order0 = new Order();
      order0.m_orderId = (-183327076);
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(0, contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      OrderState orderState0 = new OrderState();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      Contract contract0 = new Contract((-1605), "FA:", "BAG", "\">C", 0.0, "\">C", (String) null, "BOND", "&9wb9>", (String) null, vector0, (String) null, true, "low3Fy)c", "BOND");
      contract0.m_right = null;
      Order order0 = new Order();
      vector0.add((Object) null);
      linkedList0.add((Object) "ZT\u0001");
      vector0.add((Object) "BAG");
      vector0.add((Object) "FA:");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      vector0.add((Object) "BAG");
      contract0.m_localSymbol = null;
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer1);
      linkedList0.toArray();
      vector0.add((Object) "ZT\u0001");
      Object object0 = new Object();
      contract0.equals(object0);
      String string1 = EWrapperMsgGenerator.openOrder(3174, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      OrderState orderState0 = new OrderState("cV4y-T", "SCANNER PARAMETERS:", "", "SCANNER PARAMETERS:", 0, 0, 0, "YriAuN^_W>S\"L s", "<o\"j");
      orderState0.m_commissionCurrency = "SCANNER PARAMETERS:";
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(2147483646, "YriAuN^_W>S\"L s", "BAG", "j(Tu\"Ch>2&L'W", 0, "", "  It does no Zuppfrt options exrcise from the APIb", "cV4y-T", "", "9m7pw}RbN \\.#my", vector0, " trailStopPrice=", false, "SCANNER PARAMETERS:", "SCANNER PARAMETERS:");
      Order order0 = new Order();
      order0.m_blockOrder = false;
      orderState0.m_status = "<8L2Xa";
      Order order1 = new Order();
      OrderState orderState1 = new OrderState();
      contract0.m_comboLegsDescrip = "SCANNER PARAMETERS:";
      OrderState orderState2 = new OrderState("j(Tu\"Ch>2&L'W", "", (String) null, (String) null, 1.7976931348623157E308, 0, 0.0, "BS,DZJ+i2Bt)TR%@", "SCANNER PARAMETERS:");
      orderState2.m_commission = (-1027.592);
      String string1 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState2);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-896), 13, 840.9488199518224, (-1), 0.0, 840.9488199518224);
      assertEquals("id=-896  modelOptComp: vol = 840.9488199518224 delta = -1.0: modelPrice = 0.0: pvDividend = 840.9488199518224", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      locale0.clone();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      locale1.getExtensionKeys();
      locale0.getDisplayCountry(locale1);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      vector2.add(object0);
      vector2.clear();
      Object object2 = new Object();
      Object object3 = new Object();
      vector2.add(object0);
      Object object4 = new Object();
      Object object5 = new Object();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 13, 1, 1, 1.7976931348623157E308, (-1796.0));
      assertEquals("id=1  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.remove((Object) " designatedLocatin=");
      Object object0 = new Object();
      vector0.add(object0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) vector0);
      vector0.removeAll(linkedList0);
      Vector<Object> vector1 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      vector0.listIterator(1);
      vector1.add(object2);
      Object object3 = new Object();
      vector1.add(object3);
      vector1.add(object1);
      vector1.remove((Object) vector0);
      EWrapperMsgGenerator.tickOptionComputation((-1625), 13, 1, 769.6456, 13, 1.7976931348623157E308);
      System.setCurrentTimeMillis(4260L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.KOREA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      locale0.getDisplayCountry();
      locale0.getDisplayName();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale2 = Locale.ITALIAN;
      Locale.getISOCountries();
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) list1);
      locale2.getExtensionKeys();
      locale0.getDisplayCountry(locale2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      Object object0 = new Object();
      vector2.clear();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 13, 1, 1, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=1  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.containsAll(vector1);
      vector1.add((Integer) null);
      vector0.add(integer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer1 = new Integer((-435));
      vector1.add(integer0);
      Integer integer2 = new Integer(0);
      vector2.clear();
      Integer integer3 = new Integer(2147483646);
      vector2.add((Integer) null);
      Integer integer4 = new Integer(33);
      vector2.addElement((Integer) null);
      Integer integer5 = new Integer(33);
      Integer integer6 = new Integer(1);
      vector1.add(integer6);
      String string0 = EWrapperMsgGenerator.realtimeBar((-89), 0, 2147483646, (-1.0), 0, (-3808.0), 0L, 755.0, 412);
      assertEquals("id=-89 time = 0 open=2.147483646E9 high=-1.0 low=0.0 close=-3808.0 volume=0 count=412 WAP=755.0", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(2203, 2203, "yB.O@mxB", 2203, 2203, (-1.0), 590);
      assertEquals("updateMktDepth: 2203 2203 yB.O@mxB 2203 2203 -1.0 590", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.containsAll(vector1);
      vector1.add((Integer) null);
      vector0.add(integer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer1 = new Integer((-435));
      vector1.add(integer0);
      Integer integer2 = new Integer(0);
      vector2.clear();
      Integer integer3 = new Integer(2147483646);
      vector2.add((Integer) null);
      Integer integer4 = new Integer(33);
      Integer integer5 = new Integer(33);
      Integer integer6 = new Integer(1);
      vector1.add(integer6);
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(1, 1055, "liquidation = ", (-435), 863, 1, 1);
      assertEquals("updateMktDepth: 1 1055 liquidation =  -435 863 1.0 1", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.add((Integer) null);
      Integer integer1 = new Integer(13);
      vector0.clear();
      Integer integer2 = new Integer(234);
      vector0.addElement(integer2);
      vector0.add(integer0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      int int0 = 1998;
      EWrapperMsgGenerator.tickOptionComputation(13, (-1), 1.7976931348623157E308, 1998, 32, 13);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, (-1), 13, 1.7976931348623157E308, 713.00007, (-1), 640.466222785535, " action=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(11, "8P_b4CQ{t~*Fm", 11, 11, 11, (-1557.56039), 1, 11, 1431.854, true);
      assertEquals("id=11 date = 8P_b4CQ{t~*Fm open=11.0 high=11.0 low=11.0 close=-1557.56039 volume=1 count=11 WAP=1431.854 hasGaps=true", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Order order0 = new Order();
      order0.m_algoStrategy = "~u\"";
      EWrapperMsgGenerator.tickString((-2146833257), 0, (String) null);
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, (String) null, "~u\"", (-1.0), ">)7abkcq*Q8*#Ttr8", "y@ro/b}Nq", 0, "/x7g29M}sT", ">)7abkcq*Q8*#Ttr8", (String) null, "7%RbR}]x\">:KlK9Mk", "CANNE =RAMEERS:\n", "~\"", "y@ro/b}Nq", "5uX/QN*Ys}gTv");
      contractDetails0.m_bondType = null;
      contractDetails0.m_nextOptionPartial = false;
      contractDetails0.m_couponType = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData((-2835), 3213, contractDetails0, "", (String) null, ">)7abkcq*Q8*#Ttr8", "cV4y-T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData((-1073741824), "q[P^Zu(k-#z", 1802.2363564421607, 3248.2369195699, 2605.2843361, 1802.2363564421607, (-1073741824), (-1073741824), 0.0, false);
      assertEquals("id=-1073741824 date = q[P^Zu(k-#z open=1802.2363564421607 high=3248.2369195699 low=2605.2843361 close=1802.2363564421607 volume=-1073741824 count=-1073741824 WAP=0.0 hasGaps=false", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(13, 3255, "26WeekHigh", "G =q. Q6G64!uIbBu");
      assertEquals("MsgId=13 :: MsgType=3255 :: Origin=G =q. Q6G64!uIbBu :: Message=26WeekHigh", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) orderState0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) null);
      Object object0 = new Object();
      Object object1 = new Object();
      linkedList0.add((Object) linkedList1);
      Object object2 = new Object();
      Object object3 = new Object();
      vector0.add(object3);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      linkedList0.toArray();
      Object object4 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) "qvWf");
      Object object5 = new Object();
      Object object6 = new Object();
      vector0.add((Object) "dNz4\"x>b>27:|L");
      Object object7 = new Object();
      Contract contract0 = new Contract();
      contract0.equals("M;BHl");
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.KOREA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      locale0.getDisplayName();
      vector1.add(locale1);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale2 = Locale.ITALIAN;
      Locale.getISOLanguages();
      locale2.getExtensionKeys();
      locale0.getDisplayCountry(locale2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      vector2.add(object0);
      vector2.clear();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      vector2.add(object0);
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(13);
      assertEquals("id=13 =============== end ===============", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd((-2142));
      assertEquals("id=-2142 =============== end ===============", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector0 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      vector0.add(object2);
      vector0.add((Object) linkedList0);
      Object object3 = new Object();
      vector0.clear();
      vector0.add(object3);
      vector0.add(object1);
      System.setCurrentTimeMillis((-1617));
      String string0 = EWrapperMsgGenerator.scannerDataEnd((-1617));
      assertEquals("id = -1617 =============== end ===============", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = (-1911583194);
      underComp0.m_conId = (-1911583194);
      underComp0.m_conId = 338;
      String string0 = EWrapperMsgGenerator.tickSize(338, 1, (-1911583194));
      assertEquals("id=338  bidPrice=-1911583194", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 0, (String) null, "85\"ZR,'0H=JtK", 1732, (String) null, (String) null, (String) null, (String) null, (String) null, "po,#}_|R]", (String) null, "avgPrice = ");
      EWrapperMsgGenerator.contractDetails((-1448), contractDetails0);
      EWrapperMsgGenerator.contractDetails((-3324), contractDetails0);
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals(" =============== end ===============", eWrapperMsgGenerator0.openOrderEnd());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.clone();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.ITALIAN;
      Set<Character> set0 = locale1.getExtensionKeys();
      locale0.getDisplayCountry(locale1);
      Locale.setDefault(locale_Category0, locale0);
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      Object object2 = new Object();
      vector2.add(object0);
      vector2.add((Object) locale0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      vector2.add((Object) set0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector2.forEach(consumer1);
      linkedList1.toArray();
      vector2.add((Object) set1);
      Object object3 = new Object();
      Contract contract0 = new Contract();
      Object object4 = new Object();
      contract0.equals(object4);
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder((-1), contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      Order order0 = new Order();
      order0.m_algoStrategy = "executionExchange = ";
      OrderState orderState0 = new OrderState((String) null, "executionExchange = ", (String) null, (String) null, (-2168.13767), 1, 0, (String) null, (String) null);
      order0.m_origin = Integer.MAX_VALUE;
      Contract contract0 = new Contract(13, (String) null, "executionExchange = ", "dNz4\"x>b>27t:|L", Integer.MAX_VALUE, "convertible = ", "", "?n/hii&,fhCNm[", (String) null, "executionExchange = ", (Vector) null, (String) null, false, "XfzlLyA%g%", "ScQ'F3+Q");
      order0.m_account = null;
      Order order1 = new Order();
      contract0.m_exchange = "3UV8s{0\"nx.sX<PzNX";
      OrderState orderState1 = new OrderState();
      orderState1.m_maintMargin = null;
      String string1 = EWrapperMsgGenerator.openOrder(13, contract0, order0, orderState1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Order order0 = new Order();
      order0.m_algoStrategy = "2lW+wE";
      OrderState orderState0 = new OrderState((String) null, "2lW+wE", (String) null, (String) null, 1.7976931348623157E308, 1, 0, (String) null, (String) null);
      order0.m_origin = Integer.MAX_VALUE;
      Integer integer0 = new Integer(1);
      Vector<Integer> vector0 = new Vector<Integer>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(Integer.MAX_VALUE, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Order order0 = new Order();
      order0.m_algoStrategy = "~u\"";
      OrderState orderState0 = new OrderState();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) null);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.toArray();
      Object object3 = new Object();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "  It does not support Subsequent Level Size for Scale orders.");
      Object object4 = new Object();
      Object object5 = new Object();
      vector0.add((Object) "M;BHl");
      Object object6 = new Object();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1073741824, 0, 0.0, (-311.127), (-1.0), 8.0);
      assertEquals("id=1073741824  bidSize: vol = 0.0 delta = N/A", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(3212, "@ }");
      assertEquals("id  = 3212 len = 3\n@ }", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.removeAll(vector1);
      vector0.add((Integer) null);
      Integer integer1 = new Integer(13);
      vector0.clear();
      Integer integer2 = new Integer(234);
      vector0.addElement(integer2);
      vector0.add(integer0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      System.setCurrentTimeMillis(1998);
      String string0 = EWrapperMsgGenerator.tickGeneric(1998, 234, 1.7976931348623157E308);
      assertEquals("id=1998  unknown=1.7976931348623157E308", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(2476);
      assertEquals("reqId = 2476 =============== end ===============", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector0 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      vector0.add(object2);
      vector0.add((Object) linkedList0);
      Object object3 = new Object();
      vector0.clear();
      vector0.add(object3);
      String string0 = EWrapperMsgGenerator.orderStatus(0, "KuLRr", 13, 38, 0, 4219, 7, 187.849393521921, 13, "id=2145728946  unknown: vol = 2.145728946E9 delta = N/A");
      assertEquals("order status: orderId=0 clientId=13 permId=4219 status=KuLRr filled=13 remaining=38 avgFillPrice=0.0 lastFillPrice=187.849393521921 parent Id=7 whyHeld=id=2145728946  unknown: vol = 2.145728946E9 delta = N/A", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Order order0 = new Order();
      order0.m_hidden = order0.m_hidden;
      EWrapperMsgGenerator.tickPrice(Integer.MAX_VALUE, Integer.MAX_VALUE, 'b', 0);
      Contract contract0 = new Contract();
      assertEquals(0, contract0.m_conId);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(2145728946);
      String string0 = EWrapperMsgGenerator.realtimeBar(2144871958, 2145728946, (-748.0), 2144871958, 3029.347802, 1.7976931348623157E308, 2144871958, 1.0, 2144871958);
      assertEquals("id=2144871958 time = 2145728946 open=-748.0 high=2.144871958E9 low=3029.347802 close=1.7976931348623157E308 volume=2144871958 count=2144871958 WAP=1.0", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      vector0.removeElement(tagValue0);
      Vector<String> vector1 = new Vector<String>();
      vector1.add(" avgFillPrice=");
      Contract contract0 = new Contract(2147073915, " date = ", "lq.]|E?(8", "  ", 0.0, "|GH0pz3z>;Dj6p", (String) null, "lq.]|E?(8", "  It does not support notHeld parameter.", "", vector1, "", true, "XfzlLyA%g%", (String) null);
      Contract contract1 = new Contract(2147073915, "", " date = ", "", 0.0, "ScQ'F3+Q", (String) null, " 5q}#I", "-GyAAx", "  It does not support notHeld parameter.", vector0, (String) null, true, "auctionVolume", (String) null);
      String string0 = EWrapperMsgGenerator.orderStatus(10, (String) null, 733, 2147010118, (-1.0), 1663, (-461), (-1.0), 1249, "");
      assertEquals("order status: orderId=10 clientId=1249 permId=1663 status=null filled=733 remaining=2147010118 avgFillPrice=-1.0 lastFillPrice=-1.0 parent Id=-461 whyHeld=", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(3212, "ymA{#MyY0>xMY_");
      assertEquals("FA: null ymA{#MyY0>xMY_", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData((-1), 3118, contractDetails0, (String) null, "aT?gHh", (String) null, (String) null);
      assertEquals("id = -1 rank=3118 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=aT?gHh projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = new Object();
      Vector<Object> vector0 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) vector0);
      Object object3 = new Object();
      vector0.add(object3);
      Object object4 = new Object();
      vector0.add(object4);
      Object object5 = new Object();
      vector1.add(object1);
      vector1.clear();
      Object object6 = new Object();
      Object object7 = new Object();
      vector1.add(object7);
      vector1.add(object4);
      vector0.add(object6);
      Object object8 = new Object();
      vector1.add(object8);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 13, 13, (-1.0), 1.7976931348623157E308, (-44.51));
      assertEquals("id=1  modelOptComp: vol = 13.0 delta = -1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = (-1911583194);
      underComp0.m_conId = (-1911583194);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1911583194), 60, 13, 0.0, 1551.2373929271025, 191.106);
      assertEquals("id=-1911583194  unknown: vol = 13.0 delta = 0.0", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(2146440185);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.clear();
      Integer integer1 = new Integer(3212);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer2 = new Integer(2147483638);
      vector1.add(integer2);
      Integer integer3 = new Integer((-1073741824));
      Integer integer4 = new Integer(2146440185);
      vector0.addElement(integer4);
      Integer integer5 = new Integer(2146440185);
      Integer integer6 = new Integer((-1073741824));
      Integer integer7 = new Integer(3212);
      vector1.add(integer7);
      EWrapperMsgGenerator.tickOptionComputation(32, (-4010), 744.2225, 2727.710940284, 0.0, (-195.0041));
      System.setCurrentTimeMillis(3842L);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_couponType = "";
      String string0 = EWrapperMsgGenerator.scannerData((-1814), (-1814), contractDetails0, "", "9", " discretionaryAmt=", "O");
      assertEquals("id = -1814 rank=-1814 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance= benchmark=9 projection= discretionaryAmt= legsStr=O", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.clone();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.ITALIAN;
      locale1.getExtensionKeys();
      locale0.getDisplayCountry(locale1);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      vector2.add(object0);
      vector2.clear();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      vector2.add(object0);
      Object object5 = new Object();
      Object object6 = new Object();
      String string0 = EWrapperMsgGenerator.receiveFA(1, (String) null);
      assertEquals("FA: GROUPS null", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("markPrice");
      assertEquals("Connected : The list of managed accounts are : [markPrice]", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("  It does not support secIdType and secId parameters.");
      assertEquals("updateAccountTime:   It does not support secIdType and secId parameters.", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      String string0 = EWrapperMsgGenerator.updateAccountValue(" high=", (String) null, "<xJ(L9I;X.*P|=C", "askEFP");
      assertEquals("updateAccountValue:  high= null <xJ(L9I;X.*P|=C askEFP", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      System.setCurrentTimeMillis(1899L);
      String string0 = EWrapperMsgGenerator.currentTime(364L);
      assertEquals("current time = 364 (Jan 1, 1970 12:06:04 AM)", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters(" algoStrategy=");
      assertEquals("SCANNER PARAMETERS:\n algoStrategy=", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      vector0.add((Object) " designatedLocatin=");
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.removeAll(vector1);
      vector0.remove((Object) " designatedLocatin=");
      Execution execution0 = new Execution();
      Contract contract0 = new Contract(0, "FM|+:nc", "Zng", "unknown", 0, (String) null, (String) null, (String) null, "unknown", "bidEFP", vector1, "FM|+:nc", true, "underConId = ", (String) null);
      Execution execution1 = new Execution(17, 13, "xU", (String) null, "+!", "bj>)5:O4U2=:v{'_Cl", (String) null, 0, 0, 0, 18, 1467, 0);
      String string0 = EWrapperMsgGenerator.execDetails(18, contract0, execution1);
      assertEquals(" ---- Execution Details begin ----\nreqId = 18\norderId = 17\nclientId = 13\nsymbol = FM|+:nc\nsecType = Zng\nexpiry = unknown\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = unknown\nlocalSymbol = bidEFP\nexecId = xU\ntime = null\nacctNumber = +!\nexecutionExchange = bj>)5:O4U2=:v{'_Cl\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 18\ncumQty = 1467\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.clone();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.ITALIAN;
      locale1.getExtensionKeys();
      EWrapperMsgGenerator.openOrderEnd();
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      vector2.add(object0);
      vector2.clear();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      vector2.add(object0);
      Object object5 = new Object();
      Object object6 = new Object();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(1848, 1848, 2139113456, 2146408831, 1.7976931348623157E308, 13);
      assertEquals("updateMktDepth: 1848 1848 2139113456 2146408831 1.7976931348623157E308 13", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData((-1815), "lastEFP", 2139113456, (-1853.102), (-1853.102), 279.53491, (-1815), 1848, 2139113456, true);
      assertEquals("id=-1815 date = lastEFP open=2.139113456E9 high=-1853.102 low=-1853.102 close=279.53491 volume=-1815 count=1848 WAP=2.139113456E9 hasGaps=true", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.containsAll(vector1);
      vector1.add((Integer) null);
      vector0.add(integer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer1 = new Integer((-435));
      vector1.add(integer0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(2147483646);
      vector2.add((Integer) null);
      Integer integer4 = new Integer(33);
      vector2.addElement((Integer) null);
      Integer integer5 = new Integer(33);
      Integer integer6 = new Integer(1);
      vector1.add(integer6);
      System.setCurrentTimeMillis((-435));
      String string0 = EWrapperMsgGenerator.updateMktDepth(5, 16, 2129353765, 2129353765, 16, 0);
      assertEquals("updateMktDepth: 5 16 2129353765 2129353765 16.0 0", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(3166, "price magnifier = ", "32!w0q_pDd8;HHF+", (String) null, 3145.035463542951, " =============== end ===============", "$qi0}y!h~*GU9v", "Z2\"Vc(F;Y_z ", (String) null, "Z2\"Vc(F;Y_z ", vector0, (String) null, false, (String) null, "price magnifier = ");
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 1, (-298.215489), 3145.035463542951, 2700.21118294, (-134.69), (-3324.759815697), "lastOptComp");
      assertEquals("updatePortfolio: conid = 3166\nsymbol = price magnifier = \nsecType = 32!w0q_pDd8;HHF+\nexpiry = null\nstrike = 3145.035463542951\nright =  =============== end ===============\nmultiplier = $qi0}y!h~*GU9v\nexchange = Z2\"Vc(F;Y_z \nprimaryExch = null\ncurrency = null\nlocalSymbol = Z2\"Vc(F;Y_z \n1 -298.215489 3145.035463542951 2700.21118294 -134.69 -3324.759815697 lastOptComp", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(2572, (-4127), (-4127), "8P_b4CQ{t~*Fm", 2572, 3212, "Sk[i1:|p9*k.r", (-1.0), 3212);
      assertEquals("id=2572  unknown: basisPoints = -4127.0/8P_b4CQ{t~*Fm impliedFuture = 2572.0 holdDays = 3212 futureExpiry = Sk[i1:|p9*k.r dividendImpact = -1.0 dividends to expiry = 3212.0", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.containsAll(vector0);
      vector1.add((Integer) null);
      vector0.add(integer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer1 = new Integer(13);
      vector2.add(integer1);
      Integer integer2 = new Integer((-435));
      vector1.add(integer0);
      Integer integer3 = new Integer(2146309719);
      vector2.clear();
      Integer integer4 = new Integer(2147483638);
      vector2.add((Integer) null);
      Integer integer5 = new Integer(33);
      vector2.addElement((Integer) null);
      Integer integer6 = new Integer(33);
      Integer integer7 = new Integer((-3639));
      vector1.add(integer7);
      Integer integer8 = new Integer(1);
      vector1.add(integer8);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-435), 1, 1.7976931348623157E308, 365.691, 33, (-3639));
      assertEquals("id=-435  bidPrice: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.containsAll(vector0);
      vector1.add((Integer) null);
      vector0.add(integer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer1 = new Integer(13);
      vector2.add(integer1);
      Integer integer2 = new Integer((-435));
      vector1.add(integer0);
      Integer integer3 = new Integer(2146309719);
      vector2.clear();
      Integer integer4 = new Integer(2147483638);
      vector2.add((Integer) null);
      Integer integer5 = new Integer(33);
      vector2.addElement((Integer) null);
      Integer integer6 = new Integer(33);
      Integer integer7 = new Integer((-3639));
      vector1.add(integer7);
      Integer integer8 = new Integer(1);
      vector1.add(integer8);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(110, 2146309719, 1.7976931348623157E308, (-473.179373808), 1694.7945, 1.7976931348623157E308);
      assertEquals("id=110  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      Order order0 = new Order();
      vector0.add((Object) null);
      linkedList0.add((Object) "ZT\u0001");
      vector0.add((Object) "BAG");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      vector0.add((Object) "BAG");
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer1);
      linkedList0.toArray();
      vector0.add((Object) "ZT\u0001");
      Object object0 = new Object();
      String string0 = EWrapperMsgGenerator.tickPrice(0, 0, 5302.399827548552, (-2146804483));
      assertEquals("id=0  bidSize=5302.399827548552  canAutoExecute", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Object object0 = new Object();
      Vector<Object> vector0 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) vector0);
      Object object3 = new Object();
      vector0.add(object3);
      Object object4 = new Object();
      vector0.add(object4);
      Object object5 = new Object();
      vector1.add(object1);
      vector1.clear();
      Object object6 = new Object();
      Object object7 = new Object();
      vector0.add(object1);
      vector0.add((Object) null);
      Vector<Object> vector2 = new Vector<Object>();
      Object object8 = new Object();
      vector2.add(object8);
      Object object9 = new Object();
      vector0.add(object2);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, (-2115.94), (-1.0), 13, 1617.0);
      assertEquals("id=13  modelOptComp: vol = N/A delta = -1.0: modelPrice = 13.0: pvDividend = 1617.0", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Order order0 = new Order();
      order0.m_algoStrategy = "~u\"";
      order0.m_volatility = 2228.6934;
      OrderState orderState0 = new OrderState((String) null, "~u\"", (String) null, (String) null, 1.7976931348623157E308, 1, 0, (String) null, (String) null);
      order0.m_origin = Integer.MAX_VALUE;
      order0.m_account = null;
      Order order1 = new Order();
      Order order2 = new Order();
      OrderState orderState1 = new OrderState();
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, "|sPK#]Yv\"NSf'q1", "", 0.0, (String) null, (String) null, 3, (String) null, (String) null, (String) null, "id=2145728946  unknown: vol = 2.145728946E9 delta = N/A", (String) null, "+", "primaryExch = ", (String) null);
      String string0 = EWrapperMsgGenerator.bondContractDetails(487, contractDetails0);
      assertEquals("reqId = 487 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = |sPK#]Yv\"NSf'q1\ntradingClass = \nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.KOREA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      locale0.getDisplayName();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale2 = Locale.ITALIAN;
      Locale.getISOCountries();
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) list1);
      locale2.getExtensionKeys();
      locale0.getDisplayCountry(locale2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      vector2.add(object0);
      vector2.clear();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      vector2.add(object0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(1, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      Contract contract0 = new Contract(2146493174, "", "^", "", 2146493174, "^", "d :aURT", " date = ", "<o\"j", "<o\"j", vector0, "", true, "^", " date = ");
      vector0.add(tagValue0);
      vector0.add(tagValue0);
      contract0.m_secType = "";
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 2146493174\nsymbol = \nsecType = \nexpiry = \nstrike = 2.146493174E9\nright = ^\nmultiplier = d :aURT\nexchange =  date = \nprimaryExch = \ncurrency = <o\"j\nlocalSymbol = <o\"j\n", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("lxVk'?TP");
      assertEquals("accountDownloadEnd: lxVk'?TP", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.KOREA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      locale0.getDisplayName();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale2 = Locale.ITALIAN;
      Locale.getISOLanguages();
      locale2.getExtensionKeys();
      locale0.getDisplayCountry(locale2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      Object object1 = new Object();
      vector2.add(object0);
      vector2.clear();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      vector2.add(object0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 13, 1, 1, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=1  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(13);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.containsAll(vector1);
      vector1.add((Integer) null);
      vector0.add(integer0);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer1 = new Integer((-435));
      vector1.add(integer0);
      Integer integer2 = new Integer(0);
      vector2.clear();
      Integer integer3 = new Integer(2147483646);
      vector2.add((Integer) null);
      Integer integer4 = new Integer(33);
      vector2.addElement((Integer) null);
      Integer integer5 = new Integer(33);
      Integer integer6 = new Integer(1);
      EWrapperMsgGenerator.tickPrice(1, (-435), (-435), 110);
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-1911583199), "3Nh?O'Jb", "<#*3M\u0007e,", "3Nh?O'Jb", 822.2584981127707, "EDw`:U*Qg[AfUoGw", (String) null, "?[k@;vP$UXA2#j", "7;y9w6Bf", "13WeekHigh", vector0, "13WeekHigh", false, "3Nh?O'Jb", "EDw`:U*Qg[AfUoGw");
      UnderComp underComp0 = new UnderComp();
      UnderComp underComp1 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation((-1911583199), (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      System.setCurrentTimeMillis(1899L);
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = (-4290.49613664);
      underComp0.m_conId = 13;
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(902, underComp0);
      assertEquals("id = 902 underComp.conId =13 underComp.delta =0.0 underComp.price =-4290.49613664", string0);
  }
}
