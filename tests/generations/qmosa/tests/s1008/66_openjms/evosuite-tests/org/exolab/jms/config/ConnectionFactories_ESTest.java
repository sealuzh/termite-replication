/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 01:37:09 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.NotActiveException;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.net.URI;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.996529497271737
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      InputSource inputSource0 = new InputSource();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      connectionFactories0.getXATopicConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      defaultHandler2_0.externalEntityDecl("F$+s,);X6", "F$+s,);X6", "");
      xMLFilterImpl0.getParent();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      xMLReaderAdapter0.setEntityResolver(defaultHandler2_0);
      connectionFactories0.isValid();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale0 = Locale.CHINESE;
      linkedList1.add(locale0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory1);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(1, xAQueueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.add(locale0);
      Locale locale1 = Locale.KOREA;
      Locale locale2 = Locale.ITALY;
      Locale locale3 = locale2.stripExtensions();
      locale3.getUnicodeLocaleKeys();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.PRC;
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      linkedList3.addLast(locale0);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale locale5 = Locale.ROOT;
      Locale.setDefault(locale3);
      linkedList2.add(locale3);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList9.addAll((Collection<? extends Locale>) linkedList2);
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale locale6 = Locale.TRADITIONAL_CHINESE;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler2_0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      connectionFactories0.getTopicConnectionFactory();
      // Undeclared exception!
      try { 
        attributes2Impl0.setAttribute(541, "]Ed", "9=}q-4|oSx+)n_.hlW:", "", "C()qA_t.n9W@E`5Z", "%");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Attempt to modify attribute at illegal index: 541
         //
         verifyException("org.xml.sax.helpers.AttributesImpl", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.endDocument();
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      xMLReaderAdapter1.setErrorHandler(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      connectionFactories0.enumerateQueueConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory(0);
      connectionFactories0.enumerateConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      xAConnectionFactoryArray0[1] = xAConnectionFactory1;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      MockFile mockFile0 = new MockFile("org.exolab.castor.parser.namespaces", "org.exolab.castor.parser.namespaces");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(parserAdapter0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(parserAdapter0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, (Locale.FilteringMode) null);
      connectionFactories0.setTopicConnectionFactory(0, (TopicConnectionFactory) null);
      assertEquals(2, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      String string0 = "L@Na)-#6#MvBoCfe.";
      defaultHandler2_0.startCDATA();
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories1.addXAConnectionFactory(xAConnectionFactory0);
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories1.getXAConnectionFactoryCount();
      StringReader stringReader2 = new StringReader("");
      connectionFactories1.getXAConnectionFactory();
      connectionFactories1.setXAConnectionFactory(0, xAConnectionFactory0);
      assertNotSame(connectionFactories1, connectionFactories0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9908974032993543
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.enumerateXAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      connectionFactories0.clearXAQueueConnectionFactory();
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      connectionFactories0.getConnectionFactoryCount();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('d');
      try { 
        connectionFactories0.marshal((Writer) printWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("KF'!q", "{:x^H4-J");
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.getConnectionFactoryCount();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[17];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte) (-121);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      QueueConnectionFactory queueConnectionFactory0 = connectionFactories0.getQueueConnectionFactory((int) (byte)3);
      assertNull(queueConnectionFactory0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[9];
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactoryArray0[3] = connectionFactory0;
      connectionFactoryArray0[4] = connectionFactory0;
      connectionFactoryArray0[5] = connectionFactory0;
      connectionFactoryArray0[6] = connectionFactory0;
      connectionFactoryArray0[7] = connectionFactory0;
      connectionFactoryArray0[8] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      assertEquals(9, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4933967647088213
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      connectionFactories0.clearXAQueueConnectionFactory();
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(1, xATopicConnectionFactory0);
      connectionFactories0.addXAConnectionFactory(0, (XAConnectionFactory) null);
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      try { 
        connectionFactories0.getXATopicConnectionFactory(3823);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[3];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.elementDecl("G", "G");
      defaultHandler2_0.resolveEntity((String) null, (String) null, (String) null, (String) null);
      defaultHandler2_0.resolveEntity((String) null, (String) null);
      defaultHandler2_0.externalEntityDecl((String) null, (String) null, (String) null);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("9", (String) null);
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_1.startCDATA();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_4.resolveEntity((String) null, "9");
      defaultHandler2_4.startCDATA();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_5.startEntity("EndingCDATA");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_9 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_10 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_11 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_12 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_13 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_14 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_15 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_16 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_17 = new DefaultHandler2();
      defaultHandler2_9.startDocument();
      DefaultHandler2 defaultHandler2_18 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_19 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_20 = new DefaultHandler2();
      connectionFactories0.getXAConnectionFactory();
      assertEquals(3, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactoryCount();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setColumnNumber(60);
      parserAdapter0.getErrorHandler();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getColumnNumber();
      parserAdapter0.setDocumentLocator(locator2Impl1);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      connectionFactories0.clearXAQueueConnectionFactory();
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(9, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9991450160162882
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactory();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.startCDATA();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      connectionFactories2.clearXATopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories1.getQueueConnectionFactory();
      connectionFactories2.clearQueueConnectionFactory();
      connectionFactories0.isValid();
      connectionFactories2.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories1.getXATopicConnectionFactoryCount();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories1.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      connectionFactories0.getTopicConnectionFactory(0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("", "");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter2);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(xMLFilterImpl2);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(parserAdapter2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl8.setDocumentLocator(locatorImpl3);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(xMLFilterImpl8);
      xMLReaderAdapter5.setDTDHandler(xMLFilterImpl2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter4);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte) (-126);
      byteArray0[7] = (byte)7;
      byteArray0[8] = (byte) (-66);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[17];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      MockFile mockFile0 = new MockFile("OA");
      MockFile mockFile1 = new MockFile("OA", "OA");
      mockFile1.getCanonicalFile();
      mockFile1.toPath();
      MockFile mockFile2 = new MockFile(mockFile1, "OA");
      MockFile mockFile3 = new MockFile(mockFile2, "");
      connectionFactories0.getQueueConnectionFactoryCount();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "OA", (File) mockFile3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      charArray0[2] = 'F';
      charArray0[3] = '-';
      charArray0[5] = '\r';
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      xATopicConnectionFactoryArray0[0] = null;
      xATopicConnectionFactoryArray0[1] = null;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      connectionFactories0.clearXATopicConnectionFactory();
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories0.getXAConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9908974032993543
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      connectionFactories0.enumerateXAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      connectionFactories0.getConnectionFactoryCount();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-2932), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("Ja~ ");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      MockFile mockFile0 = new MockFile("OA", "~45;I_S~K{}4|UmN");
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(1, queueConnectionFactory0);
      assertNotSame(queueConnectionFactory0, queueConnectionFactory1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[8];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[7] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(8, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[9];
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactory0.setName(",br");
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(9, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      connectionFactories0.getXATopicConnectionFactoryCount();
      XMLReaderAdapter xMLReaderAdapter0 = null;
      try {
        xMLReaderAdapter0 = new XMLReaderAdapter((XMLReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // XMLReader must not be null
         //
         verifyException("org.xml.sax.helpers.XMLReaderAdapter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAConnectionFactory(0, (XAConnectionFactory) null);
      connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("error in xml, expecting </", ">>>--- Begin Exception ---<<< \n");
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_5.startCDATA();
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      defaultHandler2_7.startEntity("h(6.?wzzMoc");
      defaultHandler2_2.startDocument();
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_9 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_10 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_11 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_12 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_13 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_14 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_15 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_16 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_17 = new DefaultHandler2();
      defaultHandler2_11.elementDecl("cp", "");
      DefaultHandler2 defaultHandler2_18 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_19 = new DefaultHandler2();
      defaultHandler2_15.startDocument();
      DefaultHandler2 defaultHandler2_20 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_21 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_22 = new DefaultHandler2();
      assertFalse(defaultHandler2_22.equals((Object)defaultHandler2_1));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl2.setDocumentLocator(locatorImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      xMLReaderAdapter0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(xMLFilterImpl2);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)76;
      byte byte0 = (byte)23;
      try { 
        connectionFactories0.setQueueConnectionFactory(102, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4e*x`r");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintStream printStream0 = mockPrintStream0.format("4e*x`r", objectArray0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(printStream0);
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      objectOutputStream0.flush();
      ObjectOutputStream objectOutputStream2 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectArray0[3] = (Object) (byte)104;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-82);
      objectArray0[2] = (Object) (byte)7;
      objectArray0[4] = (Object) (byte) (-1);
      byteArray0[5] = (byte) (-123);
      objectArray0[0] = (Object) (byte)7;
      byteArray0[7] = (byte) (-1);
      objectOutputStream2.write(byteArray0);
      printStream0.print((-1011L));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream2);
      printStream0.print(0.0F);
      try { 
        connectionFactories0.setTopicConnectionFactory((int) (byte) (-1), (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = connectionFactories0.getXAQueueConnectionFactory(0);
      xAQueueConnectionFactory1.setName("");
      xAQueueConnectionFactory1.setName("5q");
      connectionFactories0.getXAQueueConnectionFactory(0);
      String string0 = "";
      int int0 = 1172;
      StringReader stringReader0 = new StringReader("");
      try { 
        XAConnectionFactory.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXATopicConnectionFactoryCount();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[15];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory(0);
      connectionFactories1.addXAConnectionFactory((XAConnectionFactory) null);
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      StringReader stringReader1 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      StringReader stringReader2 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endElement("O|[-?y!/", "4=DwHC?y", (String) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl1.endPrefixMapping("tZzu}Q.'Si~Q");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      connectionFactories0.clearXAConnectionFactory();
      xMLFilterImpl0.startDocument();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLFilterImpl5.setDocumentLocator(locator2Impl0);
      xMLFilterImpl4.setDocumentLocator(locator2Impl0);
      char[] charArray0 = new char[1];
      xMLFilterImpl0.ignorableWhitespace(charArray0, 2240, 2240);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl7.startPrefixMapping("4=DwHC?y", (String) null);
      SAXParseException sAXParseException0 = new SAXParseException("tZzu}Q.'Si~Q", (String) null, (String) null, 2240, 2240);
      xMLFilterImpl3.warning(sAXParseException0);
      xMLFilterImpl0.getEntityResolver();
      xMLFilterImpl7.endDocument();
      xMLFilterImpl4.getParent();
      xMLFilterImpl4.ignorableWhitespace(charArray0, 2240, (-69));
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl7);
      assertFalse(xMLFilterImpl13.equals((Object)xMLFilterImpl6));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("L$ft@");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      Object object1 = new Object();
      PrintStream printStream0 = mockPrintStream0.format("L$ft@", objectArray0);
      printStream0.print(0.0F);
      PrintStream printStream1 = printStream0.format("", (Object[]) null);
      printStream1.print((Object) "");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1615));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectOutputStream0.writeShort((byte)102);
      objectArray0[0] = (Object) (byte)102;
      objectArray0[4] = (Object) (byte)102;
      printStream1.println((long) (byte)34);
      byteArray0[1] = (byte) (-123);
      objectOutputStream0.writeFloat((byte)102);
      ObjectOutputStream objectOutputStream2 = new ObjectOutputStream(printStream0);
      objectOutputStream2.write(byteArray0);
      objectOutputStream2.reset();
      printStream0.print((long) (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream2);
      printStream0.print((double) (byte)102);
      mockPrintStream0.print((-1.0F));
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4e*x`r");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintStream printStream0 = mockPrintStream0.format("4e*x`r", objectArray0);
      printStream0.format("4e*x`r", (Object[]) null);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1608));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectArray0[3] = (Object) (byte)102;
      byteArray0[2] = (byte)52;
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.internalEntityDecl("4e*x`r", "4e*x`r");
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      defaultHandler2_5.setDocumentLocator(locator2Impl1);
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_9 = new DefaultHandler2();
      defaultHandler2_5.startDocument();
      DefaultHandler2 defaultHandler2_10 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_11 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_12 = new DefaultHandler2();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-1608), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = "Y^/!|IJ$$wleCEA_X";
      String string1 = "";
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory((-154), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -154, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[15];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory1 = connectionFactories0.getXAConnectionFactory(0);
      connectionFactories1.addXAConnectionFactory(xAConnectionFactory1);
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      StringReader stringReader1 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      StringReader stringReader2 = new StringReader("org.exolab.jms.config.ConnectionFa3tories");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.add(locale0);
      Locale locale1 = Locale.PRC;
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.ITALIAN;
      locale3.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.TAIWAN;
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      linkedList5.add(locale3);
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) linkedList2);
      linkedList6.removeIf(predicate0);
      Locale locale5 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList8 = new LinkedList<String>();
      Locale.lookupTag(linkedList7, linkedList8);
      linkedList2.add(locale2);
      Locale locale6 = Locale.ITALY;
      linkedList5.addLast(locale3);
      locale6.getDisplayVariant(locale5);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      linkedList10.add(locale3);
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5, locale_FilteringMode1);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl5.setContentHandler(xMLFilterImpl4);
      xMLFilterImpl1.endElement((String) null, "]!'4.jQ", "]!'4.jQ");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      xMLFilterImpl7.setParent(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl7.getEntityResolver();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl4.endDocument();
      xMLReaderAdapter1.setErrorHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl12);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories1.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(12, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 12, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Q;[mjO");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[2] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format("Q;[mjO", objectArray0);
      printStream0.print(29.397808F);
      PrintStream printStream1 = printStream0.format("E?\"K-Pr/[TO01&9", (Object[]) null);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1580));
      printStream1.print((long) (-1580));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectOutputStream0.writeLong((-1580));
      mockPrintStream0.println((-166.290566891));
      printStream1.print((-1326.0789F));
      objectOutputStream0.writeChar((-1580));
      byteArray0[2] = (byte) (-10);
      printStream1.println((long) (byte) (-10));
      objectArray0[0] = (Object) (byte) (-10);
      objectOutputStream0.write(byteArray0);
      printStream0.print((-2939L));
      mockPrintStream0.print((double) (byte) (-10));
      printStream1.print((float) (byte) (-10));
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("org.exola.!asto..util.LUst", (String) null);
      defaultHandler2_0.resolveEntity((String) null, "\">mM");
      defaultHandler2_0.resolveEntity("map", "org.exola.!asto..util.LUst");
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.processingInstruction("~X", "cWT}>*hPJXB4=CinL9");
      defaultHandler2_1.startCDATA();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_1.startCDATA();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_3.startDocument();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_9 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_10 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_11 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_12 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_13 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_14 = new DefaultHandler2();
      defaultHandler2_4.elementDecl("map", "~X");
      DefaultHandler2 defaultHandler2_15 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_16 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_17 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_18 = new DefaultHandler2();
      defaultHandler2_7.startDocument();
      DefaultHandler2 defaultHandler2_19 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_20 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_21 = new DefaultHandler2();
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.add(locale0);
      Locale locale1 = Locale.KOREA;
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.ITALIAN;
      locale3.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.TAIWAN;
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      linkedList5.add(locale3);
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) linkedList2);
      linkedList6.removeIf(predicate0);
      Locale locale5 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList8 = new LinkedList<String>();
      Locale.lookupTag(linkedList7, linkedList8);
      linkedList2.add(locale2);
      Locale locale6 = Locale.ITALY;
      linkedList5.addLast(locale3);
      locale6.getDisplayVariant(locale5);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      linkedList10.add(locale3);
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5, locale_FilteringMode1);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-1), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4e*x`r");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintStream printStream0 = mockPrintStream0.format("4e*x`r", objectArray0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(printStream0);
      printStream0.format("xeVaQEJ>.zpCtaOy", (Object[]) null);
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      objectOutputStream0.flush();
      ObjectOutputStream objectOutputStream2 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectArray0[3] = (Object) (byte)104;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-82);
      objectArray0[2] = (Object) (byte)7;
      objectArray0[4] = (Object) (byte) (-1);
      byteArray0[5] = (byte) (-123);
      objectArray0[0] = (Object) (byte)7;
      byteArray0[7] = (byte) (-1);
      objectOutputStream2.write(byteArray0);
      printStream0.print((-1011L));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream2);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(50, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.add(locale0);
      Locale locale1 = Locale.PRC;
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.ITALIAN;
      locale3.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList0.add((Locale.LanguageRange) null);
      Locale locale4 = Locale.JAPANESE;
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      linkedList4.add(locale3);
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) linkedList2);
      linkedList5.removeIf(predicate0);
      Locale locale5 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      Locale.lookupTag(linkedList6, linkedList7);
      linkedList2.add(locale2);
      Locale locale6 = Locale.ITALY;
      linkedList4.addLast(locale3);
      locale6.getDisplayVariant(locale5);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      linkedList9.add(locale3);
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList4, locale_FilteringMode1);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory(41, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 41, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        connectionFactories0.setXATopicConnectionFactory(16, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.add(locale0);
      Locale locale1 = Locale.ITALIAN;
      linkedList0.removeFirstOccurrence((Object) null);
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.ITALIAN;
      locale3.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.ROOT;
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) linkedList2);
      linkedList6.removeIf(predicate0);
      Locale locale5 = Locale.ITALY;
      linkedList2.add(locale2);
      Locale locale6 = Locale.ITALY;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      linkedList5.addLast(locale3);
      locale6.getDisplayVariant(locale5);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList8.add(locale3);
      linkedList2.add(locale5);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList5, locale_FilteringMode0);
      connectionFactories0.getXAQueueConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-25), queueConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      defaultHandler2_0.resolveEntity("", (String) null);
      defaultHandler2_0.resolveEntity((String) null, "java.lang.Double");
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_0.startCDATA();
      defaultHandler2_0.startCDATA();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_0.startDocument();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      defaultHandler2_7.startDocument();
      DefaultHandler2 defaultHandler2_9 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_10 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_11 = new DefaultHandler2();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      xAQueueConnectionFactory1.setName("N)J");
      xAQueueConnectionFactory1.setName("5q");
      try { 
        connectionFactories0.getXAQueueConnectionFactory(58);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.unparsedEntityDecl("", "discard-default-content", "ZE`AObGw;lG", "ZE`AObGw;lG");
      HandlerBase handlerBase0 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.getErrorHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl4);
      xMLFilterImpl3.setParent(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locatorImpl0.setPublicId("j,pk");
      connectionFactories0.clearQueueConnectionFactory();
      MockException mockException0 = new MockException("K+^dk");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl9.setDocumentLocator(locatorImpl0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      assertFalse(defaultHandler2_1.equals((Object)defaultHandler2_0));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      connectionFactories0.getConnectionFactory(0);
      try { 
        connectionFactories0.getConnectionFactory((-246));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.enumerateXAConnectionFactory();
      connectionFactories0.enumerateTopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactory0.isValid();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Q;[mjO");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[2] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format("Q;[mjO", objectArray0);
      printStream0.print(29.0F);
      PrintStream printStream1 = printStream0.format("E?\"K-Pr/[TO01&9", (Object[]) null);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1580));
      printStream1.print((long) (-1580));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectOutputStream0.writeLong((-2520L));
      mockPrintStream0.println((-166.290566891));
      printStream1.print((-1326.0789F));
      printStream1.println((long) (byte)59);
      objectArray0[0] = (Object) (byte)59;
      objectOutputStream0.write(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream1);
      mockPrintWriter0.print((double) (byte)0);
      mockPrintStream0.print((double) (byte)111);
      printStream1.print((float) (byte)0);
      mockPrintWriter0.append('I');
      try { 
        connectionFactories0.getQueueConnectionFactory((int) (byte) (-10));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        connectionFactories0.getQueueConnectionFactory((int) (byte)3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.enumerateXAConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      Marshaller.enableDebug = true;
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory((-203), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -203, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      MockFile mockFile0 = new MockFile("M4e*x`J[r");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[5];
      objectArray0[2] = (Object) connectionFactories0;
      objectArray0[2] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[4] = (Object) mockPrintStream0;
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintStream printStream0 = mockPrintStream0.format("M4e*x`J[r", objectArray0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(printStream0);
      String string0 = "\"alU1kW|x-";
      try { 
        objectOutputStream0.writeFields();
        fail("Expecting exception: NotActiveException");
      
      } catch(NotActiveException e) {
         //
         // no current PutField object
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      connectionFactories0.validate();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.elementDecl("", "Uk*Y#!%");
      defaultHandler2_0.startCDATA();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_0.endDTD();
      defaultHandler2_0.startDocument();
      defaultHandler2_0.endPrefixMapping("");
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler2_2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("L$ft@");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      Object object1 = new Object();
      PrintStream printStream0 = mockPrintStream0.format("L$ft@", objectArray0);
      printStream0.println();
      PrintStream printStream1 = printStream0.format("", (Object[]) null);
      printStream1.print((Object) "");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1615));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      objectOutputStream0.write((-1615));
      byte[] byteArray0 = new byte[19];
      objectOutputStream0.writeShort((byte)102);
      objectArray0[0] = (Object) (byte)102;
      printStream1.printf("", (Object[]) null);
      objectArray0[4] = (Object) (byte)102;
      printStream1.println((long) (byte)34);
      byteArray0[1] = (byte) (-123);
      objectOutputStream0.writeFloat((byte)102);
      ObjectOutputStream objectOutputStream2 = new ObjectOutputStream(printStream0);
      objectOutputStream2.write(byteArray0);
      printStream0.print((long) (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream2);
      printStream0.print((double) (byte)102);
      mockPrintStream0.print((-1.0F));
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributes2Impl0.getValue(106);
      attributesImpl0.getURI(710);
      attributesImpl0.getValue((String) null);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl0);
      attributes2Impl1.getLocalName((-1));
      // Undeclared exception!
      try { 
        attributes2Impl0.setQName(710, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Attempt to modify attribute at illegal index: 710
         //
         verifyException("org.xml.sax.helpers.AttributesImpl", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributes2Impl0.getValue(106);
      attributesImpl0.getURI(710);
      attributesImpl0.getValue((String) null);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl0);
      // Undeclared exception!
      try { 
        attributes2Impl0.setQName(710, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Attempt to modify attribute at illegal index: 710
         //
         verifyException("org.xml.sax.helpers.AttributesImpl", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory((-1956), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Q;[mjMfO");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[2] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format("Q;[mjMfO", objectArray0);
      printStream0.print(0.0F);
      PrintStream printStream1 = printStream0.format("v", (Object[]) null);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1608));
      printStream1.print((long) (-1608));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      mockPrintStream0.println((-166.290566891));
      printStream1.print((-1919.0F));
      byteArray0[2] = (byte)52;
      printStream1.println((long) (byte)59);
      objectArray0[0] = (Object) (byte)59;
      objectOutputStream0.write(byteArray0);
      printStream0.print((-1011L));
      printStream0.println(' ');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream1);
      mockPrintWriter0.print((double) (byte)0);
      mockPrintStream0.print((double) (byte)111);
      printStream1.print((float) (byte)52);
      PrintWriter printWriter0 = mockPrintWriter0.append('I');
      connectionFactories0.marshal((Writer) printWriter0);
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("xS<\"K@oB$R-tf9@");
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = object0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "xS<\"K@oB$R-tf9@";
      objectArray0[3] = object0;
      PrintStream printStream0 = mockPrintStream0.format("4e*x`r", objectArray0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      mockPrintStream0.format("xS<\"K@oB$R-tf9@", (Object[]) null);
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(objectOutputStream0);
      objectOutputStream1.flush();
      ObjectOutputStream objectOutputStream2 = new ObjectOutputStream(printStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-123);
      objectOutputStream0.write(byteArray0);
      mockPrintStream0.print(0L);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream2);
      mockPrintStream0.print(0.0F);
      try { 
        connectionFactories0.setTopicConnectionFactory((int) (byte)7, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        connectionFactories0.addXAQueueConnectionFactory(58, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 58, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.JAPANESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList2);
      linkedList0.removeFirstOccurrence(linkedList3);
      Locale locale1 = Locale.ROOT;
      Locale locale2 = Locale.ENGLISH;
      locale1.getUnicodeLocaleKeys();
      Locale locale3 = Locale.ITALIAN;
      Locale locale4 = Locale.GERMAN;
      linkedList3.add(locale4);
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList4, linkedList2);
      linkedList4.removeAll(linkedList1);
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      linkedList7.add(locale1);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      try { 
        connectionFactories0.getXAConnectionFactory((-3753));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addConnectionFactory((-3839), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -3839, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4e*x`r");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintStream printStream0 = mockPrintStream0.format("4e*x`r", objectArray0);
      PrintStream printStream1 = printStream0.format("xeVaQEJ>.zpCtaOy", (Object[]) null);
      mockPrintStream0.print((String) null);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      printStream0.print((-1608));
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectArray0[3] = (Object) (byte)102;
      byteArray0[2] = (byte)52;
      objectArray0[4] = (Object) (byte)52;
      byteArray0[5] = (byte) (-105);
      byteArray0[18] = (byte)52;
      objectOutputStream1.write(byteArray0);
      printStream0.print((-1L));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream1);
      printStream1.print(1.0243772F);
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-2933));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile("", "bw?4/1u5P-c:)");
      MockFile mockFile2 = new MockFile("EndingCDATA", "b`W`K[L239}5P8f?Z");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "K]fdj2aMD98@W+LZ%C");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // K]fdj2aMD98@W+LZ%C
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(11, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.setConnectionFactory(7, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.setConnectionFactory((-33), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      int int0 = (-787);
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.add(locale0);
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.ITALIAN;
      locale3.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.ROOT;
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      linkedList6.add((Locale.LanguageRange) null);
      linkedList5.add(locale3);
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) linkedList2);
      linkedList6.removeIf(predicate0);
      Locale locale5 = Locale.ITALY;
      linkedList2.add(locale2);
      Locale locale6 = Locale.ITALY;
      linkedList5.addLast(locale3);
      locale6.getDisplayVariant(locale5);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList8.add(locale3);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5, locale_FilteringMode1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(14);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRENCH;
      linkedList0.clone();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList2);
      linkedList1.removeFirstOccurrence(linkedList0);
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.ITALIAN;
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList1, linkedList2);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) locale1);
      linkedList6.removeIf(predicate0);
      Locale locale3 = Locale.ITALY;
      linkedList2.add((Locale) null);
      Locale locale4 = Locale.ITALY;
      linkedList3.addLast((Locale) null);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add(locale1);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList8.add(locale3);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList11, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        connectionFactories0.getXATopicConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRENCH;
      linkedList0.clone();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList2);
      linkedList1.removeFirstOccurrence(linkedList0);
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.ITALIAN;
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList1, linkedList2);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) "-qU>y{/J?");
      linkedList0.removeIf(predicate0);
      Locale locale3 = Locale.ITALY;
      linkedList2.add(locale1);
      linkedList2.addLast(locale3);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList3.add((Locale) null);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList5.add(locale2);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale1 = Locale.CANADA;
      linkedList0.removeFirstOccurrence(linkedList2);
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.CANADA_FRENCH;
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList1, linkedList3);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      UnaryOperator.identity();
      Locale locale4 = Locale.SIMPLIFIED_CHINESE;
      Locale locale5 = Locale.ITALY;
      linkedList5.addLast(locale3);
      locale5.getDisplayVariant(locale4);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Object object0 = new Object();
      Predicate<Locale> predicate0 = Predicate.isEqual(object0);
      Predicate<Locale> predicate1 = predicate0.negate();
      Predicate<Locale> predicate2 = predicate1.or(predicate0);
      linkedList8.removeIf(predicate2);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList8.add(locale3);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5, locale_FilteringMode0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      String string0 = ">>>--- Begin Exception ---<<< \n";
      try { 
        connectionFactories0.getTopicConnectionFactory(379);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      linkedList3.addFirst(locale0);
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      linkedList2.removeAll(linkedList0);
      Locale.lookup(linkedList0, linkedList3);
      linkedList2.removeFirstOccurrence((Object) null);
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.ITALIAN;
      linkedList4.add(locale2);
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList2, linkedList3);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList5, linkedList4);
      linkedList4.add((Locale) null);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList14 = new LinkedList<Locale>();
      linkedList13.add(locale1);
      linkedList6.addAll((Collection<? extends Locale>) linkedList10);
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList15, (Collection<Locale>) null, locale_FilteringMode0);
      linkedList14.addAll((Collection<? extends Locale>) linkedList13);
      Locale.lookup(linkedList0, list0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      try { 
        connectionFactories0.getTopicConnectionFactory((-2105));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(96);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl1.endElement((String) null, (String) null, (String) null);
      xMLFilterImpl1.setParent(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl6.endElement((String) null, (String) null, (String) null);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl7.getErrorHandler();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      xMLFilterImpl9.characters(charArray0, (-1229), (-1229));
      xMLFilterImpl9.setParent(xMLFilterImpl7);
      char[] charArray1 = new char[20];
      charArray1[0] = ' ';
      charArray1[1] = '!';
      xMLFilterImpl7.ignorableWhitespace(charArray1, '!', (-1390));
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      xMLFilterImpl0.ignorableWhitespace(charArray1, (-1390), '!');
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, (-1390), 1);
      xMLFilterImpl6.fatalError(sAXParseException0);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((int) ' ');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locale locale0 = Locale.ITALY;
      Locale.getISOCountries();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.ITALY;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) set0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      linkedList4.addLast(locale1);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      linkedList6.clear();
      Locale.lookup(linkedList6, linkedList4);
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.normalize(uRI0);
      MockFile mockFile0 = new MockFile(uRI0);
      String string0 = "D&tX\"^=|$n AX&G";
      String string1 = "is";
      MockFile mockFile1 = new MockFile(uRI1);
      String string2 = "orgexolab.jmsconfig.ConectionFactories";
      String string3 = null;
      MockFile mockFile2 = null;
      try {
        mockFile2 = new MockFile("D&tX\"^=|$n AX&G", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXATopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRENCH;
      linkedList0.clone();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addFirst(locale0);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList2);
      linkedList1.removeFirstOccurrence(linkedList0);
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.ITALIAN;
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList1, linkedList2);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) "-qU>y{/J?");
      linkedList0.removeIf(predicate0);
      Locale locale3 = Locale.ITALY;
      linkedList2.add(locale1);
      linkedList2.addLast(locale3);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList3.add((Locale) null);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      connectionFactories0.isValid();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      linkedList8.addAll((Collection<? extends Locale>) linkedList10);
      Locale.lookup(linkedList4, linkedList2);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      assertFalse(defaultHandler2_1.equals((Object)defaultHandler2_0));
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4e*x`r");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintStream printStream0 = mockPrintStream0.format("4e*x`r", objectArray0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(printStream0);
      printStream0.format("xeVaQEJ>.zpCtaOy", (Object[]) null);
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      ObjectOutputStream objectOutputStream2 = new ObjectOutputStream(mockPrintStream0);
      byte[] byteArray0 = new byte[19];
      objectArray0[3] = (Object) (byte)104;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-82);
      objectArray0[4] = (Object) (byte) (-1);
      byteArray0[5] = (byte) (-123);
      objectArray0[0] = (Object) (byte)7;
      byteArray0[7] = (byte) (-1);
      objectOutputStream2.write(byteArray0);
      printStream0.print((-1011L));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream2);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        connectionFactories0.getXATopicConnectionFactory((int) (byte) (-123));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
