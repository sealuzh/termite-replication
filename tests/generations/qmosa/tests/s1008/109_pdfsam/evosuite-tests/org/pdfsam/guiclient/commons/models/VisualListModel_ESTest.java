/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 03:03:22 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.awt.image.renderable.ParameterBlock;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.AttributedCharacterIterator;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.WarpAffine;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.TreeModelEvent;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[4];
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[0] = 0;
      intArray0[1] = (-3238);
      intArray0[2] = (-462);
      int int0 = (-1500);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      CollectionOp collectionOp0 = new CollectionOp("u\"", parameterBlock1, (RenderingHints) null);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"u\"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5656825482084757
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementsChanged();
      Boolean boolean0 = new Boolean("");
      vector0.add((VisualPageListItem) null);
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte) (-75);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualPageListItemArray0[4] = null;
      visualListModel0.updateElementAt(0, visualPageListItemArray0[3]);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[3];
      vector0.clone();
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      visualListModel1.moveDownIndex(0);
      visualListModel1.moveDownIndexes(intArray1);
      assertEquals(5, visualListModel1.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      visualListModel0.addAllElements(2881, (Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      byte byte0 = (byte)60;
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)60;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1051;
      visualListModel0.getSize();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.getListDataListeners();
      Vector<Object> vector0 = parameterBlock0.getSources();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, stack0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, " d\n", parameterBlock1);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \" d
         // \" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.getSize();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      stack0.push((VisualPageListItem) null);
      int int0 = 3044;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      intArray0[1] = 3044;
      stack0.add((VisualPageListItem) null);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      stack0.removeElement(collection0);
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4968178582894094
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 102;
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.data = null;
      visualListModel0.getValidElements();
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(233, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[1];
      int int0 = 6;
      intArray0[0] = 6;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 6
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4664823546361587
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[2];
      int int0 = (-56);
      intArray0[0] = (-56);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[6];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[0] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler1;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler2;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[4] = basicTreeUI_TreeModelHandler4;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler5 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandler4;
      linkedHashSet0.toArray(basicTreeUI_TreeModelHandlerArray0);
      Boolean boolean0 = new Boolean(false);
      linkedHashSet0.retainAll(linkedHashSet0);
      Boolean boolean1 = new Boolean(true);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -55
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.732728336819822
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementsChanged();
      Boolean boolean0 = new Boolean("");
      vector0.add((VisualPageListItem) null);
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveDownIndex(1);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-21), (double) (-21), (-2109.010681));
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      int[] intArray0 = new int[8];
      intArray0[0] = (-21);
      intArray0[1] = (-21);
      intArray0[2] = (-21);
      intArray0[3] = (-21);
      intArray0[4] = (-21);
      intArray0[5] = (-21);
      intArray0[6] = (-21);
      intArray0[7] = (-21);
      visualListModel0.reverseElements(intArray0);
      double[] doubleArray0 = new double[20];
      affineTransform0.quadrantRotate((-462));
      doubleArray0[0] = (double) (-21);
      doubleArray0[2] = (double) (-21);
      affineTransform0.deltaTransform(doubleArray0, 110, doubleArray0, (-21), (-1686));
      doubleArray0[0] = 1530.0;
      doubleArray0[4] = (double) (-21);
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      int[] intArray1 = new int[1];
      intArray1[0] = 1258;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.moveUpIndexes(intArray1);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1258
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.360250345681063
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      PriorityQueue<AttributedCharacterIterator.Attribute> priorityQueue0 = new PriorityQueue<AttributedCharacterIterator.Attribute>();
      linkedHashSet1.retainAll(priorityQueue0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      linkedHashSet0.retainAll(vector0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel1.prependAllElements(linkedHashSet2);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 102;
      try { 
        visualListModel1.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 102
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4835563021202742
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[1] = 4;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.stream();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.retainAll(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel1.prependAllElements(linkedHashSet1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      try { 
        visualListModel1.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-3194);
      intArray0[1] = (-21);
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-21), (double) (-21), (-2109.010681));
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      double[] doubleArray0 = new double[20];
      affineTransform0.quadrantRotate((-462));
      doubleArray0[0] = (double) (-21);
      doubleArray0[2] = (double) (-21);
      affineTransform0.deltaTransform(doubleArray0, 110, doubleArray0, (-21), (-1660));
      doubleArray0[0] = 1530.0;
      doubleArray0[4] = (double) (-21);
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      int[] intArray1 = new int[1];
      intArray1[0] = 1258;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      visualListModel0.prependAllElements(linkedHashSet1);
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1257
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4914302833355375
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.parallelStream();
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.remove(linkedHashSet1);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.clear();
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.removeAll(linkedHashSet0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet3 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<DefaultTableModel> linkedHashSet4 = new LinkedHashSet<DefaultTableModel>();
      linkedHashSet1.addAll(linkedHashSet2);
      linkedHashSet2.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet5 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.removeAll(linkedHashSet1);
      linkedHashSet5.add((VisualPageListItem) null);
      linkedHashSet5.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet5.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet5);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4883343081033393
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.parallelStream();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.clear();
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.removeAll(linkedHashSet0);
      linkedHashSet2.forEach(consumer0);
      LinkedHashSet<VisualPageListItem> linkedHashSet3 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<DefaultTableModel> linkedHashSet4 = new LinkedHashSet<DefaultTableModel>();
      linkedHashSet1.addAll(linkedHashSet2);
      linkedHashSet2.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet5 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.removeAll(linkedHashSet1);
      linkedHashSet5.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet5.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet5);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3787754130486642
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet1);
      visualListModel0.rotateClockwiseElements(intArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      LinkedList<RenderingHints.Key> linkedList0 = new LinkedList<RenderingHints.Key>();
      linkedHashSet2.retainAll(linkedList0);
      linkedHashSet0.add((VisualPageListItem) null);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-3696), (-535), 2395);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2395
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.37496588923914
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.add((VisualPageListItem) null);
      linkedHashSet2.add((VisualPageListItem) null);
      LinkedList<RenderingHints.Key> linkedList0 = new LinkedList<RenderingHints.Key>();
      linkedHashSet2.retainAll(linkedList0);
      linkedHashSet0.add((VisualPageListItem) null);
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, (-485), (-4733));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -4733
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-58);
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)25;
      byteArray0[4] = (byte)111;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-35);
      visualListModel0.moveUpIndex((-35));
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.elementsChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.51878258036607
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[22];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[0] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler2;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler3;
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathClosestTo((-52), (-52));
      TreeModelEvent treeModelEvent0 = new TreeModelEvent(basicTreeUI_TreeModelHandler1, (TreePath) null, intArray0, basicTreeUI_TreeModelHandlerArray0);
      basicTreeUI_TreeModelHandler1.treeStructureChanged(treeModelEvent0);
      Object object0 = new Object();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      TreePath treePath0 = new TreePath(treeModelEvent0);
      TreeModelEvent treeModelEvent1 = new TreeModelEvent(object0, treePath0);
      basicTreeUI_TreeModelHandler0.treeStructureChanged(treeModelEvent1);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[0] = basicTreeUI_TreeModelHandler4;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler5 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandlerArray0[4];
      linkedHashSet0.toArray(basicTreeUI_TreeModelHandlerArray0);
      visualListModel0.reverseElements(intArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack2 = new Stack<Dialog.ModalityType>();
      int int1 = (-714);
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.APPLICATION_MODAL;
      stack0.add(dialog_ModalityType0);
      Dialog.ModalityType dialog_ModalityType1 = Dialog.ModalityType.DOCUMENT_MODAL;
      stack0.add(dialog_ModalityType1);
      stack2.addAll((Collection<? extends Dialog.ModalityType>) stack1);
      Stack<Dialog.ModalityType> stack3 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack4 = new Stack<Dialog.ModalityType>();
      int[] intArray0 = new int[1];
      intArray0[0] = (-714);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -714
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7275737911350801
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-21), (double) (-21), (-2109.010681));
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      int[] intArray0 = new int[1];
      intArray0[0] = (-21);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.add((VisualPageListItem) null);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -21
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.596398700131146
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.stream();
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.480797681430619
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = (-664);
      intArray1[1] = 4;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[6];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[0] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[1] = basicTreeUI_TreeModelHandler1;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler2;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler3;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[4] = basicTreeUI_TreeModelHandler4;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler5 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandler5;
      linkedHashSet1.toArray(basicTreeUI_TreeModelHandlerArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.retainAll(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.prependAllElements(linkedHashSet1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-664), 4, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-664) and height (4) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.493936548999698
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.stream();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3468618197243933
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[6];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler1;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler1;
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathClosestTo((-2985), (-30));
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) basicTreeUI_TreeModelHandler1;
      objectArray0[2] = (Object) basicTreeUI_TreeModelHandler1;
      objectArray0[3] = (Object) null;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) basicTreeUI_TreeModelHandler1;
      TreeModelEvent treeModelEvent0 = new TreeModelEvent(metalTreeUI0, (TreePath) null, (int[]) null, objectArray0);
      basicTreeUI_TreeModelHandler2.treeNodesChanged(treeModelEvent0);
      TreeModelEvent treeModelEvent1 = new TreeModelEvent(basicTreeUI_TreeModelHandler0, (TreePath) null, intArray0, basicTreeUI_TreeModelHandlerArray0);
      Object object1 = new Object();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      TreePath treePath0 = new TreePath(treeModelEvent1);
      TreeModelEvent treeModelEvent2 = new TreeModelEvent(object1, treePath0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[4] = basicTreeUI_TreeModelHandler3;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandler3;
      linkedHashSet0.toArray(basicTreeUI_TreeModelHandlerArray0);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.reverseElements(intArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6851551011994585
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementsChanged();
      Boolean boolean0 = new Boolean("");
      vector0.add((VisualPageListItem) null);
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.updateElementAt(50, visualPageListItemArray0[2]);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[7];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualPageListItemArray1[3] = null;
      visualPageListItemArray1[4] = null;
      visualPageListItemArray1[5] = null;
      visualPageListItemArray1[6] = null;
      visualListModel0.setData(visualPageListItemArray1);
      visualListModel0.removeElements(intArray0, true);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(1995, (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.moveDownIndex(1995);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.641839446542283
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[6];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler1;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler2;
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathClosestTo((-30), (-30));
      basicTreeUI_TreeModelHandler1.treeNodesRemoved((TreeModelEvent) null);
      TreeModelEvent treeModelEvent0 = new TreeModelEvent(basicTreeUI_TreeModelHandler0, (TreePath) null, (int[]) null, basicTreeUI_TreeModelHandlerArray0);
      basicTreeUI_TreeModelHandler0.treeStructureChanged(treeModelEvent0);
      Object object0 = new Object();
      basicTreeUI_TreeModelHandler2.treeNodesRemoved(treeModelEvent0);
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      TreePath treePath0 = new TreePath(treeModelEvent0);
      TreeModelEvent treeModelEvent1 = new TreeModelEvent(object0, treePath0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler3;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandler3;
      visualListModel0.reverseElements(intArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(1, visualListModel0.getSize());
      
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.169371224807919
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementsChanged();
      Boolean boolean0 = new Boolean("");
      vector0.removeAllElements();
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector0.add((VisualPageListItem) null);
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6807062958711074
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayDeque0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel1.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel2 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel2.prependAllElements(stack0);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (-34);
      doubleArray0[2] = (double) (-34);
      doubleArray0[3] = (double) (-34);
      int[] intArray0 = new int[5];
      intArray0[0] = 257;
      intArray0[1] = (-34);
      intArray0[2] = 0;
      intArray0[3] = (-34);
      Point point0 = new Point((-3903), (-34));
      Dimension dimension0 = new Dimension((-34), (-34));
      Rectangle rectangle0 = new Rectangle((-34), (-2709), (-3903), (-34));
      Rectangle rectangle1 = new Rectangle((-3903), (-34), (-34), (-34));
      dimension0.height = (-34);
      rectangle0.height = (-3903);
      dimension0.width = (-3903);
      rectangle0.add((Rectangle2D) rectangle1);
      rectangle1.add((-34), (-2709));
      Point point1 = new Point(point0);
      Boolean boolean0 = new Boolean("2MTl");
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.320573333787351
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.468988620300319
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[2];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[6];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[0] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler0;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler2;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler3;
      Object object0 = new Object();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getSelectionPath();
      TreeModelEvent treeModelEvent0 = new TreeModelEvent(object0, (TreePath) null);
      treeModelEvent0.toString();
      basicTreeUI_TreeModelHandler0.treeStructureChanged(treeModelEvent0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[4] = basicTreeUI_TreeModelHandler4;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler5 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandler4;
      Boolean boolean0 = new Boolean(true);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementsChanged();
      Boolean boolean0 = new Boolean("");
      vector0.add((VisualPageListItem) null);
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      OperationRegistry.getThreadSafeOperationRegistry();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 5432;
      visualListModel0.addElementAt((VisualPageListItem) null, 5432);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      stack1.setSize(5432);
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.APPLICATION_MODAL;
      Stack<Dialog.ModalityType> stack2 = new Stack<Dialog.ModalityType>();
      stack1.add(dialog_ModalityType0);
      Dialog.ModalityType dialog_ModalityType1 = Dialog.ModalityType.APPLICATION_MODAL;
      Dialog.ModalityType dialog_ModalityType2 = Dialog.ModalityType.TOOLKIT_MODAL;
      // Undeclared exception!
      try { 
        stack2.set(5432, dialog_ModalityType2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 5432
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-45), (double) (-45), (double) (-45));
      affineTransform0.rotate((double) (-45));
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (-45);
      doubleArray0[2] = (double) (-45);
      doubleArray0[3] = (double) (-45);
      affineTransform0.transform(doubleArray0, (-45), doubleArray0, 2697, (-2246));
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      WarpAffine warpAffine0 = new WarpAffine(affineTransform0, (-2714), (-45), (-2714), (-4748));
      Point point0 = new Point((-2246), (-4748));
      Dimension dimension0 = new Dimension(30000, (-45));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Rectangle rectangle1 = new Rectangle(30000, (-45), (-45), 30000);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 30000;
      floatArray0[1] = (float) 30000;
      floatArray0[2] = (float) (-2246);
      dimension0.width = 65535;
      warpAffine0.warpSparseRect(30000, 3, (-45), 30000, (-45), 30000, floatArray0);
      Rectangle rectangle2 = warpAffine0.mapSourceRect(rectangle1);
      rectangle1.add((-4748), (-2714));
      Rectangle2D.intersect(rectangle1, rectangle1, rectangle2);
      Rectangle2D.intersect(rectangle0, rectangle2, rectangle2);
      Boolean boolean0 = new Boolean("2MTl");
      Rectangle rectangle3 = new Rectangle((-2502), (-2714), (-2502), (-4748));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6179387430910888
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BasicTreeUI.TreeModelHandler[] basicTreeUI_TreeModelHandlerArray0 = new BasicTreeUI.TreeModelHandler[6];
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[2] = basicTreeUI_TreeModelHandler1;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[3] = basicTreeUI_TreeModelHandler2;
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathClosestTo((-2985), (-30));
      TreeModelEvent treeModelEvent0 = new TreeModelEvent(basicTreeUI_TreeModelHandler0, (TreePath) null, intArray0, basicTreeUI_TreeModelHandlerArray0);
      basicTreeUI_TreeModelHandler0.treeStructureChanged(treeModelEvent0);
      Object object0 = new Object();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      TreePath treePath0 = new TreePath(treeModelEvent0);
      TreeModelEvent treeModelEvent1 = new TreeModelEvent(object0, treePath0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler3 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[4] = basicTreeUI_TreeModelHandler3;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler4 = metalTreeUI0.new TreeModelHandler();
      basicTreeUI_TreeModelHandlerArray0[5] = basicTreeUI_TreeModelHandler3;
      linkedHashSet0.toArray(basicTreeUI_TreeModelHandlerArray0);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.355923824349998
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 102;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) pdfGraphics2D_HyperLinkKey0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate0.or(predicate5);
      Predicate<Object> predicate7 = predicate6.or(predicate1);
      Predicate<Object> predicate8 = predicate5.or(predicate3);
      predicate6.negate();
      Predicate<Object> predicate9 = predicate4.and(predicate5);
      Predicate<Object> predicate10 = predicate5.negate();
      predicate1.negate();
      Predicate.isEqual((Object) predicate4);
      predicate10.negate();
      Predicate<Object> predicate11 = predicate6.or(predicate2);
      predicate2.and(predicate5);
      Predicate<Object> predicate12 = predicate1.or(predicate10);
      Predicate<Object> predicate13 = predicate3.or(predicate12);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate14 = predicate9.negate();
      Predicate<Object> predicate15 = predicate3.negate();
      Predicate<Object> predicate16 = predicate4.negate();
      Predicate<Object> predicate17 = predicate9.or(predicate16);
      Predicate<Object> predicate18 = predicate5.negate();
      predicate13.negate();
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate19 = predicate14.negate();
      Predicate<Object> predicate20 = predicate8.and(predicate19);
      predicate8.test(predicate17);
      Predicate<Object> predicate21 = predicate2.negate();
      predicate20.and(predicate15);
      predicate20.and(predicate11);
      predicate21.or(predicate20);
      predicate18.negate();
      Predicate<Object> predicate22 = predicate20.or(predicate1);
      assertNotSame(predicate22, predicate6);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5211216510400676
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel1.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.size();
      Integer integer1 = new Integer(0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel1.moveDownIndexes(intArray1);
      assertNotSame(intArray1, intArray0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = new AffineTransform();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) (-30);
      doubleArray0[3] = (double) (-30);
      WarpAffine warpAffine0 = new WarpAffine(affineTransform0);
      int[] intArray0 = new int[5];
      intArray0[4] = (-30);
      intArray0[2] = (-30);
      intArray0[3] = (-30);
      warpAffine0.warpPoint(1, 257, 1937, 255, intArray0);
      Point point0 = new Point(40076, (-30));
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle((-30), 1937, 40076, 2697);
      Rectangle rectangle1 = new Rectangle(40076, 0, 2697, 0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 40076;
      doubleArray0[3] = (double) 40076;
      rectangle1.height = rectangle1.height;
      rectangle0.height = 40076;
      warpAffine0.warpSparseRect(0, 3, 0, 0, 40076, 40076, floatArray0);
      rectangle0.add((Rectangle2D) rectangle1);
      Rectangle rectangle2 = warpAffine0.mapSourceRect(rectangle1);
      rectangle2.setFrame((Rectangle2D) rectangle0);
      rectangle1.add((-30), 1937);
      Rectangle2D.intersect(rectangle1, rectangle1, rectangle2);
      Point point1 = new Point(0, 42803);
      Rectangle2D.intersect(rectangle0, rectangle2, rectangle2);
      rectangle2.setRect((Rectangle2D) rectangle0);
      Rectangle rectangle3 = new Rectangle(42803, 0, 42803, (-30));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "PK,XRsu");
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-45), (double) (-45), (-2697.821795));
      affineTransform0.rotate((-2697.821795));
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2697.821795);
      doubleArray0[2] = (double) (-45);
      doubleArray0[3] = (double) (-45);
      affineTransform0.transform(doubleArray0, (-45), doubleArray0, 2697, (-2217));
      Stack<Integer> stack0 = new Stack<Integer>();
      WarpAffine warpAffine0 = new WarpAffine(affineTransform0, 2697, (-45), 2697, (-45));
      Point point0 = new Point((-2217), 2697);
      Dimension dimension0 = new Dimension(30000, (-45));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Rectangle rectangle1 = new Rectangle(30000, (-45), (-45), 30000);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 2697;
      floatArray0[1] = (float) 30000;
      floatArray0[2] = (float) (-2217);
      rectangle0.height = (-2258);
      warpAffine0.warpSparseRect(30000, 3, (-45), 30000, (-2258), 30000, floatArray0);
      warpAffine0.mapSourceRect(rectangle1);
      rectangle1.add(2697, (-45));
      Rectangle2D.intersect(rectangle1, rectangle1, rectangle0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "2MTl");
      Rectangle rectangle2 = new Rectangle(Integer.MIN_VALUE, (-45), Integer.MIN_VALUE, (-45));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, " does not have a class function toLevel(String, Level)");
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.TOOLKIT_MODAL;
      stack0.add(dialog_ModalityType0);
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType1 = Dialog.ModalityType.APPLICATION_MODAL;
      stack1.add(dialog_ModalityType1);
      Dialog.ModalityType dialog_ModalityType2 = Dialog.ModalityType.DOCUMENT_MODAL;
      Stack<Dialog.ModalityType> stack2 = new Stack<Dialog.ModalityType>();
      stack2.add(dialog_ModalityType2);
      stack1.add(dialog_ModalityType1);
      stack1.spliterator();
      stack1.add(dialog_ModalityType2);
      stack1.add(dialog_ModalityType1);
      Dialog.ModalityType dialog_ModalityType3 = Dialog.ModalityType.DOCUMENT_MODAL;
      Dialog.ModalityType dialog_ModalityType4 = Dialog.ModalityType.APPLICATION_MODAL;
      stack1.add(dialog_ModalityType4);
      stack1.add(dialog_ModalityType3);
      stack0.stream();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((-2672), (Collection<VisualPageListItem>) treeSet0);
      stack0.pop();
      stack2.add(dialog_ModalityType4);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      VisualListModel visualListModel0 = new VisualListModel();
      Point point0 = new Point((-45), (-45));
      int[] intArray0 = new int[8];
      intArray0[6] = (-45);
      point0.x = (-45);
      point0.y = (-45);
      intArray0[4] = (-45);
      intArray0[1] = (-45);
      point0.y = (-45);
      intArray0[7] = (-45);
      Dimension dimension0 = new Dimension(29936, (-45));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      rectangle0.height = (-45);
      Rectangle rectangle1 = new Rectangle(29936, (-45), (-45), 29936);
      rectangle1.setRect((Rectangle2D) rectangle0);
      point0.y = 29936;
      intArray0[6] = 29936;
      rectangle0.contains((Point2D) point0);
      Rectangle rectangle2 = new Rectangle(rectangle0);
      rectangle0.setFrameFromDiagonal((double) 29936, (double) (-45), (double) (-45), (double) 29936);
      rectangle2.setFrameFromCenter((double) (-45), (double) (-45), (double) 29936, (double) (-45));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1902.0F), 0.0F, (-45), (-4913.0156F));
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      Rectangle2D.intersect(rectangle1, rectangle2D0, rectangle0);
      rectangle1.grow(942, (-45));
      rectangle2.y = 0;
      rectangle0.setSize(dimension0);
      rectangle1.add(29936, (-45));
      Rectangle2D.intersect(rectangle1, rectangle1, rectangle0);
      Rectangle2D.intersect(rectangle0, rectangle2, rectangle2);
      Rectangle rectangle3 = new Rectangle(0, (-45), 0, (-45));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-29), (-1), true);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[4] = (-1);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<DefaultTableModel> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate1.or(predicate2);
      predicate7.and(predicate1);
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate8 = predicate5.or(predicate1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate9 = predicate8.or(predicate7);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate10 = predicate4.or(predicate6);
      predicate10.or(predicate5);
      predicate9.and(predicate7);
      try { 
        MockURL.URL("\"", "mZ", (-1), "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: \"
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3WkX]VZ9`k<p#");
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer.divideUnsigned(1, 2890);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      Integer.valueOf((-2552));
      Integer.getInteger((String) null, 252);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 252, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      int int0 = (-2491);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      // Undeclared exception!
      try { 
        stack1.setSize((-714));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      byte byte0 = (byte)11;
      byte[][] byteArrayArray0 = null;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((byte)11, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[4] = 0;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<DefaultTableModel> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate1.or(predicate2);
      Predicate<Object> predicate7 = predicate6.and(predicate1);
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate8 = predicate4.or(predicate1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate9 = predicate8.or(predicate6);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate10 = predicate3.or(predicate5);
      predicate10.or(predicate4);
      predicate9.and(predicate6);
      try { 
        MockURL.URL("\"", "mZ", 0, "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: \"
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-21), (double) (-21), (-2109.010681));
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      affineTransform0.setToRotation(116.3);
      double[] doubleArray0 = new double[5];
      affineTransform0.quadrantRotate((-462));
      doubleArray0[4] = (-2109.010681);
      doubleArray0[0] = (double) (-21);
      doubleArray0[2] = (double) (-21);
      affineTransform0.deltaTransform(doubleArray0, 110, doubleArray0, (-21), (-1660));
      doubleArray0[0] = 1530.0;
      doubleArray0[4] = (double) (-21);
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      float[] floatArray0 = new float[0];
      affineTransform0.transform(floatArray0, 607, doubleArray0, (-1660), (-1484));
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      Boolean.valueOf(false);
      Boolean.valueOf("org.pdfsam.guiclient.commons.models.VisualListModel");
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-1660), (-1), false);
      assertNull(collection0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-27);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)28;
      byteArray0[7] = (byte) (-122);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.74594813888896
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.prependAllElements(collection0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.prependAllElements(collection0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(2, intArray0.length);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, sunHints_Key3);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, sunHints_LCDContrastKey0);
      RenderingHints renderingHints2 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      renderingHints0.clone();
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.MODELESS;
      stack0.add(dialog_ModalityType0);
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.compareUnsigned((-1347), (-1017));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate1.negate();
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate<Object> predicate11 = predicate4.negate();
      predicate4.negate();
      Predicate<Object> predicate12 = predicate10.negate();
      Predicate<Object> predicate13 = predicate7.negate();
      predicate4.negate();
      Predicate<Object> predicate14 = predicate6.negate();
      predicate2.negate();
      predicate13.and(predicate4);
      predicate11.test(predicate5);
      Predicate<Object> predicate15 = predicate12.negate();
      predicate7.negate();
      predicate9.negate();
      Predicate<Object> predicate16 = predicate3.negate();
      Predicate<Object> predicate17 = predicate16.negate();
      predicate8.negate();
      predicate17.negate();
      Predicate<Object> predicate18 = predicate3.negate();
      predicate18.negate();
      predicate15.negate();
      predicate14.negate();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform.getTranslateInstance(1, (-2697.370563522326));
      visualListModel0.removeElements(1, 1, false);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer0 = new Integer((-1909));
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      Boolean boolean0 = new Boolean("");
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Dialog.ModalityType dialog_ModalityType0 = Dialog.DEFAULT_MODALITY_TYPE;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, "");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 11, true);
      int[] intArray0 = new int[7];
      intArray0[0] = 11;
      intArray0[4] = 11;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<DefaultTableModel> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate1.or(predicate2);
      predicate6.and(predicate1);
      Predicate.isEqual((Object) predicate6);
      predicate5.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate8 = predicate7.or(predicate6);
      Predicate.isEqual((Object) predicate0);
      predicate3.or(predicate5);
      predicate8.and(predicate6);
      try { 
        MockURL.URL("\"", "mZ", 11, "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: \"
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultTableModel0);
      parameterBlock0.setSource((Object) null, 2391);
      CollectionOp collectionOp0 = new CollectionOp("", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      int int0 = 1333;
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.TOOLKIT_MODAL;
      Dialog.ModalityType dialog_ModalityType1 = Dialog.ModalityType.APPLICATION_MODAL;
      stack0.add(dialog_ModalityType0);
      Dialog.ModalityType dialog_ModalityType2 = Dialog.ModalityType.TOOLKIT_MODAL;
      Dialog.ModalityType.values();
      Dialog.ModalityType.values();
      Dialog.ModalityType dialog_ModalityType3 = Dialog.ModalityType.MODELESS;
      stack0.add(dialog_ModalityType3);
      // Undeclared exception!
      try { 
        Dialog.ModalityType.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[4] = (-1);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<DefaultTableModel> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate1.or(predicate2);
      predicate6.and(predicate1);
      Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate7 = predicate4.or(predicate1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      predicate6.or(predicate5);
      Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate8 = predicate7.or(predicate6);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate9 = predicate3.or(predicate5);
      predicate9.and(predicate6);
      predicate9.or(predicate4);
      predicate8.and(predicate6);
      try { 
        MockURL.URL("\"", "mZ", (-1), "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: \"
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[4] = (-1);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<DefaultTableModel> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      predicate4.negate();
      Predicate<Object> predicate5 = predicate1.or(predicate2);
      predicate5.and(predicate1);
      Predicate.isEqual((Object) predicate5);
      predicate4.or(predicate1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = new AffineTransform();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-61);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[6] = (byte)31;
      byteArray0[7] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key1);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[4] = (-1);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Predicate<DefaultTableModel> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate1.or(predicate2);
      predicate6.and(predicate1);
      Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate7 = predicate4.or(predicate1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate8 = predicate7.or(predicate6);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate9 = predicate3.or(predicate5);
      predicate9.or(predicate4);
      predicate8.and(predicate6);
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getRef());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-3194));
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Integer integer3 = new Integer((-4220));
      Integer integer4 = JLayeredPane.DRAG_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer.divideUnsigned(7, (-1));
      Integer.remainderUnsigned(7, (-7));
      Integer.getInteger("org.apache.log4j.Level", 1042);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, (-390), (-4220));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -4220
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(523, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(523) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1157), (-1));
      List<VisualPageListItem> list0 = new ArrayList<VisualPageListItem>();
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(233, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-21), (double) (-21), (-2109.010681));
      affineTransform0.rotate((-4710.8));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2109.010681);
      doubleArray0[1] = (double) (-21);
      doubleArray0[2] = (double) (-21);
      doubleArray0[0] = 1530.0;
      doubleArray0[4] = (double) (-21);
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-2419.08F);
      floatArray0[1] = (float) (-21);
      floatArray0[2] = (float) (-21);
      floatArray0[3] = (float) (-21);
      floatArray0[4] = (float) (-21);
      floatArray0[5] = (float) (-21);
      floatArray0[6] = (float) (-21);
      floatArray0[7] = 1752.0F;
      floatArray0[8] = (float) (-21);
      affineTransform0.transform(floatArray0, (-21), doubleArray0, (-1456), (-1456));
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (-2419.08F));
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "YDv%{*KP");
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(2238, (-3588), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2238) > toIndex(-3588)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-21), (double) (-21), (-2109.010681));
      affineTransform0.rotate((-2109.010681));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2109.010681);
      doubleArray0[1] = (double) (-21);
      doubleArray0[2] = (double) (-21);
      affineTransform0.deltaTransform(doubleArray0, 110, doubleArray0, (-21), (-1660));
      doubleArray0[0] = 1530.0;
      doubleArray0[4] = (double) (-21);
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (-21);
      floatArray0[1] = (float) (-21);
      floatArray0[2] = (float) (-21);
      floatArray0[3] = (float) (-21);
      floatArray0[4] = (float) (-21);
      floatArray0[5] = (float) (-21);
      floatArray0[6] = (float) (-21);
      floatArray0[7] = (-21.0F);
      floatArray0[8] = (float) (-21);
      affineTransform0.transform(floatArray0, (-21), doubleArray0, (-1456), (-1456));
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (-21.0F));
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "?rNb\"EZ+|'54gF}4");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "YDv%{*KP");
      // Undeclared exception!
      try { 
        visualListModel0.subList(2238, (-3588), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2238) > toIndex(-3588)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(360, 360);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.log4j.Logger");
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 20, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "!<^AOrS");
      int int0 = 1;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      AffineTransform affineTransform1 = AffineTransform.getShearInstance((-21), (-2109.010681));
      affineTransform0.concatenate(affineTransform1);
      affineTransform0.setToRotation(116.24452067467341);
      double[] doubleArray0 = new double[5];
      affineTransform0.quadrantRotate((-462));
      doubleArray0[4] = (-2109.010681);
      doubleArray0[0] = (double) (-21);
      doubleArray0[0] = (double) (-462);
      affineTransform0.invert();
      affineTransform0.deltaTransform(doubleArray0, (-462), doubleArray0, (-21), (-1654));
      affineTransform0.shear((-462.0), (-2109.010681));
      doubleArray0[0] = 1511.1926290151;
      affineTransform0.isIdentity();
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      affineTransform0.setToRotation(17.301137803703362, 0.0, 543.1551343136199, (double) (-1654));
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (-1654);
      floatArray0[7] = (float) (-462);
      floatArray0[4] = (float) (-21);
      floatArray0[3] = (float) (-21);
      doubleArray0[3] = (double) (-21);
      floatArray0[5] = (float) (-462);
      floatArray0[3] = (-21.0F);
      affineTransform0.transform(floatArray0, (-21), doubleArray0, (-462), (-462));
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.573876991570355
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = (-664);
      intArray1[1] = 4;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      linkedHashSet0.retainAll(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.prependAllElements(linkedHashSet1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "!<^AOrS");
      visualListModel0.moveUpIndexes(intArray1);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-664), 11, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-664) and height (11) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      AffineTransform affineTransform1 = AffineTransform.getShearInstance((-21), (-2109.010681));
      affineTransform0.concatenate(affineTransform1);
      affineTransform0.setToQuadrantRotation((-21), (-2109.010681), 1.0);
      affineTransform0.setToRotation(116.24452067467341);
      double[] doubleArray0 = new double[5];
      affineTransform0.quadrantRotate((-462));
      doubleArray0[4] = (-2109.010681);
      doubleArray0[0] = (double) (-21);
      doubleArray0[0] = (double) (-462);
      affineTransform0.invert();
      affineTransform0.deltaTransform(doubleArray0, (-462), doubleArray0, (-21), (-1654));
      affineTransform0.shear((-462.0), (-2109.010681));
      affineTransform0.isIdentity();
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      affineTransform0.setToRotation((-1.0), 0.0, 543.1551343136199, (double) (-1654));
      affineTransform0.concatenate(affineTransform1);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (-1654);
      floatArray0[5] = (float) (-21);
      floatArray0[3] = (float) (-21);
      doubleArray0[3] = (double) (-21);
      floatArray0[3] = (-21.0F);
      affineTransform0.transform(floatArray0, (-21), doubleArray0, (-462), (-462));
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 256;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(256, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 256
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.rotate((-2109.010681));
      affineTransform0.setToRotation((double) (-21));
      AffineTransform affineTransform1 = AffineTransform.getShearInstance((-21), (-2109.010681));
      affineTransform0.concatenate(affineTransform1);
      affineTransform0.setToQuadrantRotation((-21), (-2109.010681), 1.0);
      affineTransform0.setToRotation(116.24452067467341);
      double[] doubleArray0 = new double[5];
      affineTransform0.quadrantRotate((-462));
      doubleArray0[4] = (-2109.010681);
      doubleArray0[0] = (double) (-462);
      affineTransform0.invert();
      affineTransform0.deltaTransform(doubleArray0, (-462), doubleArray0, (-21), (-1654));
      affineTransform0.shear((-462.0), (-2109.010681));
      affineTransform0.isIdentity();
      affineTransform0.transform(doubleArray0, (-21), doubleArray0, (-21), (-21));
      affineTransform0.setToRotation((-1.0), 0.0, 543.1551343136199, (double) (-1654));
      affineTransform0.concatenate(affineTransform1);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (-1654);
      floatArray0[5] = (float) (-21);
      floatArray0[3] = (float) (-21);
      doubleArray0[3] = (double) (-21);
      floatArray0[3] = (-21.0F);
      affineTransform0.transform(floatArray0, (-21), doubleArray0, (-462), (-462));
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-462), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.TOOLKIT_MODAL;
      Dialog.ModalityType dialog_ModalityType1 = Dialog.ModalityType.APPLICATION_MODAL;
      visualListModel0.getElementAt(1);
      stack0.add(dialog_ModalityType0);
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      EvoSuiteURL evoSuiteURL0 = null;
      String string0 = "";
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-4455));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack2 = new Stack<Dialog.ModalityType>();
      stack0.setSize(255);
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.DOCUMENT_MODAL;
      stack2.add(dialog_ModalityType0);
      Stack<Dialog.ModalityType> stack3 = new Stack<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType1 = Dialog.ModalityType.MODELESS;
      stack2.add(dialog_ModalityType1);
      Dialog.ModalityType dialog_ModalityType2 = Dialog.ModalityType.MODELESS;
      stack3.add(dialog_ModalityType2);
      int int0 = (-1111);
      Dialog.ModalityType dialog_ModalityType3 = Dialog.ModalityType.MODELESS;
      // Undeclared exception!
      try { 
        stack1.add(1, dialog_ModalityType3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(1);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Stack<Dialog.ModalityType> stack1 = new Stack<Dialog.ModalityType>();
      Stack<Dialog.ModalityType> stack2 = new Stack<Dialog.ModalityType>();
      // Undeclared exception!
      try { 
        stack0.setSize((-714));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.appendAllElements(treeSet0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      AffineTransform.getQuadrantRotateInstance(197, 1964.780010359442, (double) 50);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      byte[][] byteArrayArray0 = null;
      int int0 = 1098;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(1098, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      int int0 = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0, (-1.0), (-2109.010681));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int1 = 0;
      affineTransform0.setToShear((-1275.594), (-1.0));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, (-1776), byteArray0, 1000, false, 537);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-506);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-506));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
