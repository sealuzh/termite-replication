/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 02:26:57 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.firebirdsql.jdbc.field.FBCachedLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate0.test(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      predicate5.or(predicate2);
      Predicate<Object> predicate7 = predicate2.and(predicate1);
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate.isEqual((Object) predicate0);
      predicate0.negate();
      predicate5.negate();
      linkedList0.add((byte[][]) null);
      predicate3.negate();
      predicate8.negate();
      predicate0.negate();
      predicate6.negate();
      byte[][] byteArray1 = fBResultSet0.row;
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.relative(335544619);
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.setFetchSize(547);
      fBCachedFetcher1.first();
      fBCachedFetcher0.last();
      fBCachedFetcher1.absolute(335544619);
      fBCachedFetcher0.isLast();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      int int0 = fBCachedFetcher1.getFetchSize();
      assertEquals(547, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-40);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-40));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-851));
      Integer integer5 = new Integer((byte) (-40));
      Integer.compare(58, (int) integerArray0[0]);
      Integer integer6 = new Integer((int) integerArray0[2]);
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer.getInteger("", integer4);
      Integer.remainderUnsigned((-851), 3152);
      Integer.toUnsignedString((int) integerArray0[0]);
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      byte[][] byteArray1 = new byte[9][0];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-40);
      byteArray1[2] = byteArray2;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.offerFirst(byteArray1);
      Integer integer8 = new Integer((byte) (-40));
      Integer.remainderUnsigned((int) integer2, (byte) (-40));
      Integer.compare(63, (int) integerArray0[0]);
      Integer.max((int) integerArray0[1], 512);
      integerArray0[3] = integerArray0[2];
      Integer.compareUnsigned((-39), (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute(1);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.532388022542941
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate3.negate();
      predicate7.test(predicate0);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate3.and(predicate1);
      predicate9.or(predicate0);
      Predicate.isEqual((Object) predicate0);
      predicate6.or(predicate9);
      predicate6.negate();
      linkedList0.add((byte[][]) null);
      predicate4.negate();
      predicate1.negate();
      predicate0.negate();
      predicate8.negate();
      byte[][] byteArray1 = fBResultSet0.row;
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.relative(335544563);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      predicate0.negate();
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      predicate1.or(predicate0);
      linkedList0.add((byte[][]) null);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.offer("");
      linkedList1.remove();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.add("");
      linkedList2.add("");
      linkedList2.containsAll(linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((byte) (-1));
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5994533383297806
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.pollFirst();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.relative(400);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.getRowNum();
      int int1 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isFirst());
      assertEquals(2, int1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2014023220140038
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate5.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.test(predicate0);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      Predicate<Object> predicate11 = predicate3.and(predicate1);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("FcDY^C#6G9fTSY?yDd");
      predicate6.test(jMXPrincipal0);
      predicate11.or(predicate0);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate12 = predicate10.or(predicate11);
      predicate3.negate();
      Predicate<Object> predicate13 = predicate5.negate();
      predicate0.or(predicate13);
      Predicate<Object> predicate14 = predicate10.negate();
      predicate9.or(predicate14);
      Predicate<Object> predicate15 = predicate12.negate();
      predicate6.or(predicate11);
      predicate5.and(predicate3);
      Predicate.isEqual((Object) predicate0);
      predicate7.test(predicate11);
      predicate15.negate();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(19);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[][] byteArray0 = new byte[3][6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow(byteArray0);
      System.setCurrentTimeMillis((-1288L));
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.352641895713288
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][6];
      linkedList0.add(byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-40);
      byteArray1[1] = (byte)95;
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer(1678);
      Integer.divideUnsigned((byte) (-40), 887);
      Integer.remainderUnsigned(1816, 31);
      Integer.compareUnsigned(1816, (-642));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((byte) (-40));
      linkedList0.add(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Integer.compare(65, 503);
      Integer.max((int) integerArray0[1], (-492));
      integerArray0[3] = integer3;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4132130431348466
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.pollFirst();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.getRowNum();
      int int1 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.381685410025984
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[][] byteArray0 = new byte[3][6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray1 = new byte[7];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      byteArray1[0] = (byte) (-40);
      linkedList0.add(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "You cannot position to the row 0 with absolute() method.");
      byteArray1[1] = (byte)95;
      Integer.valueOf(1596);
      Integer.divideUnsigned((byte) (-40), 887);
      Integer integer0 = new Integer((byte) (-40));
      Integer.remainderUnsigned(4842127, (byte)95);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-1288L));
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6172528980064804
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      Predicate.isEqual((Object) linkedList0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("op_prepare_statement ");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jMXPrincipal0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      predicate2.or(predicate0);
      predicate2.and(predicate0);
      predicate0.negate();
      predicate0.negate();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      predicate2.test(predicate3);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.next();
      int int1 = fBCachedFetcher0.getRowNum();
      assertEquals(2, int1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-40);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-40));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-851));
      Integer integer5 = new Integer((byte) (-40));
      Integer.compare((byte) (-40), (int) integerArray0[0]);
      Integer integer6 = new Integer((int) integerArray0[0]);
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer integer8 = new Integer((int) integerArray0[0]);
      Integer integer9 = new Integer((int) integerArray0[2]);
      Integer.max(335544328, 1105);
      Integer.getInteger("You cannot position to the row 0 with absolute() method.", integer9);
      Integer.toUnsignedString((-2));
      Integer integer10 = new Integer(100);
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer11 = new Integer((byte) (-40));
      Integer integer12 = new Integer(100);
      Integer integer13 = new Integer((-2));
      Integer.max((int) integerArray0[1], 0);
      integerArray0[3] = integerArray0[2];
      Integer.compareUnsigned((-39), (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-40);
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-40));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer.max((int) integerArray0[2], (int) integerArray0[2]);
      Integer.getInteger(",smo*]uJa2arX[i,mv}");
      Integer integer4 = new Integer((byte) (-40));
      Integer.compare((int) integerArray0[0], (int) integer2);
      Integer integer5 = new Integer((int) integerArray0[0]);
      Integer integer6 = new Integer((int) integerArray0[0]);
      Integer.getInteger(",smo*]uJa2arX[i,mv}", (Integer) null);
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer.toUnsignedString((int) integerArray0[2]);
      Integer integer8 = new Integer((int) integerArray0[1]);
      Integer integer9 = new Integer((-851));
      Integer integer10 = Integer.getInteger(",smo*]uJa2arX[i,mv}", integer8);
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer11 = new Integer((byte) (-40));
      Integer.remainderUnsigned((int) integer2, (byte) (-40));
      Integer.compare((-1), (int) integerArray0[0]);
      Integer.max((int) integerArray0[1], 0);
      integerArray0[3] = integer10;
      Integer.compareUnsigned((int) integerArray0[1], (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5225826796336355
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isLast();
      byte[][] byteArray0 = new byte[3][6];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)7;
      byteArray1[1] = (byte)114;
      byteArray1[2] = (byte)122;
      byteArray1[3] = (byte)113;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)114;
      byteArray2[1] = (byte)114;
      byteArray2[2] = (byte)114;
      byteArray2[3] = (byte)7;
      byteArray2[4] = (byte)122;
      byteArray2[5] = (byte)122;
      byteArray2[6] = (byte)53;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)7;
      byteArray3[1] = (byte)53;
      byteArray3[2] = (byte)114;
      byteArray3[3] = (byte)122;
      byteArray3[4] = (byte)122;
      byteArray3[5] = (byte)53;
      byteArray3[6] = (byte)114;
      byteArray3[7] = (byte)19;
      byteArray0[2] = byteArray3;
      fBCachedFetcher0.updateRow(byteArray0);
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Integer integer0 = new Integer(444);
      Integer.remainderUnsigned((-1221), 400);
      Integer integer1 = new Integer((-1221));
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate2.or(predicate3);
      Predicate<Object> predicate6 = predicate5.or(predicate1);
      Predicate<Object> predicate7 = predicate3.negate();
      Predicate<Object> predicate8 = predicate3.negate();
      predicate8.test(predicate0);
      Predicate<Object> predicate9 = predicate8.or(predicate6);
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      Predicate<Object> predicate11 = predicate3.and(predicate1);
      Predicate<Object> predicate12 = predicate10.or(predicate11);
      linkedList0.add((byte[][]) null);
      Predicate<Object> predicate13 = predicate10.negate();
      Predicate<Object> predicate14 = predicate9.or(predicate13);
      Predicate<Object> predicate15 = predicate3.negate();
      Predicate<Object> predicate16 = predicate15.or(predicate4);
      predicate2.or(predicate16);
      Integer integer2 = new Integer(1757);
      Predicate.isEqual((Object) predicate5);
      predicate7.or(predicate14);
      Predicate.isEqual((Object) predicate3);
      predicate14.or(predicate10);
      predicate12.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("F)O!");
      linkedList3.removeFirstOccurrence("F)O!");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList4.add("F)O!");
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      linkedList2.sort((Comparator<? super byte[][]>) null);
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList11 = new LinkedList<byte[][]>();
      linkedList6.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate5.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.test(predicate0);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      Predicate<Object> predicate11 = predicate3.and(predicate1);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("FcDY^C#6G9fTSY?yDd");
      predicate6.test(jMXPrincipal0);
      predicate11.or(predicate0);
      Predicate.isEqual((Object) predicate0);
      predicate10.or(predicate11);
      predicate6.negate();
      Predicate<Object> predicate12 = predicate5.negate();
      predicate0.or(predicate12);
      Predicate<Object> predicate13 = predicate10.negate();
      predicate9.or(predicate13);
      predicate8.negate();
      predicate6.or(predicate11);
      predicate5.and(predicate3);
      predicate5.negate();
      Predicate.isEqual((Object) predicate0);
      predicate7.test(predicate11);
      predicate1.negate();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate5.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.test(predicate0);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      Predicate<Object> predicate11 = predicate3.and(predicate1);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("FcDY^C#6G9fTSY?yDd");
      predicate6.test(jMXPrincipal0);
      predicate11.or(predicate0);
      Predicate.isEqual((Object) predicate0);
      predicate10.or(predicate11);
      predicate6.negate();
      Predicate<Object> predicate12 = predicate10.negate();
      predicate9.or(predicate12);
      Predicate<Object> predicate13 = predicate8.negate();
      predicate6.or(predicate11);
      predicate5.and(predicate3);
      predicate5.negate();
      Predicate.isEqual((Object) predicate0);
      predicate7.test(predicate11);
      predicate13.negate();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0074660137197986
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("FcDY^C#6G9fTSY?yDd");
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(335544565);
      System.setCurrentTimeMillis(116L);
      boolean boolean0 = fBCachedFetcher0.absolute(147);
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-78);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-78));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-78));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integerArray0[1];
      Integer.max((int) integerArray0[1], (int) integerArray0[1]);
      Integer integer4 = new Integer((-78));
      Integer integer5 = new Integer((byte) (-78));
      byte[][] byteArray1 = new byte[6][6];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      linkedList0.add(byteArray1);
      Integer integer6 = Integer.valueOf((int) integerArray0[0]);
      Integer integer7 = new Integer((int) integer6);
      Integer integer8 = new Integer((int) integer6);
      Integer integer9 = new Integer((int) integer6);
      Integer integer10 = new Integer((int) integer6);
      Integer integer11 = new Integer((-785));
      Integer.toUnsignedString((int) integer6);
      Integer.toUnsignedString(21);
      Integer integer12 = new Integer((-785));
      Integer.remainderUnsigned((int) integer6, (int) integer6);
      Integer integer13 = new Integer((byte) (-78));
      Integer integer14 = new Integer((int) integer6);
      Integer integer15 = new Integer((int) integer6);
      Integer.compareUnsigned((int) integer6, (byte) (-78));
      Integer.max((int) integer6, (int) integer6);
      integerArray0[3] = integer6;
      Integer.compareUnsigned((int) integer6, (int) integer6);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((int) integer6);
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(322L);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      IscDbHandle iscDbHandle0 = javaGDSImpl0.createIscDbHandle();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, iscDbHandle0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 335544619, 335544619, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[18];
      byteArray0[2] = (byte)0;
      Integer.valueOf((int) (byte)0);
      Integer integer0 = new Integer(25165824);
      linkedList0.clear();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.setUpdateCount((-1037));
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      linkedList3.removeFirstOccurrence((Object) null);
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList5.add("^n/tPp");
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zBj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<String> linkedList11 = new LinkedList<String>();
      linkedList7.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList6.offer((byte[][]) null);
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      LinkedList<byte[][]> linkedList15 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList12, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.poll();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[6];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList2.toArray(fBBlobFieldArray0);
      byte[][] byteArray0 = new byte[9][8];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)51;
      byteArray1[1] = (byte)97;
      byteArray1[2] = (byte)31;
      byteArray1[3] = (byte)34;
      byteArray1[4] = (byte) (-44);
      byteArray1[5] = (byte) (-13);
      byteArray1[6] = (byte)1;
      byteArray1[7] = (byte)85;
      byteArray1[8] = (byte)5;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[1] = (byte) (-13);
      byteArray2[2] = (byte) (-89);
      byteArray2[3] = (byte)51;
      byteArray2[4] = (byte)97;
      byteArray2[5] = (byte) (-44);
      byteArray2[6] = (byte)1;
      byteArray2[7] = (byte)1;
      byteArray2[8] = (byte) (-44);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)1;
      byteArray3[1] = (byte)5;
      byteArray3[2] = (byte)34;
      byteArray3[3] = (byte) (-44);
      byteArray3[4] = (byte) (-89);
      byteArray3[5] = (byte)34;
      byteArray3[6] = (byte)31;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-13);
      byteArray4[1] = (byte)85;
      byteArray4[2] = (byte)5;
      byteArray4[3] = (byte)85;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)27;
      byteArray5[1] = (byte) (-13);
      byteArray5[2] = (byte) (-13);
      byteArray5[3] = (byte)31;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-44);
      byteArray6[1] = (byte)34;
      byteArray6[2] = (byte)34;
      byteArray6[3] = (byte)99;
      byteArray6[4] = (byte) (-89);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)34;
      byteArray7[1] = (byte)1;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[7];
      byteArray8[0] = (byte)1;
      byteArray8[1] = (byte)22;
      byteArray8[2] = (byte)5;
      byteArray8[3] = (byte)27;
      byteArray8[4] = (byte)99;
      byteArray8[5] = (byte)99;
      byteArray8[6] = (byte)5;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[1];
      byteArray9[0] = (byte)22;
      byteArray0[8] = byteArray9;
      linkedList1.add(byteArray0);
      linkedList2.removeFirstOccurrence((Object) null);
      LinkedList<String> linkedList3 = new LinkedList<String>();
      byte[][] byteArray10 = new byte[8][1];
      byte[] byteArray11 = new byte[9];
      byteArray11[3] = (byte) (-59);
      byteArray11[2] = (byte)3;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray11[3] = (byte)3;
      byteArray11[4] = (byte)0;
      byteArray11[5] = (byte) (-59);
      byteArray11[7] = (byte)3;
      byteArray10[2] = byteArray11;
      byte[] byteArray12 = new byte[5];
      byteArray12[0] = (byte)3;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.updateRow(byteArray10);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      assertNotSame(databaseParameterBuffer0, databaseParameterBufferImp0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte) (-73);
      byteArray0[4] = (byte)94;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte) (-93);
      byteArray1[2] = (byte) (-93);
      byteArray1[3] = (byte) (-93);
      byteArray1[4] = (byte) (-93);
      byteArray1[5] = (byte)67;
      byteArray1[6] = (byte) (-93);
      byteArray1[7] = (byte)127;
      byteArray1[8] = (byte) (-43);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList1.add((byte[][]) null);
      linkedList1.removeLast();
      fBCachedFetcher0.setFetchSize((-2354));
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals((-2354), int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2843716191528456
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("org.firebirdsql.jdbc.FBCachedFetcher$1");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate.isEqual((Object) delayQueue0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate1);
      Predicate<Object> predicate5 = predicate2.or(predicate3);
      Predicate<Object> predicate6 = predicate2.or(predicate5);
      predicate6.or(predicate0);
      Predicate.isEqual((Object) predicate4);
      Object object0 = new Object();
      predicate5.test(object0);
      Predicate<Object> predicate7 = predicate6.and(predicate5);
      Predicate<Object> predicate8 = predicate4.negate();
      predicate7.and(predicate8);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][6];
      byte[] byteArray1 = new byte[3];
      linkedList0.add(byteArray0);
      byteArray1[2] = (byte)0;
      byteArray0[0] = byteArray1;
      Integer.valueOf(1005);
      linkedList0.toArray();
      linkedList0.add(byteArray0);
      linkedList0.toArray();
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isBeforeFirst();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jMXPrincipal0);
      Predicate.isEqual((Object) "(,\"And>@");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate.isEqual((Object) byteArray1);
      Predicate<Object> predicate4 = predicate3.and(predicate0);
      predicate3.or(predicate0);
      predicate4.negate();
      Predicate<FBBlobField> predicate5 = Predicate.isEqual((Object) predicate3);
      assertNotNull(predicate5);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      linkedList3.removeFirstOccurrence("^Wltz,(`.zmf37ih,");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList5.add("^Wltz,(`.zmf37ih,");
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList11 = new LinkedList<byte[][]>();
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      linkedList0.clone();
      linkedList13.add((byte[][]) null);
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList15 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("pi!$&g(o!<cts3!");
      linkedList3.removeFirstOccurrence("pi!$&g(o!<cts3!");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      linkedList2.sort((Comparator<? super byte[][]>) null);
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList11 = new LinkedList<byte[][]>();
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-40);
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-40));
      Integer integer3 = new Integer((byte)0);
      byte[][] byteArray1 = new byte[6][3];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      linkedList0.add(byteArray1);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-851));
      Integer integer5 = new Integer((byte) (-40));
      Integer.compare(58, (int) integerArray0[0]);
      Integer integer6 = new Integer((int) integerArray0[0]);
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer.getInteger("", integer4);
      Integer integer8 = new Integer((int) integerArray0[0]);
      Integer.toUnsignedString((int) integerArray0[2]);
      Integer integer9 = new Integer(3152);
      Integer.getInteger("", integer9);
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer10 = new Integer((byte) (-40));
      Integer.remainderUnsigned((int) integer2, (byte) (-40));
      Integer.compare(63, (int) integerArray0[0]);
      Integer.max((int) integerArray0[1], 1);
      integerArray0[3] = integerArray0[2];
      Integer.compareUnsigned((-39), (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("F)O!");
      linkedList3.removeFirstOccurrence("F)O!");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList4.add("F)O!");
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList4.add("F)O!");
      linkedList5.containsAll(linkedList6);
      LinkedList<byte[][]> linkedList9 = new LinkedList<byte[][]>();
      Integer.max((-771), 2376);
      Integer.compareUnsigned(2376, (-688));
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-39));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte)61;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)74;
      byteArray1[4] = (byte)108;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte)108;
      byteArray2[2] = (byte)61;
      byteArray2[3] = (byte) (-128);
      byteArray2[4] = (byte)61;
      byteArray2[5] = (byte) (-128);
      byteArray2[6] = (byte) (-128);
      byteArray2[7] = (byte)108;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)74;
      byteArray3[1] = (byte) (-128);
      byteArray3[3] = (byte)1;
      byteArray3[4] = (byte)108;
      byteArray3[5] = (byte)61;
      byteArray3[6] = (byte)74;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)74;
      byteArray4[1] = (byte) (-128);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte)108;
      byteArray7[1] = (byte) (-52);
      byteArray7[2] = (byte)61;
      byteArray7[3] = (byte)61;
      byteArray7[4] = (byte)1;
      byteArray7[5] = (byte)1;
      byteArray7[6] = (byte)1;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[3];
      byteArray8[0] = (byte) (-128);
      byteArray8[1] = (byte)61;
      byteArray8[2] = (byte)108;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte) (-68);
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-78);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer((byte) (-78));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-78));
      Integer integer3 = new Integer((byte)0);
      Integer.sum((int) integerArray0[0], (byte) (-78));
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-869));
      Integer integer5 = new Integer((byte) (-78));
      Integer integer6 = Integer.valueOf((int) integerArray0[0]);
      Integer integer7 = new Integer((int) integer6);
      Integer integer8 = new Integer((int) integer6);
      Integer integer9 = new Integer((int) integer6);
      Integer integer10 = new Integer((int) integer6);
      Integer integer11 = new Integer((int) integer6);
      Integer.toUnsignedString((int) integer6);
      Integer.toUnsignedString((-2));
      Integer integer12 = new Integer((-869));
      Integer.remainderUnsigned((int) integer6, (int) integer6);
      Integer.toUnsignedString((int) integer6);
      Integer integer13 = new Integer((byte) (-78));
      Integer.compareUnsigned(0, (-869));
      Integer integer14 = new Integer((-869));
      Integer integer15 = new Integer((-869));
      Integer.compareUnsigned((int) integer6, (-869));
      Integer.max((int) integer6, (int) integer6);
      Integer.remainderUnsigned((int) integer6, (-1));
      integerArray0[3] = integer6;
      Integer.compareUnsigned((int) integer6, (int) integer6);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl2.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.registerStatementWithTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.getDbHandle();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.getDbHandle();
      isc_tr_handle_impl0.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl0.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl1.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl3.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      isc_stmt_handle_impl2.unregisterTransaction();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_tr_handle_impl isc_tr_handle_impl7 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl8 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.registerStatementWithTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl9 = new isc_tr_handle_impl();
      isc_tr_handle_impl8.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl4 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("F)O!");
      linkedList3.removeFirstOccurrence("F)O!");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList4.add("F)O!");
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      linkedList2.sort((Comparator<? super byte[][]>) null);
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList11 = new LinkedList<byte[][]>();
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate3);
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.test(predicate0);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      Predicate<Object> predicate11 = predicate3.and(predicate1);
      predicate11.or(predicate0);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate12 = predicate10.or(predicate11);
      Predicate<Object> predicate13 = predicate6.negate();
      Predicate<Object> predicate14 = predicate10.negate();
      Predicate<Object> predicate15 = predicate9.or(predicate14);
      predicate6.negate();
      Predicate<Object> predicate16 = predicate6.or(predicate11);
      predicate16.negate();
      Predicate.isEqual((Object) predicate0);
      predicate4.and(predicate1);
      predicate0.negate();
      Predicate.isEqual((Object) "nq8/,{MP,ffsL+");
      predicate8.negate();
      Predicate.isEqual((Object) predicate4);
      predicate15.or(predicate12);
      Predicate.isEqual((Object) predicate8);
      predicate8.or(predicate13);
      predicate14.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byte[][] byteArray1 = new byte[4][4];
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-40);
      byteArray2[1] = (byte)114;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte) (-40);
      byteArray1[1] = byteArray2;
      byteArray1[3] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[0] = (byte)0;
      byte[] byteArray3 = new byte[4];
      byteArray3[2] = (byte)0;
      linkedList0.addFirst(byteArray1);
      linkedList0.toArray();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.poll();
      linkedList1.add((String) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      linkedList3.replaceAll(unaryOperator0);
      linkedList3.poll();
      linkedList3.add((String) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("pi!$&g(o!<cts3!");
      linkedList3.removeFirstOccurrence("pi!$&g(o!<cts3!");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList4.add("pi!$&g(o!<cts3!");
      linkedList6.add((byte[][]) null);
      linkedList6.add((byte[][]) null);
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList6.pop();
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<byte[][]> linkedList11 = new LinkedList<byte[][]>();
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("F)O!");
      linkedList3.removeFirstOccurrence("F)O!");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList4.add("F)O!");
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      linkedList2.sort((Comparator<? super byte[][]>) null);
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<byte[][]> linkedList11 = new LinkedList<byte[][]>();
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList6, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceRequestBuffer(1);
      javaGDSImpl0.getType();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][5];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-77);
      byteArray1[1] = (byte)62;
      byteArray1[2] = (byte) (-12);
      byteArray1[3] = (byte)13;
      byteArray1[4] = (byte) (-82);
      byteArray1[5] = (byte)1;
      byteArray1[6] = (byte)43;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)13;
      byteArray2[1] = (byte)43;
      byteArray2[2] = (byte) (-82);
      byteArray2[3] = (byte) (-82);
      byteArray2[4] = (byte)13;
      byteArray2[5] = (byte)43;
      byteArray2[6] = (byte)43;
      byteArray2[7] = (byte)1;
      byteArray2[8] = (byte) (-82);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-82);
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-123);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-77);
      byteArray4[1] = (byte) (-77);
      byteArray4[2] = (byte) (-77);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte) (-82);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte) (-77);
      byteArray6[1] = (byte) (-12);
      byteArray6[2] = (byte) (-123);
      byteArray6[3] = (byte)62;
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-100);
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = Integer.valueOf((int) (byte) (-100));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integer0);
      integerArray0[1] = integer0;
      Integer integer2 = Integer.getInteger("R3NKO", (int) (byte)123);
      Integer integer3 = Integer.getInteger("R3NKO", (int) (byte)123);
      Integer integer4 = new Integer((byte)123);
      Integer.compareUnsigned(400, 59);
      Integer integer5 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer6 = new Integer((byte)123);
      Integer.divideUnsigned((byte) (-100), 2004);
      Integer integer7 = new Integer((int) integer2);
      Integer.sum((int) integer0, 2004);
      Integer.remainderUnsigned((-140), (byte) (-100));
      Integer.remainderUnsigned((int) integer3, (byte) (-100));
      Integer.compare((int) integer0, (int) integer0);
      Integer integer8 = new Integer((byte) (-100));
      integerArray0[3] = integer4;
      Integer.compareUnsigned((int) integer0, (int) integer2);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Integer integer9 = new Integer((int) integer2);
      Integer.min(0, (int) integer2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray1 = new byte[4][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      linkedList3.removeFirstOccurrence((Object) null);
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList5.add("^n/tPp");
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zBj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<String> linkedList11 = new LinkedList<String>();
      linkedList7.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList6.offer((byte[][]) null);
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      LinkedList<byte[][]> linkedList15 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList14, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertEquals(0, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-40);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-40));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-851));
      Integer integer5 = Integer.valueOf((int) (byte) (-40));
      Integer.compare((byte) (-40), (int) integer5);
      Integer integer6 = new Integer((int) integer5);
      Integer integer7 = new Integer((int) integer5);
      Integer integer8 = new Integer((int) integer5);
      Integer integer9 = new Integer((int) integer5);
      Integer.max(335544328, 1105);
      Integer.getInteger("You cannot position to the row 0 with absolute() method.", integer9);
      Integer.toUnsignedString((-2));
      Integer integer10 = new Integer(100);
      Integer.remainderUnsigned((int) integer5, (int) integer5);
      Integer integer11 = new Integer((byte) (-40));
      Integer integer12 = new Integer(100);
      Integer integer13 = new Integer((-2));
      Integer.max((int) integer5, 0);
      integerArray0[3] = integer5;
      Integer.compareUnsigned((-38), (int) integer5);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      javaGDSImpl0.createIscDbHandle();
      isc_tr_handle_impl0.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_db_handle_impl1.setResp_object(6);
      isc_tr_handle_impl1.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      isc_db_handle_impl1.clearWarnings();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl2.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl0.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl7 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl8 = new isc_tr_handle_impl();
      isc_tr_handle_impl7.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl4 = new isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      javaGDSImpl1.getType();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.getType();
      javaGDSImpl0.getType();
      GDSType.getType("PURE_JAVA");
      GDSType.getType("PURE_JAVA");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.getDbHandle();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      javaGDSImpl1.getType();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.954483383068116
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.getDbHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl2.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.registerStatementWithTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.getDbHandle();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.getDbHandle();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      isc_tr_handle_impl0.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl0.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl1.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl3.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_tr_handle_impl3.registerStatementWithTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl7 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl8 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.registerStatementWithTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl9 = new isc_tr_handle_impl();
      isc_tr_handle_impl8.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-7);
      byteArray1[1] = (byte) (-93);
      byteArray1[2] = (byte)42;
      byteArray1[3] = (byte) (-2);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte) (-53);
      byteArray1[6] = (byte) (-67);
      byteArray1[7] = (byte)58;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0069724918931833
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte)61;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)74;
      byteArray1[4] = (byte)108;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte)108;
      byteArray2[2] = (byte)61;
      byteArray2[3] = (byte) (-128);
      byteArray2[4] = (byte)61;
      byteArray2[5] = (byte) (-128);
      byteArray2[7] = (byte)108;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)74;
      byteArray3[1] = (byte) (-128);
      byteArray3[3] = (byte)1;
      byteArray3[4] = (byte)108;
      byteArray3[5] = (byte)61;
      byteArray3[6] = (byte)74;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)74;
      byteArray4[1] = (byte) (-128);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[2] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte)108;
      byteArray7[1] = (byte) (-52);
      byteArray7[2] = (byte)61;
      byteArray7[3] = (byte)61;
      byteArray7[4] = (byte)1;
      byteArray7[5] = (byte)1;
      byteArray7[6] = (byte)1;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[3];
      byteArray8[0] = (byte) (-128);
      byteArray8[1] = (byte)61;
      byteArray8[2] = (byte)108;
      byteArray0[7] = byteArray8;
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.toArray();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-78);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-78));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-78));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-869));
      Integer integer5 = new Integer((byte) (-78));
      Integer integer6 = new Integer((byte) (-78));
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer integer8 = new Integer((int) integerArray0[0]);
      Integer integer9 = new Integer((int) integerArray0[0]);
      Integer integer10 = new Integer((int) integerArray0[2]);
      Integer integer11 = new Integer(100);
      Integer.toUnsignedString((int) integerArray0[1]);
      Integer.toUnsignedString((-2));
      Integer integer12 = new Integer(100);
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer13 = new Integer((byte) (-78));
      Integer.compareUnsigned(0, (-833));
      Integer integer14 = new Integer(100);
      Integer integer15 = new Integer((-2));
      Integer.compareUnsigned((int) integerArray0[0], (-869));
      Integer.max((int) integerArray0[1], (int) integer6);
      integerArray0[3] = integerArray0[2];
      Integer.compareUnsigned((int) integerArray0[2], (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-78);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-78));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-78));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-869));
      Integer integer5 = new Integer((byte) (-78));
      Integer integer6 = Integer.valueOf((int) integerArray0[0]);
      Integer integer7 = new Integer((int) integer6);
      Integer integer8 = new Integer((int) integer6);
      Integer integer9 = new Integer((int) integer6);
      Integer integer10 = new Integer((int) integer6);
      Integer integer11 = new Integer(100);
      Integer.toUnsignedString((int) integer6);
      Integer.toUnsignedString((-2));
      Integer integer12 = new Integer(100);
      Integer.remainderUnsigned((int) integer6, (int) integer6);
      Integer integer13 = new Integer((byte) (-78));
      Integer.compareUnsigned(0, (-833));
      Integer integer14 = new Integer(100);
      Integer integer15 = new Integer((-869));
      Integer.compareUnsigned((int) integer6, (-869));
      Integer.max((int) integer6, (int) integer6);
      integerArray0[3] = integer6;
      Integer.compareUnsigned((int) integer6, (int) integer6);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      linkedList3.removeFirstOccurrence((Object) null);
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList5.add("^n/tPp");
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.addFirst("zBj");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList7.containsAll(linkedList5);
      LinkedList<String> linkedList11 = new LinkedList<String>();
      linkedList7.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList6.offer((byte[][]) null);
      linkedList12.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      LinkedList<byte[][]> linkedList15 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList14, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.poll();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[6];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList2.toArray(fBBlobFieldArray0);
      linkedList2.removeFirstOccurrence((Object) null);
      LinkedList<String> linkedList3 = new LinkedList<String>();
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[3] = (byte) (-59);
      byteArray1[2] = (byte)3;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray1[3] = (byte)3;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte) (-59);
      byteArray1[0] = (byte) (-59);
      byteArray1[7] = (byte)3;
      byteArray0[1] = byteArray1;
      byteArray0[2] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)3;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-40);
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)95;
      byteArray1[2] = (byte)0;
      linkedList0.toArray();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.toArray();
      linkedList1.forEach(consumer0);
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList4.add("org.firebirdsql.jdbc.field.FBNullField");
      linkedList4.add((String) null);
      linkedList4.containsAll(linkedList0);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      byte[][] byteArray2 = new byte[0][4];
      linkedList5.removeAll(linkedList6);
      linkedList6.add(byteArray2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList5, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.poll();
      linkedList3.add((String) null);
      linkedList3.removeFirstOccurrence("<nXtPp");
      linkedList3.add((String) null);
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.clear();
      linkedList3.containsAll(linkedList3);
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      linkedList6.add((byte[][]) null);
      linkedList4.removeFirst();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList5.addFirst((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList5.add("<nXtPp");
      linkedList3.removeFirst();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList9.add((String) null);
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList8.addFirst((String) null);
      LinkedList<String> linkedList11 = new LinkedList<String>();
      linkedList11.containsAll(linkedList9);
      LinkedList<byte[][]> linkedList12 = new LinkedList<byte[][]>();
      linkedList0.offer((byte[][]) null);
      linkedList6.add((byte[][]) null);
      LinkedList<byte[][]> linkedList13 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList14 = new LinkedList<byte[][]>();
      linkedList6.add((byte[][]) null);
      LinkedList<byte[][]> linkedList15 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList15, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-78);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-78));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((byte) (-78));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-851));
      Integer integer5 = new Integer((byte) (-78));
      Integer integer6 = new Integer((byte) (-78));
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer integer8 = new Integer((int) integerArray0[0]);
      Integer integer9 = new Integer((int) integerArray0[0]);
      Integer integer10 = new Integer((int) integerArray0[2]);
      Integer integer11 = new Integer(100);
      Integer.toUnsignedString((-2));
      Integer integer12 = new Integer(100);
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer13 = new Integer((byte) (-78));
      Integer.compareUnsigned(0, (-833));
      Integer integer14 = new Integer(100);
      Integer integer15 = new Integer((-2));
      Integer.compareUnsigned((int) integerArray0[0], (-851));
      Integer.max((int) integerArray0[1], (int) integer6);
      integerArray0[3] = integerArray0[2];
      Integer.compareUnsigned((int) integerArray0[2], (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((-851));
      assertFalse(boolean0);
      assertEquals(0, fBResultSet0.getRow());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate3);
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.test(predicate0);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      Predicate<Object> predicate11 = predicate3.and(predicate1);
      predicate11.or(predicate0);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate12 = predicate10.or(predicate11);
      predicate6.negate();
      Predicate<Object> predicate13 = predicate10.negate();
      Predicate<Object> predicate14 = predicate9.or(predicate13);
      Predicate<Object> predicate15 = predicate8.negate();
      Predicate<Object> predicate16 = predicate6.or(predicate11);
      predicate16.negate();
      Predicate.isEqual((Object) predicate0);
      predicate7.test(predicate11);
      predicate15.negate();
      predicate13.negate();
      Predicate.isEqual((Object) "nq8/,{MP,ffsL+");
      predicate1.or(predicate3);
      Predicate.isEqual((Object) predicate4);
      predicate14.or(predicate12);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(62);
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-40);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((byte) (-40));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@>qL%ge@'t+A>S#+g8");
      Integer integer2 = new Integer((byte) (-40));
      Integer integer3 = new Integer((byte)0);
      integerArray0[2] = integer2;
      Integer integer4 = new Integer((-851));
      Integer integer5 = new Integer((byte) (-40));
      Integer.getInteger("", integer5);
      Integer integer6 = new Integer((int) integerArray0[0]);
      Integer.getInteger("", integer4);
      Integer.remainderUnsigned((-851), 3152);
      Integer.max((byte) (-40), (-851));
      Integer.remainderUnsigned((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer7 = new Integer((byte) (-40));
      Integer.remainderUnsigned((int) integer2, (byte) (-40));
      Integer.compare(65, (int) integerArray0[0]);
      Integer.max((int) integerArray0[1], (-465));
      integerArray0[3] = integerArray0[2];
      Integer.compareUnsigned((-39), (int) integerArray0[2]);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute(1);
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[3];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[0] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[2] = fBCachedLongVarCharField0;
      linkedList0.toArray(fBCachedLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isEmpty());
      
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }
}
