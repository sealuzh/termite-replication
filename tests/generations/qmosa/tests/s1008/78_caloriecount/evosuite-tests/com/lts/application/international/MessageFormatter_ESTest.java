/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 01:33:40 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("G", "", "Zx>N!9{vA*)>", 533);
      messageFormatter0.getMessage("resources.messages.standard", (Object[]) stackTraceElementArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = null;
      String string1 = "$FtB`o_Kz=yFG:M";
      int int0 = 256;
      StackTraceElement stackTraceElement1 = new StackTraceElement("$FtB`o_Kz=yFG:M", "_7=8y?!TVY<-%Vi|m", "9_", 256);
      String string2 = ":~im+~3lB[Kks.X)z";
      try { 
        messageFormatter0.formatMessage(":~im+~3lB[Kks.X)z", stackTraceElementArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "Zx>N!9{vA*)>";
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      String string1 = "";
      StackTraceElement stackTraceElement0 = new StackTraceElement("Zx>N!9{vA*)>", "", "Zx>N!9{vA*)>", 523);
      String string2 = "9_";
      StackTraceElement stackTraceElement1 = new StackTraceElement("$FtB`o_Kz=yFG:M", "_7=8y?!T&0<-%Vi|m", "9_", 256);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ApplicationException applicationException0 = new ApplicationException("9_");
      sequenceInputStream0.close();
      PropertyResourceBundle propertyResourceBundle1 = new PropertyResourceBundle(sequenceInputStream0);
      String string3 = MessageFormatter.DEFAULT_BUNDLE;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("The application encountered a critical error and must now terminate.", "/~^D[jT&X_");
      messageFormatter0.myLastException = (Throwable) applicationException0;
      ApplicationException applicationException1 = (ApplicationException)messageFormatter0.getLastException();
      assertEquals("The application encountered a critical error and must now terminate.", applicationException1.getKey());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      stringReader0.skip(1L);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("Zx>N!9{vA*)>", "", "Zx>N!9{vA*)>", 523);
      StackTraceElement stackTraceElement1 = new StackTraceElement("$FtB`o_Kz=yFG:M", "_7=8y?!T&0<-%Vi|m", "9_", 256);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.markSupported();
      ApplicationException applicationException0 = new ApplicationException("9_");
      sequenceInputStream0.close();
      PropertyResourceBundle propertyResourceBundle1 = new PropertyResourceBundle(sequenceInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) "Error initializing tree", (Object) null, (Object) propertyResourceBundle1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      String string0 = "Error initializing tree";
      StackTraceElement stackTraceElement0 = new StackTraceElement("Zx>N!9{vA*)>", "", "Zx>N!9{vA*)>", 533);
      String string1 = "9_";
      String string2 = null;
      StackTraceElement stackTraceElement1 = new StackTraceElement("$FtB`o_Kz=yFG:M", "_7=8y?!TVY<-%Vi|m", "9_", 256);
      messageFormatter0.formatMessage("resources.messages.standard", stackTraceElementArray0);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        Locale.filterTags((List<Locale.LanguageRange>) null, (Collection<String>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-99);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/bdbId'@mZo!&");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StackTraceElement stackTraceElement0 = new StackTraceElement("Error initializing tree", "g", "G", 533);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StackTraceElement stackTraceElement1 = new StackTraceElement("9_", "", (String) null, 5);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "G";
      objectArray0[1] = (Object) stringReader0;
      objectArray0[2] = (Object) "Error initializing tree";
      objectArray0[3] = (Object) stringReader0;
      objectArray0[4] = (Object) null;
      messageFormatter0.getMessage("resources.messages.standard");
      String string0 = messageFormatter0.formatMessage("com.lts.application.international.MessageFormatter", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("up,;7CeQPuMdW4F_{gkL");
      MockPrintStream mockPrintStream1 = new MockPrintStream("up,;7CeQPuMdW4F_{gkL");
      mockPrintStream0.print((double) 0.0F);
      mockPrintStream1.append((CharSequence) "up,;7CeQPuMdW4F_{gkL");
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream1);
      mockPrintStream2.println('\u0081');
      mockPrintStream2.print(0.0F);
      mockPrintStream0.println('\u0081');
      mockPrintStream2.print((double) 0.0F);
      MockPrintStream mockPrintStream3 = new MockPrintStream(mockPrintStream1);
      MockPrintStream mockPrintStream4 = new MockPrintStream(mockPrintStream3);
      mockPrintStream1.println('\u008D');
      MockPrintStream mockPrintStream5 = new MockPrintStream(mockPrintStream4, true);
      MockPrintStream mockPrintStream6 = new MockPrintStream(mockPrintStream4);
      MockPrintStream mockPrintStream7 = new MockPrintStream(mockPrintStream1);
      MockPrintStream mockPrintStream8 = new MockPrintStream(mockPrintStream1);
      MockPrintStream mockPrintStream9 = new MockPrintStream(mockPrintStream1);
      StringReader stringReader0 = new StringReader("up,;7CeQPuMdW4F_{gkL");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      mockPrintStream4.println((Object) propertyResourceBundle0);
      MockPrintStream mockPrintStream10 = new MockPrintStream(mockPrintStream5, true);
      mockPrintStream10.flush();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.formatMessage("up,;7CeQPuMdW4F_{gkL", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "PJVJ8]/I!\\>SJrNcba";
      StringReader stringReader0 = new StringReader("PJVJ8]/I!>SJrNcba");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      propertyResourceBundle0.containsKey("PJVJ8]/I!>SJrNcba");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/bdbId'@mZo!&");
      String string1 = "g";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "checkpoints not supported");
      StackTraceElement stackTraceElement0 = new StackTraceElement("G", "g", "/bdbId'@mZo!&", 533);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StackTraceElement stackTraceElement1 = new StackTraceElement("VI{vX[NWD", "loadingResources", "/bdbId'@mZo!&", (-2013265911));
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.aHttpURI;
      MockURI.normalize(uRI0);
      URI uRI2 = MockURI.resolve(uRI1, uRI1);
      URI uRI3 = MockURI.aFTPURI;
      URI uRI4 = MockURI.parseServerAuthority(uRI2);
      MockURI.relativize(uRI4, uRI3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      ApplicationException applicationException0 = new ApplicationException("OKI|", linkedList0, "OKI|");
      MockThrowable mockThrowable0 = new MockThrowable("OKI|", applicationException0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", mockThrowable0);
      linkedList0.add(messageFormatter_LoadBundleError0);
      ApplicationException applicationException1 = messageFormatter0.createLoadException(linkedList0);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException1.getKey());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[22];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      Object object2 = new Object();
      objectArray0[3] = object2;
      Object object3 = new Object();
      objectArray0[4] = object3;
      objectArray0[5] = object2;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.KOREAN;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.KOREAN;
      locale1.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale2 = Locale.ROOT;
      Locale locale3 = new Locale("9_");
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0, locale_FilteringMode0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("9_", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = messageFormatter0.listToString(linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer((-223));
      Integer integer3 = new Integer(0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      StackTraceElement stackTraceElement0 = new StackTraceElement("resources.messages.standard", "Zx>N!9{vA*)>", "Zx>N!9{vA*)>", (-1320));
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("critical.question.quit.title", "/K^D[j*&X_", "f}.<%UBg%HH`(i", 42);
      try { 
        messageFormatter0.getMessage("/K^D[j*&X_", (Object[]) stackTraceElementArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.aHttpURI;
      URI uRI2 = MockURI.aHttpURI;
      URI uRI3 = MockURI.resolve(uRI1, uRI1);
      URI uRI4 = MockURI.relativize(uRI3, uRI1);
      MockURI.parseServerAuthority(uRI4);
      MockURI.relativize(uRI0, uRI3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.aHttpURI;
      URI uRI2 = MockURI.aHttpURI;
      URI uRI3 = MockURI.resolve(uRI1, uRI1);
      URI uRI4 = MockURI.relativize(uRI3, uRI1);
      MockURI.parseServerAuthority(uRI4);
      MockURI.relativize(uRI0, uRI3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("c[,]>m72wGT$NM_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[18];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object0;
      Object object2 = new Object();
      objectArray0[2] = object1;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = objectArray0[4];
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(256);
      pipedInputStream0.mark(256);
      Integer integer0 = new Integer(256);
      pipedOutputStream0.connect(pipedInputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0, 123);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      bufferedOutputStream0.flush();
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(bufferedOutputStream0);
      BufferedOutputStream bufferedOutputStream2 = new BufferedOutputStream(mockPrintStream0);
      pipedOutputStream0.write(256);
      BufferedOutputStream bufferedOutputStream3 = new BufferedOutputStream(bufferedOutputStream0, (byte)7);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vP=R");
      mockFileOutputStream0.release();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(filterOutputStream1);
      mockPrintStream0.println((float) 7);
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.release();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(8192);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.CANADA_FRENCH;
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) ".6 yp";
      objectArray0[3] = (Object) ".6 yp";
      objectArray0[4] = (Object) ".6 yp";
      objectArray0[5] = (Object) ".6 yp";
      objectArray0[6] = (Object) ".6 yp";
      objectArray0[7] = (Object) messageFormatter0;
      StringReader stringReader0 = new StringReader("up,;7CeQPuMdW4F_{gkL");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage(".6 yp", objectArray0, (ResourceBundle) propertyResourceBundle0);
      Object[] objectArray1 = new Object[7];
      objectArray1[0] = (Object) propertyResourceBundle0;
      objectArray1[1] = (Object) propertyResourceBundle0;
      objectArray1[2] = (Object) null;
      objectArray1[3] = (Object) "up,;7CeQPuMdW4F_{gkL";
      objectArray1[4] = (Object) "\"S]";
      objectArray1[5] = (Object) messageFormatter0;
      objectArray1[6] = (Object) null;
      try { 
        messageFormatter0.formatMessage("\"S]", objectArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      StackTraceElement stackTraceElement0 = new StackTraceElement("resources.messages.standard", "Zx>N!9{vA*)>", "Zx>N!9{vA*)>", 256);
      stackTraceElementArray0[1] = stackTraceElement0;
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("Zx>N!9{vA*)>", (Object[]) stackTraceElementArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.CANADA;
      Locale.setDefault(locale1);
      Locale locale2 = (Locale)locale1.clone();
      locale2.getDisplayScript();
      locale2.getDisplayCountry(locale0);
      Locale locale3 = new Locale("\uCE90\uB098\uB2E4", "\uCE90\uB098\uB2E4", "\uCE90\uB098\uB2E4");
      locale2.getDisplayVariant(locale0);
      locale0.getDisplayLanguage();
      locale2.getDisplayScript(locale3);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      linkedList0.add((Locale.LanguageRange) null);
      Set<String> set0 = locale3.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      locale3.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList1.add((Locale.LanguageRange) null);
      Locale locale4 = locale1.stripExtensions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0, locale_FilteringMode0);
      locale0.getUnicodeLocaleKeys();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("Korean");
      locale1.toLanguageTag();
      linkedList1.add(locale_LanguageRange0);
      Locale locale5 = Locale.GERMAN;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      locale0.getUnicodeLocaleKeys();
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1, locale_FilteringMode1);
      Locale locale6 = new Locale("Korean");
      locale1.getDisplayName(locale4);
      Locale locale7 = new Locale("", "\uCE90\uB098\uB2E4");
      locale7.getDisplayName();
      locale1.getDisplayScript(locale7);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList1, (List) list2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale$LanguageRange cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[2] = object0;
      Object object2 = new Object();
      objectArray0[3] = object2;
      Object object3 = new Object();
      objectArray0[4] = object3;
      Object object4 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.aHttpURI;
      URI uRI2 = MockURI.resolve(uRI0, uRI1);
      MockURI.resolve(uRI2, uRI0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable1 = new MockThrowable("resources.messages.standard", mockThrowable0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.JAPAN;
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class, java.properties; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.aHttpURI;
      URI uRI2 = MockURI.aHttpURI;
      URI uRI3 = MockURI.resolve(uRI1, uRI1);
      URI uRI4 = MockURI.relativize(uRI3, uRI1);
      MockURI.parseServerAuthority(uRI4);
      MockURI.relativize(uRI0, uRI3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.GERMANY;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) null, locale0, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(92);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer1 = new Integer(92);
      Integer integer2 = new Integer(92);
      Integer integer3 = new Integer(0);
      Integer integer4 = new Integer(1);
      Integer integer5 = new Integer(92);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer(92);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer1 = new Integer(92);
      Integer integer2 = new Integer(92);
      Integer integer3 = new Integer(0);
      Integer integer4 = new Integer(92);
      Integer integer5 = new Integer(92);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("=\"^@f?02~;yYE@ >>h", "resources.messages.standard");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("a|bA)_");
      try { 
        messageFormatter0.initializeResourceBundle(list1, list1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.properties; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("Mp,rA$<rj ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      classLoader1.getParent();
      classLoader0.getParent();
      ClassLoader classLoader3 = classLoader2.getParent();
      classLoader3.getParent();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.getParent();
      classLoader1.getParent();
      classLoader0.getParent();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.listResources("-7ea.\"", classLoader2);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("tmp");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) applicationException0;
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "UTmN");
      ApplicationException applicationException2 = new ApplicationException(applicationException0, "+e", (Object) null, applicationException1);
      ApplicationException applicationException3 = new ApplicationException(applicationException0, "tmp", applicationException2, "UTmN", "UTmN");
      applicationException0.addSuppressed(applicationException3);
      objectArray0[1] = (Object) applicationException0;
      objectArray0[2] = (Object) "tmp";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) applicationException0;
      applicationException0.getLocalizedMessage();
      applicationException0.printStackTrace();
      ApplicationException applicationException4 = new ApplicationException((Throwable) applicationException0, "tmp", objectArray0);
      applicationException0.addSuppressed(applicationException4);
      objectArray0[5] = (Object) applicationException0;
      applicationException0.addData(objectArray0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("kp|$&O^qxk>", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(1078);
      Integer integer3 = new Integer(701);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.myLastException;
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("Unsaved Changes", (Throwable) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("Unsaved Changes", (Object) integer1, (Object) integer0, (Object) messageFormatter_LoadBundleError0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      List list0 = MessageFormatter.buildList(objectArray0);
      assertEquals(8, list0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      StackTraceElement stackTraceElement0 = new StackTraceElement("4yON|r;a1Xo$", "}i%U+g%HH`(i", "4yON|r;a1Xo$", (-2093796554));
      StackTraceElement stackTraceElement1 = new StackTraceElement("qi/4?ho%0vvVW@!", "}i%U+g%HH`(i", ";g*lR-36-48nCRGSJ", (-2093796554));
      List list0 = MessageFormatter.buildList(stackTraceElementArray0);
      assertEquals(4, list0.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      linkedList0.removeIf(predicate4);
      Integer integer0 = new Integer((-2096353082));
      Object[] objectArray0 = new Object[0];
      List list0 = MessageFormatter.buildList(objectArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("up,;7CeQPMdW4F_{gkL", true);
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.setDefaultAssertionStatus(true);
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      mockPrintStream0.print(false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(bufferedOutputStream0);
      pipedOutputStream0.close();
      mockPrintStream0.print((float) 123);
      MockFile mockFile0 = new MockFile("Japanese");
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream3 = new MockPrintStream("(:|!3");
      mockPrintStream2.print(0.0F);
      mockPrintStream2.print(false);
      mockPrintStream0.print("d {>T!>BvEq(4=Y");
      MockPrintStream mockPrintStream4 = new MockPrintStream(mockPrintStream2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("null", 0.0);
      Locale.LanguageRange locale_LanguageRange1 = new Locale.LanguageRange("null", 0.0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("L'2D+BgNFfzUWe3R", (Object) locale_LanguageRange0, (Object) locale_LanguageRange1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("hi there", messageFormatter0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "hi there", applicationException0, "hi there", applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "app.repository.file");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      classLoader0.getParent();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.getParent();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte) (-101);
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DO.>");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }
}
