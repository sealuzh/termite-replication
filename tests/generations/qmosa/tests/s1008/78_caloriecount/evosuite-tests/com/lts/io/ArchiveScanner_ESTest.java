/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 02:07:32 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.012384167921743
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("_`ry8X%yJ", "!");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "_`ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "_`ry8X%yJ";
      stringArray0[2] = "_`ry8X%yJ";
      archiveScanner0.basedir = (File) improvedFile0;
      stringArray0[3] = "_`ry8X%yJ";
      stringArray0[4] = "_`ry8X%yJ";
      ImprovedFile.copyFromToDir(improvedFile1, improvedFile0);
      vector0.add("]OoV");
      stringArray0[5] = "_`ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.toFileType(improvedFile0);
      Vector<Object> vector1 = new Vector<Object>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DirectoryScanner.matchPath("_`ry8X%yJ", "_`ry8X%yJ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Object> vector2 = new Vector<Object>();
      Vector<Object> vector3 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector3;
      Vector<Integer> vector4 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector4;
      Vector<String> vector5 = new Vector<String>();
      Vector<Object> vector6 = new Vector<Object>();
      archiveScanner0.isIncluded("_`ry8X%yJ");
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector7 = new Vector<String>();
      Vector<String> vector8 = new Vector<String>();
      System.setCurrentTimeMillis(0);
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.processDirectory(improvedFile0, "_`ry8X%yJ", true);
      archiveScanner0.isIncluded("_`ry8X%yJ");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("_`ry8X%yJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("com.lts.util.deepcopy.DeepCopyException");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "_`ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "n.jar";
      stringArray0[2] = "com.lts.util.deepcopy.DeepCopyException";
      stringArray0[3] = "com.lts.util.deepcopy.DeepCopyException";
      stringArray0[4] = "n.jar";
      DirectoryScanner.matchPatternStart("com.lts.util.deepcopy.DeepCopyException", "com.lts.util.deepcopy.DeepCopyException");
      stringArray0[5] = "n.jar";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile2 = improvedFile0.createTempDir();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) "com.lts.util.deepcopy.DeepCopyException");
      Object object0 = new Object();
      Object object1 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Vector<String> vector3 = new Vector<String>();
      Vector<Object> vector4 = new Vector<Object>();
      boolean boolean0 = archiveScanner0.haveSlowResults;
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector5 = new Vector<String>();
      Vector<String> vector6 = new Vector<String>();
      improvedFile2.mkdirs();
      vector6.insertElementAt("com.lts.util.deepcopy.DeepCopyException", 0);
      vector6.iterator();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile2);
      Vector<Integer> vector7 = new Vector<Integer>();
      Vector<Integer> vector8 = new Vector<Integer>();
      archiveScanner0.dirsIncluded = vector8;
      archiveScanner1.filesExcluded = vector7;
      archiveScanner1.scandir(improvedFile2, "n.jar", true);
      archiveScanner0.isArchive(improvedFile2);
      Vector<String> vector9 = new Vector<String>();
      archiveScanner0.toFileType(improvedFile2);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("n.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "yt42X?GKc*CifcECJ.war");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "yt42X?GKc*CifcECJ.war";
      archiveScanner0.setIncludes(stringArray0);
      Object object0 = new Object();
      archiveScanner0.setExcludes(stringArray0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      UnaryOperator.identity();
      Object object6 = new Object();
      Object object7 = new Object();
      UnaryOperator.identity();
      Object object8 = new Object();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      vector0.add((InputStream) pipedInputStream0);
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add(object0);
      vector1.add(object8);
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Vector<String> vector2 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("yt42X?GKc*CifcECJ.war");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "-.ip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-.ip";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.setExcludes(stringArray0);
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Object object6 = new Object();
      Object object7 = new Object();
      UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "-.ip");
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      vector0.add(object11);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add(object0);
      vector1.add(object8);
      Object object12 = new Object();
      vector0.add(object1);
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Vector<Locale.LanguageRange> vector2 = new Vector<Locale.LanguageRange>();
      archiveScanner0.filesNotIncluded = vector2;
      Vector<String> vector3 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("-.ip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "BQgsqv4");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "BQgsqv4";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.setExcludes(stringArray0);
      Object object0 = new Object();
      vector0.add(object0);
      Object object1 = new Object();
      Object object2 = new Object();
      vector0.add((Object) null);
      Object object3 = new Object();
      Object object4 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Object object5 = new Object();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "BQgsqv4");
      Vector<SequenceInputStream> vector1 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsIncluded = vector1;
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      vector0.add(object9);
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add((Object) unaryOperator1);
      Object object10 = new Object();
      vector2.add(object10);
      vector2.add(object3);
      vector2.add(object6);
      Object object11 = new Object();
      vector0.add(object0);
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "BQgsqv4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "Uw");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Uw";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("gJ");
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.setExcludes(stringArray0);
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      vector0.add((Object) null);
      Object object3 = new Object();
      Object object4 = new Object();
      UnaryOperator.identity();
      vector0.add((Object) "Uw");
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      vector0.add(object8);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add(object5);
      Object object9 = new Object();
      vector0.add(object1);
      vector1.add((Object) null);
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Vector<InputStream> vector2 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector2;
      Vector<String> vector3 = new Vector<String>();
      Vector<String> vector4 = new Vector<String>();
      vector0.add((Object) "Uw");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Uw", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "Uw");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Uw";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.setExcludes(stringArray0);
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      Object object3 = new Object();
      vector0.add((Object) null);
      Object object4 = new Object();
      Object object5 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "Uw");
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      vector0.add(object9);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add(object6);
      Object object10 = new Object();
      vector0.add(object1);
      vector1.add((Object) null);
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Vector<String> vector2 = new Vector<String>();
      Vector<Integer> vector3 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector3;
      Vector<String> vector4 = new Vector<String>();
      vector0.add((Object) "Uw");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Uw", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.699926769623198
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("tempdir1.jar");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "_`ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "n.jar";
      stringArray0[2] = "_`ry8X%yJ";
      archiveScanner0.basedir = (File) improvedFile0;
      stringArray0[3] = "_`ry8X%yJ";
      stringArray0[4] = "n.jar";
      ImprovedFile.copyFromToDir(improvedFile1, improvedFile0);
      stringArray0[5] = "n.jar";
      archiveScanner0.setIncludes(stringArray0);
      int int0 = ArchiveScanner.FILE;
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0);
      DirectoryScanner.matchPatternStart("_`ry8X%yJ", "_`ry8X%yJ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      Vector<String> vector1 = new Vector<String>();
      Vector<Object> vector2 = new Vector<Object>();
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector3 = new Vector<String>();
      System.setCurrentTimeMillis(0);
      archiveScanner0.isArchive(improvedFile2);
      archiveScanner0.processDirectory(improvedFile0, "n.jar", true);
      System.setCurrentTimeMillis(0);
      archiveScanner0.isIncluded("_`ry8X%yJ");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile2, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5458484551923064
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("b_G&- -G~.war");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("tempdir1.jar");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      MockFile mockFile0 = new MockFile("b_G&- -G~.war", "b_G&- -G~.war");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "6_*aw9{f1&-1Di^/";
      stringArray0[1] = "b_G&- -G~.war";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[2] = "b_G&- -G~.war";
      stringArray0[3] = "6_*aw9{f1&-1Di^/";
      stringArray0[4] = "b_G&- -G~.war";
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[5] = "6_*aw9{f1&-1Di^/";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.createTempDir("b_G&- -G~.war", "b_G&- -G~.war");
      DirectoryScanner.matchPath("b_G&- -G~.war", "6_*aw9{f1&-1Di^/");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      vector0.containsAll(linkedList0);
      Vector<String> vector1 = new Vector<String>();
      vector1.removeAll(vector0);
      Vector<String> vector2 = new Vector<String>();
      System.setCurrentTimeMillis(565L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.processDirectory(improvedFile0, "", true);
      assertTrue(improvedFile0.canWrite());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5331236433557152
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("n.jar");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "_`ry8X%yJ");
      File file0 = ImprovedFile.createTempFileName("n.jar", "iNIdL9Zc!['|", improvedFile0);
      improvedFile0.getCanonicalFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "n.jar";
      stringArray0[2] = "n.jar";
      stringArray0[3] = "_`ry8X%yJ";
      stringArray0[4] = "n.jar";
      ImprovedFile.copyFromToDir(improvedFile1, improvedFile0);
      improvedFile0.setWritable(true, true);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector1;
      DirectoryScanner.match("_`ry8X%yJ", "n.jar");
      stringArray0[5] = "_`ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile2 = improvedFile0.createTempDir();
      boolean boolean0 = archiveScanner0.haveSlowResults;
      Vector<String> vector2 = new Vector<String>();
      vector2.removeAll(vector1);
      vector0.retainAll(vector2);
      Vector<String> vector3 = new Vector<String>();
      vector2.iterator();
      archiveScanner0.scandir(improvedFile2, "n.jar", false);
      archiveScanner0.scandir(improvedFile0, "_`ry8X%yJ", false);
      try { 
        archiveScanner0.processDirectory(file0, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/n.jar/n.jar281320.iNIdL9Zc!['|
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5366777855438347
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("_`ry8X%yJ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "_`ry8X%yJ";
      stringArray0[2] = "_`ry8X%yJ";
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      vector0.retainAll(set0);
      stringArray0[3] = "_`ry8X%yJ";
      stringArray0[4] = "_`ry8X%yJ";
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      vector0.add("_`ry8X%yJ");
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector1;
      stringArray0[5] = "_`ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.createTempDir();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_`ry8X%yJ");
      Vector<String> vector2 = new Vector<String>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Vector<String> vector3 = new Vector<String>();
      System.setCurrentTimeMillis(544L);
      archiveScanner0.processDirectory(improvedFile0, "crititcal.co.lts.pplication.errorsproperties.ile", false);
      assertFalse(improvedFile0.isAbsolute());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "E}7u{6(]3uM1$MA");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "E}7u{6(]3uM1$MA";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.setExcludes(stringArray0);
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      Object object3 = new Object();
      vector0.add((Object) null);
      Object object4 = new Object();
      Vector<SequenceInputStream> vector1 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsNotIncluded = vector1;
      Object object5 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "E}7u{6(]3uM1$MA");
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      vector0.add(object9);
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object4);
      vector2.add(object0);
      vector2.add(object6);
      Object object10 = new Object();
      vector0.add(object1);
      vector0.addAll((Collection<?>) vector2);
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Vector<String> vector3 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "E}7u{6(]3uM1$MA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("_`r88y%yJ", "_`r88y%yJ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`r88y%yJ";
      stringArray0[1] = "_`r88y%yJ";
      stringArray0[2] = "_`r88y%yJ";
      stringArray0[3] = "_`r88y%yJ";
      stringArray0[4] = "_`r88y%yJ";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[5] = "_`r88y%yJ";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.createTempDir("_`r88y%yJ", "_`r88y%yJ");
      archiveScanner0.processDirectory(improvedFile0, "O)4gvBFP\nEt.war", true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1215L));
      System.setCurrentTimeMillis(524L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5660484149144642
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("_`r88y%yJ", "_`r88y%yJ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("_`r88y%yJ/_`r88y%yJ/tempdir0");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`r88y%yJ";
      stringArray0[1] = "_`r88y%yJ";
      stringArray0[2] = "_`r88y%yJ";
      stringArray0[3] = "_`r88y%yJ";
      stringArray0[4] = "_`r88y%yJ";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      stringArray0[5] = "_`r88y%yJ";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("_`r88y%yJ/_`r88y%yJ/tempdir0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      archiveScanner0.scandir(improvedFile0, "_`r88y%yJ", false);
      System.setCurrentTimeMillis((-1215L));
      System.setCurrentTimeMillis(524L);
      archiveScanner0.scandir(improvedFile0, "_`r88y%yJ", false);
      assertTrue(improvedFile0.canWrite());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.535043918223923
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("_`r88y%yJ", "_`r88y%yJ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`r88y%yJ";
      stringArray0[1] = "_`r88y%yJ";
      stringArray0[2] = "_`r88y%yJ";
      stringArray0[3] = "_`r88y%yJ";
      stringArray0[4] = "_`r88y%yJ";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[5] = "_`r88y%yJ";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.createTempDir();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("_`r88y%yJ/_`r88y%yJ/tempdir0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      archiveScanner0.scandir(improvedFile0, "_`r88y%yJ", true);
      System.setCurrentTimeMillis((-1215L));
      System.setCurrentTimeMillis(524L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "-.ip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-.ip";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector1;
      archiveScanner0.setExcludes(stringArray0);
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      vector0.add((Object) null);
      Object object3 = new Object();
      Object object4 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Object object5 = new Object();
      Object object6 = new Object();
      UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "-.ip");
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      vector0.add(object10);
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add(object0);
      vector2.add(object7);
      Object object11 = new Object();
      vector0.add(object1);
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Vector<String> vector3 = new Vector<String>();
      vector0.add((Object) "-.ip");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "-.ip", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("Ke.war");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "_`ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "n.jar";
      stringArray0[2] = "Ke.war";
      stringArray0[3] = "Ke.war";
      stringArray0[4] = "n.jar";
      DirectoryScanner.matchPatternStart("Ke.war", "Ke.war");
      stringArray0[5] = "n.jar";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile2 = improvedFile0.createTempDir();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Object> vector2 = new Vector<Object>();
      vector1.add((Object) "_`ry8X%yJ");
      Vector<String> vector3 = new Vector<String>();
      Vector<Object> vector4 = new Vector<Object>();
      boolean boolean0 = archiveScanner0.haveSlowResults;
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector5 = new Vector<String>();
      Vector<String> vector6 = new Vector<String>();
      vector6.insertElementAt("Ke.war", 0);
      vector6.iterator();
      Vector<String> vector7 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector7;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile2);
      archiveScanner1.scandir(improvedFile2, "n.jar", true);
      archiveScanner0.isArchive(improvedFile2);
      Vector<String> vector8 = new Vector<String>();
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("n.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9896217341979847
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("tempdir1.jMr");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "_`ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_`ry8X%yJ";
      stringArray0[1] = "n.jar";
      stringArray0[2] = "tempdir1.jMr";
      stringArray0[3] = "tempdir1.jMr";
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.filesExcluded = vector1;
      stringArray0[4] = "n.jar";
      ImprovedFile.copyFromToDir(improvedFile1, improvedFile0);
      vector0.add("]OoV");
      stringArray0[5] = "n.jar";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile2 = improvedFile0.createTempDir();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add((Object) "tempdir1.jMr");
      Object object0 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      vector2.add((Object) "_`ry8X%yJ");
      Vector<Object> vector4 = new Vector<Object>();
      vector0.retainAll(vector0);
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector5 = new Vector<String>();
      vector5.insertElementAt("tempdir1.jMr", 0);
      vector0.iterator();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile2);
      archiveScanner1.scandir(improvedFile2, "n.jar", true);
      archiveScanner0.isArchive(improvedFile2);
      archiveScanner0.processArchive(improvedFile0, "n.jar");
      archiveScanner1.isArchive(improvedFile2);
      // Undeclared exception!
      try { 
        archiveScanner1.processFile("tempdir1.jMr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "Uw");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Uw";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector1;
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      Object object3 = new Object();
      vector0.add((Object) null);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Vector<Object> vector2 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector2;
      vector0.add((Object) "Uw");
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      vector0.add(object7);
      Object object8 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      vector3.add(object4);
      Object object9 = new Object();
      vector0.add(object1);
      vector3.add((Object) null);
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Vector<String> vector4 = new Vector<String>();
      Vector<String> vector5 = new Vector<String>();
      vector0.add((Object) "Uw");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "ZB", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "");
      Vector<String> vector0 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String[] stringArray1 = new String[6];
      stringArray1[0] = null;
      stringArray1[1] = null;
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = null;
      archiveScanner0.excludes = stringArray1;
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("fgor_-T,EGOI4W/");
      vector1.add("zarchive");
      vector1.iterator();
      Locale locale0 = Locale.UK;
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(154L);
      System.setCurrentTimeMillis(0L);
      Vector<String> vector2 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector2;
      System.setCurrentTimeMillis((-2962L));
      System.setCurrentTimeMillis((-1458L));
      System.setCurrentTimeMillis(593L);
      archiveScanner0.processArchive(improvedFile0, "zarchive");
      System.setCurrentTimeMillis((-2962L));
      archiveScanner0.processFile("0!jH!3'[EKmvv|");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "");
      Vector<String> vector0 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      vector1.add((Object) null);
      Object object2 = new Object();
      Object object3 = new Object();
      vector1.add(object3);
      Vector<Object> vector2 = new Vector<Object>();
      Object object4 = new Object();
      Object object5 = new Object();
      vector1.add((Object) "0Ym}");
      Object object6 = new Object();
      Object object7 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector3;
      Object object8 = new Object();
      Object object9 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Object> vector4 = new Vector<Object>();
      Object object10 = new Object();
      DirectoryScanner.matchPatternStart("", "");
      Object object11 = new Object();
      Object object12 = new Object();
      vector4.add(object12);
      Vector<String> vector5 = new Vector<String>();
      Vector<String> vector6 = new Vector<String>();
      Vector<Integer> vector7 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector7;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".bak", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      Enumeration<SequenceInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[21];
      sequenceInputStream0.read(byteArray0, (-318336411), (-318336411));
      vector0.add(sequenceInputStream0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.read(byteArray0);
      byteArray0[4] = (byte)0;
      sequenceInputStream0.read(byteArray0, (-1), (-1));
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.lts.pest.tree.SimpleTreeListener");
      mockPrintStream0.write(byteArray0);
      sequenceInputStream0.mark((-318336411));
      mockPrintStream0.print('\\');
      mockPrintStream0.write((int) (byte)0);
      mockPrintStream0.println(true);
      mockPrintStream0.print((float) (-1));
      Vector<String> vector1 = new Vector<String>();
      Vector<String> vector2 = new Vector<String>();
      Vector<String> vector3 = new Vector<String>();
      Vector<String> vector4 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      UnaryOperator<SequenceInputStream> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      Vector<SequenceInputStream> vector5 = new Vector<SequenceInputStream>(0);
      sequenceInputStream0.available();
      archiveScanner0.filesIncluded = vector5;
      vector5.trimToSize();
      vector5.add(sequenceInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "Sn8//Mx]l`j-f\"%<", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      Enumeration<SequenceInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      vector0.add(sequenceInputStream0);
      byte[] byteArray0 = new byte[10];
      sequenceInputStream0.read(byteArray0, (-318336411), (-318336411));
      vector0.add(sequenceInputStream0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.available();
      sequenceInputStream0.read(byteArray0);
      byteArray0[4] = (byte)0;
      sequenceInputStream0.read(byteArray0, (-1), (-1));
      vector0.add(sequenceInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("g6mSuo");
      mockPrintStream0.print((double) (-318336411));
      mockPrintStream0.write(byteArray0);
      sequenceInputStream0.mark((-318336411));
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      mockPrintStream0.print(false);
      mockPrintStream0.println((long) 0);
      mockPrintStream0.write((int) (byte)0);
      sequenceInputStream0.read(byteArray0, (-318336411), (-2327));
      mockPrintStream0.println(true);
      mockPrintStream0.print((float) (-1));
      Vector<String> vector1 = new Vector<String>();
      Vector<SequenceInputStream> vector2 = new Vector<SequenceInputStream>();
      Vector<String> vector3 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<SequenceInputStream> vector4 = new Vector<SequenceInputStream>();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      sequenceInputStream1.mark((-67));
      vector0.add((SequenceInputStream) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "g6mSuo", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      Enumeration<SequenceInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      vector0.add(sequenceInputStream0);
      byte[] byteArray0 = new byte[10];
      sequenceInputStream0.read(byteArray0, (-318336411), (-318336411));
      vector0.add(sequenceInputStream0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.available();
      sequenceInputStream0.read(byteArray0);
      byteArray0[4] = (byte)0;
      sequenceInputStream0.read(byteArray0, (-1), (-1));
      vector0.add(sequenceInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("om.lts.pest.tree.SimleTreListener");
      mockPrintStream0.print((double) (-318336411));
      mockPrintStream0.write(byteArray0);
      sequenceInputStream0.mark((-318336411));
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      mockPrintStream0.print(false);
      mockPrintStream0.println((long) 0);
      mockPrintStream0.write((int) (byte)0);
      sequenceInputStream0.read(byteArray0, (-318336411), 0);
      mockPrintStream0.println(true);
      mockPrintStream0.print((float) (-1));
      Vector<String> vector1 = new Vector<String>();
      Vector<SequenceInputStream> vector2 = new Vector<SequenceInputStream>();
      Vector<String> vector3 = new Vector<String>();
      Vector<String> vector4 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<SequenceInputStream> vector5 = new Vector<SequenceInputStream>();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      sequenceInputStream1.mark((-67));
      vector0.add(sequenceInputStream1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "om.lts.pest.tree.SimleTreListener", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "Uw");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Uw";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Object object1 = new Object();
      vector0.add(object1);
      Object object2 = new Object();
      Object object3 = new Object();
      vector0.add((Object) null);
      Object object4 = new Object();
      Object object5 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "Uw");
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      vector0.add(object9);
      Object object10 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add(object6);
      Object object11 = new Object();
      vector0.add(object1);
      vector1.add((Object) null);
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Vector<String> vector2 = new Vector<String>();
      Vector<String> vector3 = new Vector<String>();
      Vector<String> vector4 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("t[l.h`K#kx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("D\"p_BSW\u0001TYqE");
      Vector<String> vector0 = new Vector<String>();
      byte[] byteArray0 = new byte[6];
      int int0 = (-2);
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = new Integer(1188);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-2));
      integerArray0[1] = integer1;
      vector0.parallelStream();
      Integer integer2 = new Integer(int0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(int0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((-2));
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int0);
      integerArray0[5] = integer5;
      byteArray0[0] = (byte)73;
      vector0.add("C;r3gV,iDno=o0dBz");
      byteArray0[4] = (byte)73;
      vector0.containsAll(vector0);
      Vector<String> vector1 = new Vector<String>();
      Vector<String> vector2 = new Vector<String>();
      Vector<String> vector3 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "p<X:?/i}9|?F~dreMoFX", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/D\"p_BSW\u0001TYqE
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "^=PCk>YFZCc+");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate2.or(predicate0);
      Predicate<Object> predicate5 = predicate1.or(predicate1);
      Predicate<Object> predicate6 = predicate0.negate();
      predicate6.and(predicate2);
      Predicate<Object> predicate7 = predicate2.or(predicate4);
      Predicate<Object> predicate8 = predicate4.and(predicate2);
      predicate6.or(predicate4);
      predicate8.or(predicate4);
      predicate3.test(predicate7);
      Predicate<Object> predicate9 = predicate8.or(predicate0);
      predicate1.and(predicate4);
      predicate9.test(predicate1);
      predicate7.negate();
      predicate2.negate();
      Predicate<Object> predicate10 = predicate2.negate();
      Predicate<Object> predicate11 = predicate0.or(predicate10);
      predicate9.negate();
      predicate0.and(predicate11);
      predicate11.and(predicate6);
      Predicate<Object> predicate12 = predicate11.and(predicate6);
      predicate1.or(predicate3);
      Predicate<Object> predicate13 = predicate10.and(predicate4);
      predicate13.and(predicate6);
      Predicate<Object> predicate14 = predicate1.negate();
      predicate7.negate();
      predicate13.negate();
      predicate8.and(predicate7);
      predicate13.negate();
      predicate12.and(predicate5);
      predicate6.or(predicate14);
      predicate5.or(predicate0);
      ImprovedFile improvedFile0 = new ImprovedFile("^=PCk>YFZCc+");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      Enumeration<SequenceInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      vector0.add(sequenceInputStream0);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream0.read(byteArray0, (-318336426), (-318336426));
      vector0.add(sequenceInputStream0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.mark((-318336426));
      sequenceInputStream0.available();
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read(byteArray0, (-318336426), (-318336426));
      vector0.add(sequenceInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("l|=i4<b++eygSGACy&.war.war0InE HD2yzb$c<c:g67$.war.war");
      mockPrintStream0.print((double) (-318336426));
      mockPrintStream0.write(byteArray0);
      sequenceInputStream0.mark((-318336426));
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      mockPrintStream0.println((long) 0);
      mockPrintStream0.append((CharSequence) "");
      mockPrintStream0.write((int) (byte)0);
      sequenceInputStream0.read(byteArray0, (-318336426), (-1));
      mockPrintStream0.println(true);
      mockPrintStream0.print((float) (-1));
      Vector<SequenceInputStream> vector1 = new Vector<SequenceInputStream>();
      Vector<String> vector2 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<SequenceInputStream> vector3 = new Vector<SequenceInputStream>();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      sequenceInputStream1.available();
      sequenceInputStream1.mark((-36));
      vector0.add(sequenceInputStream1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "l|=i4<b++eygSGACy&.war.war0InE HD2yzb$c<c:g67$.war.war", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)101;
      byteArray0[4] = (byte)101;
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.lts.pest.tree.SimpleTreeListener");
      mockPrintStream0.write((-268213216));
      mockPrintStream0.print('8');
      mockPrintStream0.print("com.lts.pest.tree.SimpleTreeListener");
      mockPrintStream0.write((int) (byte)101);
      mockPrintStream0.println(false);
      mockPrintStream0.print(2758.4F);
      Vector<String> vector1 = new Vector<String>();
      vector0.containsAll(vector1);
      vector1.spliterator();
      Vector<String> vector2 = new Vector<String>();
      Vector<String> vector3 = new Vector<String>();
      Vector<SequenceInputStream> vector4 = new Vector<SequenceInputStream>();
      Vector<String> vector5 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      Enumeration<SequenceInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      vector0.add(sequenceInputStream0);
      byte[] byteArray0 = new byte[21];
      sequenceInputStream0.read(byteArray0, (-318336411), (-318336411));
      vector0.add(sequenceInputStream0);
      sequenceInputStream0.markSupported();
      byteArray0[9] = (byte)102;
      sequenceInputStream0.available();
      sequenceInputStream0.read(byteArray0);
      byteArray0[4] = (byte)0;
      sequenceInputStream0.read(byteArray0, (-1), (-1));
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.lts.pest.tree.SimpleTreeListener");
      mockPrintStream0.write(byteArray0);
      sequenceInputStream0.mark((-318336411));
      mockPrintStream0.print('\\');
      mockPrintStream0.write((int) (byte)0);
      mockPrintStream0.println(true);
      mockPrintStream0.print((float) (-1));
      Vector<String> vector1 = new Vector<String>();
      Vector<SequenceInputStream> vector2 = new Vector<SequenceInputStream>();
      Vector<String> vector3 = new Vector<String>();
      Vector<String> vector4 = new Vector<String>();
      Vector<String> vector5 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<SequenceInputStream> vector6 = new Vector<SequenceInputStream>();
      sequenceInputStream0.available();
      sequenceInputStream0.read(byteArray0);
      vector0.trimToSize();
      vector6.add(sequenceInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "com.lts.pest.tree.SimpleTreeListener", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "InE HD2yzbc<c:g67$");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate2.or(predicate0);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate1.or(predicate1);
      Predicate<Object> predicate7 = predicate0.negate();
      Predicate<Object> predicate8 = predicate2.or(predicate4);
      Predicate<Object> predicate9 = predicate4.and(predicate2);
      predicate9.negate();
      Predicate<Object> predicate10 = predicate9.or(predicate5);
      predicate3.test(predicate8);
      Predicate<Object> predicate11 = predicate7.or(predicate1);
      predicate11.test(predicate1);
      predicate7.negate();
      predicate6.negate();
      Predicate<Object> predicate12 = predicate2.negate();
      predicate3.test(predicate6);
      Predicate<Object> predicate13 = predicate0.or(predicate10);
      predicate8.negate();
      predicate0.and(predicate13);
      predicate13.and(predicate7);
      Predicate<Object> predicate14 = predicate2.negate();
      Predicate<Object> predicate15 = predicate12.and(predicate4);
      predicate15.and(predicate7);
      Predicate<Object> predicate16 = predicate2.or(predicate15);
      predicate12.or(predicate16);
      predicate14.negate();
      predicate1.or(predicate10);
      predicate1.negate();
      predicate12.and(predicate0);
      Predicate<Object> predicate17 = predicate0.or(predicate0);
      predicate12.and(predicate17);
      predicate0.or(predicate5);
      predicate5.negate();
      predicate16.or(predicate11);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "InE HD2yzbc<c:g67$");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Vector<Object> vector1 = new Vector<Object>();
      Vector<String> vector2 = new Vector<String>(vector0);
      vector2.parallelStream();
      Vector<String> vector3 = new Vector<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      Predicate<Object> predicate5 = predicate4.and(predicate2);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate0.and(predicate6);
      predicate3.and(predicate0);
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.negate();
      predicate0.or(predicate1);
      predicate3.and(predicate0);
      Vector<Object> vector4 = new Vector<Object>();
      Predicate<Object> predicate9 = predicate3.and(predicate0);
      Predicate<Object> predicate10 = predicate9.or(predicate2);
      Predicate<Object> predicate11 = predicate10.negate();
      vector1.removeIf(predicate11);
      ImprovedFile improvedFile0 = new ImprovedFile("b_G&- -G~");
      improvedFile0.setReadable(true, true);
      vector1.removeIf(predicate0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      vector3.retainAll(vector4);
      Vector<String> vector5 = new Vector<String>();
      vector3.iterator();
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "O_Nri4{6E8)v");
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "");
      Vector<String> vector0 = new Vector<String>();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)5;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte)111;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("_`ry8X%yJ/_`ry8X%yJ0n.jar");
      vector0.spliterator();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("_`ry8X%yJ/_`ry8X%yJ0n.jar");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pz&>0Y1znWonN");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Vector<String> vector1 = new Vector<String>();
      vector0.clone();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "Pz&>0Y1znWonN", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "ek))P");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate2.or(predicate0);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate1.or(predicate1);
      Predicate<Object> predicate6 = predicate0.negate();
      Predicate<Object> predicate7 = predicate2.or(predicate4);
      Predicate<Object> predicate8 = predicate4.and(predicate2);
      predicate6.or(predicate4);
      Predicate<Object> predicate9 = predicate8.or(predicate5);
      predicate3.test(predicate7);
      Predicate<Object> predicate10 = predicate6.or(predicate1);
      predicate10.and(predicate4);
      predicate1.and(predicate4);
      predicate10.test(predicate1);
      Predicate<Object> predicate11 = predicate4.negate();
      predicate2.negate();
      Predicate<Object> predicate12 = predicate9.negate();
      predicate10.negate();
      predicate0.and(predicate10);
      predicate11.and(predicate6);
      predicate3.and(predicate6);
      predicate1.or(predicate3);
      Predicate<Object> predicate13 = predicate12.and(predicate4);
      predicate13.and(predicate6);
      predicate7.negate();
      predicate12.negate();
      predicate12.and(predicate0);
      Predicate<Object> predicate14 = predicate0.or(predicate0);
      Predicate<Object> predicate15 = predicate10.negate();
      predicate14.and(predicate15);
      predicate13.and(predicate14);
      predicate0.or(predicate5);
      predicate8.negate();
      predicate13.or(predicate6);
      ImprovedFile improvedFile0 = new ImprovedFile("ek))P", "ek))P");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "yt4-X?GKn*C>`cECJwar");
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      Object object1 = new Object();
      vector0.add((Object) null);
      Object object2 = new Object();
      Object object3 = new Object();
      vector0.add((Object) "yt4-X?GKn*C>`cECJwar");
      Object object4 = new Object();
      Object object5 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Object object6 = new Object();
      Object object7 = new Object();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Locale.LanguageRange, String> function0 = (Function<Locale.LanguageRange, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Locale.LanguageRange, String> function1 = unaryOperator1.compose((Function<? super Locale.LanguageRange, ? extends String>) function0);
      UnaryOperator.identity();
      unaryOperator0.compose((Function<? super Locale.LanguageRange, ?>) function1);
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((Object) "yt4-X?GKn*C>`cECJwar");
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      vector0.add((Object) unaryOperator2);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add(object0);
      vector1.add(object8);
      vector0.add(object1);
      Object object12 = new Object();
      Object object13 = new Object();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "1");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, yt4-X?GKn*C>`cECJwar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
