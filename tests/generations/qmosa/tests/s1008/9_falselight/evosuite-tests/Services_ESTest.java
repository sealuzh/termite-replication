/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 02:12:09 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:///|1/YbvVVG:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "^:");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("/|1/YbvVVG", 0);
      assertEquals(3, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.534717294273934
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, (-1));
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://) **:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "e");
      System.setCurrentTimeMillis(0);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("qGXD%ri+V3PN$8#Xe\"4", 0);
      services_HTTP_Result1.code = 1;
      services_HTTP_Result1.toString();
      services_HTTP_Result0.code = 1956;
      Services.testSMTP("FJfHF=B3[25", 0);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS(") **", 0);
      services_HTTP_Result1.toString();
      services_HTTP_Result2.Error = "**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 1\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: qGXD%ri+V3PN$8#Xe\"4) **.\n****";
      Services.testHTTPS("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@78d20f03) **", 4467);
      Services.HTTP_Result services_HTTP_Result3 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result4 = Services.testHTTPS("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 1\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: qGXD%ri+V3PN$8#Xe\"4) **.\n****", 1956);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_HTTP_Result4.page_weight = 0;
      services_HTTP_Result2.page_weight = 0;
      Services.testSMTP("", 0);
      Services.HTTP_Result services_HTTP_Result5 = new Services.HTTP_Result();
      services_HTTP_Result5.Error = "";
      Services.testSMTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@78d20f03) **", 0);
      Services.HTTP_Result services_HTTP_Result6 = new Services.HTTP_Result();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5103090061340354
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "e");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "e");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", 0);
      assertEquals(2, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte) (-17);
      byteArray0[4] = (byte) (-17);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "e");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis((-1L));
      Services.testHTTPS("", (byte) (-17));
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-17) **", 0);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.page_weight);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "O1Z");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "N*@Ly]e7");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "N*@Ly]e7");
      byteArray0[3] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 4044);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "O1Z");
      Services.testPOP3("OxN8I<PQ3Z%mt_", 4044);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("OxN8I<PQ3Z%mt_", (byte)0);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "VL0%|q.{9>");
      EvoSuiteLocalAddress evoSuiteLocalAddress1 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress1, "i':!5wV\"F)xl3o`");
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte) (-100);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress1, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)123;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", (byte)1);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("**** Resultat : \n** FonctionneOent : ", 49);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 49);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-54L));
      System.setCurrentTimeMillis(49);
      System.setCurrentTimeMillis((-168L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(668L);
      System.setCurrentTimeMillis((-479L));
      System.setCurrentTimeMillis((-1L));
      Services.testSMTP((String) null, 49);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-4387));
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("7?Cba[am;>bd$l|W", 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("MCT)13*3)QO&d}", (-2561));
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("N`so@`9$AJYNq", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services services0 = new Services();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "+OK");
      boolean boolean0 = NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      boolean boolean1 = NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.Error = null;
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : null.\n****", string0);
      
      services_HTTP_Result0.page_weight = (-1915);
      services_HTTP_Result0.time = 905L;
      services_HTTP_Result0.reset();
      String string1 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
      
      services_HTTP_Result0.reset();
      System.setCurrentTimeMillis(1866L);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : null.\n****", 1247);
      assertFalse(services_HTTP_Result1.works);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-4L));
      System.setCurrentTimeMillis((-4L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("**** Resultat : \n** FonctionneOent : ", 49);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-54L));
      System.setCurrentTimeMillis(49);
      System.setCurrentTimeMillis((-168L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(668L);
      System.setCurrentTimeMillis((-479L));
      System.setCurrentTimeMillis((-1L));
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("** Erreur g\u00E9n\u00E9r\u00E9e : ", (-26));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-54L));
      System.setCurrentTimeMillis(49);
      System.setCurrentTimeMillis((-168L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(668L);
      System.setCurrentTimeMillis((-479L));
      System.setCurrentTimeMillis((-1L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP((String) null, 49);
      System.setCurrentTimeMillis(0L);
      services_SIMPLE_Result0.toString();
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-735L));
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@54b2127a) **", 49);
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
  }
}
