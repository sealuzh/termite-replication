/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 03:40:40 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.972106183441634
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setIdentifier((-138));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setOntologyName("G;q0&I:{");
      ontologyTerm7.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList0.add(ontologyTerm8);
      arrayList0.add(ontologyTerm2);
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.spliterator();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      User user0 = new User();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.819580477080887
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(2613);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getForm();
      derivedVariable0.setIdentifier(2613);
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable1.createVariableSummary();
      derivedVariable0.getDisplayName();
      User user0 = new User("Tc^4iqmaMy?gaT", "UNABLE_TO_GET_VARIABLE_NAMES");
      derivedVariable1.codeBookNumber = "n.O7r&r5yzNrR;1=m";
      user0.setCounty("");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable2.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.getDisplayName();
      derivedVariable1.getColumnStart();
      derivedVariable1.isNewRecord();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("+m@{F");
      User user0 = new User("LIST_CHOICE", "g7\"UI2");
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.507711104476773
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1717986916));
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerms(arrayList0);
      assertFalse(arrayList0.equals((Object)arrayList1));
      
      User user0 = new User();
      user0.setFirstName("C.XCq;asMAzJv\u0001o");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariables(arrayList4);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7631959706337357
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "04aLLyZ\"");
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument2);
      supportingDocument1.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument3);
      rawVariable1.getSupportingDocuments();
      assertTrue(rawVariable1.isCoded());
      
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.837179637289895
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setIdentifier((-197));
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.fieldValue.unknown", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList1);
      rawVariable3.setLabel("general.fieldValue.unknown");
      assertEquals("general.fieldValue.unknown", rawVariable3.getLabel());
      
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable5 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable4);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.791804542466225
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.cieldValKe.unknown");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.cieldValKe.unknown", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList2);
      rawVariable3.setLabel("general.cieldValKe.unknown");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable2.setCleaningStatus("+m@{F");
      RawVariable rawVariable5 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertFalse(arrayList4.equals((Object)arrayList1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.78292585667546
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("Ob(?idG1f?Y");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("]t<GC9N zu%f");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("9`tZCu,c$`");
      rawVariable1.setLabel("user.affiliation.saveChanges");
      rawVariable3.setYear("+m@{F");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable5.getSupportingDocuments();
      rawVariable5.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable4.setLabel(")fs oI:V=>j )#l-Wu");
      rawVariable0.cloneAttributes(rawVariable3);
      rawVariable3.cloneAttributes(rawVariable5);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable4, rawVariable3);
      rawVariable1.containsSupportingDocument(supportingDocument0);
      assertEquals("user.affiliation.saveChanges", rawVariable1.getLabel());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.879784307727761
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("{ GAWSYpE!@iHESL-Q");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("s7+@{F");
      User user0 = new User("{ GAWSYpE!@iHESL-Q", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      User user1 = new User();
      user0.setFirstName("s7+@{F");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument2);
      assertTrue(boolean0);
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getName();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.755415334775036
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setColumnStart("+m@{F");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("/kv-");
      rawVariable0.setLabel("/kv-");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.notes = "WLF)M";
      rawVariable6.setLabel("+m@{F");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable3);
      RawVariable rawVariable7 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable6);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      derivedVariable0.removeSourceVariable(rawVariable4);
      RawVariable rawVariable8 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      assertEquals("+m@{F", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      System.setCurrentTimeMillis((-1285L));
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5806789212792607
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "*Bh|aM!^gN";
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.isNewRecord();
      rawVariable0.getCodeBookNumber();
      rawVariable0.isCoded();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setStatus("macaw.system.MacawErrorType");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        User.checkValidEmail("*Bh|aM!^gN");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"*Bh|aM!^gN\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.755320117083589
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("2RxIN");
      User user0 = new User("WLF)M", "general.fieldValue.unknown");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList1);
      supportingDocument0.setDocumentCode("2RxIN");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList2);
      rawVariable1.setLabel("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable4.cloneAttributes(rawVariable3);
      RawVariable rawVariable5 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable4, rawVariable1);
      rawVariable5.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable1);
      assertEquals("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER", rawVariable1.getLabel());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.6647750001287323
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("+m@{F");
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      supportingDocument0.setDocumentCode("/kv-");
      rawVariable0.setLabel("/kv-");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable7 = new RawVariable();
      rawVariable7.setLabel("+m@{F");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable3);
      RawVariable rawVariable8 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable7);
      RawVariable rawVariable9 = new RawVariable();
      rawVariable0.getLabel();
      assertEquals("/kv-", rawVariable0.getLabel());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.questionNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.saveChanges.valueChanged");
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm1.setTerm("variable.saveChanges.valueChanged");
      derivedVariable0.form = "variable.label.label";
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setCategory((String) null);
      derivedVariable0.getIdentifier();
      derivedVariable0.getYear();
      derivedVariable0.getYear();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getCategory();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("variable.questionNumber.label", derivedVariable0.getFilePath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.75536640648145
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      User user0 = new User("WLF)M", ";~A|^VnIl0~");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.setLabel(";~A|^VnIl0~");
      rawVariable0.cloneAttributes(rawVariable3);
      rawVariable2.createVariableSummary();
      System.setCurrentTimeMillis(327L);
      rawVariable3.cloneAttributes(derivedVariable0);
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      assertTrue(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.7430802760709185
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine1("6~u5qP-s");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setIdentifier((-700));
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.columnStart = "";
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getQuestionNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable1.getCleaningStatus();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("-700", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.962353009878522
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      User user0 = new User("l\"W<m92U3\"W0*", "variable.alias.label");
      arrayList0.remove((Object) user0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      
      MockDate mockDate0 = new MockDate((-209), (-209), (-209), (-209), 5432, (-209));
      macawChangeEvent0.setDate(mockDate0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      arrayList0.removeIf(predicate0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAddressLine1("#ao96#-d$]k>zO<j");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      supportingDocument1.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument1.setTitle("z%b`3");
      arrayList2.parallelStream();
      rawVariable1.addSupportingDocuments(arrayList2);
      User user1 = new User("general.fieldValue.unknown", "TY9");
      RawVariable rawVariable2 = new RawVariable();
      supportingDocument1.setDocumentCode("TY9");
      rawVariable0.setCleaned(true);
      rawVariable1.createVariableSummary();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7881502068860127
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setDescription("[YS^8-@0B");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm7);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      User user0 = new User();
      user0.setFirstName("#;P?9u");
      User user1 = new User(";~A|^VnIl0~", (String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7923911516277182
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(508);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("x@_#d~!f");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm6);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      assertEquals(2, arrayList1.size());
      
      User user0 = new User();
      user0.setFirstName("@5G_F~)T+A7?{~]<");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      String string0 = "general.fieldValue.unknown";
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.580906009824722
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setIdentifier(635);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setTerm("");
      arrayList0.add(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      User user0 = new User();
      user0.setFirstName("");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList3);
      // Undeclared exception!
      try { 
        rawVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.665925868143944
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      rawVariable0.setNotes("Mh");
      User user0 = new User("Mh", "Mh");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("_/:t+(<`rW# K");
      User user1 = new User("Mh", "Mh");
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm1, ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.createVariableSummary();
      rawVariable1.getNotes();
      assertEquals("Mh", rawVariable1.getNotes());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("Ob(?idG1f?Y");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("S`Tw$|");
      User user0 = new User("Ob(?idG1f?Y", "Ob(?idG1f?Y");
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument0);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument6.setDocumentCode("3}-i%Vner[");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5880588147135972
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm5.setDescription("eg|<)5!");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList0.add(ontologyTerm9);
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertEquals(0, arrayList1.size());
      
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setFirstName("wU;)lzPN#");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7988106447444294
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("[^b=");
      derivedVariable0.setName("Tr9");
      derivedVariable0.setColumnStart("Tr9");
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      derivedVariable0.setCoded(true);
      derivedVariable0.setAlias("&p=F.2TbXS`P,AWH%\"M");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      String string0 = "br~ X8TBT";
      derivedVariable2.setYear("br~ X8TBT");
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2794195899893155
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable1.setCategory("");
      rawVariable1.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      macawChangeEvent0.setChangeMessage("");
      arrayList1.remove((Object) "");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.retainAll(linkedList0);
      ArrayList<SupportingDocument> arrayList3 = rawVariable1.getSupportingDocuments();
      arrayList2.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle("");
      rawVariable1.addSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument3);
      User user1 = new User("variable.saveChanges.valueChanged", "variable.saveChanges.valueChanged");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setCleaned(true);
      derivedVariable0.setAlternativeVariable(rawVariable2);
      rawVariable2.createVariableSummary();
      rawVariable1.getAlias();
      rawVariable2.containsSupportingDocument(supportingDocument3);
      rawVariable0.getColumnEnd();
      derivedVariable0.getLabel();
      rawVariable1.getCategory();
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7835302012820025
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      rawVariable0.codeBookNumber = "]t<GC9N zu%f";
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("/kv-");
      rawVariable0.setLabel("/kv-");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.notes = "WLF)M";
      rawVariable6.setLabel("+m@{F");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable3);
      RawVariable rawVariable7 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable6);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      derivedVariable0.removeSourceVariable(rawVariable1);
      RawVariable rawVariable8 = new RawVariable();
      rawVariable4.getFilePath();
      assertEquals("/kv-", rawVariable4.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.setForm("q<dF-");
      rawVariable0.setName("+m@{F");
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningStatus();
      rawVariable0.getFilePath();
      rawVariable0.getForm();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("q<dF-", rawVariable0.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("ontologyTerm.term.label");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7353856730666672
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("!");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm0.setDescription("5^N");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm11);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("5^N");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.cloneAttributes(rawVariable1);
      rawVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      assertEquals("!", rawVariable1.getColumnEnd());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable4 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable4);
      RawVariable rawVariable5 = new RawVariable();
      assertEquals("Unknown", rawVariable5.getCleaningStatus());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("[^b=");
      User user0 = new User("^C0AWW$k5B66?,u1u", "");
      user0.setAddressLine1("[^b=");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setFilePath("DELETE");
      int int0 = (-1134);
      derivedVariable0.setIdentifier((-1134));
      derivedVariable0.codeBookNumber = "ib89onpA@0]L('o<c;C";
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.spliterator();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      int int1 = (-1879048189);
      // Undeclared exception!
      try { 
        arrayList1.add((-1879048189), valueLabel1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1879048189, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.792824052849739
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.fieldValue.unknown", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      Variable.validateFields(rawVariable1);
      assertEquals("+m@{F", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm[] ontologyTermArray0 = new OntologyTerm[0];
      arrayList0.toArray(ontologyTermArray0);
      derivedVariable0.columnStart = "(";
      derivedVariable0.setName("(");
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.spliterator();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayName();
      derivedVariable0.setForm("jLdvkB`GQh570Mp");
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals("jLdvkB`GQh570Mp", derivedVariable0.getForm());
      
      boolean boolean0 = derivedVariable1.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      RawVariable rawVariable1 = new RawVariable();
      arrayList2.remove((Object) rawVariable1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.retainAll(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addSupportingDocuments(arrayList1);
      User user0 = new User("L3v}Q,T@Wl.", "Unknown");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setCleaned(false);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setAlias("Unknown");
      rawVariable4.createVariableSummary();
      rawVariable4.getAlias();
      assertEquals("Unknown", rawVariable4.getAlias());
      
      rawVariable3.containsSupportingDocument(supportingDocument0);
      rawVariable1.getOntologyTerms();
      derivedVariable0.removeSourceVariable(rawVariable3);
      assertFalse(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.702921300293735
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(2722);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList1.contains(ontologyTerm1));
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      boolean boolean1 = rawVariable0.hasSameDisplayName(derivedVariable0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.782677686362992
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.fieldValue.unknown", "WLF)M");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.setCategory("Q,/cJ:o% LI^.");
      rawVariable1.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      assertFalse(arrayList2.equals((Object)arrayList0));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("u.}9&J");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("u.}9&J");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User("macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      user0.setAddressLine1("macaw.businessLayer.Variable");
      user0.setPhone("macaw.businessLayer.Variable");
      User.detectFieldChanges(user0, user0, user0);
      User.checkValidUserIDField("supportingDocument.fileName.label");
      user0.setStatus("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("NON_EXISTENT_CLEANING_STATE");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      assertEquals("NON_EXISTENT_CLEANING_STATE", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      User user0 = new User("macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      user0.setAddressLine1("macaw.businessLayer.Variable");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      User.checkValidUserIDField("supportingDocument.fileName.label");
      user0.setStatus("variable.saveChanges.valueChanged");
      user0.setEmail("variable.year.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.setCleaningDescription("variable.saveChanges.valueChanged");
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getCleaningDescription());
      assertTrue(arrayList2.equals((Object)arrayList0));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7244547079196284
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList0.add(ontologyTerm9);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setFirstName("wU;)lzPN#");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.990749111807408
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("Ob(?idG1f?Y");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("|d", "+m@{F");
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument4);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument2.setDocumentCode("+m@{F");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable2.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList3.equals((Object)arrayList1));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.7829008560504445
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("Ob(?idG1f?Y");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setName("+m@{F");
      User user0 = new User("|d", "+m@{F");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument4);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.setColumnEnd("variable.cleaningStatus.label");
      rawVariable1.setLabel("+m@{F");
      rawVariable1.cloneAttributes(derivedVariable0);
      rawVariable3.cloneAttributes(rawVariable2);
      User user1 = new User("Ob(?idG1f?Y", "Ob(?idG1f?Y");
      Variable.detectFieldChanges(user1, rawVariable3, rawVariable1);
      rawVariable1.containsSupportingDocument(supportingDocument4);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      derivedVariable0.getSourceVariables();
      assertEquals("+m@{F", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7084480995203895
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      arrayList0.remove((Object) user0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      
      MockDate mockDate0 = new MockDate();
      macawChangeEvent0.setDate(mockDate0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      macawChangeEvent0.setChangeMessage("`");
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      predicate4.negate();
      arrayList0.removeIf(predicate0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAddressLine1("#ao96#-d]k>zO<j");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      supportingDocument1.setTitle("gn5rl.Gd3dVae.unkown");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.questionNumber = "gn5rl.Gd3dVae.unkown";
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("gn5rl.Gd3dVae.unkown", rawVariable0.getQuestionNumber());
      
      supportingDocument1.setTitle("mz%b`3");
      arrayList2.add(supportingDocument1);
      arrayList2.parallelStream();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7232961436913947
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.questionNumber = "+~8+6ogw";
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("J+8Rg]n2o;");
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm1);
      rawVariable0.codeBookNumber = "J+8Rg]n2o;";
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      rawVariable0.codeBookNumber = "+~8+6ogw";
      rawVariable0.getDisplayName();
      rawVariable0.getCleaningDescription();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.7910588534806724
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.fieldValue.unknown", "WLF)M");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIsNewRecord(true);
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable1.setAvailability("general.fieldValue.unknown");
      rawVariable1.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getCleaningStatus();
      assertEquals("+m@{F", rawVariable0.getName());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "n4~B4yE%+=e`b";
      rawVariable0.setQuestionNumber("n4~B4yE%+=e`b");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2091429400432463
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.setNotes("general.fieldValue.unknown");
      User user0 = new User();
      user0.setEmail("general.fieldValue.unknown");
      derivedVariable0.setCleaningDescription("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setStatus((String) null);
      derivedVariable1.addSourceVariable(derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.setColumnEnd("general.fieldValue.unknown");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.stream();
      derivedVariable1.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("general.fieldValue.unknown");
      derivedVariable0.getFilePath();
      derivedVariable1.setCleaningStatus("AxCFO");
      derivedVariable1.getSourceVariables();
      derivedVariable1.setColumnStart((String) null);
      derivedVariable0.setCoded(true);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable1.getCleaningDescription();
      assertEquals("AxCFO", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "i:P";
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable0.removeValueLabel((ValueLabel) null);
      derivedVariable0.setColumnEnd("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.getFilePath();
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("i:P");
      supportingDocument0.setFileName("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      supportingDocument0.setTitle("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.990635925616123
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("Ob(?idG1f?Y");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName((String) null);
      User user0 = new User("macaw.businessLayer.Variable", "{KE0JX!kNZ|q$4}");
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument5, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument2.setDocumentCode("");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable2.removeValueLabel(valueLabel0);
      rawVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable2);
      rawVariable0.containsSupportingDocument(supportingDocument4);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList3.isEmpty());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      String string0 = "`LVl_C[*VC)";
      rawVariable0.setCleaningStatus("`LVl_C[*VC)");
      ArrayList<SupportingDocument> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.clone();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.setFilePath("");
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.599957686803094
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "Mh";
      System.setCurrentTimeMillis(1L);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("Mh", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      User user0 = new User("macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.77744683896856
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[2];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      arrayList2.toArray(macawChangeEventArray0);
      rawVariable2.removeSupportingDocuments(arrayList1);
      rawVariable2.cloneAttributes(rawVariable1);
      rawVariable2.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList2);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable2);
      // Undeclared exception!
      try { 
        rawVariable1.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Unknown", "variable.saveChanges.valueChanged");
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable1.addOntologyTerms(arrayList1);
      rawVariable1.getNotes();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3876362280213312
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      User user0 = new User();
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.73744436462686
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[1];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList1.add(supportingDocument0);
      macawChangeEvent0.setUserID("+8@{t");
      macawChangeEventArray0[0] = macawChangeEvent0;
      arrayList2.toArray(macawChangeEventArray0);
      rawVariable0.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable1.setAlternativeVariable(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setLabel("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      rawVariable1.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User((String) null, "UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<String> arrayList4 = new ArrayList<String>();
      assertEquals(0, arrayList4.size());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.8905648248197275
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2833);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.setColumnEnd("");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setIsNewRecord(true);
      User user0 = new User("ir]B2oD]Dx&@", "ir]B2oD]Dx&@");
      rawVariable1.questionNumber = "";
      user0.setCity("valueLabel.value.saveChanges");
      user0.setAddressLine2("ir]B2oD]Dx&@");
      user0.setAddressLine2("ir]B2oD]Dx&@");
      rawVariable1.createVariableSummary();
      user0.setCity("ir]B2oD]Dx&@");
      rawVariable1.setNotes("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable1.getSupportingDocuments();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      rawVariable0.isCoded();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.getAlternativeVariable();
      rawVariable2.cloneAttributes(variable0);
      derivedVariable0.containsSourceVariable(rawVariable2);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("Unknown", rawVariable2.getAvailability());
      
      rawVariable0.isCoded();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.8905237317439108
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2833);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.setColumnEnd("");
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User("ir]B2oD]Dx&@", "ir]B2oD]Dx&@");
      rawVariable1.questionNumber = "";
      user0.setCity("");
      rawVariable1.questionNumber = "Aqp$`,1T)%*N";
      user0.setAddressLine2("ir]B2oD]Dx&@");
      user0.setAddressLine2("ir]B2oD]Dx&@");
      user0.setCity("ir]B2oD]Dx&@");
      rawVariable1.setNotes("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      rawVariable1.getSupportingDocuments();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("Aqp$`,1T)%*N", rawVariable1.getQuestionNumber());
      
      derivedVariable0.getSourceVariables();
      rawVariable0.isCoded();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.getAlternativeVariable();
      rawVariable2.cloneAttributes(variable0);
      derivedVariable0.containsSourceVariable(rawVariable2);
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.727059911440721
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable2.getSupportingDocuments();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[1];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList1.add(supportingDocument0);
      MockDate mockDate0 = new MockDate();
      macawChangeEvent0.setDate(mockDate0);
      macawChangeEvent0.setUserID("+8@{t");
      macawChangeEventArray0[0] = macawChangeEvent0;
      arrayList2.toArray(macawChangeEventArray0);
      rawVariable1.removeSupportingDocuments(arrayList2);
      rawVariable1.cloneAttributes(rawVariable1);
      rawVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable2.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertEquals(0, arrayList4.size());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      User user0 = new User("macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.createVariableSummary();
      System.setCurrentTimeMillis(31L);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6806822757725426
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "macaw.businessLayer.Variable";
      derivedVariable0.columnEnd = "valueLabel.isMissingValue.saveChanges";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getSourceVariables();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.6806822757725426
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_CHANGES_FOR_USER", "UNABLE_TO_GET_CHANGES_FOR_USER");
      user0.setCity("UNABLE_TO_GET_CHANGES_FOR_USER");
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.notes = "UNABLE_TO_GET_CHANGES_FOR_USER";
      rawVariable1.cloneAttributes(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("Tr9");
      User user0 = new User("Unknown", "variable.saveChanges.valueChanged");
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.createVariableSummary();
      assertEquals("Tr9", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.584838202797333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setOntologyName("G;q0&I:{");
      ontologyTerm7.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList0.add(ontologyTerm8);
      arrayList0.add(ontologyTerm2);
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.spliterator();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      User user0 = new User();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.8111279869589096
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      rawVariable0.codeBookNumber = "]t<GC9N zu%f";
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("/?kv-");
      rawVariable0.setLabel("/?kv-");
      rawVariable0.setYear("+m@{F");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.notes = "WLF)M";
      rawVariable6.setLabel("+m@{F");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable3);
      Variable.detectFieldChanges(user0, rawVariable4, rawVariable6);
      rawVariable6.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList2);
      rawVariable3.createVariableSummary();
      assertEquals("/?kv-", rawVariable3.getLabel());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.74555525137843
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User(">4Y4B:@vByf9/ig{ 8g", "");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("Z0H$Hecm");
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("vaariable.form.label");
      rawVariable1.removeSupportingDocument(supportingDocument1);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      rawVariable3.setLabel("variable.alias.label");
      rawVariable3.createVariableSummary();
      assertEquals("variable.alias.label", rawVariable3.getLabel());
      
      System.setCurrentTimeMillis((-587L));
      rawVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable2, rawVariable5);
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.fieldValue.unknown", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(2046);
      arrayList1.add(supportingDocument1);
      arrayList1.parallelStream();
      rawVariable1.addSupportingDocuments(arrayList2);
      User user1 = new User("WLF)M", "general.fieldValue.unknown");
      rawVariable1.setCleaned(false);
      rawVariable0.createVariableSummary();
      assertEquals("+m@{F", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("}]ji\".tusDv", "}]ji\".tusDv");
      rawVariable0.setNotes("_/:t+(<`rW# K");
      user0.setAffiliation("+m@{F");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      arrayList0.parallelStream();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable2.addOntologyTerms(arrayList0);
      assertEquals("_/:t+(<`rW# K", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6497049730961217
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("}]ji\".tusDv", "}]ji\".tusDv");
      rawVariable0.setNotes("_/:t+(<`rW# K");
      user0.setAffiliation("+m@{F");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      ontologyTerm0.setOntologyName("variable.cleaningDescription.label");
      user0.setStatus("variable.cleaningDescription.label");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      rawVariable0.isNewRecord();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("_/:t+(<`rW# K", rawVariable0.getNotes());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.7839536283466906
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      rawVariable0.codeBookNumber = "]t<GC9N zu%f";
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("/kv-");
      rawVariable0.setLabel("/kv-");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable2.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.notes = "WLF)M";
      rawVariable6.setLabel("+m@{F");
      rawVariable0.cloneAttributes(rawVariable4);
      rawVariable0.cloneAttributes(rawVariable3);
      Variable.detectFieldChanges(user0, rawVariable4, rawVariable6);
      rawVariable6.containsSupportingDocument(supportingDocument0);
      rawVariable2.getSupportingDocuments();
      rawVariable2.getSupportingDocuments();
      rawVariable4.cloneAttributes(rawVariable0);
      assertEquals("]t<GC9N zu%f", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable4.isCleaned());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.059953807318997
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("Ob(?idG1f?Y");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("|d", "+m@{F");
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user1 = new User();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument3);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument3.setDocumentCode("%'V5/}bCG");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("|d");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList0);
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      assertFalse(arrayList2.equals((Object)arrayList0));
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.709836450220835
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[1];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      macawChangeEventArray0[0] = macawChangeEvent0;
      arrayList2.toArray(macawChangeEventArray0);
      rawVariable0.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable2, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.711770977549533
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "macaw.businessLayer.Variable";
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.hasSameDisplayName(derivedVariable2);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.688468595984575
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[1];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      rawVariable1.setYear("\"&!h%3(&M");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList1.add(supportingDocument0);
      MockDate mockDate0 = new MockDate();
      macawChangeEvent0.setDate(mockDate0);
      macawChangeEvent0.setUserID("+8@{t");
      macawChangeEventArray0[0] = macawChangeEvent0;
      arrayList2.toArray(macawChangeEventArray0);
      rawVariable0.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertFalse(arrayList4.equals((Object)arrayList0));
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.683859228591611
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setOntologyName("G;q0&I:{");
      ontologyTerm7.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList0.add(ontologyTerm8);
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(rawVariable0.isCleaned());
      
      User user0 = new User();
      rawVariable0.setCleaned(true);
      rawVariable0.updateOntologyTerm(ontologyTerm7);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.722973226438147
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList0.add(ontologyTerm9);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertEquals(0, arrayList1.size());
      
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setFirstName("wU;)lzPN#");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList4);
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.3398704635314767
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm11);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      arrayList0.add(ontologyTerm9);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.7483798280362937
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("J@E\"birdNhYcMCFR_a", "J@E\"birdNhYcMCFR_a");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("J@E\"birdNhYcMCFR_a");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "J@E\"birdNhYcMCFR_a", "J@E\"birdNhYcMCFR_a");
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[3] = macawChangeEvent1;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      rawVariable2.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable1.cloneAttributes(rawVariable0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable3.hasSameDisplayName(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      rawVariable3.getSupportingDocuments();
      assertFalse(rawVariable3.isCoded());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm9);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<String> arrayList4 = new ArrayList<String>();
      assertTrue(arrayList4.isEmpty());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6218445153853693
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      ontologyTerm1.setOntologyName("3r%!F>Ho,v+?0f");
      User user0 = new User("3r%!F>Ho,v+?0f", "3r%!F>Ho,v+?0f");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm4);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm2.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.setCoded(false);
      arrayList0.add(ontologyTerm4);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm7);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      User user0 = new User();
      user0.setFirstName("supportingDocument.fileName.label");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      assertFalse(arrayList3.contains("supportingDocument.fileName.label"));
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.897211607521706
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm9.setTerm("|q!?Xh@jbgf!W^=>8%B");
      rawVariable0.setColumnStart("|q!?Xh@jbgf!W^=>8%B");
      arrayList0.add(ontologyTerm9);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      User user1 = new User("l`\"(S$Nssl", "l`\"(S$Nssl");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("|q!?Xh@jbgf!W^=>8%B", rawVariable0.getColumnStart());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(135);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setCleaningStatus("Mh");
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      assertEquals("Mh", derivedVariable0.getCleaningStatus());
      
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.addOntologyTerms(arrayList0);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.716522855396349
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      rawVariable0.codeBookNumber = "]t<GC9N zu%f";
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDocumentCode("OI_H.}es");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable5);
      RawVariable rawVariable6 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      rawVariable1.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList4.equals((Object)arrayList1));
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.811010093016301
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "WLF)M");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("/kv-");
      rawVariable2.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      supportingDocument1.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable3.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = rawVariable5.getSupportingDocuments();
      rawVariable5.removeSupportingDocuments(arrayList1);
      rawVariable2.cloneAttributes(rawVariable0);
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.form = "/kv-";
      rawVariable6.cloneAttributes(rawVariable1);
      RawVariable rawVariable7 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable1);
      assertEquals("/kv-", rawVariable1.getForm());
      
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable4);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.6883942741711224
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      rawVariable0.columnStart = "Sm@{F";
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList1.add(supportingDocument0);
      MockDate mockDate0 = new MockDate();
      macawChangeEvent0.setDate(mockDate0);
      macawChangeEvent0.setUserID("+8@{t");
      rawVariable0.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList4.equals((Object)arrayList3));
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.6883942741711224
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.notes = "variable.questionNumber.label";
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[1];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList1.add(supportingDocument0);
      MockDate mockDate0 = new MockDate();
      macawChangeEvent0.setDate(mockDate0);
      macawChangeEvent0.setUserID("+8@{t");
      macawChangeEventArray0[0] = macawChangeEvent0;
      arrayList2.toArray(macawChangeEventArray0);
      rawVariable0.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList4.isEmpty());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "y\"H M5N{";
      derivedVariable0.codeBookNumber = "macaw.businessLayer.Variable";
      derivedVariable0.getSourceVariables();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "Mh";
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(1, arrayList0.size());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.8273504872538036
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setName("general.fieldValue.unknown");
      User user0 = new User("general.fieldValue.unknown", "04aLLyZ\"");
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument2);
      supportingDocument0.setDocumentCode("general.fieldValue.unknown");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getSupportingDocuments();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      rawVariable3.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(rawVariable3);
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable4);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable3.containsSupportingDocument(supportingDocument0);
      rawVariable0.getSupportingDocuments();
      assertEquals("general.fieldValue.unknown", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable3);
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.8086814139938103
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList0.add(ontologyTerm8);
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm4);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setFirstName("WKHCdGa]G_zA|");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("3r%!F>Ho,v+?0f");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm3);
      assertEquals(2, arrayList1.size());
      
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "3r%!F>Ho,v+?0f");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.and(predicate1);
      predicate0.test(ontologyTerm2);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate0.or(predicate2);
      rawVariable0.setIsNewRecord(false);
      predicate3.negate();
      arrayList1.removeIf(predicate3);
      rawVariable0.addOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setTerm("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.setAvailability("Unknown");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.addAll((-1620919822), (Collection<? extends OntologyTerm>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1620919822, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.6851551011994585
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(28);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.getOntologyTerms();
      rawVariable0.setForm("1B:WQ}={(>");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList3);
      User user0 = new User("variable.label.label", "supportingDocument.fileName.label");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      assertEquals("+m@{F", rawVariable0.getName());
      assertEquals("+m@{F", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_ASSOCIATE_DOCUMENT";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList1);
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertTrue(boolean0);
      
      derivedVariable1.getDisplayName();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("general.fieldValue.blank");
      rawVariable0.setOntologyTerms(arrayList0);
      assertEquals("general.fieldValue.blank", rawVariable0.getAlias());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.addOntologyTerms(arrayList0);
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.setNameSpace("(T1w");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate3.and(predicate0);
      predicate3.test(derivedVariable0);
      arrayList1.add(ontologyTerm0);
      predicate1.negate();
      predicate2.or(predicate5);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      predicate4.test(ontologyTerm1);
      predicate5.negate();
      arrayList1.removeIf(predicate0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.hasSameDisplayName(derivedVariable1);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.7542615799818635
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setName("+m@{F");
      User user0 = new User("general.fieldValue.unknown", "WLF)M");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      supportingDocument0.setDocumentCode("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.setCategory("Q,/cJ:o% LI^.");
      rawVariable1.removeSupportingDocuments(arrayList1);
      rawVariable0.cloneAttributes(rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      assertEquals(0, arrayList3.size());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.698666620823472
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setTerm("supportingDocument.fileName.label");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.setIdentifier(1);
      rawVariable0.updateOntologyTerm(ontologyTerm9);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("1", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.2278680974667573
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm2);
      rawVariable2.addOntologyTerms(arrayList1);
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable2.isCoded());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
}
