/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 02:43:40 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import net.sourceforge.schemaspy.view.DefaultSqlFormatter;
import net.sourceforge.schemaspy.view.SqlFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 85, 44);
      boolean boolean0 = foreignKeyConstraint0.isReal();
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      BiConsumer<String, Object> biConsumer0 = (BiConsumer<String, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap1.forEach(biConsumer0);
      foreignKeyConstraint0.getName();
      hashMap1.put("R4myS#^wEIo", (Table) null);
      boolean boolean1 = foreignKeyConstraint0.isImplied();
      assertEquals(85, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean1 == boolean0);
      assertEquals(44, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DECIMAL");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+yo=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "   -t databaseType       type of database - defaults to ora", (byte)0, 1);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " ", (-14), 3);
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config0.setCss("UTF-8");
      config1.setSingleSignOn(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = " ";
      stringArray0[4] = "UTF-8";
      stringArray0[6] = "UTF-8";
      foreignKeyConstraint0.isRestrictDelete();
      Config config2 = Config.getInstance();
      config1.setImpliedConstraintsEnabled(false);
      config1.setCatalog("UTF-8");
      config2.setEvaluateAllEnabled(true);
      config2.setHighQuality(true);
      Config config3 = new Config();
      Config config4 = Config.getInstance();
      Config.getInstance();
      config4.setSingleSignOn(false);
      config1.getCharset();
      Config config5 = Config.getInstance();
      config5.isEvaluateAllEnabled();
      Config config6 = null;
      try {
        config6 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6105981585090818
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " ", (-14), 1);
      Config config0 = Config.getInstance();
      config0.isSchemaDisabled();
      config0.getDbType();
      Config config1 = Config.getInstance();
      config0.setCss("UTF-8");
      config1.setSingleSignOn(false);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      Config config2 = Config.getInstance();
      config1.setImpliedConstraintsEnabled(false);
      config1.setCatalog("UTF-8");
      config2.setEvaluateAllEnabled(true);
      config2.setHighQuality(true);
      Config config3 = new Config();
      Config config4 = new Config();
      Config.getInstance();
      config4.setFontSize((-14));
      config4.setSingleSignOn(false);
      config1.getCharset();
      Config config5 = Config.getInstance();
      config5.isEvaluateAllEnabled();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      assertEquals((-14), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8797877350457353
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "U]ksan#g:e:", 3, 3);
      Config config0 = new Config();
      Config config1 = new Config();
      config1.isLogoEnabled();
      config1.getCatalog();
      config0.isEncodeCommentsEnabled();
      config1.setSingleSignOn(false);
      config1.getSchemaSpec();
      config0.setFontSize(2504);
      Config config2 = new Config();
      config0.getPassword();
      Config config3 = new Config();
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      config0.getParam("UTF-8");
      config2.setSqlFormatter((SqlFormatter) null);
      config0.getCss();
      config1.setEvaluateAllEnabled(false);
      config0.setDescription("UTF-8");
      config1.getCss();
      Config config4 = new Config();
      config4.setCatalog("UTF-8");
      Config config5 = new Config();
      Config config6 = new Config();
      config6.setCatalog("UTF-8");
      Config config7 = new Config();
      Config config8 = new Config();
      Config config9 = new Config();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      config9.isHtmlGenerationEnabled();
      Config config10 = new Config();
      Config config11 = new Config();
      // Undeclared exception!
      try { 
        config8.getUser();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Required parameter '-u' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6142966247203678
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Config config0 = new Config(stringArray0);
      Config config1 = Config.getInstance();
      config1.isSchemaDisabled();
      Config.getInstance();
      Integer integer0 = new Integer(16);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-5), (-5));
      foreignKeyConstraint0.getDeleteRuleName();
      Integer integer1 = new Integer((-5));
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleAlias();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-5), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-5), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "9", (-14), 2);
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config0.setCss("UTF-8");
      config1.setSingleSignOn(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "9";
      stringArray0[4] = "UTF-8";
      stringArray0[6] = "UTF-8";
      Config config2 = new Config();
      foreignKeyConstraint0.isNullOnDelete();
      Config config3 = Config.getInstance();
      config0.setImpliedConstraintsEnabled(true);
      config1.setCatalog("UTF-8");
      config3.setEvaluateAllEnabled(true);
      config3.setHighQuality(true);
      Config.getInstance();
      Config config4 = Config.getInstance();
      config4.setSingleSignOn(false);
      Config.getInstance();
      Config config5 = null;
      try {
        config5 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PRIMARY");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(l7h^_ndK'\"qS1S", 2, 2);
      foreignKeyConstraint0.getDeleteRuleDescription();
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      hashMap0.put("(l7h^_ndK'\"qS1S", (Table) null);
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      hashMap0.put("Null on delete:\n Foreign key to parent set to NULL when parent deleted", (Table) null);
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      hashMap2.replace("(l7h^_ndK'\"qS1S", (Table) null);
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap9 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap10 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap11 = new HashMap<String, Table>(2);
      // Undeclared exception!
      try { 
        hashMap3.computeIfPresent("aSgjE-^@", (BiFunction<? super String, ? super Table, ? extends Table>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.removeChild((TableColumn) null);
      tableColumn0.unlinkChildren();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0, (-14), (-7));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.02285770806073
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, (-2244));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Integer integer0 = new Integer(0);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(2371L);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-2244), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)127;
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte)115;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]@A,xHe#51pxE]p");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleAlias();
      Config.getInstance();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "]/", 0, 0);
      Config.getInstance();
      Config config0 = Config.getInstance();
      config0.setSingleSignOn(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "]/";
      stringArray0[1] = "";
      stringArray0[6] = "UTF-8";
      Config config1 = new Config();
      foreignKeyConstraint0.isCascadeOnDelete();
      Config.getInstance();
      Config config2 = Config.getInstance();
      config2.getParam(stringArray0[4]);
      config2.setImpliedConstraintsEnabled(true);
      config1.setHighQuality(true);
      Config config3 = Config.getInstance();
      config3.setSingleSignOn(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Config.getInstance();
      Config config4 = null;
      try {
        config4 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "JALlzHMu@hlD?6^(", 85, 49);
      foreignKeyConstraint0.isCascadeOnDelete();
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      hashMap0.put("JALlzHMu@hlD?6^(", (Table) null);
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      hashMap0.put("", (Table) null);
      hashMap0.put("usxMmj~", (Table) null);
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap9 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap10 = new HashMap<String, Table>(49);
      HashMap<String, Table> hashMap11 = new HashMap<String, Table>(hashMap2);
      hashMap9.clone();
      hashMap3.clear();
      // Undeclared exception!
      try { 
        hashMap9.computeIfPresent("JALlzHMu@hlD?6^(", (BiFunction<? super String, ? super Table, ? extends Table>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Table table0 = null;
      Database database0 = null;
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      hashMap0.put("defaultValue", (Table) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 166, 3);
      foreignKeyConstraint0.getName();
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      String string0 = "H(g-EUT>o";
      Table table1 = null;
      try {
        table1 = new Table((Database) null, "", "^$lVQ%", "", "H(g-EUT>o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Table", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vf6nw^$Dg5ftE", 18, 18);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "vf6nw^$Dg5ftE", 47, 18);
      assertEquals(47, foreignKeyConstraint1.getUpdateRule());
      assertEquals(18, foreignKeyConstraint1.getDeleteRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6142966247203678
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Config config0 = Config.getInstance();
      Config.getInstance();
      config0.isImpliedConstraintsEnabled();
      config0.setSingleSignOn(true);
      String[] stringArray0 = new String[0];
      Config config1 = new Config(stringArray0);
      Config config2 = Config.getInstance();
      config2.isSchemaDisabled();
      Config.getInstance();
      Integer integer0 = new Integer(16);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 11, 11);
      foreignKeyConstraint0.getDeleteRuleName();
      Integer integer1 = new Integer(11);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleAlias();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(11, int0);
      assertEquals(11, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8704377949394804
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t>,ju&&TF:u-7eT@ns");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String[] stringArray0 = new String[0];
      Config config0 = new Config(stringArray0);
      config0.isViewsEnabled();
      config0.setSingleSignOn(true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      foreignKeyConstraint0.isRestrictDelete();
      Integer.valueOf(0);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      Integer integer0 = new Integer(0);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string1);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dwP5zjdSph", (-1010), 0);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list1 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint.toString(list0);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add(tableColumn0);
      ForeignKeyConstraint.toString(list1);
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumn tableColumn2 = null;
      try {
        tableColumn2 = new TableColumn((Table) null, (TableColumnMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Table table0 = null;
      int int0 = 18;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "=YV43nv*aC\"=@Oo<", 18, 18);
      int int1 = 792;
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "=YV43nv*aC\"=@Oo<", 33, 792);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.020305825226517
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.isSingleSignOn();
      config0.setSingleSignOn(true);
      config0.getDb();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      config0.setDb("");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1445, 6);
      foreignKeyConstraint0.getChildColumns();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(1445, int0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(6, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "]/", 2, 2);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      Config.getInstance();
      Config config0 = new Config();
      config0.setSingleSignOn(true);
      Config config1 = new Config();
      Config config2 = Config.getInstance();
      config0.isHighQuality();
      config2.setMeta("]/");
      Config config3 = Config.getInstance();
      // Undeclared exception!
      try { 
        config3.getUser();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Required parameter '-u' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-2990);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on delete", (-845), 17);
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      hashMap0.put("5 ~'@zkp", (Table) null);
      foreignKeyConstraint0.getName();
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      BiFunction<Object, Table, Table> biFunction0 = null;
      // Undeclared exception!
      try { 
        hashMap2.computeIfPresent("C>C\"rh(~", (BiFunction<? super String, ? super Table, ? extends Table>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?w~JSz=_tRI)6:w");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)105;
      byteArray0[4] = (byte)105;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[3] = (byte) (-72);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vFu>0-U");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vFu>0-U", 0, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ESCAPE");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ESCAPE");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yx=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[13];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yx=");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yx=", 0, 0);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, foreignKeyConstraint0.getDeleteRule());
      
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",_bt[^nU1'bOJ=yc}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "JALlzHMu@hlD?6^(", 85, 49);
      foreignKeyConstraint0.isNullOnDelete();
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      hashMap0.put("JALlzHMu@hlD?6^(", (Table) null);
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      hashMap0.put("usxMmj~", (Table) null);
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap9 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap10 = new HashMap<String, Table>(49);
      HashMap<String, Table> hashMap11 = new HashMap<String, Table>(hashMap9);
      hashMap11.clone();
      hashMap11.clear();
      // Undeclared exception!
      try { 
        hashMap11.computeIfPresent("usxMmj~", (BiFunction<? super String, ? super Table, ? extends Table>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(l7h^_ndK'\"qS1S", (-23), (-23));
      foreignKeyConstraint0.getDeleteRuleDescription();
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      hashMap0.replace("(l7h^_ndK'\"qS1S", (Table) null);
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap9 = null;
      try {
        hashMap9 = new HashMap<String, Table>((-23));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -23
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(l7h^_ndK'\"qS1S", (-23), (-23));
      String string0 = "aSg\\jE-^@";
      foreignKeyConstraint0.getDeleteRuleDescription();
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      hashMap1.replace("(l7h^_ndK'\"qS1S", (Table) null);
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap9 = new HashMap<String, Table>();
      BiFunction<Object, Table, Table> biFunction0 = null;
      HashMap<String, Table> hashMap10 = null;
      try {
        hashMap10 = new HashMap<String, Table>((-23));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -23
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HGz", (-14), 2);
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config0.setCss("UTF-8");
      config1.setSingleSignOn(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "HGz";
      stringArray0[4] = "UTF-8";
      stringArray0[6] = "UTF-8";
      Config config2 = new Config();
      foreignKeyConstraint0.isRestrictDelete();
      Config config3 = Config.getInstance();
      config0.setImpliedConstraintsEnabled(true);
      config1.setCatalog("UTF-8");
      config3.setEvaluateAllEnabled(false);
      config3.setHighQuality(true);
      Config.getInstance();
      Config config4 = Config.getInstance();
      config4.setSingleSignOn(false);
      Config.getInstance();
      Config config5 = null;
      try {
        config5 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0275204535866354
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "aSgjE-^@", (-1319), 1445);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)83;
      byteArray0[6] = (byte)2;
      byteArray0[2] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getUpdateRule();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint1.isRestrictDelete();
      assertEquals((-1319), foreignKeyConstraint1.getUpdateRule());
      assertEquals(1445, foreignKeyConstraint1.getDeleteRule());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0188624449286268
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "aSgjE-^@", (-1319), 1445);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      int int0 = foreignKeyConstraint1.getUpdateRule();
      assertEquals((-1319), int0);
      
      foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals(1445, foreignKeyConstraint1.getDeleteRule());
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vf6nw^$DZ5ftE", 18, 18);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "vf6nw^$DZ5ftE", 47, 18);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 18;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "=YV43nv*aC\"=@Oo<", 18, 18);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      hashMap0.put("5 ~'@zkp", (Table) null);
      HashMap<String, Table> hashMap1 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap2 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap3 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap4 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap5 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap6 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap7 = new HashMap<String, Table>();
      HashMap<String, Table> hashMap8 = new HashMap<String, Table>();
      BiFunction<Object, Table, Table> biFunction0 = null;
      HashMap<String, Table> hashMap9 = new HashMap<String, Table>(18);
      HashMap<String, Table> hashMap10 = new HashMap<String, Table>();
      // Undeclared exception!
      try { 
        hashMap10.computeIfPresent(" via ", (BiFunction<? super String, ? super Table, ? extends Table>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[13];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[0] = (byte)0;
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B[wfCQf");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",_bt[^nU1'bOJ=yc}");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wfCQf");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 17, (-23));
      foreignKeyConstraint0.getChildTable();
      assertEquals((-23), foreignKeyConstraint0.getDeleteRule());
      assertEquals(17, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5179816404051354
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "3E<<Tv.@.^`}", 2289, 2289);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "MYX1{rq=e+X_G!d8iDG", 8, 18);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(18, foreignKeyConstraint1.getDeleteRule());
      assertEquals(58, int0);
      assertEquals(8, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Table table0 = null;
      int int0 = 18;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vf6nw^$Dg5ftE", 18, 18);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "vf6nw^$Dg5ftE", 47, 18);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?w~JSz=_tRI)6:w");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)119;
      byteArray0[3] = (byte) (-72);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vFu>0-U", 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vFu>0-U");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]@,xH51pxE]p");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?w~JSz=_tRI)6:w");
      System.setCurrentTimeMillis((byte)105);
      System.setCurrentTimeMillis(0);
      foreignKeyConstraint0.getParentTable();
      assertEquals("Cascade on delete", foreignKeyConstraint0.getDeleteRuleName());
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "U]ksan#g:e:", 2, 2);
      Config config0 = new Config();
      Config config1 = new Config();
      config1.isLogoEnabled();
      config1.getCatalog();
      config0.isEncodeCommentsEnabled();
      config1.setSingleSignOn(false);
      config1.getSchemaSpec();
      config0.setFontSize(2500);
      Config config2 = new Config();
      config0.getPassword();
      Config config3 = new Config();
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      config0.getParam("UTF-8");
      config2.setSqlFormatter((SqlFormatter) null);
      config0.getCss();
      config1.setEvaluateAllEnabled(false);
      config0.setDescription("UTF-8");
      config1.getCss();
      Config config4 = new Config();
      config4.setCatalog("UTF-8");
      Config config5 = new Config();
      Config config6 = new Config();
      config6.setCatalog("UTF-8");
      Config config7 = new Config();
      Config config8 = new Config();
      Config config9 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkChildren();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0, 1301, 2440);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.clone();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      linkedList1.toArray();
      linkedList0.removeAll(linkedList1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }
}
