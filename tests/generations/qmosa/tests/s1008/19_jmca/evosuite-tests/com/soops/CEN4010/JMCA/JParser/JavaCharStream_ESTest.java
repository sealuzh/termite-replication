/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 03:19:51 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3834744755118558
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte)14;
      byteArray0[6] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = false;
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'w';
      charArray0[2] = '|';
      charArray0[3] = 'c';
      charArray0[4] = '@';
      charArray0[5] = 'q';
      charArray0[6] = '=';
      javaCharStream0.nextCharBuf = charArray0;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2);
      javaCharStream0.readChar();
      stringReader0.mark(2457);
      stringReader0.reset();
      javaCharStream0.getLine();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.572989917092866
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "U`\"(Ilj[QL!n0^P";
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("U`\"(Ilj[QL!n0^P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      javaCharStream0.bufcolumn = null;
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9844935290697796
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=Wn");
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      int int0 = 78;
      stringReader1.skip(603L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 95, 83, 78);
      javaCharStream0.backup((-221));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
      
      int int1 = JavaCharStream.hexval('4');
      assertEquals(4, int1);
      
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, (-468), 58);
      char[] charArray0 = javaCharStream0.GetSuffix(1);
      assertEquals(1, charArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.800611065891437
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zw\"R6s}^Y{WsK");
      stringReader0.mark(0);
      char[] charArray0 = new char[1];
      charArray0[0] = '+';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      stringReader0.mark(8);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-511), (-511));
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      javaCharStream0.backup((-511));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      stringReader1.ready();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn(6, 67);
      javaCharStream0.getEndColumn();
      char char0 = javaCharStream0.readChar();
      assertEquals(8193, javaCharStream0.bufpos);
      assertEquals('8', char0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=Wn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "QD^-*inT|7.");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      javaCharStream0.bufsize = 2525;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 2525, 2525, (-1754));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.666753989434532
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte)14;
      byteArray0[6] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.tokenBegin = 4096;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2);
      javaCharStream0.readChar();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M?>cnOVv> s$9 6HOM8");
      javaCharStream0.adjustBeginLineColumn((byte)14, (byte)14);
      // Undeclared exception!
      try { 
        javaCharStream1.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.563368327218625
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte)14;
      byteArray0[6] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = true;
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'w';
      charArray0[2] = '|';
      charArray0[3] = 'c';
      charArray0[4] = '@';
      charArray0[5] = 'q';
      charArray0[6] = '=';
      javaCharStream0.nextCharBuf = charArray0;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2);
      javaCharStream0.readChar();
      stringReader0.mark(2457);
      stringReader0.reset();
      javaCharStream0.getLine();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4934992030192618
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byte byte0 = (byte)14;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)0);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.maxNextCharInd = (int) (byte) (-25);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 0, 2);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y04%uqS");
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5363754860544336
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-511), 1420);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      javaCharStream0.backup(1420);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = '=';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1392), 215, 215);
      javaCharStream0.adjustBeginLineColumn(2048, (-1));
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4620975966507315
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      stringReader0.read();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O");
      stringReader0.markSupported();
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[1] = 'X';
      charArray0[5] = 'X';
      stringReader0.read(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O");
      int int0 = 0;
      int int1 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1216, (-1), 0);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "U`\"(Ilj[QL!n0^P";
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9627412385891563
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2);
      javaCharStream1.Done();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((byte)14, (byte)14);
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('C');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(1271);
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      javaCharStream0.maxNextCharInd = (-1557);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4594918489362305
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)94;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)92;
      byteArray0[8] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)94);
      pushbackInputStream0.unread(266);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream1.adjustBeginLineColumn((byte) (-1), (byte)50);
      javaCharStream1.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, 1, (byte) (-1), 2);
      pushbackInputStream0.read();
      javaCharStream2.GetSuffix(65);
      // Undeclared exception!
      try { 
        javaCharStream2.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2200820606877794
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #HNKap");
      StringReader stringReader1 = new StringReader("Dd8HE)= #HNKap");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 79, 79, 79);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.bufpos = (-962);
      stringReader1.close();
      javaCharStream0.backup(9);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -891
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 4315;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4315, 4315, 4315);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 6194;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6194, (-3351), 6194);
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = '7';
      charArray0[2] = '\'';
      charArray0[3] = '@';
      stringReader0.read(charArray0);
      charArray0[4] = '5';
      charArray0[5] = '1';
      charArray0[6] = 'R';
      charArray0[7] = 'Z';
      stringReader0.read(charArray0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, 75, 848);
      javaCharStream0.bufpos = 1171;
      stringReader0.skip(1679L);
      javaCharStream0.adjustBeginLineColumn(1289, 75);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.371644425485752
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)94;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)92;
      byteArray0[8] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)94);
      byteArrayInputStream0.skip(0L);
      pushbackInputStream0.unread(266);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream1.adjustBeginLineColumn((byte) (-1), (byte)50);
      javaCharStream1.readChar();
      stringReader0.ready();
      javaCharStream1.ExpandBuff(true);
      assertEquals(0, byteArrayInputStream0.available());
      
      char char0 = javaCharStream0.ReadByte();
      assertEquals('^', char0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.599289674207493
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-511), 1420);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      javaCharStream0.backup(1420);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      int int0 = 78;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 95, 83, 78);
      javaCharStream1.backup((-221));
      javaCharStream0.getEndLine();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream(stringReader2, 713, 3116, (-511));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[6];
      stringReader0.skip((-678L));
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      charArray0[1] = '=';
      charArray0[2] = '~';
      charArray0[3] = '@';
      JavaCharStream.hexval('A');
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.477512467439675
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("U`\"(Ilj[QL!n0^P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 435, (byte) (-25), (byte)1);
      javaCharStream1.backup((-166));
      javaCharStream0.getEndLine();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream(stringReader0, (byte)1, (-322), (-2227));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5601507502065712
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOQ> s$9 :hOM8");
      byte byte0 = (byte) (-1);
      byte byte1 = (byte)101;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, (byte) (-1), 72);
      javaCharStream0.backup(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getEndLine();
      javaCharStream0.UpdateLineColumn('f');
      javaCharStream0.getEndColumn();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, (byte)101, 101, (-2699));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6859940204615342
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = 1868;
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(92, (-431));
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.FillBuff();
      javaCharStream0.getEndLine();
      javaCharStream0.ReadByte();
      stringReader0.ready();
      javaCharStream0.getEndColumn();
      stringReader0.skip(92);
      javaCharStream0.GetSuffix(92);
      javaCharStream0.getBeginLine();
      stringReader0.skip(92);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      javaCharStream0.UpdateLineColumn('3');
      javaCharStream0.getLine();
      javaCharStream0.getColumn();
      javaCharStream0.getColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-431));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream.hexval('b');
      try { 
        JavaCharStream.hexval('.');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      StringReader stringReader1 = new StringReader("M?>cnOVv> s$9 6HOM8");
      stringReader1.markSupported();
      char[] charArray0 = new char[7];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[4] = 'X';
      charArray0[5] = 'X';
      charArray0[6] = 'X';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, (-2769), 7);
      javaCharStream0.adjustBeginLineColumn((-33), 85);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2769));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "Dd8HE)=#NKap";
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.538968112702468
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte)14;
      byteArray0[6] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2);
      javaCharStream0.readChar();
      stringReader0.mark(2457);
      stringReader0.reset();
      javaCharStream0.getLine();
      javaCharStream0.readChar();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream.hexval('a');
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      JavaCharStream.hexval('e');
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        pipedOutputStream1.write((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.OutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[2] = (-4235);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaCharStream.hexval('B');
      String string0 = "";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "U`\"(Ilj[QL!n0^P";
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "U`\"(Ilj[QL!n0^P";
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O");
      stringReader0.markSupported();
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[5] = 'X';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2497336340073364
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("34X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 122, 122);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(122, 12);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('X', char0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.1052312384375966
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[1];
      charArray0[0] = '+';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte)110;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-511), 1429);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.close();
      javaCharStream0.backup(2176);
      javaCharStream0.BeginToken();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)72;
      pipedOutputStream0.write(byteArray0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('d');
      String string0 = "Lj.";
      String string1 = "";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("\"^Yy,Ltu$naELYdJ5F", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.535594614456435
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOQ> s$9 :hOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte) (-25);
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'E';
      charArray0[2] = '-';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.UpdateLineColumn('E');
      javaCharStream0.getEndColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-115), 0, 1);
      javaCharStream1.readChar();
      javaCharStream0.adjustBeginLineColumn(0, (byte) (-1));
      javaCharStream0.getLine();
      javaCharStream1.GetSuffix(0);
      javaCharStream1.GetSuffix(2);
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaCharStream.hexval('5');
      StringReader stringReader0 = new StringReader("x_]BOr~O%:ko<Kw");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("x_]BOr~O%:ko<Kw", "D:_,~P'u]SQG+T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"D:_,~P'u]SQG+T\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5211216510400676
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("=Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-511), 1429);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader1.close();
      javaCharStream0.backup(2176);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (int) '\u0000';
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream1.bufcolumn = intArray0;
      javaCharStream0.GetImage();
      stringReader0.ready();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)72;
      pipedOutputStream0.write(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn((byte)79, (byte)2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(696);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.057941779994331
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2, (-94));
      javaCharStream0.adjustBeginLineColumn((-94), 117);
      pipedInputStream0.skip((-173L));
      javaCharStream0.adjustBeginLineColumn((-282), 2);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1056), 2, 92);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "U`\"(Ilj[QL!n0^P";
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream.hexval('E');
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("oTiIB,$14^DOB;o_q#", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
      
      int int1 = JavaCharStream.hexval('3');
      assertEquals(3, int1);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4934992030192618
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-95);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.ExpandBuff(true);
      assertEquals(2051, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8900917864610864
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("U`\"(Ilj[QL!n0^P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.bufsize = 0;
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      int int0 = 5309;
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (-1), 0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.GetImage();
      javaCharStream1.GetSuffix(0);
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.61453136682874
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOQ> s$9 :hOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'E';
      charArray0[2] = '-';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.bufsize = 2;
      boolean boolean0 = JavaCharStream.staticFlag;
      javaCharStream0.getEndLine();
      javaCharStream0.UpdateLineColumn('Y');
      javaCharStream0.getEndColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-115), 0, 1);
      javaCharStream1.readChar();
      javaCharStream0.adjustBeginLineColumn(0, (byte) (-1));
      javaCharStream0.getLine();
      javaCharStream1.GetSuffix(0);
      javaCharStream1.GetSuffix(2);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.083072421554508
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[4] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 93, 399, 14);
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((byte) (-115), 90);
      javaCharStream0.getLine();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      assertEquals(4096, charArray1.length);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|+45ANM Y");
      int int0 = 10;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 10, 10);
      int int1 = (-2026);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-2026), (-2026), 81);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaCharStream.hexval('2');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('l');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7917599188400173
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=Wn");
      int int0 = 1429;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-511), 1429);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(1429);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 1429, 1);
      javaCharStream1.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      javaCharStream0.backup((byte)50);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      stringReader0.ready();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(byteArray0);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, 2, (-351));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.008291733115361
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOQ> s$9 :hOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'E';
      charArray0[2] = '-';
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.UpdateLineColumn('Y');
      javaCharStream0.getEndColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-115), 0, 1);
      javaCharStream0.adjustBeginLineColumn((-1), (byte) (-1));
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.8184506609563127
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte)14;
      byteArray0[6] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2);
      javaCharStream0.readChar();
      javaCharStream0.column = (int) (byte)101;
      javaCharStream0.adjustBeginLineColumn((byte)14, (byte)14);
      // Undeclared exception!
      try { 
        javaCharStream1.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.227754694958879
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("");
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.22008206068778
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lGnN");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.flip();
      stringReader0.read(charBuffer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "IaXv{!4CrU6oqd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6o:");
      stringReader0.mark(4086);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4059, (-2187), 0);
      javaCharStream0.readChar();
      char[] charArray1 = javaCharStream0.GetSuffix(6);
      assertEquals((-2187), javaCharStream0.getBeginColumn());
      assertEquals(6, charArray1.length);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', 'l'}, charArray1);
      assertEquals(4059, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6626654115877564
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      char[] charArray0 = new char[1];
      charArray0[0] = '{';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader1.close();
      StringReader stringReader2 = new StringReader("K>RwZ%a{5]#SudQ$-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 86, (-1544), 1455);
      javaCharStream0.backup((-1544));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 91, 86);
      javaCharStream1.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      javaCharStream0.ExpandBuff(false);
      stringReader2.ready();
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.GetSuffix(1);
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)=#NKap");
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charBuffer0.limit(6);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Dd8HE)=#NKap");
      charArray0[1] = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.514304761375524
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      stringReader0.markSupported();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("E");
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) null, (-1), (-476), 53);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[6];
      charArray0[0] = ',';
      charArray0[1] = '=';
      charArray0[2] = '~';
      charArray0[3] = '@';
      charArray0[4] = '0';
      charArray0[5] = 'X';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((InputStream) null, 69, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5390443660090978
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)=#NKap");
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[0] = ',';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 175, 0, 6);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 8, 101);
      javaCharStream0.GetImage();
      stringReader0.ready();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.7972039944873743
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-511), 1429);
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      int int0 = 13;
      javaCharStream0.backup(13);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 13, (-511));
      javaCharStream1.BeginToken();
      javaCharStream1.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      int int1 = (-1);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, 4082, (-511));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      try { 
        stringReader2.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)73;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte) (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), (byte) (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.9011591395355761
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      charArray0[1] = '=';
      charArray0[2] = '~';
      charArray0[3] = '@';
      charArray0[4] = '0';
      charBuffer0.mark();
      charArray0[5] = 'X';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, (-1040), 6, 6);
      try { 
        JavaCharStream.hexval(' ');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream.hexval('c');
      String string0 = "oTiIB,$14^DOB;o_q#";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"com.soops.CEN4010.JMCA.JParser.JavaCharStream\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+':q:{NDq");
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaCharStream.hexval('D');
      String string0 = "oTiIB,$14^DOB;o_q#";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("O", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaCharStream.hexval('f');
      String string0 = "A";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("A", "A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"A\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.477512467439675
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader(" CDhLcf");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-120));
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader(" ");
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte)0, 0, 15);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6298470921200745
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (byte) (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (byte) (-1), (-1225));
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0018442867649786
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      StringReader stringReader0 = new StringReader("BJK$MZ_WEX");
      javaCharStream0.FillBuff();
      int int0 = javaCharStream0.getColumn();
      assertEquals(13, javaCharStream0.getEndColumn());
      assertEquals(13, int0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.3420158589513322
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.647372640238307
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("BJK$MZ_WEX");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.307544026108062
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      stringReader0.markSupported();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("");
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #HNKap");
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5012964739744277
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      CharBuffer.allocate(6);
      charArray0[1] = '=';
      charArray0[2] = '~';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 6);
      javaCharStream0.backup(6);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      stringReader0.ready();
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      assertEquals(4102, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 179, 179);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-5635), 574, (-5635));
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.482856956024611
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4221), 0, 10);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream(727);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = (int) 'E';
      pipedInputStream0.markSupported();
      intArray0[2] = (-4221);
      intArray0[3] = 727;
      intArray0[4] = (int) 'E';
      intArray0[5] = (-1756);
      JavaCharStream.hexval('1');
      javaCharStream0.ReInit((Reader) stringReader0, 69, 727);
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2, (-94));
      javaCharStream0.ReInit((Reader) null, (-1), (-1926));
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2, (-94));
      javaCharStream0.tokenBegin = (-327);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-94), 117);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -327
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)29;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)94;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 5, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M?>cnOVv> s$9 6HOM8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byte byte0 = (byte)14;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.backup((byte)1);
      javaCharStream0.bufsize = 2;
      javaCharStream0.getEndLine();
      javaCharStream0.bufpos = (int) (byte)14;
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 14, 0, 2);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.8406331574008226
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("U`\"(Ilj[QL!n0^P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      StringReader stringReader1 = new StringReader("3EJFM&}sq_A5,KRhU\"a");
      stringReader1.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 2048, 99);
      javaCharStream1.bufpos = 87;
      javaCharStream1.GetImage();
      int int0 = 80;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 6194;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6194, (-3351), 6194);
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = '7';
      charArray0[2] = '\'';
      charArray0[3] = '@';
      charArray0[4] = '5';
      charArray0[5] = '1';
      charArray0[6] = 'R';
      charArray0[7] = 'Z';
      stringReader0.read(charArray0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.0018442867649786
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, 13);
      StringReader stringReader0 = new StringReader("BJK$MZ_WEX");
      javaCharStream0.FillBuff();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-511), 1429);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader1.close();
      javaCharStream0.backup((-84));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.9011591395355761
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[1];
      charArray0[0] = '+';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Dd8HE)= #NKap");
      charBuffer0.mark();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 0);
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader1, 1, 1, 0);
      try { 
        JavaCharStream.hexval('~');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 998, 998);
      javaCharStream0.adjustBeginLineColumn(998, (-690));
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 3016);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream1, 998, (-154));
      assertEquals(999, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[3] = 'X';
      charArray0[1] = 'X';
      charArray0[3] = 'X';
      stringReader0.read(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1216, (-1), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 950, 3110, 950);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsCR = true;
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.1817319207582866
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lGnN");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[0] = ',';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charBuffer0.limit(4);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "IaXv{!4CrU6oqd");
      charArray0[1] = 'P';
      charBuffer0.mark();
      charArray0[2] = '\u0087';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lGnN");
      charArray0[3] = '@';
      charArray0[4] = '0';
      stringReader0.read(charBuffer0);
      stringReader0.mark(79);
      charArray0[5] = 'f';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('+');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dg6+6KgkSUyB=FQ^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-671), 95, 95);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(238);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1), 1369, 6);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oTiIB,$14^DOB;o_q#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4227), 72, 3400);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oTiIB,$14^DOB;o_q#");
      stringReader0.markSupported();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("<l=cG6^ZV;YJ!}EFq", " column ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \" column \" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = null;
      String string1 = null;
      String string2 = ".";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 78, 78);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.0957074289137867
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)=#NKap");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "IaXv{!4CrU6oqd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Dd8HE)=#NKap");
      stringReader0.mark(79);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char char0 = javaCharStream0.readChar();
      assertEquals('D', char0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.42165311553335094
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream.hexval('8');
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.502808529414703
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.ready();
      charArray0[1] = '=';
      charArray0[2] = '~';
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 6);
      javaCharStream0.backup(6);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      javaCharStream0.ReInit((InputStream) dataInputStream0, 84, 74, 84);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 66);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 90, 90, 90);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 95);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1, 450, 1, 450);
      JavaCharStream.hexval('6');
      String string0 = null;
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1));
      char[] charArray0 = new char[4];
      charArray0[0] = '$';
      charArray0[1] = '@';
      charArray0[2] = ':';
      charArray0[3] = 'd';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = "oTiIB,$14^DOB;o_q#";
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 9, 9, (-1594));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte)71;
      byteArray0[5] = (byte)108;
      byteArray0[6] = (byte)23;
      byteArray0[7] = (byte)65;
      byteArray0[8] = (byte)114;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B~S");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.9983077343878204
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.bufline = null;
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "=O}<]&6_{z\"";
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("=O}<]&6_{z\"");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 1);
      int int0 = 6117;
      javaCharStream0.ReInit((Reader) stringReader0, 6117, 55, 55);
      stringReader0.mark(2101);
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("^VnI~NCc`u<<UF1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(669, 96);
      javaCharStream0.inBuf = 89;
      assertEquals(96, javaCharStream0.getBeginColumn());
      assertEquals(670, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = "Lj.";
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-28);
      byteArray0[5] = (byte) (-85);
      byteArray0[6] = (byte) (-64);
      byteArray0[7] = (byte) (-118);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-117));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2273), (byte) (-1));
      StringReader stringReader0 = new StringReader("Lj.");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-64), (int) (byte)0, (int) (byte) (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[1] = 'x';
      charArray0[2] = 'k';
      charArray0[3] = '>';
      charArray0[4] = '6';
      charArray0[5] = 'b';
      charArray0[6] = 'U';
      StringReader stringReader0 = new StringReader("BJK$MZ_WEX");
      StringReader stringReader1 = new StringReader("BJK$MZ_WEX");
      javaCharStream0.ReInit((Reader) stringReader1);
      assertEquals((-1), javaCharStream0.bufpos);
  }
}
