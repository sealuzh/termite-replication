/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 01:36:58 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6379713351026983
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-^ewlines");
      outputFormat0.setIndentSize(1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-^ewlines";
      stringArray0[1] = "-^ewlines";
      outputFormat0.setIndentSize((-1577));
      stringArray0[2] = "-^ewlines";
      stringArray0[3] = "-^ewlines";
      stringArray0[4] = "-^ewlines";
      stringArray0[5] = "-^ewlines";
      stringArray0[7] = "-^ewlines";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("0(]!84)io");
      outputFormat0.setIndentSize(324);
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("-padText");
      String[] stringArray1 = new String[15];
      stringArray1[0] = "-padText";
      stringArray1[1] = "-padText";
      stringArray1[2] = "-indent";
      stringArray1[3] = "-^ewlines";
      stringArray1[4] = "0(]!84)io";
      stringArray1[5] = "-^ewlines";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.getLineSeparator();
      assertEquals("-^ewlines", outputFormat0.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.521586834652811
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("|-nelies");
      outputFormat0.setIndentSize(2340);
      outputFormat0.setIndentSize(2340);
      outputFormat0.setIndentSize(2340);
      outputFormat0.setIndentSize(2330);
      outputFormat0.setIndent("-expandEmp[y-triRTVx");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "|-nelies";
      stringArray0[1] = "-expandEmp[y-triRTVx";
      stringArray0[2] = "-expandEmp[y-triRTVx";
      stringArray0[3] = "-expandEmp[y-triRTVx";
      // Undeclared exception!
      outputFormat0.setIndentSize(1941);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml\triTe");
      OutputFormat outputFormat1 = new OutputFormat("tn2H G#W2t!");
      outputFormat0.setLineSeparator("Ind4P={Y/b=x,Bs");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-xhtml\triTe";
      stringArray0[2] = "-expandEmptynM]I^vX6$zH*ck~+";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-xhtml\triTe";
      stringArray0[5] = "Ind4P={Y/b=x,Bs";
      stringArray0[6] = "Ind4P={Y/b=x,Bs";
      stringArray0[7] = "tn2H G#W2t!";
      stringArray0[8] = "tn2H G#W2t!";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-xhtml\triTe\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = new OutputFormat("");
      OutputFormat outputFormat2 = new OutputFormat("Bp:)nD,");
      outputFormat1.setLineSeparator("");
      outputFormat2.setLineSeparator("-expandEmpty|-newlines");
      outputFormat2.setOmitEncoding(false);
      outputFormat0.setLineSeparator("-encoding");
      outputFormat1.getEncoding();
      outputFormat1.setIndent((String) null);
      OutputFormat outputFormat3 = new OutputFormat("-newlines", false, (String) null);
      outputFormat3.setOmitEncoding(false);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat3.getEncoding();
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      outputFormat0.parseOptions(stringArray0, 1970);
      assertEquals("-encoding", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.93817812649062
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = new OutputFormat(",><l.q/j");
      OutputFormat outputFormat2 = new OutputFormat(",><l.q/j");
      OutputFormat outputFormat3 = new OutputFormat("-encoding");
      outputFormat3.setLineSeparator("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "-encoding";
      stringArray0[2] = ",._o-^Iq(4}ob8nw";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "4nnrH>p*8]taT[HZB{o";
      outputFormat3.parseOptions(stringArray0, 1);
      outputFormat3.setNewLineAfterDeclaration(true);
      assertEquals("-trimText", outputFormat3.getEncoding());
      
      OutputFormat outputFormat4 = new OutputFormat(",._o-^Iq(4}ob8nw", true);
      outputFormat4.parseOptions(stringArray0, 5);
      String string0 = outputFormat4.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("K%e|`CTCKxXaNd[PU");
      String[] stringArray0 = new String[9];
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml\triTet";
      stringArray0[3] = "rhVL4Yn0";
      outputFormat0.setIndent("-xhtml\triTet");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setNewLineAfterNTags(566);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setLineSeparator("5oQ~NnO");
      outputFormat1.getLineSeparator();
      assertEquals(566, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3168298717228932
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      outputFormat1.setNewlines(true);
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      outputFormat1.setLineSeparator("-trimText");
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "-newlines";
      stringArray1[2] = "-expandEmpty@,3qR^o+yeB*";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "-newlines";
      stringArray1[5] = "-trimText";
      stringArray1[6] = "-trimText";
      stringArray1[7] = "-trimText";
      outputFormat2.parseOptions(stringArray1, 1);
      outputFormat1.setNewLineAfterDeclaration(false);
      assertEquals("-trimText", outputFormat1.getLineSeparator());
      
      outputFormat2.parseOptions(stringArray1, 8);
      outputFormat2.getLineSeparator();
      outputFormat2.setIndent("-trimText");
      outputFormat2.isExpandEmptyElements();
      outputFormat2.parseOptions(stringArray0, 8);
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("p5~nDP");
      String[] stringArray0 = new String[7];
      outputFormat0.setNewLineAfterNTags((-1));
      stringArray0[0] = ";S\"MJ$r||$*k";
      stringArray0[1] = "-xhftml";
      stringArray0[3] = "-xhftml";
      stringArray0[4] = "/=Dg_";
      stringArray0[6] = "p5~nDP";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setEncoding("J6wPHeNa7>*~%9/$H$");
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isExpandEmptyElements();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndent("J6wPHeNa7>*~%9/$H$");
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertEquals("J6wPHeNa7>*~%9/$H$", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-suppressDeclaration";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.964532478280498
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Bp:)nD,");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Bp:)nD,";
      stringArray0[2] = "";
      String[] stringArray1 = new String[7];
      stringArray1[0] = ";KS\"M$r|s|$*}k";
      stringArray1[1] = "-padText";
      stringArray1[3] = "ryB";
      stringArray1[4] = "";
      stringArray1[6] = "Bp:)nD,";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~]#3Yf561W(p[|R", true);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("~]#3Yf561W(p[|R", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0105301834040734
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getLineSeparator());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtml\tiTt";
      stringArray0[1] = "-xhtml\tiTt";
      stringArray0[2] = "-xhtml";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
      
      outputFormat0.setTrimText(true);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean1 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.002393796800374
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("~eDO$", false, (String) null);
      outputFormat0.setNewlines(false);
      OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "~eDO$";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "~eDO$";
      stringArray0[3] = "~eDO$";
      stringArray0[4] = null;
      stringArray0[5] = "~eDO$";
      stringArray0[6] = "UTF-8";
      stringArray0[7] = "~eDO$";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setEncoding("UTF-8");
      OutputFormat outputFormat3 = new OutputFormat("");
      outputFormat3.isSuppressDeclaration();
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      outputFormat5.setIndent(stringArray0[4]);
      outputFormat3.getIndent();
      OutputFormat.createPrettyPrint();
      outputFormat5.isXHTML();
      outputFormat4.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('r');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (r)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("@,qR]+Le", true, "");
      String string0 = outputFormat0.getEncoding();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("@,qR]+Le", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", string0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.94218229742502
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1484);
      outputFormat0.setLineSeparator("6r=,\"W76CrP)(gr");
      outputFormat0.setIndent("-omitEncoding");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "-omitEncoding";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "";
      outputFormat0.setNewlines(false);
      stringArray0[5] = "-expandEmpty)";
      stringArray0[6] = "73}";
      stringArray0[7] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 1484);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[9];
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml\triTet";
      stringArray0[3] = "";
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-omitEncoding";
      OutputFormat outputFormat0 = new OutputFormat("FZNb3mA&4#Ap)W#C;+g", false);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("FZNb3mA&4#Ap)W#C;+g", outputFormat0.getIndent());
      assertEquals('\"', char0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.279591398074532
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Q:`rN");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat1.setNewLineAfterNTags(5169);
      outputFormat0.setIndent(false);
      outputFormat1.setIndent(true);
      outputFormat0.setTrimText(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setEncoding("Q:`rN");
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.getLineSeparator();
      outputFormat1.setTrimText(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isSuppressDeclaration();
      outputFormat0.setIndentSize(5169);
      outputFormat0.setIndentSize(0);
      outputFormat1.isPadText();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setIndent("Yt&J/sFd|X`");
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("[!Fnewlin0s");
      outputFormat0.setIndentSize(2340);
      outputFormat0.setIndentSize(2340);
      boolean boolean0 = true;
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(2340);
      outputFormat0.setIndentSize((-1617250410));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      outputFormat1.setAttributeQuoteCharacter('\'');
      stringArray0[0] = "-expandEmp[y-triRTVx";
      stringArray0[1] = "-expandEmp[g-triRTVx";
      stringArray0[2] = "-expandEmp[y-triRTVx";
      stringArray0[3] = "-expandEmp[y-triRTVx";
      stringArray0[4] = "[!Fnewlin0s";
      stringArray0[5] = "[!Fnewlin0s";
      stringArray0[6] = "-expandEmp[g-triRTVx";
      stringArray0[7] = "-expandEmp[y-triRTVx";
      outputFormat1.setXHTML(true);
      stringArray0[8] = "-xhtml-^ewlines";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1934463762));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1934463762
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9690007561714387
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator((String) null);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      outputFormat3.parseOptions(stringArray0, 0);
      outputFormat3.setIndent("");
      outputFormat1.setIndent("-expandEmpty-e[lies");
      outputFormat1.setIndent("LakLYB");
      assertEquals("LakLYB", outputFormat1.getIndent());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3490447099629428
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_D#*ac$l`\".}M`:";
      stringArray0[1] = "47Movnp;TrG";
      outputFormat0.setIndent("_D#*ac$l`\".}M`:");
      outputFormat0.setIndent("-expandEmptyUTF-8");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("_D#*ac$l`\".}M`:");
      outputFormat0.setIndent("5F~&R");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("_D#*ac$l`\".}M`:");
      outputFormat0.setIndent("-xhtmls92*gs9CBM$*k)2:}:L");
      outputFormat0.setIndent("TKe4. 5GHeg8}xwTjqk");
      assertEquals("TKe4. 5GHeg8}xwTjqk", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7618827443146239
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-^ewlines");
      outputFormat0.setIndentSize((-1577));
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("0(]!84)io");
      outputFormat0.setIndentSize(324);
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("pNsq(8");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-xhtmlorg.dom4j.io.OutputFormat");
      assertEquals("-xhtmlorg.dom4j.io.OutputFormat", outputFormat0.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", false, "-newlines");
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat1.setIndent("-newlines");
      outputFormat0.setOmitEncoding(false);
      outputFormat1.getEncoding();
      outputFormat1.getEncoding();
      outputFormat1.setIndent("%RQ/>y|<a:sst2M:");
      assertEquals("%RQ/>y|<a:sst2M:", outputFormat1.getIndent());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "- wi\"e";
      OutputFormat outputFormat0 = new OutputFormat("- wi\"e");
      String[] stringArray1 = new String[18];
      stringArray1[1] = "- wi\"e";
      stringArray1[2] = "DAf0,wHP7p &9Q|,s&7,";
      stringArray1[4] = "B<kpOflv1*\"lBaQT_0";
      stringArray1[5] = "j(yMnOP/<kOO@#Cd";
      stringArray1[6] = "B<kpOflv1*\"lBaQT_0";
      String[] stringArray2 = new String[2];
      stringArray2[0] = "j(yMnOP/<kOO@#Cd";
      stringArray2[1] = "B<kpOflv1*\"lBaQT_0";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, int0);
      assertEquals("- wi\"e", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3503218491711164
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "- wi\"e";
      OutputFormat outputFormat0 = new OutputFormat("- wi\"e");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(")");
      outputFormat0.setIndent("p<\"e%dYw\"35xmKyuVr3");
      outputFormat0.setIndent("- wi\"e");
      outputFormat0.setIndent("p<\"e%dYw\"35xmKyuVr3");
      outputFormat0.setIndent("_D#*ac$l`\".}M`:");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("j(yMnOP/<OO@#CO");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("TKe4. 5GHeg8}xwTjqk");
      assertEquals("TKe4. 5GHeg8}xwTjqk", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.3035514829319883
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1479);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setTrimText(true);
      outputFormat0.getEncoding();
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = new OutputFormat("(hQI:kHB.*#}BB");
      outputFormat1.setEncoding("(hQI:kHB.*#}BB");
      outputFormat1.isPadText();
      assertEquals("(hQI:kHB.*#}BB", outputFormat1.getEncoding());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isSuppressDeclaration());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.089097845467142
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "%/k}~ml:o>";
      stringArray0[2] = "";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isXHTML();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("UTF-8");
      outputFormat1.setIndentSize(453);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setOmitEncoding(true);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml\triTe");
      String[] stringArray0 = new String[9];
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml\triTet";
      stringArray0[3] = "rhVL4Yn9";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "-xhtml";
      stringArray1[2] = "-xhtml\triTet";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml\tiTt";
      stringArray0[1] = "-^elins";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "K%e|`TCK?xXaNd[PU";
      stringArray0[4] = "kiQ1<6fn2?~^j`z\"ON";
      stringArray0[5] = "K%e|`TCK?xXaNd[PU";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "lT,D^t";
      outputFormat0.parseOptions(stringArray1, 0);
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3650177275867703
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isXHTML();
      outputFormat0.setEncoding("UTF-8");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setXHTML(true);
      OutputFormat outputFormat2 = new OutputFormat("UTF-8");
      outputFormat2.setIndent("UTF-8");
      outputFormat1.setIndent("UTF-8");
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setXHTML(false);
      assertFalse(outputFormat1.isXHTML());
      
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.054403796163291
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("~");
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent("zLqdm|HU'Lu([wTp(P");
      assertEquals("zLqdm|HU'Lu([wTp(P", outputFormat0.getIndent());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("K%e|`CTCKxXaNd[PU", true, "K%e|`CTCKxXaNd[PU");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtml\triTet";
      stringArray0[3] = "rhVL4Yn9";
      stringArray0[2] = "K%e|`TCK?xXaNd[PU";
      stringArray0[3] = "rhVL@=4Yn0";
      stringArray0[4] = "K%e|`CTCKxXaNd[PU";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1886015996));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1886015996
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7575827984108483
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[1] = "%/k}~ml:o>";
      stringArray0[2] = ")";
      stringArray0[3] = "";
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-1933));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1933
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[2];
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isTrimText());
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewlines());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String string0 = outputFormat1.getIndent();
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isXHTML());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertNull(string0);
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isExpandEmptyElements());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9790236231377933
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-^ewlines");
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-^ewlines";
      stringArray0[1] = "-^ewlines";
      stringArray0[2] = "-^ewlines";
      stringArray0[4] = "-^ewlines";
      stringArray0[5] = "-^ewlines";
      stringArray0[7] = "-^ewlines";
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("(E/7$(/&P");
      outputFormat0.setIndent("0(!8)?io");
      outputFormat0.setIndentSize(324);
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-^ewlines");
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent("7-N-?s`");
      outputFormat0.setIndent("-^ewlines");
      assertEquals("-^ewlines", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9607905967689805
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndentSize((-302));
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndentSize((-1577));
      outputFormat0.setIndent(",._o-^Iq(4}o");
      outputFormat0.setIndent("  ");
      outputFormat0.setIndent("-expandEmpty-newlines");
      outputFormat0.setIndent("gk#Y2u'bl88Fa");
      outputFormat0.setIndentSize((-302));
      outputFormat0.setIndent("0(]!84)io");
      outputFormat0.setIndent("#d,{o%]]+:I#");
      outputFormat0.setIndent(",._o-^Iq(4}o");
      outputFormat0.setIndent("");
      outputFormat0.setIndent(",._o-^Iq(4}o");
      outputFormat0.setIndent("*[1?Jm%)*w~84P%");
      outputFormat0.setIndent("*[1?Jm%)*w~84P%");
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals("*[1?Jm%)*w~84P%", outputFormat0.getIndent());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.975507230548075
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("~");
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterDeclaration(false);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "~";
      stringArray0[1] = "~";
      stringArray0[2] = "~";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "  ";
      stringArray0[6] = "";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("  ");
      outputFormat0.setIndent("-indent");
      assertEquals("-indent", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2731712765418886
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-^elins");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "lT,D^t";
      stringArray0[1] = "-expandEmptyrhVL@=4Yn0";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "-expandEmptyrhVL@=4Yn0";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isTrimText());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.47094007591334
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("~");
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterDeclaration(true);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "~";
      stringArray0[1] = "~";
      stringArray0[2] = "~";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "  ";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("  ");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty-xhtm\trTet", true);
      outputFormat1.setOmitEncoding(false);
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isPadText());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isTrimText());
      assertEquals("-expandEmpty-xhtm\trTet", outputFormat1.getIndent());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-Fnd ent", true);
      char char0 = '*';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('_');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (_)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", true);
      char char0 = '*';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("]7G'RwlsM2<O6Qn", true, "-omitEncoding");
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "]7G'RwlsM2<O6Qn";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "]7G'RwlsM2<O6Qn";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml\triTe");
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml\triTet";
      stringArray0[3] = "rhVL4Yn9";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(3, int0);
  }
}
