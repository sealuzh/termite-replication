/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:58:30 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Time;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.865273940938456
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.deepCopy();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      databaseParameterBufferImp0.addArgument(30, (String) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.getDbHandle();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.setFetchSize((-1909));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isLast();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      fBCachedFetcher0.absolute(3);
      fBCachedFetcher0.first();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.relative(8);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.991530272624982
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.deepCopy();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.getDbHandle();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.setFetchSize(6);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(16);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.first();
      isc_stmt_handle_impl0.statement = "org.firebirdsql.gds.impl.DatabaseParameterBufferExtension";
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.relative(8);
      fBCachedFetcher0.last();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper0, 6, 4, isc_stmt_handle_impl0, fBResultSet0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3506387923188554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(2899);
      fBCachedFetcher0.close();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.532370171512252
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F`d$NJp6Q\"|W$^?j");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-35);
      byteArray0[3] = (byte)12;
      databaseParameterBuffer0.addArgument(2611, byteArray0);
      isc_tr_handle_impl0.getDbHandle();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.relative(0);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UnaryOperator.identity();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.isEmpty();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.657215603376443
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      isc_db_handle_impl0.out = null;
      XdrOutputStream xdrOutputStream1 = isc_db_handle_impl0.out;
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.getDbHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(16);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isLast();
      boolean boolean0 = fBCachedFetcher0.absolute(3);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3577550659117574
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      Time time0 = new Time(1320L);
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      Time time1 = new Time((-1560));
      try { 
        fBResultSet0.getBytes((String) null);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // The resultSet is not in a row, use next
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.530652294746009
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      byte[][] byteArray0 = fBResultSet0.row;
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.last();
      assertFalse(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.653122873968981
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.next();
      fBCachedFetcher0.last();
      byte[][] byteArray0 = fBResultSet0.row;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isBeforeFirst();
      int int0 = fBCachedFetcher0.getRowNum();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.356008899080291
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2933852235912173
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      fBCachedFetcher0.getRowNum();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3601445521722115
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator((InternalTransactionCoordinator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.iterator();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      
      boolean boolean1 = fBCachedFetcher0.isFirst();
      boolean boolean2 = fBCachedFetcher1.isBeforeFirst();
      assertTrue(boolean2 == boolean1);
      
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3278768613324594
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator((InternalTransactionCoordinator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      byte[][] byteArray0 = new byte[3][6];
      linkedList0.add(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-1);
      byteArray1[3] = (byte) (-1);
      byteArray1[5] = (byte) (-6);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      LinkedBlockingDeque<FBCachedBlobField> linkedBlockingDeque0 = new LinkedBlockingDeque<FBCachedBlobField>();
      linkedBlockingDeque0.descendingIterator();
      linkedList0.containsAll(linkedBlockingDeque0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7992448090065936
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.deepCopy();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.getDbHandle();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.beforeFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl0.statement = "org.firebirdsql.gds.impl.DatabaseParameterBufferExtension";
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      byte[][] byteArray0 = new byte[1][2];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)19;
      byteArray1[2] = (byte)113;
      byteArray1[3] = (byte) (-1);
      byteArray1[4] = (byte)60;
      linkedList0.iterator();
      byteArray1[5] = (byte)19;
      byteArray1[6] = (byte) (-6);
      byteArray1[8] = (byte) (-24);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Predicate.isEqual((Object) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)86;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JT4&61\")5VBrk_W?y");
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator.identity();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      System.setCurrentTimeMillis(0);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("V?9");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("'X|?LbH>7");
      jMXPrincipal1.getName();
      jMXPrincipal1.equals("'X|?LbH>7");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal1.equals("Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("V?9");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      jMXPrincipal3.equals((Object) null);
      jMXPrincipal2.toString();
      jMXPrincipal0.toString();
      jMXPrincipal0.equals(jMXPrincipal1);
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("'X|?LbH>7");
      jMXPrincipal3.equals(jMXPrincipal5);
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      jMXPrincipal6.equals(jMXPrincipal0);
      jMXPrincipal6.getName();
      jMXPrincipal6.equals(jMXPrincipal5);
      jMXPrincipal6.equals("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[18];
      jMXPrincipalArray0[0] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("k{>/B^^[rq&Fx$");
      jMXPrincipalArray0[1] = jMXPrincipal7;
      jMXPrincipalArray0[1] = jMXPrincipal0;
      jMXPrincipalArray0[3] = jMXPrincipal2;
      System.setCurrentTimeMillis(0L);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getArgumentAsInt(0);
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.addArgument((-1172), (-1090));
      databaseParameterBufferImp0.getLength();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      databaseParameterBuffer0.getArgumentAsInt(6);
      databaseParameterBuffer0.addArgument((-2), (-2));
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      gDSHelper0.getCurrentTrHandle();
      org.firebirdsql.gds.impl.wire.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_tr_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(3);
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl0.getSubject();
      isc_db_handle_impl0.setSubject((Subject) null);
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl0.setDialect(24);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.921716231186081
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.deepCopy();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_db_handle_impl0.out;
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[6];
      jMXPrincipalArray0[0] = jMXPrincipal0;
      jMXPrincipalArray0[1] = jMXPrincipal0;
      jMXPrincipalArray0[2] = jMXPrincipal0;
      jMXPrincipalArray0[3] = jMXPrincipal0;
      jMXPrincipalArray0[4] = jMXPrincipal0;
      jMXPrincipalArray0[5] = jMXPrincipal0;
      linkedList0.toArray(jMXPrincipalArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((-81));
      boolean boolean0 = fBCachedFetcher0.relative(2);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("_V?9");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("_V?9");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("_V?9");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("_V?9");
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("_V?9");
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)55;
      byteArray1[1] = (byte) (-44);
      byteArray1[2] = (byte)91;
      byteArray1[3] = (byte) (-29);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      Subject subject0 = new Subject();
      jMXPrincipal3.implies(subject0);
      jMXPrincipal0.toString();
      jMXPrincipal1.toString();
      jMXPrincipal3.equals(jMXPrincipal1);
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("_V?9");
      jMXPrincipal5.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("B>Iv<#aYfugW<3~");
      jMXPrincipal6.equals("_V?9");
      jMXPrincipal5.equals(jMXPrincipal6);
      jMXPrincipal1.getName();
      jMXPrincipal1.getName();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("qHZ2wXT.i\"^qj-Fe7");
      jMXPrincipal1.implies(subject0);
      jMXPrincipal4.implies((Subject) null);
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("_V?9");
      Class<JMXPrincipal> class0 = JMXPrincipal.class;
      subject0.getPrincipals(class0);
      subject0.getPrivateCredentials();
      Object object0 = new Object();
      jMXPrincipal7.equals("_V?9");
      jMXPrincipal5.toString();
      jMXPrincipal1.equals(jMXPrincipal4);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1535);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][7];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)25;
      byteArray1[1] = (byte)41;
      byteArray1[2] = (byte)84;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-7);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)84;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)25;
      byteArray3[1] = (byte)0;
      byteArray3[2] = (byte)25;
      byteArray3[3] = (byte)84;
      byteArray3[4] = (byte) (-7);
      byteArray3[5] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)25;
      byteArray4[1] = (byte)0;
      byteArray4[2] = (byte)25;
      byteArray4[3] = (byte)66;
      byteArray4[4] = (byte)41;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[22];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharFieldArray0[0];
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      fBLongVarCharFieldArray0[8] = fBLongVarCharFieldArray0[0];
      FBLongVarCharField[] fBLongVarCharFieldArray1 = linkedList0.toArray(fBLongVarCharFieldArray0);
      linkedList0.toArray(fBLongVarCharFieldArray1);
      byte[][] byteArray0 = new byte[2][2];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-84);
      byteArray1[2] = (byte) (-53);
      byteArray1[3] = (byte)125;
      byteArray1[4] = (byte)1;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)66;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-84);
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)66;
      byteArray2[3] = (byte)125;
      byteArray2[4] = (byte) (-84);
      byteArray2[5] = (byte)0;
      byteArray2[6] = (byte)1;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(646);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.getArgumentAsInt(0);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument(0, "$=Fbp##/`4");
      databaseParameterBufferImp2.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      byte[][] byteArray0 = new byte[2][5];
      unaryOperator0.apply(byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator1);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("';|?L H>p7");
      jMXPrincipal1.getName();
      jMXPrincipal1.equals("';|?L H>p7");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal1.equals("Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("");
      jMXPrincipal0.toString();
      jMXPrincipal3.equals((Object) null);
      jMXPrincipal2.toString();
      jMXPrincipal0.toString();
      jMXPrincipal1.equals(jMXPrincipal1);
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("precision,scale");
      jMXPrincipal3.equals(jMXPrincipal5);
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      jMXPrincipal6.equals(jMXPrincipal0);
      jMXPrincipal6.getName();
      jMXPrincipal6.equals(jMXPrincipal5);
      jMXPrincipal6.equals("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[18];
      jMXPrincipalArray0[0] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("k{>/B^^[rq&Fx$");
      jMXPrincipalArray0[1] = jMXPrincipal4;
      jMXPrincipalArray0[1] = jMXPrincipal0;
      jMXPrincipalArray0[3] = jMXPrincipal2;
      boolean boolean0 = fBCachedFetcher0.absolute((-62));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.addArgument(37, "{uR-(zJ#\u0005(2");
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[8][0];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Integer.getInteger("s;<j");
      Integer.min((-1793), (-1793));
      Integer.compareUnsigned(335544324, 1010);
      Integer.getInteger("s;<j", (Integer) null);
      Integer.divideUnsigned(480, 1010);
      Object object0 = new Object();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("s;<j");
      Integer integer0 = new Integer((-69));
      Integer.compareUnsigned((-335), (-1));
      Integer.valueOf(1506);
      Integer.max((-1), (-69));
      jMXPrincipal0.getName();
      Integer integer1 = new Integer(1457);
      jMXPrincipal0.toString();
      Integer.getInteger("s;<j", integer1);
      Integer.max(1, (-2));
      Object object1 = new Object();
      jMXPrincipal0.equals((Object) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("V?\"");
      jMXPrincipal0.getName();
      jMXPrincipal0.equals("V?\"");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal0.equals("Server name/address is required for native implementation.");
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("V?\"");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("Result set is TYPE_FORWARD_ONLY");
      jMXPrincipal3.toString();
      jMXPrincipal3.toString();
      jMXPrincipal3.getName();
      jMXPrincipal0.equals(jMXPrincipal3);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      jMXPrincipal2.equals((Object) null);
      jMXPrincipal1.toString();
      jMXPrincipal0.toString();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal2.toString();
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("kv");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("Resut setis TYPN_FORWARD_ONLY");
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal10 = new JMXPrincipal("kv");
      jMXPrincipal6.equals("JMXPrincipal:  Server name/address is required for native implementation.");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0069724918931833
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Predicate.isEqual((Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3FWPO");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)86;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JT4&61\")5VBrk_W?y");
      UnaryOperator.identity();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Predicate.isEqual((Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@FqI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@FqI");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[16];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@FqI");
      UnaryOperator.identity();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*7r{:IRhWLe&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@FqI");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PKTABLE_NCAME");
      UnaryOperator.identity();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[8][0];
      byteArray1[0] = byteArray0;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)50;
      byteArray2[1] = (byte) (-71);
      byteArray2[2] = (byte)97;
      byteArray1[1] = byteArray2;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("V?9");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("'X|?LbH>7");
      jMXPrincipal0.getName();
      jMXPrincipal1.getName();
      jMXPrincipal1.equals("'X|?LbH>7");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal1.equals("Server name/address is required for native implementation.");
      jMXPrincipal2.getName();
      byte[][] byteArray0 = new byte[6][1];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-45);
      byteArray1[1] = (byte) (-65);
      byteArray1[2] = (byte) (-52);
      byteArray1[3] = (byte)67;
      byteArray1[4] = (byte)83;
      byteArray1[5] = (byte) (-2);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)58;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte) (-45);
      byteArray3[1] = (byte) (-2);
      byteArray3[2] = (byte)58;
      byteArray3[3] = (byte)58;
      byteArray3[4] = (byte) (-2);
      byteArray3[5] = (byte)83;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)83;
      byteArray4[1] = (byte)83;
      byteArray4[2] = (byte) (-65);
      byteArray4[3] = (byte)58;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)83;
      byteArray5[1] = (byte) (-65);
      byteArray5[2] = (byte)67;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("V?9");
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("Result set is TYPE_FORWARD_ONLY");
      jMXPrincipal4.getName();
      jMXPrincipal1.equals(jMXPrincipal4);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      jMXPrincipal3.equals((Object) null);
      jMXPrincipal2.toString();
      jMXPrincipal1.toString();
      jMXPrincipal0.equals(jMXPrincipal1);
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("Server name/address is required for native implementation.");
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("");
      jMXPrincipal3.equals(jMXPrincipal6);
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      jMXPrincipal7.equals(jMXPrincipal0);
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("Resut setis TYPN_FORWARD_ONLY");
      JMXPrincipal jMXPrincipal10 = new JMXPrincipal("JMXPrincipal:  Server name/address is required for native implementation.");
      JMXPrincipal jMXPrincipal11 = new JMXPrincipal("");
      jMXPrincipal7.equals("JMXPrincipal:  Server name/address is required for native implementation.");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(";V?9");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal(";V?9");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("T^");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("T^");
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal(";V?9");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      jMXPrincipal0.toString();
      jMXPrincipal1.toString();
      jMXPrincipal3.equals(jMXPrincipal1);
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("T^");
      jMXPrincipal5.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("B>Iv<#aYfugW<3~");
      jMXPrincipal5.equals(jMXPrincipal6);
      jMXPrincipal1.getName();
      jMXPrincipal1.getName();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("qHZ2wXT.i\"^qj-Fe7");
      jMXPrincipal4.implies((Subject) null);
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal(";V?9");
      Subject subject0 = new Subject();
      subject0.getPrivateCredentials();
      Object object0 = new Object();
      jMXPrincipal7.equals(";V?9");
      jMXPrincipal5.toString();
      jMXPrincipal1.implies((Subject) null);
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("JMXPrincipal:  ;V?9");
      jMXPrincipal8.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(";V?9");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("'X?LbH>z");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("T^");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("T^");
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal(";V?9");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      jMXPrincipal0.toString();
      jMXPrincipal1.toString();
      jMXPrincipal3.equals(jMXPrincipal1);
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("T^");
      jMXPrincipal5.getName();
      jMXPrincipal1.getName();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("n='[QXqRW_");
      jMXPrincipal4.implies((Subject) null);
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal(";V?9");
      Subject subject0 = new Subject();
      subject0.getPrivateCredentials();
      Object object0 = new Object();
      byte[][] byteArray0 = new byte[7][9];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-21);
      byteArray1[1] = (byte) (-44);
      byteArray1[2] = (byte) (-3);
      byteArray1[3] = (byte)110;
      byteArray1[4] = (byte) (-122);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)110;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-3);
      byteArray3[1] = (byte) (-21);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-21);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)31;
      byteArray5[1] = (byte)110;
      byteArray5[2] = (byte)110;
      byteArray5[3] = (byte) (-122);
      byteArray5[4] = (byte) (-3);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte) (-3);
      byteArray7[1] = (byte) (-122);
      byteArray7[2] = (byte)110;
      byteArray7[3] = (byte) (-21);
      byteArray7[4] = (byte)31;
      byteArray7[5] = (byte)110;
      byteArray7[6] = (byte) (-122);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      jMXPrincipal0.equals(object0);
      jMXPrincipal1.toString();
      jMXPrincipal0.implies((Subject) null);
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("JMXPrincipal:  ;V?9");
      jMXPrincipal8.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Predicate.isEqual((Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@FqI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@FqI");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[16];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@FqI");
      UnaryOperator.identity();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*7r{:IRhWLe&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@FqI");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PKTABLE_NAME");
      UnaryOperator.identity();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[8][0];
      byteArray1[0] = byteArray0;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)50;
      byteArray2[1] = (byte) (-71);
      byteArray2[2] = (byte)97;
      byteArray1[1] = byteArray2;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[22];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer((-3652));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-381));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[1]);
      integerArray0[3] = integer3;
      linkedList0.toArray(integerArray0);
      fBLongVarCharFieldArray0[1] = fBLongVarCharFieldArray0[0];
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      fBLongVarCharFieldArray0[8] = fBLongVarCharFieldArray0[0];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.relative((-2372));
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Predicate.isEqual((Object) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)86;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Jd4&61\"K5VBrk_W?y");
      byte[][] byteArray1 = new byte[8][2];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      linkedList0.add(byteArray1);
      UnaryOperator.identity();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
