/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:43:51 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3787438509194208
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("}yy|TmT}Z%v55");
      rawVariable0.questionNumber = "}yy|TmT}Z%v55";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("m4jMS71^+`r}i3AO<G");
      ontologyTerm0.clone();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningStatus();
      ontologyTerm0.setTerm("}yy|TmT}Z%v55");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      rawVariable0.setForm("}yy|TmT}Z%v55");
      derivedVariable0.addSourceVariables(arrayList1);
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("}yy|TmT}Z%v55");
      derivedVariable0.getYear();
      derivedVariable0.getForm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getValueLabels();
      assertEquals("}yy|TmT}Z%v55", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.8286218118218667
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable0);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      supportingDocument1.setDescription((String) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(comparator0).compare(any() , any());
      arrayList0.sort(comparator0);
      supportingDocument2.setFilePath("variable.category.label");
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setLabel("-LHA");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.getLabel();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.cloneAttributes(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.addSourceVariable(rawVariable1);
      assertEquals("", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7769895692287485
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-254595317));
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setCodeBookNumber("t%R>");
      user0.setPostCode("t7AfUR");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("i4o.Dbmk");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.587731845942533
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      valueLabel0.setEditingOperationType((ValueLabel.EditingOperationType) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User("INVALID_ALIAS_FILE_PATH", "INVALID_ALIAS_FILE_PATH");
      user1.setPassword("&PeZ]Xb,");
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      user1.setFirstName("");
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = ">&,#A/h";
      derivedVariable0.columnStart = ">&,#A/h";
      derivedVariable0.setFilePath(">&,#A/h");
      derivedVariable0.notes = ">&,#A/h";
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      System.setCurrentTimeMillis((-558L));
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("general.fieldValue.unknown");
      derivedVariable1.getForm();
      assertEquals("general.fieldValue.unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.160521665576143
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setIdentifier(158);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ontologyTerm3.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      user0.setFirstName("UNABLE_TO_CREATE_VALUE_LABELS");
      User user1 = new User((String) null, "?P8~D(O1S\";");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable1);
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.83617807124603
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setNotes("g}J>}hsr+b$");
      arrayList0.add((Variable) derivedVariable1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getValueLabels();
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.cloneAttributes(derivedVariable1);
      Variable.validateFields(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      arrayList0.trimToSize();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable2);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable3, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable3.removeSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("g}J>}hsr+b$", derivedVariable1.getNotes());
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.forEach(consumer0);
      rawVariable0.addOntologyTerms(arrayList1);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable4);
      derivedVariable3.clone();
      rawVariable0.getSupportingDocuments();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8936329525208677
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setAddressLine2("Ip=,-[jM_");
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setFirstName("7*kz '(B0\"BO&?58G");
      User user1 = new User("BY!mhfZL:R6>", "variable.columnStart.label");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      assertTrue(derivedVariable0.isCleaned());
      
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7243246323712
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "=SQF4Np";
      derivedVariable0.setIdentifier((-610));
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.setColumnStart("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      derivedVariable0.getIdentifier();
      derivedVariable2.setCategory("");
      User user0 = new User("=SQF4Np", "");
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("kGZnXv8\">1oN{>URSZy");
      derivedVariable2.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.setCoded(true);
      derivedVariable2.getSupportingDocuments();
      derivedVariable1.getAlternativeVariable();
      derivedVariable2.getColumnStart();
      assertEquals("=SQF4Np", derivedVariable2.getCodeBookNumber());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9773356744811643
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("-LHA");
      rawVariable0.getName();
      User user0 = new User("e,2`{", "e,2`{");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.setUserID("J,-AuAPr$");
      user0.setStatus("wNld:>u{uWt1-{XamvO");
      user1.setStatus("wNld:>u{uWt1-{XamvO");
      User.detectFieldChanges(user1, user0, user1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setCategory("e,2`{");
      rawVariable0.setName("g0_W1~725a'#yv");
      user1.setPostCode("!W%N21f)QYK-QZv:V");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("(");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("macaw.businessLayer.Variable");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "macaw.businessLayer.Variable";
      supportingDocument1.setFileName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8948770652019307
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("-LHA");
      rawVariable0.getName();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      User user0 = new User("e,2`{", "BUdpHM[~:;=:S");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setStatus("wNld:>u{uWt1-{XamvO");
      user1.setStatus("FB/~");
      User.detectFieldChanges(user1, user0, user1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setYear("e,2`{");
      rawVariable0.setName("UNABLE_TO_DELETE_AVAILABILITY_STATE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("(");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable2);
      rawVariable0.getYear();
      assertEquals("e,2`{", rawVariable0.getYear());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9006512728404727
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setAddressLine2("Ip=,-[jM_");
      user0.setPassword("Ip=,-[jM_");
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      user0.setCounty("lCqZC<%7'");
      derivedVariable0.setLabel("Ip=,-[jM_");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getValueLabels();
      assertEquals("Ip=,-[jM_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.165261966538143
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("e,2`{");
      rawVariable0.getName();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      User user0 = new User("", "e,2`{");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayName();
      rawVariable0.setName((String) null);
      rawVariable0.setYear("e,2`{");
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(133);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getName();
      user0.setFirstName("UNABLE_TO_FILTER_SUMMARIES");
      User user1 = new User("?", "e,2`{");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("e,2`{", rawVariable0.getYear());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2113169331533986
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user0 = new User("e,2`{", "BUdpHM[~:;=:S");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList1.add(ontologyTerm9);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList3.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm1.setNameSpace("-LHA");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.7163095561908888
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("w#Icgj~eUv", "w#Icgj~eUv");
      rawVariable0.codeBookNumber = "w#Icgj~eUv";
      user0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setAffiliation("w#Icgj~eUv");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getForm();
      rawVariable0.getAlias();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable0.getFilePath();
      assertEquals("w#Icgj~eUv", rawVariable0.getCodeBookNumber());
      
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8221386972765132
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setStatus("p=,-[_");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel("p=,-[_");
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable2);
      assertEquals("p=,-[_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0728978829159086
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("-LHA");
      rawVariable0.setName((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("user.password.label", (String) null);
      rawVariable0.getDisplayName();
      rawVariable0.setName("d-qo:GcCwAS>d8T");
      assertEquals("d-qo:GcCwAS>d8T", rawVariable0.getName());
      
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getName();
      user0.setFirstName("variable.year.label");
      User user1 = new User("e,2`{", "variable.isCleaned.saveChanges.changedToNotClean");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel((String) null);
      derivedVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.857519943929983
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable1.isCoded();
      derivedVariable0.setCleaningStatus("Yuqy\u0007VnwE?FUw@");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.clone();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setIdentifier(0);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.setFilePath("Yuqy\u0007VnwE?FUw@");
      derivedVariable1.setForm("t\"0QY:oB");
      derivedVariable1.isNewRecord();
      derivedVariable0.setCategory("g|");
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSupportingDocuments();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      rawVariable0.clone();
      derivedVariable1.getFilePath();
      assertEquals("t\"0QY:oB", derivedVariable1.getForm());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9303163152571328
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSupportingDocuments(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.isCoded();
      derivedVariable1.setCleaningStatus("Yuqy\u0007VnwE?FUw@");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("Yuqy\u0007VnwE?FUw@");
      derivedVariable1.setForm("g|");
      derivedVariable1.isNewRecord();
      derivedVariable1.setCategory("variable.form.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      assertEquals("Yuqy\u0007VnwE?FUw@", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7855709210239814
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user0 = new User();
      User user1 = new User("kGZnXv8\">1oN{>URSZy", "variable.alternativeVariable.label");
      User.detectFieldChanges(user0, user1, user0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("Lu8:']");
      assertEquals("Lu8:']", rawVariable2.getDisplayName());
      
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7659197104707296
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user0 = new User("p=,-[_", "DUPLICAkE_VCGIABLE");
      user0.setLastName("p=,-[_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel("}");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      User user1 = new User(">pcPx?Bbju:n", "DUPLICAkE_VCGIABLE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      derivedVariable1.columnStart = "}=/2L2Q";
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      derivedVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Variable.validateFields(derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      assertEquals("}=/2L2Q", derivedVariable1.getColumnStart());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.963970921357878
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlias();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(577);
      derivedVariable0.setSupportingDocuments(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.isCoded();
      derivedVariable0.setCleaningStatus("variable.availability.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.clone();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-1));
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath("(6");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.isNewRecord();
      derivedVariable0.setCategory("Yuqy\u0007VnwE?FUw@");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("Yuqy\u0007VnwE?FUw@", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8440148583980833
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("e,2`{");
      rawVariable0.getName();
      User user0 = new User("e,2`{", "UdpH[~z;=:S");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.setUserID("J,-AuAPr$");
      user0.setStatus("wNld:>u{uWt1-{XamvO");
      user1.setStatus("wNld:>u{uWt1-{XamvO");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setName("J,-AuAPr$");
      user1.setPostCode("e,2`{");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("(");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, rawVariable0, derivedVariable0);
      assertEquals("(", rawVariable0.getName());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.842324604726158
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      supportingDocument0.setTitle(">&><");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.columnEnd = "n;SR$&$b";
      derivedVariable0.setLabel(">&><");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getLabel();
      derivedVariable0.getCleaningDescription();
      assertEquals("n;SR$&$b", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.878842842469684
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Ip=,-[jM_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user1 = new User("siz7l+}FR8=nre", "siz7l+}FR8=nre");
      user1.setFirstName("");
      User user2 = new User("Ip=,-[jM_", "j");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      rawVariable2.setCleaningStatus("j");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable3);
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable3);
      assertEquals("j", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8946741381361325
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ontologyTerm1.setIdentifier((-1261));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList3.add(ontologyTerm1);
      UnaryOperator.identity();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setNameSpace("UNABLE_TO_CREATE_CLEANING_STATE");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.form.label");
      rawVariable0.setCodeBookNumber("variable.form.label");
      User user0 = new User("variable.form.label", "variable.form.label");
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      rawVariable0.setQuestionNumber("variable.form.label");
      User user1 = new User();
      String string0 = "variable.codeBookNumber.label";
      user1.setStatus("variable.codeBookNumber.label");
      user1.setStatus("variable.codeBookNumber.label");
      User.detectFieldChanges(user1, user0, user0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) rawVariable0;
      objectArray0[1] = (Object) user1;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      objectArray0[2] = (Object) user0;
      objectArray0[3] = (Object) variableSummary0;
      objectArray0[4] = (Object) "variable.codeBookNumber.label";
      objectArray0[5] = (Object) rawVariable0;
      objectArray0[6] = (Object) "variable.form.label";
      objectArray0[7] = (Object) "variable.codeBookNumber.label";
      arrayList0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.574447864056856
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add(supportingDocument0);
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setLabel("PdRF");
      valueLabel0.setLabel("PdRF");
      rawVariable0.removeValueLabel(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.codeBookNumber = "-";
      rawVariable0.codeBookNumber = "Pud3Mk.Zn_g`ihp=";
      rawVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.getNotes();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getCodeBookNumber();
      derivedVariable0.getAvailability();
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4989990056051803
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "F:NfKM!B-v~.i|a{3]m";
      derivedVariable1.setCleaned(true);
      derivedVariable1.createVariableSummary();
      valueLabel0.setIdentifier(24);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable1.addValueLabel(valueLabel0);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.8320528546681594
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setPassword("general.fieldValue.blank");
      user0.setStatus(")q5]:V^0{x}99/xlyPU");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      rawVariable0.setYear("?");
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("EK:d9d");
      rawVariable1.getName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "EK:d9d";
      objectArray0[1] = (Object) valueLabel0;
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      rawVariable0.setForm("(");
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("general.error.blankField");
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getDisplayName();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      assertEquals("EK:d9d", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.844629182739238
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("p=,-[_");
      user0.setPassword("p=,-[_");
      user0.setEmail("e~X~Yu");
      user0.setStatus("p=,-[_");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setStatus("p=,-[_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user1 = new User("p=,-[_", "DUPLICAkE_VCGIABLE");
      user1.setLastName("p=,-[_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setCounty("!L(J");
      derivedVariable0.setLabel("}");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      User user2 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user2, derivedVariable1, derivedVariable0);
      DerivedVariable.detectFieldChanges(user2, derivedVariable1, derivedVariable0);
      derivedVariable0.getLabel();
      assertEquals("}", derivedVariable0.getLabel());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Variable.validateFields(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2086498967780113
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ontologyTerm2.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm4);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList1.add(ontologyTerm6);
      derivedVariable0.setLabel("<b");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("9+*N4!zMZ{=Gji~", "9+*N4!zMZ{=Gji~");
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Variable.validateFields(derivedVariable0);
      assertEquals("<b", derivedVariable0.getLabel());
      
      boolean boolean1 = derivedVariable1.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.686026273172041
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("7,O#)UF'*8PBsqe");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user1 = new User("7,O#)UF'*8PBsqe", "7,O#)UF'*8PBsqe");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      User user2 = new User();
      user2.setStatus("variable.form.label");
      User user3 = new User();
      user3.setStatus("YcquVy");
      User user4 = new User(")h", "??lW8:{BPgK");
      User.detectFieldChanges(user0, user1, user4);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable1.setYear("{]0.WC@|`C7i2V@Lv");
      rawVariable0.setName("(");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      assertEquals("(", rawVariable0.getName());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6857501594422044
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setEmail("]ka f^s?d]*u,7");
      user0.setStatus("vgz");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user1 = new User("", "");
      User user2 = new User();
      User.detectFieldChanges(user1, user0, user2);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("e~X~Yu");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user2, rawVariable2, rawVariable3);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      boolean boolean0 = rawVariable2.hasSameDisplayName(rawVariable1);
      assertEquals("e~X~Yu", rawVariable2.getDisplayName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8942473918449845
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("vgz");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.questionNumber = "";
      rawVariable3.questionNumber = "vgz";
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable3);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      rawVariable1.getFilePath();
      assertEquals("vgz", rawVariable1.getDisplayName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.133367028482496
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm2.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setTerm("+.%%^-+{");
      derivedVariable0.getOntologyTerms();
      rawVariable0.getOntologyTerms();
      derivedVariable0.setLabel("bgt?z,u21kC$EjfmJ=");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList4.isEmpty());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6856369732509195
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("p=,-[_");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user1 = new User("p=,-[_", "UNABLE_TO_GET_USERS");
      User user2 = new User();
      User.detectFieldChanges(user2, user0, user0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("ERROR #");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      boolean boolean0 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("ERROR #", rawVariable0.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCleaningStatus("X;5FLJ!t");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("y7");
      ontologyTerm2.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.setFilePath("T&-`QvmM");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setFilePath("general.fieldValue.blank");
      derivedVariable0.setForm("general.fieldValue.blank");
      derivedVariable0.isNewRecord();
      derivedVariable0.setCategory("MLd:v%@Ad$I4rp8A|");
      derivedVariable0.getForm();
      assertEquals("MLd:v%@Ad$I4rp8A|", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", (String) null);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.08206054778945
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCoded();
      derivedVariable0.setCleaningStatus("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath("");
      derivedVariable0.setForm("");
      derivedVariable0.isNewRecord();
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      derivedVariable0.setCategory("");
      derivedVariable0.getCategory();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.040609128236604
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      User user0 = new User();
      user0.setAddressLine2("'I3[5&SW TdE+#NJK");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      user0.setCity("'I3[5&SW TdE+#NJK");
      rawVariable0.setColumnStart((String) null);
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList1.size());
      
      rawVariable0.getCleaningDescription();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", string1);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("-LHA");
      rawVariable0.getName();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("-LHA");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("UNABLE_TO_GET_CONNECTION", "blank");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      Variable.validateFields(rawVariable0);
      assertEquals("-LHA", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.9282977178745915
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("p=,-[_");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      rawVariable0.columnStart = "RWPr)sR{$(>m*T1Im";
      User user1 = new User("p=,-[_", "UNABLE_TO_GET_USERS");
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setName("g0_W1~725a'#yv");
      user1.setPostCode("k>5p!J");
      rawVariable0.setName("UNABLE_TO_DELETE_AVAILABILITY_STATE");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable0);
      RawVariable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("RWPr)sR{$(>m*T1Im", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.364957654223296
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("-LHA");
      rawVariable0.getName();
      assertEquals("-LHA", rawVariable0.getDisplayName());
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm4);
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm6.setNameSpace("A/p]4ivz;(b5HLB");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm4);
      assertFalse(boolean0);
      
      ontologyTerm1.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setTerm("6LINVaWOF ~m");
      ontologyTerm0.setTerm("6LINVaWOF ~m");
      ArrayList<OntologyTerm> arrayList4 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList2.add(ontologyTerm7);
      ontologyTerm4.getDisplayName();
      arrayList1.add(ontologyTerm5);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList4.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm0.setNameSpace("6LINVaWOF ~m");
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("h");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getLabel();
      derivedVariable0.setYear("");
      derivedVariable0.getCleaningStatus();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.722973226438147
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("p=,-[_");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      User user1 = new User();
      user1.setStatus("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      valueLabel1.hasSameDisplayName(valueLabel2);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel("p=,-[_");
      ValueLabel valueLabel3 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel3);
      derivedVariable0.addValueLabel(valueLabel3);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      assertEquals("p=,-[_", derivedVariable0.getLabel());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setColumnEnd("'Y95r)3l5/EMLnW9");
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.notes = "'Y95r)3l5/EMLnW9";
      arrayList0.clone();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("'Y95r)3l5/EMLnW9", derivedVariable0.getNotes());
      assertEquals("'Y95r)3l5/EMLnW9", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.644634347237432
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("%Ovxx{@vDT%s", "general.fieldValue.unknown");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setAlias("%Ovxx{@vDT%s");
      derivedVariable0.setCodeBookNumber("variable.columnStart.label");
      user0.setIdentifier(0);
      derivedVariable0.setQuestionNumber("variable.columnStart.label");
      derivedVariable0.getAvailability();
      derivedVariable0.getForm();
      derivedVariable0.setColumnStart(">{PM#1W");
      derivedVariable0.setNotes("Unknown");
      derivedVariable0.setIdentifier(2507);
      derivedVariable0.clone();
      derivedVariable0.getNotes();
      derivedVariable0.getAlias();
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("general.fieldValue.unknown");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      ontologyTerm2.getDisplayName();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.894058801557384
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("e,2`{");
      rawVariable0.getName();
      User user0 = new User("e,2`{", "UdpH[~z;=:S");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.setUserID("J,-AuAPr$");
      user0.setStatus("wNld:>u{uWt1-{XamvO");
      user1.setStatus("e,2`{");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setName("J,-AuAPr$");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.88548036377364
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm4);
      assertTrue(boolean0);
      
      ontologyTerm2.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setTerm("-LHA");
      ontologyTerm6.setTerm("+.%%^-+{");
      rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getLabel();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("[J7aK_CS");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(",ttz;s~@|PJy#J>Mi2=");
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.getCodeBookNumber();
      assertEquals(",ttz;s~@|PJy#J>Mi2=", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ontologyTerm4.getDisplayName();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      arrayList5.add(ontologyTerm6);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      arrayList6.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm7.setNameSpace("-LHA");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm5);
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.8306752988849904
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable1);
      User user0 = new User("", "");
      supportingDocument0.setDescription("");
      user0.setPhone((String) null);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(comparator0).compare(any() , any());
      arrayList0.sort(comparator0);
      supportingDocument0.setFilePath((String) null);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable0.setLabel("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.getLabel();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      
      boolean boolean1 = derivedVariable5.containsSourceVariable(derivedVariable2);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      ontologyTerm1.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable2.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setNameSpace("+7s6g(\"fw[s?>4b");
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5091971885120032
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAvailability("}yx!q^<@~uS x");
      derivedVariable1.removeOntologyTerms(arrayList1);
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList1.forEach((Consumer<? super OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.629852139527692
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setName("-LHA");
      rawVariable0.getName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.getDisplayName();
      rawVariable0.setName("variable.year.label");
      rawVariable0.setName("-LHA");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setIdentifier(1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add((OntologyTerm) null);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("-LHA");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("-LHA", derivedVariable1.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.7630035570279556
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      rawVariable1.questionNumber = "";
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getCleaningStatus();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.listIterator();
      arrayList1.clone();
      rawVariable1.setIdentifier(1);
      rawVariable1.setValueLabels(arrayList1);
      rawVariable0.setAvailability("Unknown");
      rawVariable0.getIdentifier();
      rawVariable1.getIdentifier();
      User user0 = new User("", "uBV7 lW|");
      rawVariable0.setColumnEnd("");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      rawVariable0.setCoded(false);
      rawVariable1.setAvailability("");
      rawVariable1.setColumnEnd("");
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.69674006410746
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setFirstName(">");
      user0.setPassword(">");
      user0.setStatus("s4,HpG?6z2z.>2");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getDisplayName();
      rawVariable1.getDisplayName();
      rawVariable0.setYear("s4,HpG?6z2z.>2");
      Variable.validateFields(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("`^NYR$");
      assertEquals("`^NYR$", rawVariable2.getName());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getName();
      rawVariable3.columnStart = ">";
      RawVariable rawVariable4 = new RawVariable();
      rawVariable3.getFilePath();
      rawVariable1.getNotes();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("[J7aK_CS");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6325272510132787
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("e,2`{");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("UNABLE_TO_CREATE_CLEANING_STATE");
      User user0 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "UNABLE_TO_GET_VALUE_LABELS");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.setQuestionNumber("5l CfYGa<~RPmU;&");
      User user1 = new User();
      user0.setStatus("nu@)%]90088Q/");
      user0.setStatus("8qN)z`0gl7~[@qO-M:");
      User.detectFieldChanges(user0, user1, user0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable2.getDisplayName();
      rawVariable0.setYear("nu@)%]90088Q/");
      rawVariable1.setName("5fj+|");
      assertEquals("5fj+|", rawVariable1.getDisplayName());
      
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable3, rawVariable2);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable2.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("sAkf76b*V");
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("sAkf76b*V", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.626916081775054
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getName();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable1.getDisplayName();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = (RawVariable)rawVariable3.clone();
      assertEquals("Unknown", rawVariable4.getAvailability());
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      assertFalse(rawVariable4.isNewRecord());
      assertFalse(rawVariable4.isCleaned());
      assertEquals("Unknown", rawVariable4.getCategory());
      assertEquals(0, rawVariable4.getIdentifier());
      
      rawVariable3.setColumnStart("eb?-");
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      boolean boolean0 = rawVariable3.hasSameDisplayName(rawVariable2);
      assertTrue(boolean0);
      assertFalse(rawVariable3.isCoded());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.889354696329235
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setPassword(")q5]:V^0{x}99/xlyPU");
      user0.setStatus(")q5]:V^0{x}99/xlyPU");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      rawVariable0.setYear("?");
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("?");
      rawVariable1.getName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) ")q5]:V^0{x}99/xlyPU";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      rawVariable0.setIsNewRecord(true);
      rawVariable1.setFilePath("wE3U^i(*V{ODCT8q\"e");
      rawVariable1.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.434018124833611
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm3.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList0.add(ontologyTerm6);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList3.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm0.setNameSpace("-LHA");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      boolean boolean1 = derivedVariable1.containsOntologyTerm(ontologyTerm9);
      assertFalse(boolean1);
      
      boolean boolean2 = rawVariable1.isCoded();
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.894504792102384
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.setStatus("");
      User.detectFieldChanges(user1, user0, user1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(false);
      rawVariable1.setName("vgz");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("vgz", rawVariable1.getDisplayName());
      
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode((String) null);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.4619631381239797
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      UnaryOperator.identity();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList3.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setNameSpace("-LHA");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.4724667542209273
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.setStatus("");
      rawVariable0.setName("e,2`{");
      rawVariable0.setYear("");
      rawVariable0.setName("e,2`{");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getName();
      user1.setFirstName("");
      User user2 = new User("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", "macaw.businessLayer.Variable");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setForm("mG-U");
      assertEquals("mG-U", rawVariable3.getForm());
      
      rawVariable2.cloneAttributes(rawVariable3);
      assertEquals("Unknown", rawVariable3.getCategory());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.691735059102455
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      User user0 = new User();
      user0.setStatus("WH=l:R");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("k:QF");
      derivedVariable0.addValueLabel(valueLabel1);
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getLabel();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      assertEquals("k:QF", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("variable.form.label");
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("variable.form.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.7084216255763276
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("j", "j");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.retainAll(arrayList1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable1.setIsNewRecord(true);
      derivedVariable0.form = "zn}q)&HC";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("i~y\"0PL");
      ontologyTerm1.setOntologyName("i~y\"0PL");
      ontologyTerm1.getDisplayName();
      derivedVariable1.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable1.isNewRecord());
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.8968304653265244
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("L!(!");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(false);
      User user0 = new User();
      user0.setStatus("rcR.GL@bUu");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setMissingValue(false);
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel3);
      derivedVariable0.setCleaned(false);
      derivedVariable0.setLabel("[awU\"~k-p}&k1R");
      derivedVariable0.removeValueLabel(valueLabel2);
      ValueLabel valueLabel4 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel4);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      assertEquals("[awU\"~k-p}&k1R", derivedVariable0.getLabel());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("=03pk``)tQ};\"YDw");
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("=03pk``)tQ};\"YDw", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.58530528444094
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      String string0 = rawVariable0.getYear();
      assertNotNull(string0);
      
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.623167345768028
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user0 = new User("", "<b");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setName("?P8~D(O1S\";");
      rawVariable0.setYear("+?{txbq_dYl?yf.o");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("?P8~D(O1S\";", rawVariable0.getName());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.664163548454016
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.form.label");
      rawVariable0.setCodeBookNumber("variable.form.label");
      User user0 = new User("variable.form.label", "variable.form.label");
      rawVariable0.createVariableSummary();
      rawVariable0.setQuestionNumber("variable.form.label");
      User user1 = new User();
      user1.setStatus("variable.codeBookNumber.label");
      user1.setStatus("variable.codeBookNumber.label");
      User.detectFieldChanges(user1, user0, user0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayName();
      rawVariable0.setYear("IWf'rg|*");
      rawVariable0.setName("variable.form.label");
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setLabel("7bzq`)16");
      assertEquals("variable.form.label", rawVariable0.getName());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.77451594704431
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel((String) null);
      derivedVariable0.addValueLabel(valueLabel0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("X");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.761585555938317
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      derivedVariable0.setCleaned(false);
      derivedVariable0.setLabel("EPgX<FSEb6iZAx");
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getLabel();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.clone();
      assertEquals("EPgX<FSEb6iZAx", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.3572850199521964
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User user1 = new User(")q5]:V^0{x}99/xlyPU", "ys3o0wl]KvTI");
      user1.setStatus("bi\",");
      String string0 = "UNABLE_TO_CHECK_VALUE_LABEL_EXISTS";
      user1.setPassword("UNABLE_TO_CHECK_VALUE_LABEL_EXISTS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ontologyTerm0.setNameSpace("4%64JQ!5Vc<h>");
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setNotes("ys3o0wl]KvTI");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        arrayList0.forEach((Consumer<? super OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.762915826186178
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "tmMbq(v-D";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getFilePath();
      rawVariable0.setFilePath("");
      Variable.validateFields(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      rawVariable0.setLabel("tmMbq(v-D");
      User user0 = new User("NzRvmU$;vc9Jx72UVa", "0");
      rawVariable0.codeBookNumber = "tmMbq(v-D";
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.475380329098549
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm1.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setLabel("((19");
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm3.setNameSpace("((19");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("((19", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.4327409856254376
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setTerm("-LHA");
      ontologyTerm6.setTerm("+.%%^-+{");
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm6);
      assertEquals(2, arrayList4.size());
      
      ontologyTerm1.getDisplayName();
      arrayList1.add((OntologyTerm) null);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      arrayList5.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm1.setNameSpace("+.%%^-+{");
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.getFilePath();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.770626502698271
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNewRecord(true);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0[|]`-$; n)@:C ");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIsNewRecord(true);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.3419408569062177
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm1.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        arrayList1.forEach((Consumer<? super OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.848894168251332
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      user0.setPassword("");
      user0.setStatus("S(\":F");
      User.detectFieldChanges(user0, user0, user0);
      user0.setStatus("n`\"~o%.#60E_~Kdi");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel("S(\":F");
      derivedVariable0.questionNumber = "aHU'bO=*n62ce5";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.getSourceVariables();
      assertEquals("aHU'bO=*n62ce5", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.8222387072775135
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      User user0 = new User("e,2`{", "BUdpHM[~:;=:S");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel("?P8~D(O1S\";");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.form = "?P8~D(O1S\";";
      valueLabel0.setMissingValue(false);
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.isCleaned();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getLabel();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.8940588015573843
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setAddressLine2("Ip=,-[jM_");
      user0.setPassword("Ip=,-[jM_");
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      User user2 = new User();
      rawVariable1.columnEnd = "Ip=,-[jM_";
      user2.setFirstName("Ip=,-[jM_");
      User user3 = new User((String) null, "lCqZC<%7'");
      Variable.detectChangesInAlternativeVariable(user3, rawVariable1, rawVariable1);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      variable0.columnStart = "Ip=,-[jM_";
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable2);
      derivedVariable0.getNotes();
      assertEquals("Ip=,-[jM_", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.897093587794628
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      User user0 = new User("UNABLE_TO_COMMIT_CHANGES", "variable.cleaningDescription.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      user0.setUserID("J,-AuAPr$");
      user0.setStatus("J,-AuAPr$");
      user0.setStatus("");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      user0.setPostCode("*G8*bP");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("UdpH[~z;=:S");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningDescription("cZ+JE'H4");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable2, rawVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable3);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.hasSameDisplayName(rawVariable0);
      assertEquals("UdpH[~z;=:S", rawVariable0.getName());
      
      RawVariable.detectFieldChanges(user1, rawVariable3, rawVariable1);
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.8407503065040274
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setDescription("gua*R");
      supportingDocument3.setDocumentCode("blank");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("blank");
      User user0 = new User("blank", "ZE");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("blank", rawVariable0.getCleaningDescription());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "{7VLSdI_W,}')vYJqK";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", rawVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.0251566440764854
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("-LHA");
      rawVariable0.getName();
      User user0 = new User("e,2`{", "BUdpHM[~:;=:S");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlias("-LHA");
      User user1 = new User();
      user1.setUserID("J,-AuAPr$");
      user0.setStatus("wNld:>u{uWt1-{XamvO");
      user1.setStatus("wNld:>u{uWt1-{XamvO");
      User.detectFieldChanges(user1, user0, user1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setYear("e,2`{");
      rawVariable0.setName("UNABLE_TO_DELETE_AVAILABILITY_STATE");
      RawVariable rawVariable1 = new RawVariable();
      user0.setPostCode("-LHA");
      rawVariable0.setName("(");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable2);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.001022552635227
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User("?w+'Ue,dFpmu<O|r0:", "kBMILpFSBurK%D");
      User user2 = new User();
      User user3 = new User("]+hksOSXX{ic~", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.8342501718069912
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      valueLabel0.setEditingOperationType((ValueLabel.EditingOperationType) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User("siz7l+}FR8=nre", "siz7l+}FR8=nre");
      user1.setFirstName("");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)rawVariable0.getAlternativeVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getQuestionNumber();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5820183568770023
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      rawVariable0.setColumnEnd("cZcRQ{nTB");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm3.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList0.add(ontologyTerm6);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList3.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm0.setNameSpace("-LHA");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getForm();
      assertEquals("cZcRQ{nTB", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.819853186285054
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(true);
      User user0 = new User();
      user0.setPostCode("|]H.");
      user0.setStatus("Ip=,-[jM_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setColumnEnd("INVALID_CATEGORY");
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel((String) null);
      derivedVariable0.addValueLabel(valueLabel0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      assertEquals("INVALID_CATEGORY", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.notes = "\"s.:zs|[RJ_wSAf]";
      rawVariable0.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.2801336877336102
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsOntologyTerm(ontologyTerm3);
      rawVariable0.setCodeBookNumber("e,2`{");
      ontologyTerm3.getDisplayName();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList4.add(ontologyTerm4);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      assertEquals("e,2`{", rawVariable0.getCodeBookNumber());
      
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setNameSpace("e,2`{");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm8);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6656801458058395
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setDocumentCode((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setDescription("$[5~");
      supportingDocument0.setDocumentCode("MA0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.columnStart = "$[5~";
      User user0 = new User("`JTbe-<#b6ik", (String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("$[5~", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.888322836263911
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Ip=,-[jM_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user1 = new User("siz7l+}FR8=nre", "siz7l+}FR8=nre");
      user1.setFirstName("");
      User user2 = new User("7*kz '(B0\"BO&?58G", "");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, derivedVariable0);
      rawVariable1.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Ip=,-[jM_", rawVariable0.getYear());
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.722973226438147
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      User user0 = new User();
      user0.setStatus("Ip=,-[jM_");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType2 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType2);
      valueLabel1.setMissingValue(false);
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel((String) null);
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      assertTrue(derivedVariable0.isCleaned());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.8910076996559204
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("e,2`{");
      rawVariable0.getName();
      User user0 = new User("UdpH[~z;=:S", "~");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.setUserID("roq&[:Q4ap]");
      user1.setStatus("J,-AuAPr$");
      user0.setStatus("variable.codeBookNumber.label");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getDisplayName();
      rawVariable0.setName(">BYN;{e'LdA&zB@D");
      user1.setPostCode("UNABLE_TO_DELETE_CATEGORY");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName(")aJL7");
      assertEquals(")aJL7", rawVariable0.getName());
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setAvailability(")aJL7");
      rawVariable3.codeBookNumber = "e,2`{";
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable3);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable3, rawVariable2);
      RawVariable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.hasSameDisplayName(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.79477348105052
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ontologyTerm3.getDisplayName();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm4);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList4.replaceAll(unaryOperator0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm1.setNameSpace("`k gq5Lpv+4 ");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable2);
      rawVariable1.isNewRecord();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      rawVariable0.setCleaningStatus("DUPLICATE_AVAILABILITY_STATE");
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("DUPLICATE_AVAILABILITY_STATE", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.6267097982890175
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      user1.setAddressLine2("-");
      user0.setPassword("p=,-[_");
      User user2 = new User();
      user2.setStatus("");
      User.detectFieldChanges(user0, user1, user0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user3 = new User("UNABLE_TO_CLEAR_TABLE", "?w+'Ue,dFpmu<O|r0:");
      User user4 = new User();
      User user5 = new User("p=,-[_", "1ZZ!R!;");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("variable.category.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals("variable.category.label", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      supportingDocument0.setTitle("");
      supportingDocument0.setDocumentCode("E~");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("8|146kyNSWH/v/F");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("8|146kyNSWH/v/F");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      assertEquals("8|146kyNSWH/v/F", rawVariable0.getCleaningStatus());
      
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(derivedVariable0.isCleaned());
  }
}
