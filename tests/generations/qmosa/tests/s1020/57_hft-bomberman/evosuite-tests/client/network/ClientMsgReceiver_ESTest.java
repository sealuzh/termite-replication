/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 22:08:24 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTransactionRollbackException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JLayeredPane;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.round.BombExplodedMsg;
import messages.round.RoundTimeOneSecondLeftMsg;
import org.apache.log4j.LogManager;
import org.apache.log4j.helpers.LogLog;
import org.apache.log4j.spi.RepositorySelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      MockInetAddress.getLocalHost();
      BomberClient bomberClient1 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      Vector<MapInfo> vector0 = bomberClient1.getAvailableMaps();
      MapListMsg mapListMsg0 = new MapListMsg(vector0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      int int0 = MockThread.MAX_PRIORITY;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";z8`6T/_");
      LogLog.setQuietMode(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)110;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K&");
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.sum(1, 360);
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      int int0 = MockThread.MAX_PRIORITY;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";z8`6T/_");
      LogLog.setQuietMode(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)110;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K&");
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.sum(1, 10);
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.interrupted();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo0);
      MapInfo mapInfo1 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo1);
      MapInfo mapInfo2 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList0.addLast(mapInfo2);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(linkedList0);
      LinkedList<MapInfo> linkedList1 = new LinkedList<MapInfo>();
      linkedList0.containsAll(stack0);
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      arrayList0.add((MapInfo) null);
      vector0.add((MapInfo) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.MapListMsg", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      long long0 = 0L;
      RoundTimeOneSecondLeftMsg roundTimeOneSecondLeftMsg0 = new RoundTimeOneSecondLeftMsg(long0);
      clientMsgReceiver0.processMsg(roundTimeOneSecondLeftMsg0);
      assertEquals(0, clientMsgReceiver0.countStackFrames());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.interrupted();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo0);
      MapInfo mapInfo1 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo1);
      MapInfo mapInfo2 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList0.addLast(mapInfo2);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(arrayList0);
      MapInfo mapInfo3 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      arrayList0.add(mapInfo3);
      LinkedList<MapInfo> linkedList1 = new LinkedList<MapInfo>();
      MapInfo mapInfo4 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo4);
      MapInfo mapInfo5 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      arrayList0.add(mapInfo5);
      linkedList0.containsAll(linkedList1);
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      ArrayList<MapInfo> arrayList1 = new ArrayList<MapInfo>();
      ArrayList<MapInfo> arrayList2 = new ArrayList<MapInfo>();
      arrayList2.add((MapInfo) null);
      arrayList1.add((MapInfo) null);
      vector0.add((MapInfo) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Stack<Integer> stack1 = new Stack<Integer>();
      BombExplodedMsg bombExplodedMsg0 = new BombExplodedMsg(32, stack1, stack1, stack1, true);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(bombExplodedMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.interrupted();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo0);
      MapInfo mapInfo1 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo1);
      MapInfo mapInfo2 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(mapInfo2);
      linkedList0.toArray();
      MapInfo mapInfo3 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList0.addLast(mapInfo3);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      Stack<MapInfo> stack1 = new Stack<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(stack1);
      LinkedList<MapInfo> linkedList1 = new LinkedList<MapInfo>();
      MapInfo mapInfo4 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList1.add(mapInfo4);
      MapInfo mapInfo5 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      arrayList0.add(mapInfo5);
      linkedList1.containsAll(arrayList0);
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      ArrayList<MapInfo> arrayList1 = new ArrayList<MapInfo>();
      arrayList0.add((MapInfo) null);
      stack1.add((MapInfo) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.MapListMsg", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6Z/_");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockThread.interrupted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6Z/_");
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6Z/_");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";z8`6Z/_");
      byte[] byteArray0 = new byte[6];
      LogLog.setInternalDebugging(false);
      byteArray0[2] = (byte)78;
      byteArray0[2] = (byte)0;
      LogLog.setQuietMode(true);
      byteArray0[3] = (byte) (-6);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[4] = (byte) (-105);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fi");
      FileSystemHandling.shouldAllThrowIOExceptions();
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      LogManager.setRepositorySelector(repositorySelector0, (Object) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";z8`6T/_");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";z8`6T/_");
      byte[] byteArray0 = new byte[6];
      LogLog.setInternalDebugging(false);
      byteArray0[2] = (byte)78;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fi");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "G}]?NGKuL#S";
      String string1 = "~%p";
      String string2 = "g^32;zmP>F.fursn:t";
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(string1, string2);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(string1, sQLIntegrityConstraintViolationException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(string1, sQLSyntaxErrorException0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(string2, string2, sQLFeatureNotSupportedException0);
      SQLSyntaxErrorException sQLSyntaxErrorException1 = new SQLSyntaxErrorException(string0, string1, sQLTransactionRollbackException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLSyntaxErrorException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
