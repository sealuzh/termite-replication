/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 23:25:48 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5869503118371823
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.setReader(bufferedCustomInputStream0);
      base64Decoder0.setOutputStream(printStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder1.decodeStream();
      System.setCurrentTimeMillis(500L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((byte)47);
      base64Decoder1.decodeStream();
      System.setCurrentTimeMillis(1502L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5390607984547411
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream("=ZA3'9<&TJGL");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)116;
      byteArray0[2] = (byte)14;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte)43;
      byteArray0[8] = (byte)10;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) byteArrayOutputStream0;
      objectArray0[1] = (Object) (byte)68;
      objectArray0[2] = (Object) (byte)43;
      objectArray0[3] = (Object) (byte)14;
      objectArray0[4] = (Object) "=ZA3'9<&TJGL";
      objectArray0[5] = (Object) (byte)14;
      objectArray0[6] = (Object) (byte)14;
      objectArray0[7] = (Object) (byte)14;
      objectArray0[8] = (Object) "//";
      mockPrintStream0.format("//", objectArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      mockPrintStream0.println("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      mockPrintStream0.println("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      MockPrintStream mockPrintStream1 = new MockPrintStream("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((byte)0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, mockFileInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0, (byte)43, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream1);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)10;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      System.setCurrentTimeMillis((byte)47);
      MockPrintStream mockPrintStream0 = new MockPrintStream("UNSUBSCRIBE");
      mockPrintStream0.println(">b!jg[u?oA+");
      mockPrintStream0.println("A");
      mockPrintStream0.append((CharSequence) ">b!jg[u?oA+");
      mockPrintStream0.println((float) 30);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 10000);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) (byte)47;
      objectArray0[1] = (Object) mockPrintStream0;
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5326914208398718
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/99_newzgrabber");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[3] = (byte)50;
      byteArray0[2] = (byte)53;
      byteArray0[3] = (byte)93;
      byteArray0[3] = (byte)43;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)53;
      byteArray1[1] = (byte) (-77);
      byteArray1[3] = (byte)105;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray1[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayOutputStream0.reset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The following are the lines from the base64 decode0;#zzHLVQ(&V2R[|T");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";#zzHLVQ(&V2R[|T");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";#zzHLVQ(&V2R[|T");
      byteArrayOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockPrintStream mockPrintStream0 = new MockPrintStream("=ZA3'9<&TJGL");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayOutputStream0.reset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)34);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      bufferedCustomInputStream0.TIMEOUT = (-1616321486);
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      boolean boolean0 = FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5788449127168476
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The following are the lines from the base64 decode0;#zzHLVQ(&V2R[|T");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)43;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      byteArray1[0] = (byte)60;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray1[4] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.setBegin(true);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)50);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5425058673927379
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("=ZA3'9<&TJGL");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte)40;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      mockPrintStream0.println("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      mockPrintStream0.println("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      mockPrintStream0.append((CharSequence) "=ZA3'9<&TJGL");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 60);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) (byte)68;
      objectArray0[2] = (Object) (byte)14;
      objectArray0[3] = (Object) (byte)40;
      mockPrintStream0.format("=ZA3'9<&TJGL", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "D\u000E\u0087\u000E\u0087\u0087\u000E(";
      stringArray0[1] = "=ZA3'9<&TJGL";
      Newzgrabber.main(stringArray0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("&,%da8$gQuP-Y,i");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(",\u00FD");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-114);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)1;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)10;
      byteArray1[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      String[] stringArray0 = new String[0];
      bufferedCustomInputStream0.INCR = (int) (byte)1;
      bufferedCustomInputStream0.closeTemp();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.ProgressSet = true;
      base64Decoder0.updateProgress();
      base64Decoder0.decodeStream();
      assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[0] = (byte)47;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)47;
      DebugGraphics.logStream();
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      mockPrintStream0.println("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      mockPrintStream0.println((String) null);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      MockPrintStream mockPrintStream1 = new MockPrintStream(pipedOutputStream0, true);
      mockPrintStream1.println((String) null);
      mockPrintStream0.println("D\u000E\u0087\u000E\u0087\u0087\u000E(");
      mockPrintStream1.append((CharSequence) "D\u000E\u0087\u000E\u0087\u0087\u000E(");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 30);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) (byte)47;
      mockPrintStream1.format("D\u000E\u0087\u000E\u0087\u0087\u000E(", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "D\u000E\u0087\u000E\u0087\u0087\u000E(";
      stringArray0[1] = "D\u000E\u0087\u000E\u0087\u0087\u000E(";
      stringArray0[2] = null;
      stringArray0[3] = "D\u000E\u000E\u000E\u000E";
      Newzgrabber.main(stringArray0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5869819987032194
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The following are the lines from the base64 decode0;#zzHLVQ(&V2R[|T");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";#zzHLVQ(&V2R[|T");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";#zzHLVQ(&V2R[|T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";#zzHLVQ(&V2R[|T");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockPrintStream mockPrintStream0 = new MockPrintStream("=ZA3'9<&TJGL");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayOutputStream0.reset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)34);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte) (-32);
      bufferedCustomInputStream1.read(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, (OutputStream) null);
      bufferedCustomInputStream1.markSupported();
      sequenceInputStream0.available();
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((-998L));
      System.setCurrentTimeMillis((byte) (-120));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[5] = (Object) "bNKr{,{O";
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) null;
      MockPrintStream mockPrintStream0 = new MockPrintStream("The following are the lines from the base64 decode");
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockPrintStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
