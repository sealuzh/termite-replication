/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:58:11 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.haveSlowResults = boolean0;
      boolean boolean1 = archiveScanner0.haveSlowResults;
      String[] stringArray0 = new String[4];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = string0;
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector1;
      improvedFile0.getAbsolutePath();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, stringArray0[0], archiveScanner0.haveSlowResults);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      archiveScanner0.haveSlowResults = boolean0;
      boolean boolean1 = archiveScanner0.haveSlowResults;
      String[] stringArray0 = new String[4];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = string0;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, stringArray0[0], archiveScanner0.haveSlowResults);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "M$7";
      ImprovedFile improvedFile0 = new ImprovedFile("M$7", "M$7");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector1;
      Vector<FilterInputStream> vector2 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector2.add((FilterInputStream) bufferedInputStream0);
      archiveScanner0.dirsExcluded = vector2;
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector0.add((InputStream) bufferedInputStream0);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream1.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      vector2.remove((Object) dataInputStream0);
      pipedInputStream1.close();
      pipedInputStream0.markSupported();
      pipedInputStream1.connect(pipedOutputStream0);
      bufferedInputStream0.mark(2147483645);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream1);
      dataInputStream1.markSupported();
      vector2.add((FilterInputStream) dataInputStream1);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      vector2.add((FilterInputStream) bufferedInputStream0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("child, 0child, .jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "child, 0child, .jar";
      Vector<FilterInputStream> vector1 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector1.add((FilterInputStream) null);
      archiveScanner0.dirsExcluded = vector1;
      bufferedInputStream0.mark(582);
      stringArray0[1] = "child, 0child, .jar";
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector0.add((InputStream) null);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream1.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream1);
      vector1.remove((Object) dataInputStream1);
      pipedInputStream1.close();
      pipedInputStream0.markSupported();
      pipedInputStream1.connect(pipedOutputStream0);
      bufferedInputStream0.mark((-2147483647));
      DataInputStream dataInputStream2 = new DataInputStream(pipedInputStream1);
      dataInputStream2.markSupported();
      vector1.add((FilterInputStream) dataInputStream2);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "child, 0child, .jar";
      stringArray0[3] = "child, 0child, .jar";
      vector1.add((FilterInputStream) null);
      archiveScanner0.setExcludes(stringArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "child, 0child, .jar", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/child, 0child, .jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("vVyB(dwR3yZn`i");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      String[] stringArray0 = new String[4];
      Vector<InputStream> vector2 = new Vector<InputStream>();
      archiveScanner0.filesExcluded = vector2;
      stringArray0[0] = "vVyB(dwR3yZn`i";
      Vector<FilterInputStream> vector3 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      vector3.add((FilterInputStream) dataInputStream0);
      archiveScanner0.dirsExcluded = vector3;
      vector3.containsAll(vector0);
      stringArray0[1] = "vVyB(dwR3yZn`i";
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.markSupported();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      vector3.add((FilterInputStream) dataInputStream0);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "vVyB(dwR3yZn`i";
      stringArray0[3] = "vVyB(dwR3yZn`i";
      archiveScanner0.setExcludes(stringArray0);
      boolean boolean0 = archiveScanner0.haveSlowResults;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      archiveScanner0.processFile("vVyB(dwR3yZn`i");
      archiveScanner0.processArchive(improvedFile0, "vVyB(dwR3yZn`i");
      assertFalse(improvedFile0.isAbsolute());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("M$7", "M$7");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "M$7";
      Vector<FilterInputStream> vector2 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      dataInputStream0.markSupported();
      vector2.add((FilterInputStream) dataInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector2.add((FilterInputStream) bufferedInputStream0);
      archiveScanner0.dirsExcluded = vector2;
      vector2.containsAll(vector0);
      bufferedInputStream0.mark(582);
      stringArray0[1] = "M$7";
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector0.add((InputStream) bufferedInputStream0);
      pipedOutputStream0.close();
      pipedInputStream1.close();
      pipedInputStream1.connect(pipedOutputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream1);
      vector2.add((FilterInputStream) dataInputStream1);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "M$7";
      stringArray0[3] = "M$7";
      archiveScanner0.setExcludes(stringArray0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 8);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream1);
      String string0 = ".zip";
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "M$7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("child, 0child, .jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "child, 0child, .jar";
      Vector<FilterInputStream> vector1 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector1.add((FilterInputStream) null);
      archiveScanner0.dirsExcluded = vector1;
      bufferedInputStream0.mark(582);
      stringArray0[1] = "child, 0child, .jar";
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector0.add((InputStream) null);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream1.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream1);
      vector1.remove((Object) dataInputStream1);
      pipedInputStream1.close();
      pipedInputStream0.markSupported();
      pipedInputStream1.connect(pipedOutputStream0);
      bufferedInputStream0.mark((-2147483647));
      DataInputStream dataInputStream2 = new DataInputStream(pipedInputStream1);
      vector1.add((FilterInputStream) dataInputStream2);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "child, 0child, .jar";
      stringArray0[3] = "child, 0child, .jar";
      vector1.add((FilterInputStream) null);
      archiveScanner0.setExcludes(stringArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      archiveScanner0.processDirectory(improvedFile0, "child, 0child, .jar", true);
      assertFalse(improvedFile0.canWrite());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = true;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.haveSlowResults = boolean0;
      Integer integer0 = new Integer(archiveScanner0.ARCHIVE);
      vector0.add(integer0);
      boolean boolean1 = archiveScanner0.haveSlowResults;
      String[] stringArray0 = new String[4];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = string0;
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processDirectory(improvedFile0, stringArray0[0], archiveScanner0.haveSlowResults);
      String string1 = "UzBp.0Yajar.jar.jar0.ear.jar0UzBp.0Yajar.jar.jar0.ear.jar.jar";
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        archiveScanner1.processDirectory(improvedFile0, string1, boolean2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("M$7");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "M$7";
      Vector<FilterInputStream> vector2 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      vector2.add((FilterInputStream) dataInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector2.add((FilterInputStream) bufferedInputStream0);
      archiveScanner0.dirsExcluded = vector2;
      bufferedInputStream0.mark(582);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      vector0.add((InputStream) null);
      stringArray0[1] = "M$7";
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      bufferedInputStream0.skip(0L);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream2.connect(pipedOutputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream2);
      vector2.add((FilterInputStream) dataInputStream1);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "M$7";
      vector2.add((FilterInputStream) bufferedInputStream0);
      stringArray0[3] = "M$7";
      archiveScanner0.setExcludes(stringArray0);
      vector0.add((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("M$7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9896217341979847
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("P_");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P_");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P_");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ", suffix ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P_");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      String string0 = improvedFile0.getCanonicalPath();
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      String[] stringArray0 = new String[4];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      stringArray0[0] = string0;
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.createFolder(evoSuiteFile1);
      archiveScanner0.toFileType(improvedFile0);
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processFile(string0);
      archiveScanner0.toFileType(improvedFile0);
      String string1 = ".zip";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string1, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "Q\"4my %#4";
      ImprovedFile improvedFile0 = new ImprovedFile("Q\"4my %#4", "Q\"4my %#4");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("Q\"4my %#4", "Q\"4my %#4");
      improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String string1 = improvedFile1.getCanonicalPath();
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath(string0, string1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = string1;
      archiveScanner0.includes = stringArray0;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Vector<FilterInputStream> vector0 = new Vector<FilterInputStream>();
      pipedInputStream0.connect(pipedOutputStream0);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector1;
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      vector0.add((FilterInputStream) dataInputStream1);
      pipedInputStream0.markSupported();
      vector0.add((FilterInputStream) dataInputStream0);
      try { 
        archiveScanner0.processArchive(improvedFile0, stringArray0[0]);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/Q\"4my %#4/Q\"4my %#4
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OP,rjar");
      ImprovedFile improvedFile1 = new ImprovedFile("OP,rjar", "OP,rjar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.getCanonicalPath();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "OP,rjar";
      stringArray0[1] = "OP,rjar";
      stringArray0[2] = "OP,rjar";
      stringArray0[3] = "OP,rjar";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "OP,rjar");
      stringArray0[4] = "OP,rjar";
      stringArray0[5] = "OP,rjar";
      stringArray0[6] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      stringArray0[8] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      archiveScanner0.includes = stringArray0;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "OP,rjar";
      stringArray1[1] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      stringArray1[2] = "OP,rjar";
      stringArray1[3] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      stringArray1[4] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      stringArray1[5] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      archiveScanner0.setExcludes(stringArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("OP,rjar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "~P_,r";
      ImprovedFile improvedFile0 = new ImprovedFile("~P_,r", "~P_,r");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath(string0, string1);
      String[] stringArray0 = new String[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string1);
      stringArray0[0] = string1;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("'ncu");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'ncu";
      Vector<FilterInputStream> vector1 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      dataInputStream0.skipBytes((-2295));
      vector1.add((FilterInputStream) dataInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector1.add((FilterInputStream) bufferedInputStream0);
      bufferedInputStream0.mark(582);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      vector0.add((InputStream) null);
      stringArray0[1] = "'ncu";
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      bufferedInputStream0.skip(0L);
      pipedOutputStream0.close();
      vector0.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) bufferedInputStream0);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream2.connect(pipedOutputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream2);
      vector1.add((FilterInputStream) dataInputStream1);
      vector0.add((InputStream) pipedInputStream1);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "'ncu";
      vector1.add((FilterInputStream) bufferedInputStream0);
      stringArray0[3] = "'ncu";
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "yabx1C IO7&Dk*", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "_";
      ImprovedFile improvedFile0 = new ImprovedFile("_");
      String string1 = improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = DirectoryScanner.matchPath(string0, string1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = string0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, stringArray0[0], boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7552281225441584
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "OPk,r_";
      ImprovedFile improvedFile0 = new ImprovedFile("OPk,r_");
      improvedFile0.getCanonicalPath();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "OPk,r_");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("OPk,r_");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "OPk,r_");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      improvedFile0.getCanonicalPath();
      archiveScanner0.myTempdir = improvedFile0;
      improvedFile0.getCanonicalPath();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string1 = "FILE_DOES_NOT_EXIST";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FILE_DOES_NOT_EXIST");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      int int0 = ArchiveScanner.ARCHIVE;
      String string2 = "g&\\4";
      boolean boolean0 = true;
      archiveScanner0.toFileType(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string2, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OP,rm;z.XJr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "OP,rm;z.XJr";
      Vector<FilterInputStream> vector2 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector2.add((FilterInputStream) bufferedInputStream0);
      archiveScanner0.dirsExcluded = vector2;
      stringArray0[1] = "OP,rm;z.XJr";
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      vector2.removeAllElements();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream1.connect(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      vector2.add((FilterInputStream) dataInputStream0);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "OP,rm;z.XJr";
      stringArray0[3] = "OP,rm;z.XJr";
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      Vector<InputStream> vector3 = new Vector<InputStream>();
      Enumeration<InputStream> enumeration0 = vector3.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      vector3.add((InputStream) sequenceInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pipedInputStream0);
      vector2.add((FilterInputStream) pushbackInputStream1);
      MockFile.createTempFile("OP,rm;z.XJr", "OP,rm;z.XJr");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OP,rjar");
      ImprovedFile improvedFile1 = new ImprovedFile("OP,rjar", "OP,rjar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.getCanonicalPath();
      String[] stringArray0 = new String[9];
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "OP,rjar";
      stringArray0[1] = "OP,rjar";
      stringArray0[2] = "OP,rjar";
      stringArray0[3] = "OP,rjar";
      String string0 = "yI=s";
      stringArray0[4] = "yI=s";
      stringArray0[5] = "OP,rjar";
      stringArray0[6] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      stringArray0[7] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[8] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      archiveScanner0.includes = stringArray0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "OP,rjar");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "OP,rjar";
      stringArray1[1] = "/home/ubuntu/termite/projects/78_caloriecount/OP,rjar";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".qZIP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("M$7", "M$7");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "M$7";
      Vector<FilterInputStream> vector2 = new Vector<FilterInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      vector2.add((FilterInputStream) dataInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
      vector2.add((FilterInputStream) bufferedInputStream0);
      archiveScanner0.dirsExcluded = vector2;
      vector2.containsAll(vector0);
      bufferedInputStream0.mark(582);
      stringArray0[1] = "M$7";
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector0.add((InputStream) bufferedInputStream0);
      pipedOutputStream0.close();
      vector0.add((InputStream) bufferedInputStream0);
      pipedInputStream1.close();
      pipedInputStream1.connect(pipedOutputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream1);
      vector2.add((FilterInputStream) dataInputStream1);
      archiveScanner0.includes = stringArray0;
      stringArray0[2] = "M$7";
      stringArray0[3] = "M$7";
      archiveScanner0.setExcludes(stringArray0);
      vector0.add((InputStream) pipedInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 8);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".zip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "Ij3kc?";
      ImprovedFile improvedFile0 = new ImprovedFile("Ij3kc?", "Ij3kc?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.setLastModified(2);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.processArchive(improvedFile0, "Ij3kc?");
      improvedFile0.deleteAll();
      archiveScanner0.processFile(string0);
      System.setCurrentTimeMillis(archiveScanner0.ARCHIVE);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("OPk,r_");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, ".EAR");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile("gAl&$fCn", ".ZIP", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      improvedFile0.getAbsolutePath();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      Integer integer0 = new Integer(archiveScanner0.ARCHIVE);
      vector0.add(integer0);
      archiveScanner0.haveSlowResults = boolean0;
      Integer integer1 = new Integer(archiveScanner0.ARCHIVE);
      vector0.add(integer1);
      boolean boolean1 = archiveScanner0.haveSlowResults;
      String[] stringArray0 = new String[4];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = string0;
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processDirectory(improvedFile0, stringArray0[0], archiveScanner0.haveSlowResults);
      String string1 = "UzBp.0Yajar.jar.jar0.ear.jar0UzBp.0Yajar.jar.jar0.ear.jar.jar";
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string1, boolean2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis((-25L));
      ImprovedFile improvedFile0 = new ImprovedFile(".AR");
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(24L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(28L);
      long long0 = (-25L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(11L);
      System.setCurrentTimeMillis(9L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1058L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1058L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1663L);
      System.setCurrentTimeMillis(11L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.haveSlowResults = boolean0;
      Integer integer0 = new Integer(archiveScanner0.ARCHIVE);
      vector0.add(integer0);
      boolean boolean1 = archiveScanner0.haveSlowResults;
      String[] stringArray0 = new String[4];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = string0;
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processDirectory(improvedFile0, stringArray0[0], archiveScanner0.haveSlowResults);
      String string1 = "UzBp.0Yajar.jar.jar0.ear.jar0UzBp.0Yajar.jar.jar0.ear.jar.jar";
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        archiveScanner1.processDirectory(improvedFile0, string1, boolean2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BdsAGs");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BdsAGs/.ear0UzBp.0Yajar.jar.jar");
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)5;
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("BdsAGs");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "[h<{exZB[?;iQl");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder(evoSuiteFile2);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "[h<{exZB[?;iQl";
      stringArray0[3] = "[h<{exZB[?;iQl";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "[h<{exZB[?;iQl";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "LhLlt!", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = ")3T1OZ*M) ~\\W";
      ImprovedFile improvedFile0 = new ImprovedFile(")3T1OZ*M) ~W");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.filesExcluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(")3T1OZ*M) ~W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BdsAGs/.ear0UzBp.0Yajar.jar.jar");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte) (-70);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)5;
      byteArray1[3] = (byte)45;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("OPk,r_");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray1);
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray2 = new byte[5];
      byteArray2[2] = (byte)47;
      byteArray2[3] = (byte)45;
      byteArray2[4] = (byte)54;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("BdsAGs");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      ImprovedFile.createTempImprovedFile(".ear", "UzBp.0Yajar.jar.jar", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.createFolder(evoSuiteFile2);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "cv<*t=uyh", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis((-25L));
      ImprovedFile improvedFile0 = new ImprovedFile(".AR");
      System.setCurrentTimeMillis((-25L));
      long long0 = 0L;
      System.setCurrentTimeMillis((-25L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      long long1 = 24L;
      System.setCurrentTimeMillis(long1);
      long long2 = 2492L;
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(int0);
      System.setCurrentTimeMillis(long0);
      long long3 = 0L;
      System.setCurrentTimeMillis(long3);
      long long4 = (-25L);
      System.setCurrentTimeMillis(long4);
      System.setCurrentTimeMillis(long0);
      System.setCurrentTimeMillis(long4);
      long long5 = 11L;
      System.setCurrentTimeMillis(long5);
      long long6 = 9L;
      System.setCurrentTimeMillis(long6);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long0);
      System.setCurrentTimeMillis(long4);
      System.setCurrentTimeMillis(long0);
      long long7 = 1058L;
      System.setCurrentTimeMillis(long7);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long7);
      long long8 = (-1L);
      System.setCurrentTimeMillis(long8);
      System.setCurrentTimeMillis(long2);
      long long9 = 1663L;
      System.setCurrentTimeMillis(long9);
      System.setCurrentTimeMillis(int0);
      System.setCurrentTimeMillis(long5);
      assertFalse(long5 == long9);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(24L);
      System.setCurrentTimeMillis(2492L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(28L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(11L);
      System.setCurrentTimeMillis(9L);
      System.setCurrentTimeMillis(2492L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1058L);
      System.setCurrentTimeMillis(2492L);
      System.setCurrentTimeMillis(2492L);
      System.setCurrentTimeMillis(2492L);
      System.setCurrentTimeMillis(1058L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2492L);
      System.setCurrentTimeMillis(1663L);
      System.setCurrentTimeMillis(11L);
      ImprovedFile improvedFile0 = new ImprovedFile("V7zY", "V7zY");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir(".ZIP", ".ZIP");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "_";
      ImprovedFile improvedFile0 = new ImprovedFile("_");
      String string1 = improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      archiveScanner0.haveSlowResults = boolean0;
      archiveScanner0.isExcluded(string0);
      archiveScanner0.isExcluded(string0);
      String[] stringArray0 = new String[6];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = string1;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1340L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1340L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis((-1340L));
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile(":xT");
      System.setCurrentTimeMillis(1023L);
      improvedFile0.setExecutable(true);
      MockFile.createTempFile("<5DQ=?a", "<5DQ=?a", (File) improvedFile0);
      System.setCurrentTimeMillis((-1L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<5DQ=?a";
      stringArray0[1] = ":xT";
      stringArray0[2] = ":xT";
      stringArray0[3] = "Uz.p.jaX.jar0Uz.p.jaX.jar.jar0Uz.p.jaX.jar0Uz.p.jaX.jar.jar.jar";
      stringArray0[4] = ":xT";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "EBH{", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BdsAGs");
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)5;
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BdsAGs");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("OPk,r_");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("BdsAGs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      ImprovedFile improvedFile0 = new ImprovedFile("BdsAGs");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      improvedFile0.setReadable(true);
      archiveScanner0.scandir(improvedFile0, ".zip", true);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("iI");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      improvedFile0.mkdirs();
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(2650L);
      System.setCurrentTimeMillis(3336L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-579L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "iI", true);
      assertEquals((-1L), improvedFile0.lastModified());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("iI", "iI");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1340L));
      System.setCurrentTimeMillis((-315L));
      long long0 = 1023L;
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1340L));
      System.setCurrentTimeMillis(1038L);
      long long1 = (-1L);
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis((-1340L));
      System.setCurrentTimeMillis(1038L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "iI");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/iI/iI
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile(".zip");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      long long0 = (-266L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-850L));
      long long1 = (-315L);
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(1038L);
      System.setCurrentTimeMillis((-565L));
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis(1038L);
      System.setCurrentTimeMillis((-565L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-315L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(long1);
      System.setCurrentTimeMillis(long0);
      System.setCurrentTimeMillis(long1);
      assertFalse(long1 == long0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("iI");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1023L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis((-850L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-315L));
      System.setCurrentTimeMillis(2650L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(3336L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-579L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "iI", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/iI
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockFile mockFile0 = new MockFile("tion");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("tion");
      MockFile.createTempFile("tion", "tion");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "tion");
      File file0 = MockFile.createTempFile("tion", "tion", (File) mockFile1);
      mockFile0.setLastModified(4383L);
      file0.setExecutable(true, false);
      ImprovedFile improvedFile0 = new ImprovedFile(file0, "tion");
      file0.getAbsolutePath();
      file0.deleteOnExit();
      mockFile0.getAbsoluteFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(mockFile1);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      long long0 = 1L;
      System.setCurrentTimeMillis(1L);
      ImprovedFile improvedFile0 = new ImprovedFile("{#DI}|)w5v]B5s)Q");
      System.setCurrentTimeMillis(1L);
      long long1 = 0L;
      System.setCurrentTimeMillis(1L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(long1);
      long long2 = 2492L;
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(int0);
      System.setCurrentTimeMillis(long1);
      long long3 = 28L;
      System.setCurrentTimeMillis(long3);
      long long4 = 0L;
      System.setCurrentTimeMillis(long4);
      System.setCurrentTimeMillis(long1);
      System.setCurrentTimeMillis(long4);
      long long5 = (-1L);
      System.setCurrentTimeMillis(long5);
      System.setCurrentTimeMillis(long0);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long1);
      System.setCurrentTimeMillis(long4);
      long long6 = 0L;
      System.setCurrentTimeMillis(long6);
      long long7 = 2650L;
      System.setCurrentTimeMillis(long7);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long5);
      System.setCurrentTimeMillis(long7);
      long long8 = (-1L);
      System.setCurrentTimeMillis(long8);
      System.setCurrentTimeMillis(long6);
      long long9 = 1679L;
      System.setCurrentTimeMillis(long9);
      System.setCurrentTimeMillis(int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile(".zip");
      System.setCurrentTimeMillis(0L);
      improvedFile0.setWritable(true, true);
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(long0);
      long long1 = 2492L;
      System.setCurrentTimeMillis(long1);
      System.setCurrentTimeMillis(int0);
      System.setCurrentTimeMillis(long0);
      long long2 = (-1L);
      System.setCurrentTimeMillis(long2);
      long long3 = 0L;
      System.setCurrentTimeMillis(long3);
      long long4 = 0L;
      System.setCurrentTimeMillis(long4);
      System.setCurrentTimeMillis(long4);
      long long5 = (-1L);
      System.setCurrentTimeMillis(long5);
      long long6 = (-1L);
      System.setCurrentTimeMillis(long6);
      long long7 = 85L;
      System.setCurrentTimeMillis(long7);
      long long8 = (-2619L);
      System.setCurrentTimeMillis(long8);
      long long9 = (-2539L);
      System.setCurrentTimeMillis(long9);
      assertFalse(long9 == long1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("BWl:Uk", "BWl:Uk");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.createTempDir("BWl:Uk", "~P_,r");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "BWl:Uk", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "OPk,r_.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
