/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 23:35:45 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[11];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("dl|");
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl1.setXMLVersion("t`;\"");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl1.getSystemId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory1;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      locator2Impl7.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl2.getLineNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl3.getEncoding();
      locator2Impl4.getLineNumber();
      locator2Impl6.setEncoding("t`;\"");
      locator2Impl6.getEncoding();
      locator2Impl3.setColumnNumber(0);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      connectionFactories0.getQueueConnectionFactory(0);
      assertEquals(2, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.exolab.jms.config.ConnectionFactoryTypeDescriptor$1");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[10];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.exolab.jms.config.ConnectionFactoryTypeDescriptor$1");
      connectionFactories0.getQueueConnectionFactory(6);
      mockPrintWriter0.checkError();
      // Undeclared exception!
      try { 
        mockPrintWriter0.append((CharSequence) "org.exolab.jms.config.ConnectionFactoryTypeDescriptor$1", 1382, (-3875));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[7];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      String string0 = "S`:pts<kLH9uh";
      String string1 = "9>3+3lchhI%B";
      MockFile mockFile0 = new MockFile("9>3+3lchhI%B", "S`:pts<kLH9uh");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("9>3+3lchhI%B");
      connectionFactories0.getConnectionFactoryCount();
      mockPrintWriter0.write((-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      boolean boolean0 = true;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1);
      String string2 = ":&Ik@A uwo%,s\\";
      MockPrintWriter mockPrintWriter3 = null;
      try {
        mockPrintWriter3 = new MockPrintWriter("9>3+3lchhI%B", ":&Ik@A uwo%,s");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // :&Ik@A uwo%,s
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setLineNumber((-23));
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.setLineNumber(84);
      locator2Impl6.setLineNumber((-23));
      locator2Impl5.setLineNumber((-23));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      locator2Impl4.setLineNumber(84);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl1.setLineNumber(0);
      locator2Impl8.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl8);
      locator2Impl8.getEncoding();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl12.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl0);
      locator2Impl5.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      connectionFactories0.getXAConnectionFactoryCount();
      locator2Impl13.setColumnNumber(0);
      locator2Impl10.getColumnNumber();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl13);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      Locator2Impl locator2Impl17 = new Locator2Impl();
      Locator2Impl locator2Impl18 = new Locator2Impl(locator2Impl9);
      assertFalse(locator2Impl18.equals((Object)locator2Impl6));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[11];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("|x");
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.getColumnNumber();
      locator2Impl6.setLineNumber(0);
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl8.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl10);
      locator2Impl5.setEncoding("t`;\"");
      locator2Impl5.getEncoding();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl10.getColumnNumber();
      locator2Impl2.setColumnNumber(0);
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl3);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locatorImpl1);
      XATopicConnectionFactory xATopicConnectionFactory0 = connectionFactories0.getXATopicConnectionFactory(0);
      assertNull(xATopicConnectionFactory0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setLineNumber((-23));
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.setLineNumber((-23));
      locator2Impl6.setLineNumber((-23));
      locator2Impl5.setLineNumber((-23));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      locator2Impl4.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl1.setLineNumber(0);
      locator2Impl8.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl8);
      locator2Impl8.getEncoding();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl12.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl0);
      locator2Impl5.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      locator2Impl8.getColumnNumber();
      locator2Impl13.setColumnNumber(0);
      locator2Impl10.getColumnNumber();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl13);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      Locator2Impl locator2Impl17 = new Locator2Impl();
      Locator2Impl locator2Impl18 = new Locator2Impl(locator2Impl9);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(2, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[26];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "");
      printWriter0.append((CharSequence) "");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = '7';
      charArray0[2] = 'u';
      charArray0[3] = '\"';
      charArray0[4] = '4';
      connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      // Undeclared exception!
      try { 
        mockPrintWriter0.write(charArray0, 13, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.exolab.jms.config.ConnectionFactoryTypeDescriptor$1");
      mockPrintWriter0.print('{');
      connectionFactories0.getQueueConnectionFactoryCount();
      mockPrintWriter0.checkError();
      // Undeclared exception!
      try { 
        mockPrintWriter0.append((CharSequence) "org.exolab.jms.config.ConnectionFactoryTypeDescriptor$1", 1382, (-3875));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[10];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory[] queueConnectionFactoryArray1 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray1);
      assertEquals(10, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[8];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("F4a[}RHSb8M");
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      locator2Impl0.setEncoding("?>");
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      locator2Impl0.getEncoding();
      locator2Impl0.setSystemId("");
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      int int0 = locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      locator2Impl3.setColumnNumber(0);
      locator2Impl3.getXMLVersion();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl13.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      connectionFactories0.getTopicConnectionFactory(0);
      connectionFactories0.getQueueConnectionFactoryCount();
      int int1 = connectionFactories0.getQueueConnectionFactoryCount();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[14];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getEncoding();
      locator2Impl0.setSystemId("");
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl2);
      connectionFactories0.getTopicConnectionFactoryCount();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl1.getEncoding();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl4);
      locator2Impl1.getEncoding();
      locator2Impl9.setEncoding("u+able to find FieldDescriptor for '");
      locator2Impl10.getEncoding();
      locator2Impl1.getColumnNumber();
      locator2Impl2.setColumnNumber(1);
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl5);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl2);
      TopicConnectionFactory[] topicConnectionFactoryArray1 = connectionFactories0.getTopicConnectionFactory();
      assertFalse(topicConnectionFactoryArray1.equals((Object)topicConnectionFactoryArray0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      String string0 = "S`:pts<kLH9uh";
      String string1 = "9>3+3chhI%B";
      MockFile mockFile0 = new MockFile("9>3+3chhI%B", "S`:pts<kLH9uh");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("S`:pts<kLH9uh");
      connectionFactories0.getConnectionFactory(0);
      mockPrintWriter0.write((-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      boolean boolean0 = true;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1);
      String string2 = ":&Ik@A uwo%,s\\";
      MockPrintWriter mockPrintWriter3 = null;
      try {
        mockPrintWriter3 = new MockPrintWriter("9>3+3chhI%B", ":&Ik@A uwo%,s");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // :&Ik@A uwo%,s
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      StringWriter stringWriter0 = new StringWriter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl5.setColumnNumber(70);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      connectionFactories0.getConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[10];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.exolab.jms.config.ConnectionFactoryTypeDescriptor$1");
      FileSystemHandling.createFolder(evoSuiteFile0);
      connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      assertEquals(9, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[11];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("|x");
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl1.setXMLVersion("t`;\"");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      locator2Impl7.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      locator2Impl9.getLineNumber();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl11);
      locator2Impl6.setEncoding("t`;\"");
      locator2Impl6.getEncoding();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl11.getColumnNumber();
      locator2Impl3.setColumnNumber(0);
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl15 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl16 = new Locator2Impl(locatorImpl1);
      connectionFactories0.getXATopicConnectionFactory(0);
      try { 
        connectionFactories0.setXATopicConnectionFactory((-29), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("<Ql0y;R7F5;}Lpd-V");
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      assertNull(xATopicConnectionFactory0.getName());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      MockFile mockFile0 = new MockFile("@ylxB='n+", "S`:ptfs<kLH9uh");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("S`:ptfs<kLH9uh");
      mockPrintWriter0.write((-17));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      mockPrintWriter0.append((CharSequence) "S`:ptfs<kLH9uh");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      mockPrintWriter1.println();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1);
      connectionFactories0.getConnectionFactory();
      MockPrintWriter mockPrintWriter3 = null;
      try {
        mockPrintWriter3 = new MockPrintWriter("@ylxB='n+", ":&Ik@A uwo%,s");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // :&Ik@A uwo%,s
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      int int0 = 0;
      connectionFactories0.getXAConnectionFactory(0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[8];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      int int1 = 0;
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[26];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "null argument in addAnyNode");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xsi:type");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte) (-100);
      byteArray0[5] = (byte)27;
      byteArray0[6] = (byte) (-116);
      byteArray0[7] = (byte) (-93);
      byteArray0[8] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      connectionFactories0.getTopicConnectionFactoryCount();
      connectionFactories0.getXAQueueConnectionFactory(0);
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      assertEquals(0, connectionFactoryArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory1);
      assertEquals(2, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory((TopicConnectionFactory) null);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray1 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E7^!ivL)fPG;");
      byteArray1[0] = (byte)19;
      byteArray1[1] = (byte)19;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)19;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6T2H.ua/Az;(V9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[11];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("dl|");
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl1.setXMLVersion("t`;\"");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl8.getColumnNumber();
      locator2Impl8.setLineNumber(0);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl10.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl12);
      locator2Impl7.setEncoding("t`;\"");
      locator2Impl7.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      locator2Impl12.getColumnNumber();
      locator2Impl3.setColumnNumber(0);
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl17 = new Locator2Impl(locatorImpl1);
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(11, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("Uz)W");
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("<Ql0y;R7F5;}Lpd-V");
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.819853186285054
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RK<@tQ4{dbr-");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray1 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray1[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("gl");
      xAQueueConnectionFactoryArray1[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray1[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray1[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray1[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray1[6] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray1);
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.exolab.jms.config.ConnectionFactories");
      mockPrintWriter0.write("gl");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      OutputStream outputStream0 = null;
      try { 
        connectionFactories0.marshal((Writer) mockPrintWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 525;
      try { 
        connectionFactories0.getTopicConnectionFactory(525);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory1);
      xAQueueConnectionFactory0.setName("<Ql0y;R7F5;}Lpd-V");
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.setXAQueueConnectionFactory(1986, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXATopicConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "No prefix other than 'xmlns' can be bound to 'http://www.w3.org/2000/xmlns/' namespace name");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = 'c';
      charArray0[2] = ' ';
      charArray0[3] = 'U';
      charArray0[4] = 'P';
      charArray0[5] = 'a';
      charArray0[6] = 'x';
      charArray0[7] = 'M';
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getDTDHandler();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(xMLFilterImpl1);
      char[] charArray0 = new char[4];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      xMLReaderAdapter0.startElement("", "", "", attributesImpl0);
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'W';
      charArray0[3] = 'V';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, (-53), 2319);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.endDocument();
      xMLReaderAdapter0.endDocument();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter2.startPrefixMapping("", "G8>D9e");
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-546), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray1 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6T2H.ua/Az;(V9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6T2H.ua/Az;(V9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(52, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[2];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(1, topicConnectionFactory0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(1, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HandlerBase handlerBase0 = new HandlerBase();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.endPrefixMapping("z-I73^l)`ElV_Sp4");
      char[] charArray0 = new char[8];
      charArray0[5] = 'V';
      charArray0[1] = 'V';
      xMLReaderAdapter0.endElement("", "6dNp2W0!Bz", "6dNp2W0!Bz");
      parserAdapter0.getErrorHandler();
      charArray0[4] = '\u0000';
      xMLReaderAdapter0.setEntityResolver(handlerBase0);
      HandlerBase handlerBase1 = new HandlerBase();
      xMLReaderAdapter1.setErrorHandler(handlerBase0);
      char[] charArray1 = new char[8];
      xMLReaderAdapter1.ignorableWhitespace(charArray1, 1757, '\u0000');
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      parserAdapter0.startDocument();
      parserAdapter0.ignorableWhitespace(charArray1, 1757, (-133));
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.processingInstruction("6dNp2W0!Bz", "z-I73^l)`ElV_Sp4");
      xMLReaderAdapter3.skippedEntity("z-I73^l)`ElV_Sp4");
      xMLReaderAdapter1.endDocument();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter4.characters(charArray1, 0, 0);
      xMLReaderAdapter4.startPrefixMapping("", "6dNp2W0!Bz");
      xMLReaderAdapter1.endDocument();
      xMLReaderAdapter4.endDocument();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter1.characters(charArray1, 0, 0);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(107, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 107, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setLineNumber((-23));
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.setLineNumber(84);
      locator2Impl6.setLineNumber((-23));
      locator2Impl5.setLineNumber((-23));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      locator2Impl4.setLineNumber(84);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl1.setLineNumber(0);
      locator2Impl8.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl8);
      locator2Impl8.getEncoding();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl12.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl0);
      locator2Impl5.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      locator2Impl8.getColumnNumber();
      locator2Impl13.setColumnNumber(0);
      locator2Impl10.getColumnNumber();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl13);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      Locator2Impl locator2Impl17 = new Locator2Impl();
      Locator2Impl locator2Impl18 = new Locator2Impl(locator2Impl9);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      assertEquals(1, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.925863762875188
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[11];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("q");
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl1.setXMLVersion("t`;\"");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl0.getEncoding();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      connectionFactories0.isValid();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(11, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("z(6]", "z(6]");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      char[] charArray0 = new char[1];
      xMLReaderAdapter1.endElement("z(6]", ")@u,1>>6~i9", "@g+A|K");
      xMLReaderAdapter0.startDocument();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter1.ignorableWhitespace(charArray0, (-1353), (-179));
      xMLReaderAdapter2.processingInstruction("z(6]", "z(6]");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter2.ignorableWhitespace(charArray0, (-1353), (-2));
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter4);
      xMLReaderAdapter5.endDocument();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter5.processingInstruction("TBc)U]nY>Cho", "TBc)U]nY>Cho");
      xMLReaderAdapter4.endPrefixMapping("TBc)U]nY>Cho");
      xMLReaderAdapter4.endPrefixMapping("@g+A|K");
      xMLReaderAdapter5.skippedEntity("@g+A|K");
      xMLReaderAdapter5.characters(charArray0, (-2), (-3501));
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter0);
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("z(6]", "z(6]");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      char[] charArray0 = new char[6];
      xMLReaderAdapter0.startDocument();
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 2318, 2318);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 2318, 2318);
      xMLReaderAdapter3.processingInstruction("z(6]", "z(6]");
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter3.ignorableWhitespace(charArray0, 2318, 2318);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter5);
      xMLReaderAdapter6.endDocument();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(parserAdapter1);
      char[] charArray1 = new char[3];
      charArray1[2] = 'e';
      charArray1[1] = 'c';
      charArray1[0] = 'Y';
      xMLReaderAdapter5.characters(charArray1, 2318, 2318);
      xMLReaderAdapter6.processingInstruction("+==q`~Z\"!b>tJxB^_o", "+==q`~Z\"!b>tJxB^_o");
      xMLReaderAdapter5.endPrefixMapping((String) null);
      xMLReaderAdapter5.endPrefixMapping((String) null);
      xMLReaderAdapter6.skippedEntity((String) null);
      xMLReaderAdapter6.characters(charArray0, 2318, (-3501));
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter5);
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter(parserAdapter1);
      try { 
        connectionFactories0.marshal((ContentHandler) xMLReaderAdapter6);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-804), topicConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      ConnectionFactories connectionFactories3 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*1rK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nwFvA)jGcKc,");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      String string0 = "Rk]3Z$Hbg{^$mWU";
      MockFile mockFile0 = new MockFile("Rk]3Z$Hbg{^$mWU", "gsx*Vu");
      String string1 = null;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      String string0 = "";
      MockFile mockFile0 = new MockFile("", "gsx*Vu");
      String string1 = null;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(1, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      char[] charArray0 = new char[6];
      charArray0[0] = ' ';
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.setEncoding((String) null);
      locator2Impl3.setLineNumber(' ');
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      locator2Impl7.setLineNumber((-2983));
      locator2Impl6.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl7);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl10.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locatorImpl1);
      locator2Impl7.getEncoding();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl5.getColumnNumber();
      locator2Impl11.setColumnNumber(794);
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl8);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locatorImpl1);
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 0;
      String string0 = "yn";
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      String string1 = ",JN6<_IsZi->";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("T)ARGPl'<", ",JN6<_IsZi->");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ,JN6<_IsZi->
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 791;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory(791, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 791, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9299041669155916
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RK<@tQ4{dbr-");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      xAQueueConnectionFactory0.setName("");
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.exolab.jms.config.ConnectionFactories");
      mockPrintWriter0.write("org.exolab.jms.config.ConnectionFactories");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.marshal((Writer) mockPrintWriter0);
      boolean boolean0 = false;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "t1W(q-'gq[f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.addConnectionFactory((ConnectionFactory) null);
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      ConnectionFactories connectionFactories3 = new ConnectionFactories();
      assertFalse(connectionFactories3.equals((Object)connectionFactories1));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(2, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addQueueConnectionFactory((QueueConnectionFactory) null);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      String string0 = "S`:pts<kLH9uh";
      String string1 = "9>3+3chhI%B";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("S`:pts<kLH9uh", "9>3+3chhI%B");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 9>3+3chhI%B
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("z(6]", "z(6]");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getContentHandler();
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      char[] charArray0 = new char[4];
      xMLReaderAdapter0.startDocument();
      xMLReaderAdapter1.ignorableWhitespace(charArray0, 2318, 1639);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter1.ignorableWhitespace(charArray0, (-1353), (-179));
      xMLReaderAdapter2.processingInstruction("z(6]", "z(6]");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter2.ignorableWhitespace(charArray0, (-1353), (-1));
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter4);
      xMLReaderAdapter5.endDocument();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter5.processingInstruction("c:&(Y8e$2= GLw98EE", "c:&(Y8e$2= GLw98EE");
      xMLReaderAdapter4.endPrefixMapping((String) null);
      xMLReaderAdapter4.endPrefixMapping("{HmZI|9KLyndFw");
      xMLReaderAdapter5.skippedEntity((String) null);
      xMLReaderAdapter5.characters(charArray0, (-511), (-3501));
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter3.ignorableWhitespace(charArray0, 2318, (-2983));
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("Uz)W");
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("<Ql0y;R7F5;}Lpd-V");
      connectionFactories0.clearQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertEquals(7, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 247;
      try { 
        connectionFactories0.getTopicConnectionFactory(247);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(26, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory2 = new XAQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory2);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId("");
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl2.setSystemId("");
      locator2Impl0.getColumnNumber();
      locator2Impl2.getSystemId();
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getXMLVersion();
      locator2Impl3.setEncoding("b`n$6erHKp&7thSmL;");
      locator2Impl3.setColumnNumber((-1));
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl4);
      locator2Impl3.setEncoding("b`n$6erHKp&7thSmL;");
      locator2Impl7.getEncoding();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl6.getColumnNumber();
      locator2Impl5.setLineNumber(11);
      locator2Impl0.setColumnNumber(0);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl11 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl10);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      Enumeration enumeration1 = connectionFactories0.enumerateTopicConnectionFactory();
      assertFalse(enumeration1.equals((Object)enumeration0));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintStream0, true);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter2);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter(mockPrintWriter3, false);
      String string0 = "D}yiA<#j\"q<{A=";
      mockPrintWriter2.append((CharSequence) "D}yiA<#j\"q<{A=");
      MockFile mockFile0 = new MockFile("D}yiA<#j\"q<{A=");
      String string1 = "S#qD3";
      MockPrintWriter mockPrintWriter5 = null;
      try {
        mockPrintWriter5 = new MockPrintWriter("87n0|8LkPnF/", "S#qD3");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // S#qD3
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addTopicConnectionFactory(738, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 738, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Q#.dW%Gy,8n!");
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "Q#.dW%Gy,8n!";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintStream0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter0, true);
      char[] charArray0 = new char[8];
      charArray0[4] = '\"';
      charArray0[3] = '\'';
      charArray0[4] = 'b';
      charArray0[5] = 'F';
      objectArray0[0] = (Object) 'J';
      mockPrintWriter2.print(charArray0);
      mockPrintWriter2.print(true);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "Q#.dW%Gy,8n!");
      PrintWriter printWriter1 = mockPrintWriter2.append((CharSequence) "&J7j,fzx's-si");
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter(mockPrintWriter3, false);
      mockPrintWriter2.close();
      char[] charArray1 = new char[1];
      charArray1[0] = '7';
      mockPrintStream0.println(charArray1);
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter(printWriter0, true);
      MockPrintWriter mockPrintWriter6 = new MockPrintWriter("KaU$%$zR~S'9jJogP]");
      MockPrintWriter mockPrintWriter7 = new MockPrintWriter(mockPrintWriter4, false);
      MockPrintWriter mockPrintWriter8 = new MockPrintWriter("KaU$%$zR~S'9jJogP]");
      MockPrintWriter mockPrintWriter9 = new MockPrintWriter(printWriter1, true);
      MockPrintWriter mockPrintWriter10 = new MockPrintWriter("&J7j,fzx's-si");
      MockPrintWriter mockPrintWriter11 = new MockPrintWriter("Q#.dW%Gy,8n!");
      MockPrintWriter mockPrintWriter12 = new MockPrintWriter(mockPrintWriter6, false);
      assertFalse(mockPrintWriter12.equals((Object)mockPrintWriter4));
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory((-3831), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -3831, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean1 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray1 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[0] = (byte)19;
      byteArray1[2] = (byte)19;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)19;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6T2H.ua/Az;(V9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6T2H.ua/Az;(V9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory((int) (byte)19, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[11];
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("dl|");
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setXMLVersion("t`;\"");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl8.getColumnNumber();
      locator2Impl8.setLineNumber(0);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl12.getPublicId();
      locator2Impl10.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl12);
      locator2Impl7.setEncoding("t`;\"");
      locator2Impl7.getEncoding();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      locator2Impl12.getColumnNumber();
      locator2Impl3.setColumnNumber(0);
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl17 = new Locator2Impl(locatorImpl1);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HandlerBase handlerBase0 = new HandlerBase();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.endPrefixMapping("#bt5f/~S]");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.skippedEntity("#bt5f/~S]");
      xMLReaderAdapter1.setErrorHandler(handlerBase0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 1758, (-2643));
      parserAdapter0.characters(charArray0, 0, 1758);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.skippedEntity("#bt5f/~S]");
      xMLReaderAdapter1.endDocument();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter4.setErrorHandler(defaultHandler2_0);
      xMLReaderAdapter4.endDocument();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter0.ignorableWhitespace(charArray0, (-3604), 0);
      xMLReaderAdapter1.characters(charArray0, 0, 0);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter6.setDTDHandler(handlerBase0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setColumnNumber(1743);
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory((TopicConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")o*Pc");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-410), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      URI uRI0 = MockURI.aHttpURI;
      MockURI.normalize(uRI0);
      connectionFactories0.getXAConnectionFactory();
      assertEquals(2, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      String string0 = "";
      String string1 = "P1}w4>";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", "P1}w4>");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // P1}w4>
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ERm$k*x3m!K]*2*@6~");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-111);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.Mapping");
      byteArray0[4] = (byte) (-111);
      byteArray0[6] = (byte) (-111);
      byteArray0[8] = (byte) (-111);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((int) (byte) (-111));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endDocument();
      xMLFilterImpl0.getErrorHandler();
      xMLFilterImpl0.setErrorHandler((ErrorHandler) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getEncoding();
      locator2Impl0.setLineNumber(1);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      try { 
        connectionFactories0.getXATopicConnectionFactory(16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory((-11), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".%wrqZS]K^");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Class not found: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">z.-*-JYrS`1/Y");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Class not found: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory((-1300));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t?M7.gKI+7<IA9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory((-2013));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ERm$k*x3m!K]*2*@6~");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-111);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.Mapping");
      byteArray0[4] = (byte) (-111);
      byteArray0[6] = (byte) (-111);
      byteArray0[8] = (byte) (-111);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory((int) (byte) (-111));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ERm$k*x3m!K]*2*@6~");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-111);
      byteArray0[9] = (byte) (-31);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-111);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.Mapping");
      byteArray0[4] = (byte) (-111);
      byteArray0[6] = (byte) (-111);
      byteArray0[8] = (byte) (-111);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory((int) (byte) (-111));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[17];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-21));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      char[] charArray0 = new char[4];
      xMLReaderAdapter0.startDocument();
      xMLReaderAdapter1.setDocumentHandler(parserAdapter0);
      char[] charArray1 = new char[1];
      charArray1[0] = 'b';
      xMLReaderAdapter1.ignorableWhitespace(charArray1, 2319, 1639);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter1.ignorableWhitespace(charArray0, (-1353), (-1));
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter2.ignorableWhitespace(charArray1, (-1353), (-1));
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter4);
      xMLReaderAdapter5.endDocument();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter1.skippedEntity("!c,3ql'&j");
      xMLReaderAdapter0.endDocument();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(parserAdapter1);
      xMLReaderAdapter6.endDocument();
      xMLReaderAdapter1.endDocument();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      xMLReaderAdapter7.characters(charArray0, (-1), 1639);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter();
      try { 
        connectionFactories0.getQueueConnectionFactory(11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("z(6]", "z(6]");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.setDocumentHandler((DocumentHandler) null);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      char[] charArray0 = new char[3];
      xMLReaderAdapter0.startDocument();
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 2318, 2318);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 2318, 2318);
      xMLReaderAdapter3.processingInstruction("z(6]", "z(6]");
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter3.ignorableWhitespace(charArray0, 2318, 2318);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      xMLReaderAdapter2.endDocument();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter5.characters(charArray0, 2318, 2318);
      xMLReaderAdapter6.processingInstruction("$!v8Mcp!VWg8JU7f", "$!v8Mcp!VWg8JU7f");
      xMLReaderAdapter5.endPrefixMapping((String) null);
      xMLReaderAdapter5.endPrefixMapping((String) null);
      xMLReaderAdapter6.skippedEntity((String) null);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      xMLReaderAdapter5.setEntityResolver(defaultHandler0);
      xMLReaderAdapter6.characters(charArray0, 2318, (-3501));
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter5);
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter(parserAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter5);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter(parserAdapter0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter0.endPrefixMapping("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'K';
      charArray0[2] = '\\';
      xMLReaderAdapter0.characters(charArray0, 0, 3);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 1271, 3);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      connectionFactories0.validate();
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t?M7.gKI+7<IA9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(1057);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(27, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".%wrqZS]K^");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Class not found: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">z.-*-JYrS`1/Y");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setQueueConnectionFactory((-1125), (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte) (-100);
      byteArray0[5] = (byte)27;
      byteArray0[6] = (byte) (-116);
      byteArray0[7] = (byte) (-93);
      byteArray0[8] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      char[] charArray0 = new char[6];
      charArray0[0] = ' ';
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.setEncoding((String) null);
      locator2Impl3.setLineNumber(' ');
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      connectionFactories0.getConnectionFactoryCount();
      locator2Impl7.setLineNumber((-2983));
      locator2Impl6.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl7);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      locator2Impl10.getLineNumber();
      Locator2Impl locator2Impl12 = new Locator2Impl(locatorImpl1);
      locator2Impl7.getEncoding();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl5.getColumnNumber();
      locator2Impl12.setColumnNumber(794);
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl11);
      Locator2Impl locator2Impl15 = new Locator2Impl();
      Locator2Impl locator2Impl16 = new Locator2Impl();
      Locator2Impl locator2Impl17 = new Locator2Impl(locatorImpl1);
      assertFalse(locator2Impl17.equals((Object)locator2Impl12));
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl1.setEncoding((String) null);
      locator2Impl1.setLineNumber(' ');
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.getColumnNumber();
      locator2Impl6.setLineNumber((-2983));
      locator2Impl5.setLineNumber(0);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl9.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locatorImpl1);
      locator2Impl6.getEncoding();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl4.getColumnNumber();
      locator2Impl11.setLineNumber(320);
      locator2Impl11.setColumnNumber(794);
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl10);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locatorImpl1);
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "s";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(13, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXAConnectionFactory((XAConnectionFactory) null);
      connectionFactories0.addXAConnectionFactory((XAConnectionFactory) null);
      int int0 = 0;
      connectionFactories0.removeXAConnectionFactory((XAConnectionFactory) null);
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t?M7.gKI+7<IA9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(1177);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory0.setName("Uz)W");
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      xAQueueConnectionFactory0.setName("<Ql0y;R7F5;}Lpd-V");
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertEquals(7, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E7^!ivL)fPG;");
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)19;
      byteArray1[1] = (byte)19;
      byteArray1[2] = (byte)19;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)19;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E7^!ivL)fPG;");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6T2H.ua/Az;(V9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4,UDQGLI");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-921));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.loader.J2CollectionHandlers");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Q#.dW%Gy,8n!");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(14);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      connectionFactories0.getXAConnectionFactoryCount();
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".%wrqZS]K^");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">z.-*-JYrS`1/Y");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tM7.gKI+7<IA9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addConnectionFactory(34, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 34, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)19;
      byteArray1[2] = (byte)19;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)19;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "76/2Hua//z(V9");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXATopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      char[] charArray0 = new char[6];
      charArray0[0] = '\u0011';
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.setEncoding((String) null);
      locator2Impl3.setLineNumber('\u0011');
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getColumnNumber();
      locator2Impl7.setLineNumber((-2983));
      locator2Impl6.setLineNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl7);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      locator2Impl10.getLineNumber();
      Locator2Impl locator2Impl12 = new Locator2Impl(locatorImpl1);
      locator2Impl7.getEncoding();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl5.getColumnNumber();
      locator2Impl12.setColumnNumber(794);
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl11);
      Locator2Impl locator2Impl15 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl16 = new Locator2Impl(locatorImpl2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = "";
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.getXATopicConnectionFactoryCount();
      MockFile mockFile0 = new MockFile("", "gsx*Vu");
      String string1 = null;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'Y';
      CharBuffer.wrap(charArray0, (int) '\u0000', (int) '\u0000');
      StringReader stringReader0 = new StringReader("org.exolab.castor.mapping.loader.J1CollectionHandlers");
      stringReader0.skip((-1L));
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
