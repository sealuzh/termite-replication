/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 22:38:57 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0605706572811844
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier(" :");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.toString();
      simpleNode0.setIdentifier(">=");
      SystemInUtil.addInputLine("84X\"D=137v'n'vKW");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      simpleNode0.dump("9kUHsq:UJ`", stringWriter1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3816002975101453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J>");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J>");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BooleanLiteral");
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")N");
      simpleNode0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(^I[oQM7u0h:PWNJN.");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.stream();
      simpleNode1.identifiers = arrayList0;
      int int1 = 0;
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      String string0 = ";>UCp=E|WnP";
      Node node0 = simpleNode0.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      // Undeclared exception!
      try { 
        node0.jjtGetChild((-3506));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9836493754972628
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(29);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      String string0 = ";";
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.retainAll(arrayList1);
      arrayList0.add(";");
      arrayList0.add(">>");
      simpleNode0.jjtAddChild(simpleNode0, 29);
      simpleNode0.jjtGetChild(29);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump(";>UCp=E|WnP", stringWriter0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("J>");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y$^>[XY$YB_uXA)kJB");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.append((CharSequence) "\"break\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w4e`x_/");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.dump("F[10V|9", stringWriter0);
      assertEquals("\"break\"<VariableDeclaratorId>\n  <identifier>J></identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9080557692325655
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("Mk9|L>zkj1!d{O5hOm");
      simpleNode0.jjtGetParent();
      simpleNode0.identifiers = null;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(10);
      stringWriter0.flush();
      simpleNode1.jjtAddChild((Node) null, 3263);
      simpleNode1.dump("Mk9|L>zkj1!d{O5hOm", stringWriter0);
      simpleNode1.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.toString("Mk9|L>zkj1!d{O5hOmCompilationUnit");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 46;
      SimpleNode simpleNode0 = new SimpleNode(46);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5531577432135644
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.toString("qx");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("}");
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3851028980422702
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild(simpleNode0, 18);
      simpleNode0.jjtGetChild(18);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump(";>UCp=E|WnP", stringWriter0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.157677035511023
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "";
      simpleNode0.toString("");
      String string1 = "<=";
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      String string2 = "H{EL=R6!|<F<}";
      StringReader stringReader0 = new StringReader("H{EL=R6!|<F<}");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("H{EL=R6!|<F<}", stringWriter1);
      StringWriter stringWriter2 = null;
      try {
        stringWriter2 = new StringWriter((-1596));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 33);
      simpleNode0.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) ";UCpE|kWn", 0, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      String string0 = "J>";
      simpleNode1.jjtAddChild(simpleNode0, 0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-3637));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3637
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("<=");
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9220516044814313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      StringReader stringReader0 = new StringReader("Mk9|L>zkj1!d{O5hOm");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 53);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      javaParser0.TypeParameter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";>UCp=E|WnP");
      simpleNode0.toString("VariableDeclaratorId");
      javaParserTokenManager0.MoreLexicalActions();
      simpleNode1.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "&&");
      javaParserTokenManager0.lengthOfMatch = 0;
      stringWriter0.append((CharSequence) ";>UCp=E|WnP");
      simpleNode1.dump("&&", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-914));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1361557235984077
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.toString(";>UCp=E|WnP");
      arrayList0.add("Q%\"/Gcc.pp`M");
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("m<Oo3j_ MQ\"CNHEi8O", stringWriter0);
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream(5260);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6200155105291458
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      arrayList0.add("&");
      arrayList0.add("J>");
      simpleNode1.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"break\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J>");
      stringWriter0.append((CharSequence) "_NC;f.TgnE,-\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*ge");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"break\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PackageDeclaration");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"[\"");
      simpleNode0.dump("*ge", stringWriter0);
      assertEquals("_NC;f.TgnE,-\"<CompilationUnit>\n  <identifier>*amp</identifier>\n  <identifier>*amp</identifier>\n  <identifier>J></identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      int int0 = (-1499);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1499));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1499
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-488));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(1518);
      simpleNode0.jjtAddChild(nodeArray0[0], 466);
      assertEquals(467, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2328));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2328));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1501058308407441
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.stream();
      simpleNode1.identifiers = arrayList0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";>UCp=E|WnP", stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9838542105574033
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      simpleNode0.jjtAddChild(simpleNode0, 18);
      String string0 = ";>UCp=E|WnP";
      simpleNode0.jjtGetChild(18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump(string0, stringWriter0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 38;
      SimpleNode simpleNode0 = new SimpleNode(38);
      SimpleNode simpleNode1 = new SimpleNode(105);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtGetParent();
      String string0 = "[]oz>O[7WZQL2$_/V";
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringWriter0.write(38);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "[]oz>O[7WZQL2$_/V", (-1102214078), 38);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("J>");
      arrayList0.stream();
      simpleNode1.identifiers = arrayList0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      // Undeclared exception!
      try { 
        simpleNode1.dump("z,o$H1IL`@)5]{dLRI", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-488));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(1518);
      // Undeclared exception!
      try { 
        simpleNode0.dump("@~K'*", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.7332075259206667
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.trimToSize();
      arrayList0.add("");
      arrayList0.add("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode1.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"break\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J>");
      stringWriter0.append((CharSequence) "_NC;f.TgnE,-\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SynchronzdStatment");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"break\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PackageDeclaration");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"[\"");
      simpleNode0.dump("SynchronzdStatment", stringWriter0);
      assertEquals("_NC;f.TgnE,-\"<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = (-27);
      SimpleNode simpleNode0 = new SimpleNode((-27));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -27
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6270866719173012
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("J>");
      simpleNode1.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter(73);
      stringWriter0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J>");
      stringWriter0.append((CharSequence) "C~B");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Un");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Un");
      simpleNode1.dump("    ", stringWriter0);
      assertEquals("C~B<CompilationUnit>\n  <identifier>J></identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("J>");
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.dump("\"native\"", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-18);
      SimpleNode simpleNode0 = new SimpleNode((-18));
      // Undeclared exception!
      try { 
        simpleNode0.toString("&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -18
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 291);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      simpleNode0.parser = javaParser1;
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("{");
      javaParserTokenManager1.debugStream = javaParserTokenManager0.debugStream;
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      javaParserTokenManager1.defaultLexState = 291;
      javaParser0.jjtree = jJTJavaParserState0;
      javaParserTokenManager0.MoreLexicalActions();
      simpleNode0.setIdentifier((String) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 291
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1106823794));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 9);
      String string0 = simpleNode0.toString();
      assertEquals("EnumBody", string0);
  }
}
