/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 21:43:04 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.434576190193599
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("  ");
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent("-expindmpty");
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-imTeDt";
      stringArray0[4] = "-imTeDt";
      stringArray0[5] = "  ";
      stringArray0[6] = "\"TB[S,t";
      stringArray0[7] = "-lineSeparator";
      stringArray0[8] = "  ";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-365));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -365
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true, "-trimText");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-xhtml-nineSenaraoer";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "@8ISg?Azif";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "-indentSize";
      stringArray0[6] = "-indentSize";
      stringArray0[7] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-xhtml-nineSenaraoer\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[21];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[2] = "-xhtml{%D.:0o!]ZiCb";
      stringArray0[3] = "-xhtml{%D.:0o!]ZiCb";
      OutputFormat outputFormat0 = new OutputFormat("LQ/Vjq", false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-imTeDt", false, "-imTeDt");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtml{%D.:0o!]ZiCb";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-imTeDt";
      stringArray0[3] = "-expandEmptyba=b]4_qc8c|e?;(P?";
      stringArray0[4] = "-xhtml{%D.:0o!]ZiCb";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("]Tfu>", false);
      outputFormat0.setNewLineAfterNTags((-1359));
      String[] stringArray0 = new String[2];
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[0] = "-xhtml9ninegenajao}r";
      stringArray0[1] = "]Tfu>";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-1359), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.145722802994512
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expindEmpty");
      assertEquals("-expindEmpty", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expindEmpty";
      stringArray0[1] = "";
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("  ");
      OutputFormat outputFormat1 = new OutputFormat("-trimText", false, "");
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setIndent("-expindEmpty");
      outputFormat0.getLineSeparator();
      assertEquals("-expindEmpty", outputFormat0.getIndent());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4224304412057447
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml8\"8e&u435$YnCy-", false, "-lineSeaaraoTr");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      outputFormat0.setIndent("-xhtml-xhtml-nineSenaraoer");
      stringArray0[1] = "!wjRl3Fuf";
      stringArray0[2] = "-lineSeaaraoTr";
      stringArray0[3] = "-lineSeaaraoTr";
      stringArray0[4] = "-expandEmptyba=b]4_qc8c|e?;(P?";
      stringArray0[5] = "$";
      stringArray0[6] = "-lineSeaaraor";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("Invalid attribute quote character (");
      assertEquals("Invalid attribute quote character (", outputFormat0.getIndent());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0831728948417303
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter(',');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (,)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.125427274197803
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*o*4%(1J.";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-padText";
      stringArray0[4] = "1Qamoo";
      stringArray0[5] = "WT{%A.:0o!]";
      outputFormat1.parseOptions(stringArray0, 1);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "#FM^&";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-xpindmpt";
      stringArray0[7] = "-trimText";
      stringArray0[5] = "#FM^&";
      stringArray0[6] = ">ms6vbg}n>";
      stringArray0[7] = "-xpindmpt";
      stringArray0[8] = "#FM^&";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xNtml{%.:0o!]ZiCb", false);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml-nineSenaGaoer";
      stringArray0[1] = "@8ISg?Azif";
      stringArray0[2] = "Ox5>X?j.(c6w2G;e>z";
      stringArray0[3] = "Ox5>X?j.(c6w2G;e>z";
      stringArray0[4] = "-xhtml-nineSenaGaoer";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-xhtml{%D.:0o!]ZiCb";
      stringArray1[1] = "-xhtml{%D.:0o!]ZiCb";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6886563846554554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "-lineSeparaor";
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptywQ/UoHD?$U[L2d");
      outputFormat0.setIndentSize(2);
      outputFormat0.setIndent("N`");
      outputFormat0.setIndent("wQ/UoH");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat((String) null, true, "wQ/UoH");
      OutputFormat outputFormat2 = new OutputFormat((String) null, true, "Z>3(2umy]!U=");
      outputFormat2.setLineSeparator("`}YV):");
      outputFormat0.setIndent("wQ/UoH");
      outputFormat2.setNewlines(false);
      outputFormat2.setNewLineAfterNTags(34);
      outputFormat2.setIndentSize(0);
      outputFormat2.parseOptions(stringArray0, 1500);
      int int0 = outputFormat2.getNewLineAfterNTags();
      assertEquals("`}YV):", outputFormat2.getLineSeparator());
      assertEquals(34, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ba=b]4_qc8c|Je?;(P?";
      stringArray0[1] = "ba=b]4_qc8c|Je?;(P?";
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding((String) null);
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isPadText());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1431128238477373
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[21];
      stringArray0[0] = "-encoding";
      stringArray0[2] = "-xhtmli%b.:0o!]ZiYCb";
      stringArray0[3] = "-xhtml{%D.:0o!]ZiCb";
      OutputFormat outputFormat0 = new OutputFormat("LQ/Vjq", false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.84056219079352
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals(39, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-lineSeaarao";
      OutputFormat outputFormat0 = new OutputFormat("-lineSeaarao");
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.getAttributeQuoteCharacter();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VQSSj}xD:AcH", true, "VQSSj}xD:AcH,SJ]P=");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3143174310487695
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("");
      outputFormat1.setIndent("-xhtml");
      outputFormat1.setXHTML(true);
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.setPadText(true);
      outputFormat1.isSuppressDeclaration();
      outputFormat1.isSuppressDeclaration();
      outputFormat0.isTrimText();
      outputFormat1.setIndent("");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize(0);
      outputFormat0.setXHTML(true);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.getEncoding();
      outputFormat0.isXHTML();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "  ";
      stringArray0[6] = "  ";
      stringArray0[7] = "UTF-8";
      stringArray0[0] = "  ";
      int int0 = outputFormat0.parseOptions(stringArray0, 1662);
      assertEquals(1662, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.145722802994512
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expindEmpty");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expindEmpty";
      stringArray0[1] = "";
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("  ");
      OutputFormat outputFormat1 = new OutputFormat("-trimText", false, "");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent("-expindEmpty");
      outputFormat0.getLineSeparator();
      assertEquals("", outputFormat0.getLineSeparator());
      
      outputFormat1.setIndent("-trimText");
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3637131171994197
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent(true);
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(4071);
      outputFormat0.setNewLineAfterNTags((-1935817218));
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(4071);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setEncoding("");
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml9ninegenajao}r", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml9ninegenajao}r";
      stringArray0[1] = "-xhtml-xhtml-nineSenaraoer";
      stringArray0[2] = "-xhtml8\"8e&u435$YnCy-";
      stringArray0[3] = "-xhtml9ninegenajao}r";
      stringArray0[4] = "-xhtml9ninegenajao}r";
      stringArray0[5] = "-xhtml-xhtml-nineSenaraoer";
      stringArray0[6] = "-xhtml8\"8e&u435$YnCy-";
      stringArray0[7] = "-xhtml8\"8e&u435$YnCy-";
      int int0 = outputFormat0.parseOptions(stringArray0, 2643);
      assertEquals("-xhtml9ninegenajao}r", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(2643, int0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7475284756773015
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("");
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(boolean0);
      
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      assertTrue(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isPadText());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertTrue(outputFormat3.isTrimText());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertFalse(outputFormat3.isPadText());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertFalse(outputFormat3.isXHTML());
      assertEquals("\n", outputFormat3.getLineSeparator());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.660811002794006
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setXHTML(true);
      assertTrue(outputFormat1.isXHTML());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.205018389478345
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setEncoding("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("v@8M1Jc~I~g<");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-58));
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.isNewlines();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      assertEquals("", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3676341587746297
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      OutputFormat.createCompactFormat();
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setOmitEncoding(false);
      outputFormat2.setEncoding("");
      outputFormat0.setSuppressDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-797));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -797
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9447978161695705
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Jt]G<H&3(|>Jjuaf", true, "");
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setLineSeparator("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setEncoding("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("v@8M1Jc~I~g<");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-58));
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.isNewlines();
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      String string0 = outputFormat0.getLineSeparator();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.174834213558677
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3i5Yf<6eI?EU9Fi%%n", true, "3i5Yf<6eI?EU9Fi%%n");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = new OutputFormat("3i5Yf<6eI?EU9Fi%%n", false, "3i5Yf<6eI?EU9Fi%%n");
      outputFormat1.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setEncoding("Ll_//)1Xsl)Fe");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("2:?(u`Yl)Wg[8IOp");
      outputFormat0.setIndent("<D/fvr!6;?");
      outputFormat0.setNewlines(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      outputFormat1.setIndent("3i5Yf<6eI?EU9Fi%%n");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "<D/fvr!6;?";
      stringArray0[1] = "Ll_//)1Xsl)Fe";
      stringArray0[2] = "<D/fvr!6;?";
      stringArray0[3] = "3i5Yf<6eI?EU9Fi%%n";
      stringArray0[4] = "2:?(u`Yl)Wg[8IOp";
      stringArray0[5] = "3i5Yf<6eI?EU9Fi%%n";
      stringArray0[6] = "Ll_//)1Xsl)Fe";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(",iJ ^e6faR>lHM");
      outputFormat0.isPadText();
      String string0 = OutputFormat.STANDARD_INDENT;
      String string1 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndent("bT=b]4_qa8c|Je?;(P?");
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals("bT=b]4_qa8c|Je?;(P?", outputFormat0.getIndent());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = ":SVP_RP>Z$=S<|Dkd";
      stringArray0[1] = "\"<hGR'],43$c@";
      stringArray0[2] = "+2fJz|uR(UNo8Q>";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 3757);
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtml-ninSenaraoer", false);
      outputFormat0.setExpandEmptyElements(false);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-xhtml-xhtml-ninSenaraoer", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0327899270093863
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setSuppressDeclaration(false);
      outputFormat1.setPadText(true);
      outputFormat2.setIndent(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "9#K5";
      stringArray0[2] = "+nMk9|L>zkj1";
      stringArray0[3] = "O5hOm/}-Gk?JAA)PlA+";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 248);
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isTrimText();
      assertFalse(outputFormat0.isPadText());
      
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertTrue(outputFormat1.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("]Tfu>", true);
      outputFormat0.setIndentSize((-360));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml9ninegenajao}r";
      stringArray0[1] = "-xhtml8\"8e&u435$YnCy-";
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-lineSeaaraor", true);
      outputFormat0.setPadText(false);
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-xhtml-lineSeaaraor", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("2M:k{B>-%_-su41kG@D", true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expindEmpty";
      stringArray0[1] = "/Ba$nfmg^i9ayxw+]";
      stringArray0[2] = "-expindEmpty";
      stringArray0[7] = "-xhtml9nineSenarao}r";
      stringArray0[4] = "-imTeDt";
      stringArray0[5] = "-xhtml8\"8e&u435$YnCy-";
      stringArray0[6] = "-imTeDt";
      stringArray0[7] = "-xhtml9nineSenarao}r";
      stringArray0[8] = "-xpind";
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5786000152695845
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setEncoding("ML(5ai'");
      assertEquals("-expandEmpty", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setIndentSize(372);
      outputFormat2.setIndent("");
      outputFormat2.isExpandEmptyElements();
      outputFormat1.setIndent("ML(5ai'");
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setEncoding("f=P[~#KDc~");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isOmitEncoding();
      assertEquals("", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0;O*Vnlo\"", false, "TU[d`p!qcX~%");
      assertEquals("0;O*Vnlo\"", outputFormat0.getIndent());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmptyba=b]4_qc8c|Je?;(P?";
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("TU[d`p!qcX~%", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expindmpty";
      stringArray0[1] = "-xhtml8\"8e&u435$YnCy-";
      stringArray0[2] = "-expindmpty";
      stringArray0[3] = "/Ba$nfmg^ji9ayxw+]";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtml-ninSenaraoer", true);
      outputFormat0.setIndent("-xhtml-xhtml8\"8e&u435nCy-");
      assertEquals("-xhtml-xhtml8\"8e&u435nCy-", outputFormat0.getIndent());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isExpandEmptyElements();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "-expandEmpty";
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0;O*Vnlo\"", false, "TU[d`p!qcX~%");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmptyba=b]4_qc8c|Je?;(P?";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-lineSeaaraor";
      stringArray0[3] = "-expandEmpty-newlines";
      stringArray0[4] = "m>%XZ5Q}DVzNI";
      stringArray0[5] = "I<I:[*";
      stringArray0[6] = "TU[d`p!qcX~%";
      stringArray0[7] = "HR'R&O.` _6.k~\"/g";
      stringArray0[8] = "-lineSeaaraor";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0309453947300713
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setEncoding("f=P[~#KDc~");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("");
      outputFormat0.isOmitEncoding();
      assertEquals("", outputFormat0.getEncoding());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.isNewlines();
      assertTrue(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(false);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("L/Y&*qyV&&>TS<H", false, "");
      String string0 = outputFormat0.getEncoding();
      assertEquals("", string0);
      assertEquals("L/Y&*qyV&&>TS<H", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("<.Doa+_E", true);
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("<.Doa+_E", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expindEmpty", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "/Ba$nfmg^i9ayxw+]";
      stringArray0[1] = "-xpind";
      stringArray0[2] = "-xpind";
      stringArray0[3] = "/Ba$nfmg^i9ayxw+]";
      stringArray0[4] = "T)@DN#`?Clx$?@";
      stringArray0[5] = "-xpind";
      stringArray0[3] = "KBO'rIJT&x";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-expindEmpty", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('i');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (i)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.isNewLineAfterDeclaration();
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      assertTrue(outputFormat0.isSuppressDeclaration());
  }
}
