/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 00:03:52 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.LinkedList;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1299066249682808
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-1335L));
      Player player0 = new Player((-1), "Player", 4161);
      player0.setJoinOK(player0, false);
      Player player1 = new Player((-1), "Player", "Player", 4161);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player1.setX(0.1F);
      player0.setDead();
      player0.setDead((long) (short)4919, true);
      player1.setZ((short)4919);
      player0.setY((short)4919);
      System.setCurrentTimeMillis((-1));
      player0.pack();
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(4919L);
      System.setCurrentTimeMillis(13682L);
      player0.type();
      player0.pack();
      player1.pack();
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player1.getZ(), 0.01F);
      
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      Player player2 = new Player((short)4919, "Player", 4161);
      player2.pack(dataOutputStream0);
      assertEquals(5, player2.type());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.05477796069814
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "Player";
      Player player0 = new Player();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player1.setY(0.2F);
      player0.isJoinOK(player0, true);
      player0.isJoinOK(player0, false);
      String string1 = "WbIS";
      try { 
        MockURI.URI("4*ojJ2,%`rw?D17)=", (String) null, "4*ojJ2,%`rw?D17)=", "WbIS");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 4*ojJ2,%`rw?D17)=:4*ojJ2,%25%60rw%3FD17)=#WbIS
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(41, "V", 41);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1602), (byte)65);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 41);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1049922791552107
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "T3kt%K=", 0);
      byte[] byteArray0 = player0.pack();
      player0.setY((-3489.2961F));
      Player player1 = new Player(2, "T3kt%K=", "T3kt%K=", 2);
      player1.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)55;
      byteArray1[1] = (byte) (-30);
      byteArray1[2] = (byte) (-30);
      byteArray1[3] = (byte)0;
      dataInputStream0.readFully(byteArray1);
      byteArrayInputStream0.markSupported();
      dataInputStream0.readUnsignedShort();
      player0.unpack(dataInputStream0);
      player1.setZ(0L);
      player1.setDead(0L, true);
      Player player2 = new Player(1, "T3kt%K=", "T3kt%K=", (short)4919);
      player2.setX((byte)0);
      player2.setZ((-274.2272F));
      player2.isJoinOK(player0, true);
      player2.toString();
      player1.isJoinOK(player0, false);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream1);
      player2.isJoinOK(player0, false);
      float float0 = player2.getX();
      assertEquals((-274.2272F), player2.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-8448));
      player0.setMoney((-1.0F));
      player0.pack();
      player0.getX();
      player0.getMoney();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-8448));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -8448
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1472, "", "", 0, (-1995));
      player0.setDead(3903L, false);
      Player player1 = new Player((-2269), "", (String) null, 824);
      player0.isJoinOK(player1, false);
      assertEquals(3903L, player0.getTimeOfDeath());
      
      Player player2 = new Player(0, "LW2B-$Pv", 1472);
      player2.toString();
      player1.getName();
      assertEquals(824, player1.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "~";
      Player player0 = new Player(1472, "~", "~", 0, (-1995));
      player0.setDead(3903L, false);
      Player player1 = new Player((-2269), "~", (String) null, 824);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(0, (String) null, 1472);
      player2.toString();
      player1.getName();
      player0.pack();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9454908168625713
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Player player0 = new Player(0, "T3kt%K=", 0);
      byte[] byteArray0 = player0.pack();
      player0.setY((-3486.506F));
      Player player1 = new Player(2, "T3kt%K=", "T3kt%K=", 2);
      player1.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[4];
      dataInputStream0.readUnsignedShort();
      byteArray1[0] = (byte)55;
      byteArray1[1] = (byte) (-30);
      byteArray1[2] = (byte) (-87);
      byteArray1[3] = (byte)0;
      player0.setDead(1410L, true);
      dataInputStream0.readFully(byteArray1);
      byteArrayInputStream0.markSupported();
      dataInputStream0.readUnsignedShort();
      player0.unpack(dataInputStream0);
      player1.setZ(0L);
      player1.setDead(0L, true);
      player1.setDead(0L, true);
      Player player2 = new Player(1, "T3kt%K=", "T3kt%K=", (short)4919);
      player0.isJoinOK(player1, false);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1410L, long0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-1324L));
      Player player0 = new Player(2153, "|", 2153);
      player0.toString();
      Player player1 = new Player(2153, "|", 2153);
      player1.setX((-1.0F));
      player1.getSubparty();
      player0.isJoinOK(player1, true);
      player1.getX();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T3kt%K=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Player player0 = new Player(0, "", 0);
      File file0 = MockFile.createTempFile("T3kt%K=", "T3kt%K=");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) file0;
      objectArray0[1] = (Object) file0;
      objectArray0[2] = (Object) file0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) file0;
      objectArray0[6] = (Object) "<Ll`syW?>l$}AN!]YUU";
      objectArray0[7] = (Object) null;
      mockPrintStream0.format("<Ll`syW?>l$}AN!]YUU", objectArray0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = (-1449);
      String string0 = "y?W;>UCp=E|WnP";
      Player player0 = new Player((-1449), "y?W;>UCp=E|WnP", "y?W;>UCp=E|WnP", (-1449));
      player0.setZ(0.0F);
      Player player1 = new Player(1265, "y?W;>UCp=E|WnP", (-1449));
      player1.setY(644.1818F);
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-725));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)0;
      byteArray0[0] = (byte) (-14);
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setY(4468.8F);
      Player player1 = new Player((short)4919, ">g*yjdKv%cMsBa", "", 5);
      player0.remove(player1);
      player0.reset(false);
      player0.setMoney((-725));
      player0.setMoney((short)4919);
      player1.isJoinOK(player0, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      float float0 = player0.getY();
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
      assertEquals(4468.8F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      Player player0 = new Player(5);
      Player player1 = new Player(1658, "Player", "", 177, (byte)0);
      player0.setJoinOK(player1, true);
      int int0 = player0.getPictureId();
      assertEquals("Player5", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      
      int int1 = player1.gangStrength();
      assertTrue(int1 == int0);
      
      float float0 = player1.getY();
      assertEquals(177, player1.getPictureId());
      assertEquals("Player", player1.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, ".yaY?Sa'8&o\"a+Gc", ".yaY?Sa'8&o\"a+Gc", 0, 1647);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte) (-64);
      player0.unpack(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Player player1 = new Player();
      player0.id = 0;
      player0.add(player1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player1.isJoinOK(player0, false);
      player1.setX((byte) (-64));
      Player player2 = new Player(5, "n?V*DxT^1k", "[J`*pT\"doV`!zPtAU", 0);
      player1.isJoinOK(player2, true);
      assertEquals((-64.0F), player1.getX(), 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1648, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1449), "y?W;>UCp=E|WnP", "y?W;>UCp=E|WnP", (-1449));
      byte[] byteArray0 = new byte[2];
      player0.setZ((-1449));
      player0.setY((-1449));
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte) (-76);
      player0.unpack(byteArray0);
      player0.toString();
      MockPrintStream mockPrintStream0 = new MockPrintStream("y?W;>UCp=E|WnP");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "y?W;>UCp=E|WnP";
      objectArray0[1] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format("y?W;>UCp=E|WnP", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      dataOutputStream0.close();
      player0.pack(dataOutputStream0);
      player0.pack();
      player0.setDead();
      player0.getX();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("E#[Ok6TA~x1f+E");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      mockPrintStream0.println();
      mockPrintStream0.println();
      mockPrintStream0.append((CharSequence) "y?W;>UCp=E|WnP", 0, 0);
      float float0 = player0.getY();
      assertEquals((-1449.0F), player0.getZ(), 0.01F);
      assertEquals((-1449.0F), float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(3);
      player0.setZ(0.0F);
      Player player1 = new Player(3, (String) null, (short)4919);
      player0.setDead(1L);
      player0.isJoinOK(player1, false);
      player1.setX((short)4919);
      player1.setY((-13.8275F));
      assertEquals(4919.0F, player1.getX(), 0.01F);
      
      Player player2 = new Player(3, "", "", 177);
      player2.reset(false);
      player0.isDead();
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(0, "", "", (-3136), 0);
      Party party0 = player0.next;
      player0.prev = null;
      player0.setX(1517.0F);
      player0.getPictureId();
      player0.getName();
      player0.getStrength();
      player0.head = null;
      player0.pack();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (short)4919);
      try { 
        bufferedInputStream0.available();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-725));
      player0.setY(4468.8F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      player0.unpack(byteArray0);
      player0.gangStrength();
      player0.setZ((-3422.3337F));
      Party party0 = new Party(0);
      party0.prev = (Party) player0;
      player0.remove(party0);
      player0.setX(620.0F);
      player0.getTimeOfDeath();
      player0.setMoney(10.0F);
      float float0 = player0.getZ();
      assertEquals(620.0F, player0.getX(), 0.01F);
      assertEquals((-3422.3337F), float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, (String) null, "", 0, (-2070));
      player0.setDead(1060L, true);
      player0.reset(true);
      player0.getIP();
      player0.getStrength();
      player0.setMoney(0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-1449), "", "", (-1449));
      player0.setZ((-1449));
      player0.setY((-1449));
      player0.toString();
      String string1 = "";
      player0.pack();
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      player0.gangStrength();
      int int0 = (-10027);
      player0.id = (-10027);
      player0.setConnected(false);
      player0.getPictureId();
      Party party0 = player0.boss;
      player0.next = null;
      player0.getIP();
      player0.getIP();
      System.setCurrentTimeMillis((short)4919);
      player0.getX();
      player0.isConnected();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-725));
      player0.setY((-725));
      Player player1 = new Player((short)4919, ">g*yjdKv%cMsBa", "", 5);
      player1.setZ(0.1F);
      player0.remove(player1);
      player0.reset(false);
      player0.setMoney(727.4001F);
      float float0 = player0.getMoney();
      assertEquals((-725.0F), player0.getY(), 0.01F);
      assertEquals(727.4001F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-5630), "", "", 0);
      player0.setDead((-214L));
      player0.gangStrength();
      player0.getTimeOfDeath();
      player0.reset(false);
      player0.setY((-1521.0154F));
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "V";
      URI uRI0 = null;
      Player player0 = new Player(10, "V", "V", 10, 10);
      player0.pack();
      // Undeclared exception!
      try { 
        MockURI.normalize((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(2258, "y?W;>UCp=E|WnP", "y?W;>UCp=E|WnP", 2258);
      player0.setZ(2258);
      Player player1 = new Player(0, "!_gLh?:bn8['Yh'", 2258);
      player1.setDead((-1445L));
      player1.isJoinOK(player0, false);
      player1.setX((short)4919);
      Player player2 = new Player(11, "", ".*[.]class$", 0);
      player1.getPictureId();
      int int0 = Packable.PLAYER;
      player1.getY();
      assertEquals((-1445L), player1.getTimeOfDeath());
      
      System.setCurrentTimeMillis((short)4919);
      player2.pack();
      assertEquals(0, player2.getPictureId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-1449), "y?W;>UCp=E|WnP", "y?W;>UCp=E|WnP", (-1449));
      player0.setZ((-1449));
      Player player1 = new Player(0, "!_gLh?:bn8['Yh'", (-1449));
      player1.setDead((-1445L));
      player1.isJoinOK(player0, false);
      player1.setX((short)4919);
      Player player2 = new Player(11, "", ".*[.]class$", 0);
      player1.getPictureId();
      player1.gangStrength();
      float float0 = player1.getY();
      assertEquals(4919.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      System.setCurrentTimeMillis((-1221L));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-28);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1), "Player", (String) null, 903);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1221L));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-2939));
      player0.setY(4468.8F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      player0.unpack(byteArray0);
      player0.setZ((-3423.0F));
      Party party0 = new Party(0);
      party0.head = (Party) player0;
      player0.remove(party0);
      player0.setMoney((-1535.995F));
      player0.setMoney((-261.54F));
      Player player1 = new Player(1541, "%", ".*[.]class$", (short)4919);
      player1.setX(596.6038F);
      float float0 = player0.getX();
      assertEquals((-261.54F), player0.getMoney(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "";
      int int0 = 0;
      Player player0 = new Player(0, "", "", 6196, 0);
      Party party0 = new Party();
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.head;
      int int0 = Packable.GAME_STATE;
      Player player1 = new Player(0, "%Rxm(2*V", "9,*&`{>^A;", 1948);
      player0.setJoinOK(player1, true);
      player0.setZ(1);
      player0.getZ();
      player0.reset(false);
      assertEquals(1.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Locale locale0 = new Locale("'rG%2.a1IN6c\"TJm", "'rG%2.a1IN6c\"TJm");
      Player player0 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", string0);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)0;
      int int0 = 2335;
      Player player0 = new Player(2335, "z9*Ii5#", "z9*Ii5#", (byte)0, 2147338665);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(1, "][_a\tAA", 455);
      player0.setZ(0.0F);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 455);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.setZ(0.0F);
      player0.setY(0.0F);
      player0.getName();
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T3kt%K=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Player player0 = new Player(0, "", 0);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = false;
      Locale locale0 = new Locale("'rG%2.a1IN6c\"TJm", "'rG%2.a1IN6c\"TJm");
      Player player0 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "";
      URI uRI0 = null;
      Player player0 = new Player(10);
      Player player1 = new Player(16672, "fcL^7yGd61J", "fcL^7yGd61J", 4190);
      player0.setJoinOK(player1, true);
      // Undeclared exception!
      try { 
        MockURI.create("fcL^7yGd61J");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 3: fcL^7yGd61J
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-63);
      Player player0 = new Player();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)0;
      System.setCurrentTimeMillis(13714L);
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis(2482L);
      Player player0 = new Player((byte)0);
      int int0 = player0.type();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", player0.getName());
      assertEquals(5, int0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "";
      String string1 = "";
      Player player0 = new Player((-4552), "", "", (-993), (-993));
      player0.setZ((-4552));
      String string2 = "xq^u#rbn";
      System.setCurrentTimeMillis((-993));
      // Undeclared exception!
      try { 
        MockURI.create("xq^u#rbn");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 2: xq^u#rbn
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = (-21);
      Player player0 = new Player((-21));
      player0.pack();
      String string0 = "Player.unpack(p: *** WARNING *** dta is no ofproper type!";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.unpack(p: *** WARNING *** dta is no ofproper type!", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.getIP();
      int int1 = 905;
      PipedInputStream pipedInputStream0 = new PipedInputStream(905);
      try { 
        pipedInputStream0.skip((short)4919);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-725));
      player0.setY(4468.8F);
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-39);
      player0.unpack(byteArray0);
      player0.gangStrength();
      player0.setZ((-3423.0F));
      Party party0 = new Party(0);
      party0.prev = (Party) player0;
      player0.remove(party0);
      player0.setX(620.0F);
      player0.getTimeOfDeath();
      Player player1 = new Player((-725), "", (String) null, 1);
      player0.isJoinOK(player1, false);
      assertEquals(620.0F, player0.getX(), 0.01F);
      
      player1.getX();
      player1.getIP();
      assertEquals(1, player1.getPictureId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 4919;
          String string0 = "";
          Player player0 = new Player(4919, "", "-A", (-1449));
          player0.setZ(0.0F);
          int int1 = 180;
          Player player1 = new Player(180, "", 180);
          player0.setDead((long) 4919);
          player0.setConnected(false);
          player1.gangStrength();
          player1.isJoinOK(player0, false);
          player0.setX(180);
          player0.pack();
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileOutputStream mockFileOutputStream0 = null;
          try {
            mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
             // sun.reflect.GeneratedConstructorAccessor102.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-4165), "ZYZQ)q(.Le?I/73", "ZYZQ)q(.Le?I/73", (-4165), (-4165));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.330792211843223
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis((-1323L));
      Player player0 = new Player((-1), "Player", 4161);
      Player player1 = new Player();
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-1), "Player", "Player", 903);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player2.setY(0.2F);
      player2.setY(0.2F);
      player0.setDead();
      player1.setMoney(0.0F);
      player1.setDead(0L, false);
      player2.isJoinOK(player0, false);
      player0.setZ(0.2F);
      player1.add(player0);
      player0.setY((short)4919);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1));
      player0.setX(0.0F);
      byte[] byteArray0 = player0.pack();
      player1.type();
      player2.unpack(byteArray0);
      System.setCurrentTimeMillis((short)4919);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1542L);
      System.setCurrentTimeMillis(4161);
      player0.isJoinOK(player2, false);
      System.setCurrentTimeMillis((-1));
      int int0 = player0.type();
      assertEquals(4919.0F, player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-4593), "", "J6G", (-1040), (-1040));
      player0.gangStrength();
      String string1 = "xq^u#rbn";
      try { 
        MockURI.URI("J6G", "J6G", "J6G", "xq^u#rbn", "xq^u#rbn");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: J6G://J6GJ6G?xq%5Eu%23rbn#xq%5Eu%23rbn
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "T3kt%K=";
      Player player0 = new Player(0, "T3kt%K=", "T3kt%K=", 0, 0);
      long long0 = 0L;
      byte[] byteArray0 = player0.pack();
      player0.setY(0.2F);
      Player player1 = new Player(2, "T3kt%K=", "T3kt%K=", 2);
      int int0 = Packable.GAME_EVENT;
      boolean boolean0 = true;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[4];
      player0.unpack(dataInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      dataOutputStream0.writeChars(">fhLBj");
      player1.pack(dataOutputStream0);
      byteArrayInputStream0.read();
      byteArray1[0] = (byte)55;
      byteArray1[1] = (byte) (-30);
      byteArray1[2] = (byte) (-30);
      byteArray1[3] = (byte)0;
      try { 
        dataInputStream0.readFully(byteArray1);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9431598145315694
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-725));
      player0.setY(4468.8F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      player0.unpack(byteArray0);
      player0.gangStrength();
      player0.setZ((-3423.0F));
      Party party0 = new Party(0);
      party0.prev = (Party) player0;
      player0.remove(party0);
      player0.setMoney((-1535.995F));
      player0.setMoney(0.0F);
      player0.isDead();
      player0.setMoney((-261.54F));
      player0.getStrength();
      Player player1 = new Player(1541, "%", ".*[.]class$", (short)4919);
      player0.isJoinOK(player1, false);
      assertEquals((-261.54F), player0.getMoney(), 0.01F);
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.JAPANESE;
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "O3IRc";
      URI uRI0 = null;
      Player player0 = new Player(41, "O3IRc", "O3IRc", 41, 41);
      player0.pack();
      // Undeclared exception!
      try { 
        MockURI.normalize((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.GERMAN;
      Player player0 = new Player();
      player0.setDead(15000L);
      assertEquals(15000L, player0.getTimeOfDeath());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player1 = new Player((-2194), "3MY<]kncoRVHa", "%Z5GyP>3L{U", (-2194), (short)4919);
      assertEquals((-2194), player1.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis((-1323L));
      Player player0 = new Player((-1), "Player", 4161);
      player0.reset(false);
      assertFalse(player0.isDead());
      assertEquals(4161, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      
      Player player1 = new Player();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Locale locale0 = new Locale("'rG%2.a1IN6c\"TJm", "'rG%2.a1IN6c\"TJm");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(2000, "", "'rG%2.a1IN6c\"TJm", 3532);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)60;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte) (-128);
      byteArray0[7] = (byte) (-19);
      byteArray0[8] = (byte)0;
      player0.unpack(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-63);
      Player player0 = new Player();
      player0.boss = null;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      Player player0 = new Player(8192);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player8192", player0.getName());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(2, "", 1528);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis(1136L);
      float float0 = player0.getMoney();
      assertEquals(1528, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player((-1449), "y?W;>UCp=E|WnP", "y?W;>UCp=E|WnP", (-1449));
      byte[] byteArray0 = new byte[2];
      player0.setZ((-1449));
      player0.setY((-1449));
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-76);
      player0.unpack(byteArray0);
      player0.setZ((byte)0);
      Party party0 = new Party(1);
      player0.remove(party0);
      player0.setX((-3707.9F));
      player0.getTimeOfDeath();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player0.setMoney((-3707.9F));
      float float0 = player0.getZ();
      assertEquals((-3707.9F), player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-4573), "", "J6G", (-993), (-993));
      player0.setDead();
      String string1 = "xq^u#rbn";
      try { 
        MockURI.URI("xq^u#rbn");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 2: xq^u#rbn
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "_";
      Player player0 = new Player((-1040), "_", "J6G", (-1040), (-1040));
      player0.reset(true);
      String string1 = "xq^u#rbn";
      try { 
        MockURI.URI("_", "xq^u#rbn", "_");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: _:xq%5Eu%23rbn#_
         //
         verifyException("java.net.URI$Parser", e);
      }
  }
}
