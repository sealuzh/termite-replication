/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 22:54:19 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.853582874092723
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g,RXDeqP6!Snys");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.doubleColon();
      String string0 = token1.toString();
      assertEquals("[ (19) (RX)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token0);
      assertEquals("g,", token0.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("D", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("eqP6", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("!", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("S", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.995336482827573
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      Token token1 = xPathLexer0.number();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string0 = token0.toString();
      assertEquals("[ (19) (]V)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (30) ()", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("-", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.not();
      assertEquals("j", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("W", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("`#-nle", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("cJ(fC*,K;}xR");
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("J", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.639826957551654
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g,RXDeqP6!Snys");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("g,", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("g,RXDeqP6!Snys");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer3.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("RXDeqP6", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("_uN(1m:E%NJlX[");
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer3.slashes();
      assertEquals("o", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8739736863833885
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.not();
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer1.rightParen();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer1.colon();
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("P<", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer1.colon();
      assertEquals("<", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("e", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("Y", token7.getTokenText());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals("5!", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("~", token9.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.095834672559108
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.setXPath("as-CU0");
      Token token0 = xPathLexer0.dots();
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer0.setXPath("as-CU0");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.star();
      assertEquals("a", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0691355875640784
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.pipe();
      token0.toString();
      token1.toString();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("[ (11) (o)");
      xPathLexer2.rightBracket();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer("[ (11) (o)");
      xPathLexer3.setXPath("com.werken.saxpath.Token");
      xPathLexer2.nextToken();
      xPathLexer3.at();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      xPathLexer5.pipe();
      Token token2 = xPathLexer1.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0616141606392335
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.colon();
      Token token1 = xPathLexer0.at();
      xPathLexer0.pipe();
      String string0 = token0.toString();
      assertEquals("[ (18) (c)", string0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setPreviousToken(token1);
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("e", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.pipe();
      assertEquals("r", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("ken.saxpath.Token", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9755609661897597
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("U#2@jMtR");
      Token token1 = xPathLexer2.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("[", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("):[E&,z/GmA");
      xPathLexer3.not();
      Token token4 = xPathLexer1.star();
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.doubleColon();
      assertEquals("2@", token6.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer2.notEquals();
      assertEquals("jM", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("<", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("`-sQ&<!gM|tnJ7");
      Token token9 = xPathLexer4.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      Token token10 = xPathLexer0.not();
      assertEquals("&", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("CP", token11.getTokenText());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals(",", token12.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.303289114737854
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]I8)i'WYq");
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.at();
      xPathLexer2.nextToken();
      xPathLexer2.consume((-1670));
      // Undeclared exception!
      try { 
        xPathLexer2.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8372594483354694
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.wernen.saxpath.ToKen");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      String string0 = token2.toString();
      assertEquals("[ (14) (m.)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("r", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      assertEquals("nen.saxpath.ToKen", token7.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2897260439111402
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("JTe<0_v");
      Token token0 = xPathLexer1.not();
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("T", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("N-", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(7, token5.getTokenType());
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals("W", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9221013057752039
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("E", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("&,", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("qoN80p[");
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("q", token7.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6625183626239248
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals("Y", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals("5", token1.getTokenText());
      
      xPathLexer1.rightParen();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Y5!<CP<><e~2? RNm");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("CP", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("<", token8.getTokenText());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("[E", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7091400055214474
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      xPathLexer1.rightParen();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("TXa");
      Token token5 = xPathLexer1.star();
      assertEquals("<", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("):", token6.getTokenText());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("TXa", token7.getTokenText());
      
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer1.nextToken();
      assertEquals(9, token9.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7238177986368337
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer0.not();
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("5", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(".", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("we", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("!", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer1.relationalOperator();
      assertEquals("<", token9.getTokenText());
      assertEquals(7, token9.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4940608872219237
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("COWl70z7'");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals("C", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("OWl70z7", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("Dg,");
      Token token3 = xPathLexer3.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("D", token3.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2881029374786945
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g,RXDeqP6!Snys");
      XPathLexer xPathLexer1 = new XPathLexer("g,RXDeqP6!Snys");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token1 = xPathLexer3.equals();
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token2 = xPathLexer0.notEquals();
      assertEquals("g,", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer0.dollar();
      assertEquals("R", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("Cg&{q*/K>>");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("XDeqP6", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token6 = xPathLexer1.at();
      assertEquals("R", token6.getTokenText());
      
      Token token7 = xPathLexer7.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("C", token7.getTokenText());
      
      Token token8 = xPathLexer7.star();
      assertEquals("g", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7333205880639768
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      Token token1 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.not();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("e", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals("r", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6095579734796486
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      String string0 = token1.toString();
      assertEquals("[ (4) (m)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.Token", token5.getTokenText());
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6493071892346853
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("4w", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.dots();
      Token token2 = xPathLexer0.dots();
      assertEquals("\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.276047958563779
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.not();
      xPathLexer1.slashes();
      xPathLexer1.rightParen();
      xPathLexer1.rightParen();
      xPathLexer1.colon();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      xPathLexer0.not();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9855112274900293
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(")", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.equals();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("E", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("6zK)");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer4.identifier();
      Token token7 = xPathLexer1.dots();
      assertEquals("z", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("&", token8.getTokenText());
      
      Token token9 = xPathLexer1.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("K", token9.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.693152416507833
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(".", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.number();
      Token token3 = xPathLexer0.dots();
      assertEquals("e", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(".", token7.getTokenText());
      assertEquals(31, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("s", token8.getTokenText());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals("ax", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("p", token10.getTokenText());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("a", token11.getTokenText());
      
      Token token12 = xPathLexer0.number();
      assertEquals("", token12.getTokenText());
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9777041476558188
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.pipe();
      token0.toString();
      token1.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token2 = xPathLexer0.or();
      assertNull(token2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8411023365870065
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("<C", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(7, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("E", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9650040017544628
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g,RXDeqP6!Snys");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.or();
      assertNull(token2);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.275706954172955
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]jx,");
      Token token0 = xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("M/ef~@");
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = new XPathLexer("LpNt\"2'");
      xPathLexer3.comma();
      xPathLexer2.operatorName();
      xPathLexer3.slashes();
      xPathLexer3.rightBracket();
      xPathLexer2.minus();
      xPathLexer1.leftParen();
      xPathLexer3.at();
      xPathLexer1.number();
      xPathLexer0.dots();
      xPathLexer2.not();
      xPathLexer3.star();
      xPathLexer2.leftBracket();
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.or();
      Token token1 = xPathLexer3.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7320613517193166
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.equals();
      XPathLexer xPathLexer4 = new XPathLexer("AvxCh;=|nSDtPQ");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("AvxCh;=|nSDtPQ");
      xPathLexer0.colon();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer(" o+u<=D3RCU");
      xPathLexer0.comma();
      XPathLexer xPathLexer8 = new XPathLexer("@U~=~MhG{v");
      xPathLexer8.pipe();
      xPathLexer8.nextToken();
      Token token0 = xPathLexer8.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7185446291617352
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("4w", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8431011562148645
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer1.relationalOperator();
      xPathLexer1.mod();
      xPathLexer0.dots();
      xPathLexer1.dots();
      Token token0 = xPathLexer1.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer1.equals();
      xPathLexer1.not();
      xPathLexer1.nextToken();
      xPathLexer0.at();
      xPathLexer2.dots();
      Token token1 = xPathLexer1.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6231131948946689
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("m", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer0.dots();
      Token token3 = xPathLexer1.dots();
      assertEquals("]", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals("I", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3785695717846966
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("]V", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("-", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]VN-jW`#-nle");
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.slashes();
      assertEquals("#", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8718374603047447
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ArbM?PVYtdH");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.doubleColon();
      String string0 = token1.toString();
      assertEquals("[ (19) (bM)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("Ar", token0.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("P", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("VYtdH", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1135106014556095
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.star();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.colon();
      Token token1 = xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1732147644249724
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.colon();
      assertEquals("m", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("we", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token4 = xPathLexer2.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer1.at();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals("m", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals("k", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals(".w", token10.getTokenText());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("e", token11.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer(">;]_~;bn_{n?7}");
      Token token12 = xPathLexer7.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals(">", token12.getTokenText());
      
      xPathLexer2.colon();
      Token token13 = xPathLexer0.nextToken();
      assertEquals("n.saxpath.Token", token13.getTokenText());
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer6.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9046751349932554
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer0.star();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.pipe();
      assertEquals("]", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.at();
      assertEquals("e", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
      
      Token token7 = xPathLexer2.star();
      assertEquals("c", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("I8", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(2, token9.getTokenType());
      assertEquals(")", token9.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5339735092187963
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      Token token0 = xPathLexer0.dots();
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("m.werken.saxpath.Token", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("yp;xXS:");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("yp;xXS:");
      Token token2 = xPathLexer3.not();
      assertEquals("y", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer4.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer3.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer5.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7590010767317845
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "):[E&,z/GmA";
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1333));
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8333282878893375
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AobM?PKYtuH");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Ao", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("|{=qS?{d^>Wzeq");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("|", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("{", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals("=", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("|{=qS?{d^>Wzeq");
      xPathLexer3.consume();
      Token token7 = xPathLexer1.rightParen();
      assertEquals("q", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("P", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("KYtuH", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3094972526509412
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("m", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      XPathLexer xPathLexer2 = new XPathLexer("]I8)i'WYq");
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.pipe();
      assertEquals("I", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("$0");
      xPathLexer4.div();
      XPathLexer xPathLexer5 = new XPathLexer("T;4BW");
      Token token4 = xPathLexer5.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(13, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      xPathLexer4.div();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("]", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer5.nextToken();
      assertEquals(";4BW", token8.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5215919162069336
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      Token token0 = xPathLexer0.plus();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.equals();
      assertEquals("S", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals("o", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals("7", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9489139054105573
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.slashes();
      assertEquals("m", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.dots();
      Token token5 = xPathLexer0.not();
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(14, token6.getTokenType());
      assertEquals("n.", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("s", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("a", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("xpath.Token", token9.getTokenText());
      
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token10 = xPathLexer2.nextToken();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2687486925748732
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("E", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("&,", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("z", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(11, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("G", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("m", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.423003974387383
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.div();
      XPathLexer xPathLexer4 = new XPathLexer("=-4q=j");
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals(21, token7.getTokenType());
      assertEquals("=", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.059439567250662
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer0.leftParen();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer1.equals();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.dots();
      assertEquals("(", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer1.not();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("r", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("ke", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer0.notEquals();
      assertEquals("n.", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("saxpath.Token", token10.getTokenText());
      
      Token token11 = xPathLexer2.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer2.not();
      assertEquals("o", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      Token token13 = xPathLexer3.nextToken();
      assertEquals(")", token13.getTokenText());
      assertEquals(2, token13.getTokenType());
      
      Token token14 = xPathLexer1.at();
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer2.plus();
      assertEquals(5, token15.getTokenType());
      assertEquals("m", token15.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5289298212195792
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals("]", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("VN-jW", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1924943937699035
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals("]", token2.getTokenText());
      
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("]I8)i'WYq");
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("]", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(")", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9852903828539896
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.slashes();
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("m", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("e", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.dots();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("k", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("e", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("n", token8.getTokenText());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals("s", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals("axpath.Token", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer1.dots();
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer1.doubleColon();
      assertEquals(19, token15.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7633561035949363
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token1 = xPathLexer3.equals();
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("AvxCh;=|nSDtPQ");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("co", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("AvxCh;=|nSDtPQ");
      Token token3 = xPathLexer0.colon();
      assertEquals("o", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token5 = xPathLexer7.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("A", token6.getTokenText());
      
      Token token7 = xPathLexer6.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer4.nextToken();
      assertEquals("vxCh", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7981103425413818
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ArbM?PVYtdH");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Ar", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("+7");
      xPathLexer1.currentPosition();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.mod();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("+", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.number();
      xPathLexer1.div();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("+7");
      Token token6 = xPathLexer1.nextToken();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer4.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.1861381546356125
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.consume((-2581));
      xPathLexer2.relationalOperator();
      xPathLexer0.consume();
      xPathLexer2.dots();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9517856429336113
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.slashes();
      assertEquals("m", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("w", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals("e", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("s", token8.getTokenText());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("ax", token9.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("pa", token10.getTokenText());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(14, token12.getTokenType());
      assertEquals("h.", token12.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5496260658750534
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals("Y", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals("5", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer1.rightParen();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer1.colon();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("qo@;@067f.GNA");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("P", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(" o+u<=D3RCU");
      xPathLexer2.at();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("q", token5.getTokenText());
      
      Token token6 = xPathLexer4.star();
      assertEquals(20, token6.getTokenType());
      assertEquals(" ", token6.getTokenText());
      
      Token token7 = xPathLexer1.at();
      assertEquals("<", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0963123123395184
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      String string0 = "Y5!<CP<><e~2? RNm";
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      XPathLexer xPathLexer2 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.not();
      xPathLexer2.slashes();
      xPathLexer2.rightParen();
      xPathLexer0.rightParen();
      xPathLexer1.colon();
      xPathLexer1.notEquals();
      xPathLexer0.nextToken();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.9867747038020365
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("]V", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer1.not();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals("N", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("]VN-jW`#-nle");
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("]V", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("-", token6.getTokenText());
      
      xPathLexer1.div();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("jW", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("-", token8.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.080455521110179
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.slashes();
      assertEquals("m", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("n", token9.getTokenText());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(".", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals("sa", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("xp", token12.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("TEW@u7D");
      Token token13 = xPathLexer1.plus();
      assertEquals("T", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("a", token14.getTokenText());
      
      Token token15 = xPathLexer1.comma();
      assertEquals("E", token15.getTokenText());
      assertEquals(32, token15.getTokenType());
      
      Token token16 = xPathLexer0.pipe();
      assertEquals("t", token16.getTokenText());
      assertEquals(17, token16.getTokenType());
      
      Token token17 = xPathLexer0.nextToken();
      assertEquals("h.Token", token17.getTokenText());
      assertEquals(15, token17.getTokenType());
      
      Token token18 = xPathLexer0.leftParen();
      assertEquals(1, token18.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7319123362996776
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]4 ?FWL5K$A7xT){@Q");
      XPathLexer xPathLexer2 = new XPathLexer("ng>L");
      xPathLexer2.relationalOperator();
      xPathLexer2.div();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("4", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.div();
      XPathLexer xPathLexer4 = new XPathLexer("TZ}DAn9jXcDe");
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("n", token5.getTokenText());
      
      Token token6 = xPathLexer4.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("T", token6.getTokenText());
      
      xPathLexer2.nextToken();
      Token token7 = xPathLexer4.nextToken();
      assertEquals("Z", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer1.minus();
      assertEquals(" ", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.779940332474465
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer2.slashes();
      xPathLexer0.and();
      Token token1 = xPathLexer1.rightParen();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token2 = xPathLexer5.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer1.slashes();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token3 = xPathLexer5.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token4 = xPathLexer7.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(".", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token6 = xPathLexer8.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.notEquals();
      Token token7 = xPathLexer9.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer7.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("");
      Token token9 = xPathLexer10.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertNotNull(token10);
      assertEquals("m.werken.saxpath.T", token10.getTokenText());
      assertEquals(27, token10.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.consume((-1747));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7892373569605113
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      XPathLexer xPathLexer1 = new XPathLexer("dyh$z^{");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.leftBracket();
      xPathLexer1.equals();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("@N?$(tL");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.number();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.pipe();
      XPathLexer xPathLexer6 = new XPathLexer("b!");
      xPathLexer0.identifier();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("z");
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.literal();
      xPathLexer6.relationalOperator();
      Token token1 = xPathLexer5.and();
      assertNull(token1);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9806032078868862
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ie$L a+D,\fVUz^9g");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6077151647463879
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer1.relationalOperator();
      xPathLexer0.dots();
      Token token2 = xPathLexer1.dots();
      assertEquals("]", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("I8", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("P7Efvj,SrN($.");
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3593002318246146
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("VjiT=7FmT?F%:x!#Bzu");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(":", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("VjiT=7FmT?F%:x!#Bzu");
      Token token3 = xPathLexer2.dots();
      assertEquals("V", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("j", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer1.at();
      assertEquals("i", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer3.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer3.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8506418085048582
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Lp", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("N", token2.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.minus();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("2", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_A]I");
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("_A]I");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.identifier();
      xPathLexer2.identifier();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer3.minus();
      assertEquals("]", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
      
      xPathLexer5.or();
      xPathLexer1.dollar();
      Token token10 = xPathLexer5.slashes();
      assertEquals(11, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.dollar();
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.9419822790663375
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.plus();
      assertEquals("]", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals("-", token1.getTokenText());
      
      xPathLexer1.colon();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("o7", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("\nF", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("\"", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("]VN-jW`#-nle");
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("b", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("]", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("p}-sF", token8.getTokenText());
      
      Token token9 = xPathLexer2.at();
      assertEquals("V", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("N", token10.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.827990873673225
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("dyh$z^{");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.star();
      xPathLexer1.relationalOperator();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      XPathLexer xPathLexer4 = new XPathLexer("d)iJO|=\"%6i<)h");
      xPathLexer0.star();
      xPathLexer1.notEquals();
      xPathLexer4.nextToken();
      xPathLexer2.div();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.862905180389586
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.pipe();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (o)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (23) (c)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.setPreviousToken(token2);
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.not();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.dollar();
      assertEquals("c", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.970231797398561
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$^{");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("dyh$^{");
      Token token3 = xPathLexer1.slashes();
      assertEquals("d", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals("y", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("h$", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals("^", token6.getTokenText());
      
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("A:$D_a");
      Token token7 = xPathLexer2.dots();
      assertEquals("A", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.identifier();
      Token token9 = xPathLexer2.at();
      assertEquals(":", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer3.identifier();
      assertEquals("", token10.getTokenText());
      
      xPathLexer2.or();
      Token token11 = xPathLexer0.nextToken();
      assertEquals("{", token11.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.0094833354491004
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(".", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("r", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals("k", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals("n", token9.getTokenText());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(".s", token10.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("ax", token11.getTokenText());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals("path.Token", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
      
      xPathLexer0.nextToken();
      Token token15 = xPathLexer0.at();
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6666869519592928
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Lp", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("t", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ng>L");
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer1.dots();
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("g", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.relationalOperator();
      assertEquals(9, token8.getTokenType());
      assertNotNull(token8);
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer3.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8914325008157855
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("So7", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("\"u", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightBracket();
      assertEquals("\n", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("F", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("", token8.getTokenText());
      assertEquals((-1), token8.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.2726773633744815
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals("Y", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals("5", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer1.rightParen();
      Token token2 = xPathLexer1.notEquals();
      assertEquals("CP", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      Token token3 = xPathLexer2.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals("<>", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5908326510826454
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("3l");
      Token token1 = xPathLexer3.dots();
      assertEquals("3", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer3.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer3.nextToken();
      assertEquals("l", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.identifier();
      Token token4 = xPathLexer5.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.identifier();
      xPathLexer1.or();
      Token token5 = xPathLexer5.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.813994079248745
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("8crp:C$Zr^,IWQEKB");
      xPathLexer1.relationalOperator();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.colon();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.notEquals();
      assertEquals("cr", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("E", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.equals();
      assertEquals("p", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals(":", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("C", token8.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.993259499873691
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("E", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("&", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("xNsdvH0MIq8!V?f3");
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.number();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token5);
      assertEquals("NsdvH0MIq8", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.not();
      Token token6 = xPathLexer1.star();
      assertEquals("V", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals("?f", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer0.notEquals();
      assertEquals("/G", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(30, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      Token token10 = xPathLexer0.equals();
      assertEquals("m", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3940241716683002
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y`R)bnk?vgO>T(T#'8L");
      Token token1 = xPathLexer1.not();
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer1.rightParen();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("o", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer1.colon();
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("bn", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("k", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("?vgO>T(T#'8L", token8.getTokenText());
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer3.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.dollar();
      assertEquals("?", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.9151453767621582
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Lp", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("803BO2oP]GSK5o<");
      xPathLexer1.currentPosition();
      Token token1 = xPathLexer0.minus();
      assertEquals("N", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("t", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer2.div();
      XPathLexer xPathLexer5 = new XPathLexer("ng>L");
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer5.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
      assertEquals("03", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("l-=");
      Token token9 = xPathLexer6.nextToken();
      assertEquals("l-", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6915533361977277
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      String string0 = "";
      xPathLexer0.setXPath("");
      xPathLexer1.div();
      xPathLexer0.number();
      xPathLexer1.star();
      xPathLexer0.comma();
      xPathLexer1.consume((-1978));
      // Undeclared exception!
      try { 
        xPathLexer1.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.0526346813226
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("69KtKGTdZD");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("9KtKGTdZD", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer2.leftParen();
      assertEquals("c", token5.getTokenText());
      
      xPathLexer1.at();
      xPathLexer2.number();
      Token token6 = xPathLexer1.dots();
      assertEquals(14, token6.getTokenType());
      assertEquals("m.", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer2.star();
      assertEquals("o", token8.getTokenText());
      
      Token token9 = xPathLexer3.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("69KtKGTdZD");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer5.at();
      assertEquals("6", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("1NgKr");
      Token token12 = xPathLexer3.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer5.nextToken();
      assertEquals("9", token14.getTokenText());
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer4.notEquals();
      assertEquals(22, token15.getTokenType());
      
      Token token16 = xPathLexer6.star();
      assertEquals(20, token16.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.084456573702692
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("d", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.comma();
      assertEquals("h", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("dyh$z^{");
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("y", token3.getTokenText());
      
      xPathLexer1.notEquals();
      Token token4 = xPathLexer1.leftParen();
      assertEquals("z", token4.getTokenText());
      
      xPathLexer0.at();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("%B_=Z/ienXg~t1VB");
      Token token7 = xPathLexer3.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("%", token7.getTokenText());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("Y@6+G4+NuD($!uC");
      Token token9 = xPathLexer5.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("Y@", token9.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("Y@6+G4+NuD($!uC");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer5.at();
      assertEquals("6", token10.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("dyh$z^{");
      XPathLexer xPathLexer9 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer9.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer1.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals("^{", token13.getTokenText());
      
      Token token14 = xPathLexer3.notEquals();
      assertEquals(22, token14.getTokenType());
      assertEquals("B_", token14.getTokenText());
      
      Token token15 = xPathLexer1.at();
      assertEquals(16, token15.getTokenType());
      
      Token token16 = xPathLexer5.whitespace();
      assertEquals("", token16.getTokenText());
      assertEquals((-2), token16.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.6269221274475356
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.dots();
      assertEquals("-", token0.getTokenText());
      
      xPathLexer1.colon();
      xPathLexer0.dots();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("o7", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("N", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("]VN-jW`#-nle");
      Token token3 = xPathLexer3.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("]V", token3.getTokenText());
      
      xPathLexer3.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("]VN-jW`#-nle");
      Token token5 = xPathLexer5.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("]", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer5.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.0009465017169314
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.dots();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals("e", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals("n", token9.getTokenText());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(".s", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("ax", token11.getTokenText());
      
      Token token12 = xPathLexer0.at();
      assertEquals("p", token12.getTokenText());
      
      Token token13 = xPathLexer0.pipe();
      assertEquals(17, token13.getTokenType());
      assertEquals("a", token13.getTokenText());
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals("th.Token", token14.getTokenText());
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.141534939470188
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.not();
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(":", token0.getTokenText());
      
      xPathLexer1.equals();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("[", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.not();
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("CP", token5.getTokenText());
      
      Token token6 = xPathLexer1.relationalOperator();
      assertEquals(7, token6.getTokenType());
      assertEquals("<", token6.getTokenText());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.equals();
      assertEquals("z", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer1.nextToken();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("/", token10.getTokenText());
      
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("~", token11.getTokenText());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals("GmA", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5010454190635132
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer1.not();
      assertEquals("]", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("}+");
      xPathLexer2.relationalOperator();
      Token token1 = xPathLexer2.dots();
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.identifier();
      assertEquals("N-jW", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.9137334840640208
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer1.slashes();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(")", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer1.equals();
      assertEquals("!", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.star();
      assertEquals("<", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("E", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("&", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals("CP", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.relationalOperator();
      assertEquals(7, token10.getTokenType());
      assertEquals("<", token10.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("n;SR$&$b");
      Token token12 = xPathLexer0.nextToken();
      assertEquals("z", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
      assertEquals(">", token13.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5952683192085453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.plus();
      assertEquals("]", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.dots();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("N-jW", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("#", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5306940299172285
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(":", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.dots();
      assertEquals("[", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(",", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.slashes();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7657032588706172
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ArbM?PVYtdH");
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer3.notEquals();
      xPathLexer2.identifier();
      xPathLexer4.not();
      xPathLexer2.at();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.9954830077449492
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      Token token1 = xPathLexer0.number();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string0 = token0.toString();
      assertEquals("[ (19) (]V)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (30) ()", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.rightParen();
      assertEquals("N", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("-", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.not();
      assertEquals("j", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("W", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("cJ(fC*,K;}xR");
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("cJ", token7.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.2207169925251973
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(":[", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      Token token2 = xPathLexer0.dots();
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8813798933300605
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      Token token1 = xPathLexer0.number();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string0 = token0.toString();
      assertEquals("[ (19) (]V)", string0);
      
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (30) ()", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.rightParen();
      assertEquals("N", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("-", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.not();
      assertEquals("j", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("W", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("`#-nle", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("cJ(fC*,K;}xR");
      xPathLexer1.dollar();
      Token token7 = xPathLexer1.dollar();
      assertEquals("J", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("(", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9755722559708926
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(":", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("E", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("xNsdvH0MIq8!V?f3");
      Token token4 = xPathLexer1.leftParen();
      assertEquals("x", token4.getTokenText());
      
      xPathLexer0.equals();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(",", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer1.not();
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals("dv", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("/", token10.getTokenText());
      
      xPathLexer1.nextToken();
      Token token11 = xPathLexer0.equals();
      assertEquals("G", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals("A", token13.getTokenText());
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.90207146908988
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer1.relationalOperator();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.colon();
      assertEquals("m", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer1.dots();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("So", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("\n", token8.getTokenText());
      
      Token token9 = xPathLexer0.dots();
      assertEquals("w", token9.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.000177120488926
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-3557));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8048898264017095
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Lp", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("t", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ng>L");
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("ng>L");
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("g", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("L", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("n", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("2", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5458321667000212
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.relationalOperator();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("):[E&,z/GmA");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer1.equals();
      assertEquals("!", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals("<", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("C", token4.getTokenText());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("P", token7.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5807938303858002
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      Token token1 = xPathLexer1.colon();
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer1.dots();
      assertEquals("S", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("o7", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("\nF", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("-So7\nF\"bp}-sF");
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("`y#&%b?=5'4^iXb8$t>");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("", token7.getTokenText());
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8079007161244378
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer0.star();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer1.pipe();
      assertEquals("]", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.star();
      xPathLexer0.div();
      Token token4 = xPathLexer0.at();
      assertEquals("w", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer2.star();
      assertEquals("c", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals("8)", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("i", token7.getTokenText());
      
      xPathLexer0.div();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8634245896979602
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.number();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string0 = token0.toString();
      assertEquals("[ (19) (]V)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (30) ()", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.number();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("-", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.not();
      assertEquals("j", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("W", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("`", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals("jW`#-nle", token7.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.0646540987902378
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.operatorName();
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.leftParen();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token7);
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("O/");
      xPathLexer2.relationalOperator();
      Token token12 = xPathLexer2.leftParen();
      assertEquals("O", token12.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      boolean boolean0 = xPathLexer2.hasMoreChars();
      assertTrue(boolean0);
      
      Token token13 = xPathLexer1.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer1.nextToken();
      assertEquals((-1), token14.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.917813637234588
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j|4pvXc~f");
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.setXPath("");
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.consume((-1978));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.1175081214988793
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.pipe();
      token0.toString();
      token1.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1167));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.3523225686457847
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.number();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token2 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token2);
      String string1 = token0.toString();
      assertEquals("[ (23) ())", string1);
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(":", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.number();
      xPathLexer0.not();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.854211941487239
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D>*;MY:|#IftAt:9");
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      int int0 = (-2);
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.setXPath("D>*;MY:|#IftAt:9");
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.071574373994484
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.93560414721753
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Lp", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("803BO2oP]GSK5o<");
      xPathLexer1.currentPosition();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("t", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      
      xPathLexer1.div();
      Token token4 = xPathLexer0.equals();
      assertEquals("\"", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("803BO2oP]GSK5o<");
      xPathLexer3.nextToken();
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.pipe();
      assertEquals("B", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.identifier();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      
      xPathLexer3.identifier();
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      xPathLexer4.or();
      Token token12 = xPathLexer4.identifier();
      assertEquals("com.werken.saxpath.XPathLexer", token12.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6782045348176298
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("):[E&,z/GmA");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("5!", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("):[E&,z/GmA");
      Token token3 = xPathLexer4.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer6.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("TEW@u7D");
      xPathLexer7.at();
      Token token6 = xPathLexer5.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.7886161378943886
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-3709));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.019914957998886
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer0.not();
      xPathLexer1.slashes();
      xPathLexer0.rightParen();
      xPathLexer1.rightParen();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9217184732060164
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      token0.toString();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      token0.toString();
      token0.toString();
      xPathLexer0.consume(60);
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      xPathLexer0.div();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('$');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.9224512603338695
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y5!<;Pf><e~2? RNm");
      Token token0 = xPathLexer0.not();
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("5", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("P", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("f", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("><", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("e~2? RNm", token7.getTokenText());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("(", token10.getTokenText());
      
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.573172893436508
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer2.setPreviousToken(token0);
      assertEquals(")", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.notEquals();
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("q=:nC!%t}MX~vx@Ex");
      xPathLexer5.setPreviousToken((Token) null);
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(" ", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("q=:nC!%t}MX~vx@Ex");
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      xPathLexer4.div();
      XPathLexer xPathLexer7 = new XPathLexer("0xN$");
      xPathLexer4.relationalOperator();
      Token token5 = xPathLexer3.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer3.isIdentifierChar('}');
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer7.at();
      assertEquals("0", token7.getTokenText());
      
      Token token8 = xPathLexer5.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals("(", token9.getTokenText());
      assertEquals(4, token9.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.937592522302439
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.setPreviousToken((Token) null);
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setPreviousToken((Token) null);
      Token token1 = xPathLexer4.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer3.div();
      XPathLexer xPathLexer6 = new XPathLexer("0xN$");
      xPathLexer5.relationalOperator();
      Token token3 = xPathLexer1.dots();
      assertEquals("c", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer4.nextToken();
      xPathLexer0.isIdentifierChar('H');
      xPathLexer4.relationalOperator();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      Token token5 = xPathLexer4.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer3.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.3478440818361457
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyhfZ");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("dyhfZ");
      xPathLexer1.slashes();
      xPathLexer1.rightBracket();
      xPathLexer1.notEquals();
      xPathLexer0.leftParen();
      xPathLexer1.plus();
      xPathLexer1.number();
      xPathLexer1.dollar();
      xPathLexer0.not();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("FAS@uj6");
      xPathLexer3.at();
      xPathLexer0.relationalOperator();
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer2.rightBracket();
      xPathLexer4.dots();
      xPathLexer4.equals();
      xPathLexer4.leftBracket();
      xPathLexer2.leftBracket();
      xPathLexer4.relationalOperator();
      xPathLexer4.operatorName();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer2.leftParen();
      int int0 = xPathLexer4.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.7457335907444147
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("m", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer1.notEquals();
      assertEquals("I8", token5.getTokenText());
      
      Token token6 = xPathLexer1.at();
      assertEquals(")", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("i", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.getPreviousToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("erken.saxpath.Token", token10.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.1177882997083257
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyhfZ");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("d", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("h", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("dyhfZ");
      Token token3 = xPathLexer1.slashes();
      assertEquals("d", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.leftParen();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("Z", token6.getTokenText());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("dyhfZ");
      xPathLexer1.relationalOperator();
      xPathLexer1.dots();
      Token token8 = xPathLexer2.dollar();
      assertEquals("d", token8.getTokenText());
      
      Token token9 = xPathLexer0.dots();
      assertEquals("Z", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals("yhfZ", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("~7,~,gV%j-?kVFB");
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer3.endPosition();
      Token token13 = xPathLexer0.leftParen();
      assertEquals(1, token13.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.151525989250792
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.colon();
      assertEquals("$", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("dyh$z^{");
      Token token2 = xPathLexer1.slashes();
      assertEquals("d", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("y", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("h$", token4.getTokenText());
      
      xPathLexer1.leftParen();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      Token token9 = xPathLexer0.star();
      assertEquals("{", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer1.comma();
      assertEquals(32, token13.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("dyh$z^{");
      Token token14 = xPathLexer3.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer3.nextToken();
      assertEquals("yh", token15.getTokenText());
      assertEquals(15, token15.getTokenType());
      
      Token token16 = xPathLexer1.minus();
      assertEquals(6, token16.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.0009328599517042
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer1.leftParen();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.number();
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      Token token11 = xPathLexer3.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6275105278986297
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer0.slashes();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(";7F6X\"d{i1H");
      xPathLexer0.dollar();
      xPathLexer1.star();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.7469437142599413
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.consume(737);
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.pipe();
      xPathLexer0.consume((-2558));
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.isIdentifierStartChar('*');
      xPathLexer0.leftParen();
      xPathLexer0.consume(737);
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.092635260433128
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.or();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.3278729455911975
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.consume(0);
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("`DEM!6Lp(jV8E|");
      xPathLexer1.pipe();
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      xPathLexer1.relationalOperator();
      xPathLexer1.plus();
      xPathLexer1.or();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.56842997769852
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.minus();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('Q');
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('');
      assertFalse(boolean0);
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      char char0 = xPathLexer0.LA(5);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.377876683180732
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("):[E&,z/GmA");
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer2.at();
      xPathLexer3.relationalOperator();
      xPathLexer3.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dollar();
      xPathLexer1.rightBracket();
      xPathLexer1.dots();
      xPathLexer1.or();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.consume((-452));
      xPathLexer4.equals();
      xPathLexer1.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer4.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.7982207190099846
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"St9|DbJNN%FX_Wo5.|");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("S", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.slashes();
      assertEquals("t", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.getXPath();
      xPathLexer0.div();
      Token token4 = xPathLexer0.pipe();
      assertEquals("9", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("D", token6.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("b", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.346747464500145
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("LpNt\"2'");
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.star();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer2.pipe();
      xPathLexer3.consume();
      xPathLexer2.getXPath();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.22181680300325
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.dots();
      assertEquals("-", token0.getTokenText());
      
      xPathLexer1.colon();
      xPathLexer0.dots();
      Token token1 = xPathLexer1.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer1.notEquals();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("F", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("-So7\nF\"bp}-sF");
      Token token3 = xPathLexer1.notEquals();
      assertEquals("\"b", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("-", token4.getTokenText());
      
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("S", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("p", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.doubleColon();
      assertEquals("}-", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.3611330540929227
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Lp", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("N", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("t", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("\"", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("2", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("'", token6.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token15 = xPathLexer0.leftParen();
      assertEquals(1, token15.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.472827543060289
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("U#2@jMtR");
      xPathLexer2.minus();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("):[E&,z/GmA");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.at();
      xPathLexer0.comma();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.4230751045966397
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.plus();
      assertEquals("m", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("]I8)i'WYq");
      xPathLexer0.star();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("co", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token5 = xPathLexer2.slashes();
      assertEquals("m", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("rk", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(".", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("w", token9.getTokenText());
      
      Token token10 = xPathLexer4.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.8149893543446933
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.relationalOperator();
      xPathLexer0.dots();
      Token token3 = xPathLexer1.colon();
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("w", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("om.werken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("jGfeI`qNQB^");
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      Token token9 = xPathLexer5.nextToken();
      assertEquals(")", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals("r", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("ke", token12.getTokenText());
      
      Token token13 = xPathLexer0.pipe();
      assertEquals("n", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.8460564059263607
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.pipe();
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token2 = xPathLexer3.equals();
      assertEquals(21, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("AvxCh;=|nSDtPQ");
      Token token3 = xPathLexer1.notEquals();
      assertEquals("co", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer5.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(" o+u<=D3RCU");
      Token token6 = xPathLexer7.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("o", token6.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("TEW@u7D");
      xPathLexer8.at();
      Token token7 = xPathLexer8.comma();
      assertEquals("E", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer5.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.025330316045011
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token3);
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("o", token1.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.Token", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.9518178231895775
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("]V", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("j", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("W`", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6400186937226828
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("):[E&,z/GmA");
      Token token1 = xPathLexer2.dots();
      assertEquals(")", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Y5", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals("!", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer2.at();
      assertEquals(":", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.347668923420814
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyhfZ");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("dyhfZ");
      xPathLexer1.slashes();
      xPathLexer1.rightBracket();
      xPathLexer1.notEquals();
      xPathLexer0.leftParen();
      xPathLexer1.plus();
      xPathLexer1.number();
      xPathLexer1.dollar();
      xPathLexer0.not();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("FAS@uj6");
      xPathLexer3.at();
      xPathLexer0.relationalOperator();
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer4.dots();
      xPathLexer2.leftBracket();
      xPathLexer4.relationalOperator();
      xPathLexer4.operatorName();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-936));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.9658763676800886
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Lp", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("N", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("t", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("\"", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("'", token6.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("LpNt\"2'");
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer1.star();
      xPathLexer1.setXPath(";-IQ__-y2O");
      Token token9 = xPathLexer1.notEquals();
      assertEquals(";-", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("IQ__-y2O", token10.getTokenText());
      
      xPathLexer1.div();
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer1.or();
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.867104505701425
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer1.colon();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer1.not();
      Token token2 = xPathLexer0.slashes();
      Token token3 = xPathLexer0.plus();
      Token token4 = xPathLexer1.dollar();
      token4.toString();
      xPathLexer1.setPreviousToken(token1);
      assertEquals("o", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (11) (c)", string0);
      
      String string1 = token4.toString();
      assertEquals("[ (26) (m)", string1);
      
      Token token5 = xPathLexer0.rightParen();
      String string2 = token5.toString();
      assertEquals("[ (2) (m)", string2);
      
      xPathLexer0.setPreviousToken(token4);
      xPathLexer1.setPreviousToken(token3);
      assertEquals(5, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("werken.saxpath.Token", token7.getTokenText());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.945831614617784
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("803BO2oP]GSK5o<");
      xPathLexer1.currentPosition();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.number();
      XPathLexer xPathLexer4 = new XPathLexer("%M4Mx&p_7@W>");
      xPathLexer4.pipe();
      xPathLexer4.not();
      xPathLexer3.dots();
      xPathLexer3.not();
      xPathLexer3.star();
      xPathLexer4.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("f/9r");
      xPathLexer6.leftParen();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer2.relationalOperator();
      Token token0 = xPathLexer5.div();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.844889216294908
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.equals();
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.dots();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals("sa", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer0.plus();
      assertEquals("x", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("60%n6");
      Token token12 = xPathLexer2.dots();
      assertEquals("6", token12.getTokenText());
      
      Token token13 = xPathLexer1.equals();
      assertEquals(21, token13.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("60%n6");
      Token token14 = xPathLexer3.colon();
      assertEquals("6", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer1.nextToken();
      assertEquals((-1), token15.getTokenType());
      
      Token token16 = xPathLexer0.notEquals();
      assertEquals(22, token16.getTokenType());
      
      Token token17 = xPathLexer1.dots();
      assertEquals(13, token17.getTokenType());
      
      char char0 = xPathLexer1.LA(1359);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.4249218594295987
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Lp", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("t", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ng>L");
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals("n", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("ng>L");
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("'", token8.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.387083795193516
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("dyh$z^{");
      xPathLexer1.slashes();
      xPathLexer1.rightBracket();
      xPathLexer1.notEquals();
      xPathLexer1.leftParen();
      xPathLexer0.at();
      xPathLexer1.number();
      xPathLexer1.dots();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer1.consume((-112));
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.equals();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.9370359055438513
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4w\"u|eSaB]:b;");
      Token token0 = xPathLexer0.plus();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      xPathLexer0.dots();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("So7", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("\"u", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("|", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("e", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals("\n", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("F\"bp}-sF", token7.getTokenText());
      
      Token token8 = xPathLexer1.at();
      assertEquals("F", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.6100440166622483
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z0/GmA");
      xPathLexer0.operatorName();
      xPathLexer0.consume(0);
      xPathLexer0.colon();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.operatorName();
      xPathLexer1.slashes();
      xPathLexer1.rightBracket();
      xPathLexer1.minus();
      xPathLexer0.leftParen();
      xPathLexer1.at();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftParen();
      xPathLexer1.relationalOperator();
      xPathLexer1.or();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.2328425476085627
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]VN-jW`#-nle");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("-So7\nF\"bp}-sF");
      Token token0 = xPathLexer1.dots();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("]VN-jW`#-nle");
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("]", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.notEquals();
      assertEquals("VN", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("V", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer3.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals("-", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("j", token7.getTokenText());
      
      Token token8 = xPathLexer4.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("W", token9.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.1193010322957586
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.at();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.972114901578075
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GCA");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("):", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      assertEquals("E", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.0514647461836826
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.1651693947573123
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      Token token0 = xPathLexer0.not();
      assertEquals(")", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(":", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals(",", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.1581098506200687
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.equals();
      XPathLexer xPathLexer4 = new XPathLexer("AvxCh;=|nSDtPQ");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("AvxCh;=|nSDtPQ");
      xPathLexer4.slashes();
      xPathLexer5.doubleColon();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.840655243114774
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals("m", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.setPreviousToken(token3);
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      assertEquals(26, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("erken.saxpath.Token", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.891228606131704
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String string0 = "):[E&,z/GmA";
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.not();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("Y5!<CP<><e~2? RNm");
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("AvxCh;=|nSDtPQ");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
