/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 22:06:23 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.error.StandardException;
import org.apache.derby.iapi.services.io.ArrayInputStream;
import org.apache.derby.iapi.services.io.FormatableHashtable;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.iapi.sql.depend.ProviderList;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.sql.dictionary.IndexRowGenerator;
import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.io.vfmem.DataStore;
import org.apache.derby.impl.io.vfmem.VirtualFile;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.compile.GenerationClauseNode;
import org.apache.derby.impl.sql.compile.InsertNode;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.DeleteConstantAction;
import org.apache.derby.impl.sql.execute.ValueRow;
import org.apache.derby.impl.store.access.heap.HeapController;
import org.apache.derby.impl.store.access.heap.Heap_v10_2;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBLocalTransaction;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBPreparedStatement;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.TypeConvertionException;
import org.h2.Driver;
import org.h2.engine.SessionRemote;
import org.h2.jdbcx.JdbcXAConnection;
import org.h2.table.IndexColumn;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.tools.SimpleRowSource;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGPooledConnection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer((String) null);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      boolean boolean0 = true;
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " entries:", true, stringArray0);
      dBPrimaryKeyConstraint0.equals("d");
      dBPrimaryKeyConstraint0.equals((Object) null);
      dBPrimaryKeyConstraint0.setTable(defaultDBTable0);
      dBPrimaryKeyConstraint0.setOwner((CompositeDBObject<?>) null);
      DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
      DBUtil.getOpenResultSetCount();
      GDSHelper gDSHelper0 = null;
      String string0 = "updateNString(int, String)";
      int int0 = 3;
      int int1 = (-3715);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("jL]AO");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("jL]AO", (DBSchema) null);
      String[] stringArray0 = new String[2];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " entries:", false, stringArray0);
      dBPrimaryKeyConstraint0.equals(tableContainer0);
      dBPrimaryKeyConstraint0.setOwner(tableContainer0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.databene.jdbacl.model.TableContainer cannot be cast to org.databene.jdbacl.model.DBTable
         //
         verifyException("org.databene.jdbacl.model.DBConstraint", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer((String) null);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      DataDescriptorGenerator dataDescriptorGenerator0 = new DataDescriptorGenerator(dataDictionaryImpl0);
      dataDictionaryImpl0.getSysIBMSchemaDescriptor();
      TableDescriptor tableDescriptor0 = dataDescriptorGenerator0.newTableDescriptor((String) null, (SchemaDescriptor) null, (-3005), '');
      ColumnDescriptorList columnDescriptorList0 = tableDescriptor0.getGeneratedColumns();
      tableContainer0.getSequences(true, (List<DBSequence>) columnDescriptorList0);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " entries:", true, stringArray0);
      DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Statement statement0 = jdbcConnection0.createStatement();
      DBUtil.close(statement0);
      DBUtil.close((Connection) jdbcConnection0);
      assertFalse(jdbcConnection0.isClosed());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MockFile mockFile0 = new MockFile("<=", "1{5(");
      MockFile mockFile1 = new MockFile("1{5(");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockFile mockFile2 = new MockFile("1{5(", "<=");
      MockFile mockFile3 = new MockFile("sytNL$5@0Twu`'PqKwF");
      InsertNode insertNode0 = new InsertNode();
      Properties properties0 = insertNode0.targetProperties;
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR0.decodeDate((byte[]) null);
      xSQLVAR0.decodeTime((byte[]) null);
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      xSQLVAR2.sqlname = "j?zawxLj)";
      xSQLVAR1.deepCopy();
      xSQLVAR2.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      vector0.elements();
      FBArray fBArray0 = new FBArray();
      DBUtil.close((ResultSet) errorMessages0);
      Driver driver0 = new Driver();
      XSQLVAR xSQLVAR5 = new XSQLVAR();
      DBUtil.createLoggingResultSet(errorMessages0, (Statement) null);
      org.postgresql.Driver driver1 = new org.postgresql.Driver();
      long long0 = 785L;
      Heap_v10_2 heap_v10_2_0 = new Heap_v10_2();
      IndexRowGenerator[] indexRowGeneratorArray0 = new IndexRowGenerator[5];
      boolean boolean0 = false;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 4;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      int int0 = (-3577);
      intArray0[7] = (-3577);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      IndexRowGenerator indexRowGenerator0 = new IndexRowGenerator((String) null, false, false, intArray0, booleanArray0, 3337);
      indexRowGeneratorArray0[0] = indexRowGenerator0;
      IndexRowGenerator indexRowGenerator1 = new IndexRowGenerator();
      indexRowGeneratorArray0[1] = indexRowGenerator1;
      IndexRowGenerator indexRowGenerator2 = new IndexRowGenerator(" prepared statement(s)", false, false, intArray0, booleanArray0, 4943);
      indexRowGeneratorArray0[2] = indexRowGenerator2;
      IndexRowGenerator indexRowGenerator3 = new IndexRowGenerator();
      indexRowGeneratorArray0[3] = indexRowGenerator3;
      boolean boolean1 = false;
      IndexRowGenerator indexRowGenerator4 = new IndexRowGenerator((String) null, false, true, intArray0, booleanArray0, (-1272));
      indexRowGeneratorArray0[4] = indexRowGenerator4;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) (-3577);
      longArray0[1] = 1L;
      longArray0[2] = (long) 0;
      long long1 = (-336L);
      longArray0[3] = (-336L);
      longArray0[4] = (long) 0;
      longArray0[5] = (long) 0;
      longArray0[6] = (long) 0;
      longArray0[7] = (long) 0;
      StaticCompiledOpenConglomInfo[] staticCompiledOpenConglomInfoArray0 = new StaticCompiledOpenConglomInfo[9];
      staticCompiledOpenConglomInfoArray0[0] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[1] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[2] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[3] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[4] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[5] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[6] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[7] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      staticCompiledOpenConglomInfoArray0[8] = (StaticCompiledOpenConglomInfo) heap_v10_2_0;
      ValueRow valueRow0 = null;
      try {
        valueRow0 = new ValueRow((-1192));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.ValueRow", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8235846322502227
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("org.h2.expression.ExpressionList", 32000);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("I");
      StringReader stringReader0 = new StringReader("[D$lvA>xX4Hof.");
      StringReader stringReader1 = new StringReader(", ");
      stringReader1.ready();
      stringReader1.reset();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ", ";
      stringArray0[1] = "q~6XPP5M4)zH,";
      stringArray0[2] = "I";
      stringArray0[3] = "|ChOf\u0006;&d\"`r=";
      stringArray0[4] = "%.WbBp'.T4;/3uW<";
      stringArray0[5] = "org.apache.derby.impl.store.raw.data.BaseDataFileFactory";
      stringArray0[6] = "aE{";
      stringArray0[7] = ", ";
      ResultSet resultSet0 = csv0.read((Reader) stringReader1, stringArray0);
      DBUtil.format(resultSet0);
      System.setCurrentTimeMillis(0L);
      DBUtil.nextLine(resultSet0);
      assertTrue(resultSet0.wasNull());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("T+B0_{O'(D$W+%VZ ");
      Reader reader0 = jdbcClob0.getCharacterStream();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "--Using driver";
      stringArray0[1] = "T+B0_{O'(D$W+%VZ ";
      stringArray0[2] = "T+B0_{O'(D$W+%VZ ";
      stringArray0[3] = "Using driver ";
      stringArray0[4] = "T+B0_{O'(D$W+%VZ ";
      stringArray0[5] = "--Using driver";
      stringArray0[6] = "--Using driver";
      ResultSet resultSet0 = csv0.read(reader0, stringArray0);
      DBUtil.nextLine(resultSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--Using driver");
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      vector0.elements();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      xSQLVAR2.deepCopy();
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = new ErrorMessages();
      try { 
        errorMessages1.getFloat(0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getFloat
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = true;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/One-row database query returned multiple rows: .env.properties");
      byte[] byteArray0 = new byte[23];
      byte byte0 = (byte) (-107);
      byteArray0[0] = (byte) (-107);
      byte byte1 = (byte)62;
      byteArray0[1] = (byte)62;
      byteArray0[0] = (byte) (-123);
      byteArray0[3] = (byte)62;
      byte byte2 = (byte)57;
      byteArray0[4] = (byte)57;
      byteArray0[6] = (byte)101;
      byte byte3 = (byte)53;
      byteArray0[7] = (byte)53;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "n'X0WLt3b)^wW";
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("One-row database query returned multiple rows: ", true, true, true, true, "n'X0WLt3b)^wW", true, true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 8
         // n'X0WLt3b)^wW
         //         ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      int int0 = (-412);
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ErrorHandler.getDefault();
      IndexColumn indexColumn0 = new IndexColumn();
      IndexColumn indexColumn1 = new IndexColumn();
      IndexColumn indexColumn2 = new IndexColumn();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      vector0.elements();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetVTI();
      DBUtil.close((ResultSet) null);
      Driver driver0 = new Driver();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      DBUtil.getOpenResultSetCount();
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR0.sqltype = 0;
      xSQLVAR0.decodeDate((byte[]) null);
      xSQLVAR1.copyFrom(xSQLVAR0);
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      xSQLVAR1.deepCopy();
      xSQLVAR2.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      vector0.elements();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      DBUtil.close((ResultSet) errorMessages0);
      Driver driver0 = new Driver();
      XSQLVAR xSQLVAR5 = new XSQLVAR();
      try { 
        DBUtil.parseResultRow(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Recover recover0 = new Recover();
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("Ji:d%odrj0{", compositeDBObject0);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("_{CM@J<QS*5]{z{\"9");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "_{CM@J<QS*5]{z{\"9", false, (String[]) null);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Recover recover0 = new Recover();
      DBUtil.existsEnvironment("!");
      DBUtil.close((Statement) null);
      Driver driver0 = new Driver();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Vector<ArrayInputStream> vector1 = new Vector<ArrayInputStream>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)9;
      ArrayInputStream arrayInputStream0 = new ArrayInputStream(byteArray0);
      vector1.add(arrayInputStream0);
      vector0.add(arrayInputStream0);
      Vector<ArrayInputStream> vector2 = new Vector<ArrayInputStream>();
      Enumeration<ArrayInputStream> enumeration0 = vector2.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("#p.0~,7/N");
      Reader reader0 = jdbcClob0.getCharacterStream();
      ResultSet resultSet0 = csv0.read(reader0, (String[]) null);
      DBUtil.format(resultSet0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ") or wrong URL format (");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR1.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Enumeration<ArrayInputStream> enumeration0 = vector0.elements();
      Vector<ArrayInputStream> vector1 = new Vector<ArrayInputStream>();
      vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--E#m<<5cdF'M");
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("&8O/FegU");
      Reader reader0 = jdbcClob0.getCharacterStream();
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      ResultSet resultSet0 = csv0.read(reader0, stringArray0);
      DBUtil.parseResultSet(resultSet0);
      DBUtil.getStatement(resultSet0);
      HsqlProperties hsqlProperties0 = HsqlProperties.delimitedArgPairsToProps("Z\"", "FOR UPDATE && JOIN", "`48Mm@gxkWmO>", ") or wrong URL format (");
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection(hsqlProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ") or wrong URL format (");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR1.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Enumeration<ArrayInputStream> enumeration0 = vector0.elements();
      Vector<ArrayInputStream> vector1 = new Vector<ArrayInputStream>();
      vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--E#m<<5cdF'M");
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("&8O/FegU");
      Reader reader0 = jdbcClob0.getCharacterStream();
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      csv0.read(reader0, stringArray0);
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, ") or wrong URL format (", '\'', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8837451374095386
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HeapController heapController0 = new HeapController();
      String string0 = "";
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("", 'j', (Connection) jdbcConnection0, true, errorHandler0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection(jdbcConnection0, (boolean) dBExecutionResult0.changedStructure);
      // Undeclared exception!
      try { 
        DBUtil.runScript("INTERSECT", (Connection) proxy0, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public int org.databene.jdbacl.proxy.LoggingStatementHandler.executeUpdate(java.lang.String) throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Random.setNextRandom(12);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-34);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("c}?(t7h:G");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("c}?(t7h:G", level0);
      errorHandler0.setLoggingStackTrace(true);
      StandardException standardException0 = StandardException.newException("--5,PMx%@1EAt1(}uG");
      MockThrowable mockThrowable0 = new MockThrowable("c}?(t7h:G", standardException0);
      mockThrowable0.getStackTrace();
      errorHandler0.handleError("c}?(t7h:G", (Throwable) mockThrowable0);
      errorHandler0.handleError(";x_U1iC6olLZSs&pW");
      errorHandler0.setLoggingStackTrace(true);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--5,PMx%@1EAt1(}uG", (Connection) null, false, errorHandler0);
      assertNotNull(dBExecutionResult0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Random.setNextRandom(522);
      String string0 = "or";
      DBUtil.available("VIFuA", "VIFuA", ") or wrong URL format (", "or");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5,");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "6", "XJ017.S", false, false, false, false, "timeout", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      xSQLVAR2.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      vector0.elements();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      fBArray0.getResultSet((long) 0, 0);
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6416819460023762
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("I");
      StringReader stringReader0 = new StringReader("mi");
      stringReader0.ready();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "columns=[";
      stringArray0[1] = "aE{";
      stringArray0[2] = "columns=[";
      stringArray0[3] = "Jc-(G";
      ResultSet resultSet0 = csv0.read((Reader) stringReader0, stringArray0);
      DBUtil.format(resultSet0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      boolean boolean0 = DBUtil.available("COMMENT", "org.apache.derby.impl.sql.compile.UserDefinedTypeCompiler", "COMMENT", "yp~W");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mhq=4 m)!JUhWN*kgq.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-J");
      JDBCConnectData jDBCConnectData0 = DBUtil.getConnectData("mhq=4 m)!JUhWN*kgq");
      assertNotNull(jDBCConnectData0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      boolean boolean0 = false;
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      String string0 = "Database query failed: ";
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) proxy0, "Database query failed: ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/One-row database query returned multiple rows: .env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)62;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[0] = (byte) (-123);
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)57;
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("One-row database query returned multiple rows: ", true, true, false, false, "", true, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for 'One-row database query returned multiple rows: '
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Driver.load();
      Random.setNextRandom(1708);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(true);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", ";H}D%3R(J&;~", "null", "--x");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HeapController heapController0 = new HeapController();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet(csv0);
      DBUtil.parseAndSimplifyResultSet(simpleResultSet1);
      ErrorHandler.getDefault();
      Random.setNextRandom(32);
      String string0 = "Tx";
      Class<PGPooledConnection> class0 = PGPooledConnection.class;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, (String) null, "F3.a( bM~jpb::;", "--", "F3.a( bM~jpb::;", "F3.a( bM~jpb::;");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      InternalTransactionCoordinator.LocalTransactionCoordinator internalTransactionCoordinator_LocalTransactionCoordinator0 = new InternalTransactionCoordinator.LocalTransactionCoordinator((AbstractConnection) null, fBLocalTransaction0);
      fBLocalTransaction0.commit();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_LocalTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("x", level0);
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("Empty SQL string in executeUpdate()", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getNextId();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.getLobConnection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sessionRemote0.autoCommitIfCluster();
      // Undeclared exception!
      try { 
        DBUtil.runScript("^mV`/,\"C", 'e', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      System.setCurrentTimeMillis((-170L));
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("No JDBC driver class name specified", compositeDBObject0);
      tableContainer0.getSchema();
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 result set(s)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("9(8{u,3U6{&jtLM.n", level0);
      Level level1 = Level.fatal;
      ErrorHandler.setDefaultLevel(level1);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      ErrorHandler.setDefaultLevel(level0);
      errorHandler0.handleError("9(8{u,3U6{&jtLM.n");
      errorHandler0.handleError("Pwa%T+>}QZ^c`QX");
      errorHandler0.setLoggingStackTrace(false);
      // Undeclared exception!
      try { 
        DBUtil.runScript("9(8{u,3U6{&jtLM.n", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Driver driver0 = new Driver();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Connecting ", 1007);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      ProviderList providerList0 = new ProviderList();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, 'C', (Connection) jdbcConnection0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getNextId();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sessionRemote0.getLobConnection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sessionRemote0.autoCommitIfCluster();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("XBCX5.S", '@', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getNextId();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sessionRemote0.getLobConnection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sessionRemote0.autoCommitIfCluster();
      DBUtil.runScript("--~,Mt$/!JFUjAa^", '7', (Connection) null, true, errorHandler0);
      Integer integer0 = new Integer(14);
      assertEquals(14, (int)integer0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6141342688540803
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVAR1.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      vector0.elements();
      Vector<ArrayInputStream> vector1 = new Vector<ArrayInputStream>();
      Vector<ArrayInputStream> vector2 = new Vector<ArrayInputStream>();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR1.decodeDate((byte[]) null);
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      xSQLVAR3.deepCopy();
      xSQLVAR4.deepCopy();
      Vector<ArrayInputStream> vector3 = new Vector<ArrayInputStream>();
      vector2.elements();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      DBUtil.close((ResultSet) null);
      Driver driver0 = new Driver();
      XSQLVAR xSQLVAR5 = new XSQLVAR();
      DBUtil.close((Connection) null);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      Random.setNextRandom(101);
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet(0L, 2);
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Recover recover0 = new Recover();
      TableContainer tableContainer0 = new TableContainer("0r%V(}>{v<");
      TableContainer tableContainer1 = new TableContainer("0r%V(}>{v<");
      tableContainer1.getSchema();
      TableContainer tableContainer2 = new TableContainer("0r%V(}>{v<");
      tableContainer2.getSchema();
      jdbcClob jdbcClob0 = new jdbcClob("0r%V(}>{v<");
      jdbcClob jdbcClob1 = new jdbcClob("--E#m<<5cdF'M");
      Reader reader0 = jdbcClob1.getCharacterStream();
      Csv csv0 = Csv.getInstance();
      csv0.setFieldSeparatorRead('`');
      StringReader stringReader0 = new StringReader("0r%V(}>{v<");
      stringReader0.read();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&8O/FegU";
      ResultSet resultSet0 = csv0.read(reader0, stringArray0);
      String string0 = DBUtil.format(resultSet0);
      assertEquals("&8O/FegU\n--E#m<<5cdF'M", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MockFile mockFile0 = new MockFile("<=", "1{5(");
      mockFile0.deleteOnExit();
      mockFile0.getCanonicalFile();
      InsertNode insertNode0 = new InsertNode();
      Properties properties0 = insertNode0.targetProperties;
      FormatableProperties formatableProperties0 = new FormatableProperties((Properties) null);
      FormatableProperties formatableProperties1 = new FormatableProperties(formatableProperties0);
      jdbcDriver.getConnection("893N\"N}qO~poiJq", formatableProperties1);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("--^mV`/,\"C", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("9(8{u,3U6{&jtLM.n", level0);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      Level level1 = Level.warn;
      ErrorHandler.setDefaultLevel(level1);
      errorHandler0.handleError("9(8{u,3U6{&jtLM.n");
      errorHandler0.setLoggingStackTrace(true);
      // Undeclared exception!
      try { 
        DBUtil.runScript("9(8{u,3U6{&jtLM.n", "$]~H*RjIc[p8JKbpN@", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: 9(8{u,3U6{&jtLM.n
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      jdbcDriver.getConnection("j", (Properties) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      DataStore dataStore0 = new DataStore("j");
      VirtualFile virtualFile0 = new VirtualFile("j", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream(true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(outputStream0);
      deleteConstantAction0.writeExternal(objectOutputStream0);
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      MockFile mockFile0 = new MockFile("j", " <=BE AuthenticationReq (unsupported type ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 101);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("e", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.2060335604823573
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      InternalTransactionCoordinator.LocalTransactionCoordinator internalTransactionCoordinator_LocalTransactionCoordinator0 = new InternalTransactionCoordinator.LocalTransactionCoordinator((AbstractConnection) null, fBLocalTransaction0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_LocalTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("e", 'C', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      FBArray fBArray0 = new FBArray();
      HeapController heapController0 = new HeapController();
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "Qw", false, (-607), (-607), (-607));
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000008
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Enumeration<ArrayInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s");
      Hashtable<FBPreparedStatement, jdbcDriver> hashtable0 = new Hashtable<FBPreparedStatement, jdbcDriver>();
      FBArray fBArray0 = new FBArray();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      fBArray0.getResultSet(0L, 2);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBSchema dBSchema0 = new DBSchema("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" FOR ", dBSchema0);
      dBSchema0.getTables();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "h7S^EU";
      stringArray0[2] = "";
      stringArray0[3] = "h7S^EU";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "h7S^EU", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBUniqueConstraint0);
      dBUniqueIndex0.toString();
      defaultDBTable0.addIndex(dBUniqueIndex0);
      String[] stringArray1 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " l9sMcKcIm[OIiM{PO", true, stringArray1);
      DBUtil.dependencyOrderedTables(dBSchema0);
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Random.setNextRandom(522);
      Random.setNextRandom((-430));
      TableContainer tableContainer0 = new TableContainer("--NW,'1ZBJ");
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(tableContainer0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = null;
      boolean boolean0 = false;
      try { 
        DBUtil.connect((String) null, (String) null, (String) null, (String) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBSchema dBSchema0 = new DBSchema("");
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" FOR ", dBSchema0);
      dBSchema0.getTables();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", true, stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "AUTOCOMMIT";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray1);
      boolean boolean1 = DBUtil.equivalent(dBUniqueConstraint0, dBPrimaryKeyConstraint0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      Connection connection0 = null;
      String string0 = "])EEnz{q";
      HeapController heapController0 = new HeapController();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "org.apache.dery.impl.sql.compile.DMLStatementNode", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      Connection connection0 = null;
      String string0 = "])EEnz{q";
      HeapController heapController0 = new HeapController();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "org.apache.dery.impl.sql.compile.DMLStatementNode", false, 1, 1698, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 366;
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("%v", "EaUacW-4Cx.", 'k', (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: %v
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/One-row database query returned multiple rows: .env.properties");
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)62;
      byteArray0[0] = (byte) (-123);
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)57;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.getMetaData("One-row database query returned multiple rows: ", true, false, false, true, "One-row database query returned multiple rows: ", true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = "One-row database query returned multiple rows: ";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/One-row database query returned multiple rows: .env.properties");
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)62;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byteArray0[0] = (byte) (-123);
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)57;
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean0 = true;
      String string1 = "";
      boolean boolean1 = false;
      try { 
        DBUtil.getMetaData("One-row database query returned multiple rows: ", true, true, true, true, "", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "One-row database query returned multiple rows: ";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/One-row database query returned multiple rows: .env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)62;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[0] = (byte) (-123);
      byteArray0[4] = (byte)57;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("One-row database query returned multiple rows: .env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "One-row database query returned multiple rows: ");
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.getMetaData("One-row database query returned multiple rows: ", true, true, false, false, "", true, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR0.decodeDate((byte[]) null);
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      xSQLVAR1.deepCopy();
      boolean boolean0 = DBUtil.available("Y", (String) null, "`tPCo@LE.4j+skH", ">");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "org.apache.derby.impl.io.BaseStorageFactory", true, 10, 56, 56);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: org.apache.derby.impl.io.BaseStorageFactory
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Enumeration<ArrayInputStream> enumeration0 = vector0.elements();
      Vector<ArrayInputStream> vector1 = new Vector<ArrayInputStream>();
      Vector<ArrayInputStream> vector2 = new Vector<ArrayInputStream>();
      vector2.clone();
      vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("izCBxTm@4!SDXW)<q", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: izCBxTm@4!SDXW)<q
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      DBUtil.checkReadOnly("Blob position is limited to 2^31 - 1 due to isc_seek_blob limitations.", false);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "No JDBC URL specified", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Vector<ArrayInputStream> vector0 = new Vector<ArrayInputStream>();
      Enumeration<ArrayInputStream> enumeration0 = vector0.elements();
      Vector<ArrayInputStream> vector1 = new Vector<ArrayInputStream>();
      Vector<ArrayInputStream> vector2 = new Vector<ArrayInputStream>();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte) (-1);
      ArrayInputStream arrayInputStream0 = new ArrayInputStream(byteArray0);
      vector2.add(arrayInputStream0);
      vector2.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = "rLz$I:Vhi50wM";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'null' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      fBArray0.getResultSet((Map) formatableHashtable0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet((SimpleRowSource) null);
      List<Object[]> list0 = DBUtil.parseResultSet(simpleResultSet0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Recover recover0 = new Recover();
      TableContainer tableContainer0 = new TableContainer("0#DV(}>{vy");
      tableContainer0.toString();
      tableContainer0.setName("0#DV(}>{vy");
      TableContainer tableContainer1 = new TableContainer("--9>K}B&");
      tableContainer1.getSchema();
      TableContainer tableContainer2 = new TableContainer("0&.nKt|HrXl6N;ilYi");
      tableContainer2.getTable("uGV=$x=Xav.\"HN$%i");
      tableContainer2.setOwner(tableContainer0);
      tableContainer0.getSchema();
      TableContainer tableContainer3 = new TableContainer("0&.nKt|HrXl6N;ilYi");
      tableContainer1.getSchema();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("0#DV(}>{vy", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Driver.load();
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection1 = new jdbcConnection(session1);
      Statement statement0 = jdbcConnection0.createStatement();
      DBUtil.createLoggingStatementHandler(statement0, true);
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Integer integer0 = new Integer((-259));
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      FBArray fBArray0 = new FBArray();
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      errorHandler0.handleError("mzKNcPc{?V$");
      try { 
        DBUtil.runScript("", "", (Connection) null, true, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("9(8{u,3U6{&jtLM.n", level0);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      Level level1 = Level.trace;
      ErrorHandler.setDefaultLevel(level1);
      errorHandler0.handleError("9(8{u,3U6{&jtLM.n");
      errorHandler0.setLoggingStackTrace(true);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "9(8{u,3U6{&jtLM.n", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBUtil.escape("");
      FBArray fBArray0 = new FBArray();
      int int0 = 0;
      HashMap<FBResultSet, Integer> hashMap0 = new HashMap<FBResultSet, Integer>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[5];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVARArray0[0] = xSQLVAR1;
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      xSQLVARArray0[1] = xSQLVAR2;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      xSQLVARArray0[3] = xSQLVAR4;
      XSQLVAR xSQLVAR5 = xSQLVAR0.deepCopy();
      xSQLVARArray0[4] = xSQLVAR5;
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      FBResultSet fBResultSet0 = null;
      try {
        fBResultSet0 = new FBResultSet(xSQLVARArray0, columnDescriptorList0);
        fail("Expecting exception: TypeConvertionException");
      
      } catch(Throwable e) {
         //
         // SQL type for this field is not yet supported.
         //
         verifyException("org.firebirdsql.jdbc.field.FBField", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--x", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "+nX~h=.l>/|J7V");
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Object object0 = new Object();
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      String string0 = "There are unclosed database resources";
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "There are unclosed database resources", "OWNS=_{1c?,", true, true, false, true, "7[", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 1
         // 7[
         //  ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HeapController heapController0 = new HeapController();
      MockFile mockFile0 = new MockFile("<=", "`S2!OHI}fuX>b!1@pf");
      MockFile mockFile1 = new MockFile("org.databene.SQL");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      MockFile mockFile2 = new MockFile("<=", "org.databene.SQL");
      MockFile mockFile3 = new MockFile("`S2!OHI}fuX>b!1@pf", "<=");
      InsertNode insertNode0 = new InsertNode();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      jdbcDriver.getConnection("org.databene.SQL", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("`S2!OHI}fuX>b!1@pf", true, true, true, false, (String) null, false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '`S2!OHI}fuX>b!1@pf.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.countRows("l1O\"50No^NwTeK", (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DBUtil.resetMonitors();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Connection connection0 = null;
      int int0 = 261;
      try { 
        DBUtil.getMetaData((Connection) null, "", "R", true, true, false, false, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FBManagedConnection fBManagedConnection0 = null;
      AbstractConnection abstractConnection0 = null;
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      InternalTransactionCoordinator.LocalTransactionCoordinator internalTransactionCoordinator_LocalTransactionCoordinator0 = new InternalTransactionCoordinator.LocalTransactionCoordinator((AbstractConnection) null, fBLocalTransaction0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_LocalTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      String string0 = null;
      TableContainer tableContainer0 = new TableContainer((String) null);
      tableContainer0.getSchema();
      String string1 = "&compatible=";
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "!C4Y", false, true, true, false, "!C4Y", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Driver driver0 = new Driver();
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      driver0.connect("j", (Properties) null);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      Class<JdbcXAConnection> class0 = JdbcXAConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      try { 
        DBUtil.getMetaData((Connection) null, "gJyS'%d1W@J4auE=.~", "The server requested password-based authentication, but no password was provided.", false, false, true, false, "Database query did not return a result: ", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      Connection connection0 = null;
      int int0 = 261;
      try { 
        DBUtil.getMetaData((Connection) null, "[]", "", true, true, true, true, "Yag91vH\tq-f+IM&", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Recover recover0 = new Recover();
      String[] stringArray0 = new String[0];
      recover0.runTool(stringArray0);
      String[] stringArray1 = new String[0];
      Recover.execute("<=", "vk^0HX'68zDb&SuK&");
      Recover.main(stringArray1);
      recover0.getLobConnection();
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Recover recover0 = new Recover();
      TableContainer tableContainer0 = new TableContainer("0#DV(}>{vy");
      tableContainer0.toString();
      tableContainer0.setName("0#DV(}>{vy");
      TableContainer tableContainer1 = new TableContainer("--9>K}B&");
      tableContainer1.getTable("0#DV(}>{vy");
      tableContainer1.getSchema();
      TableContainer tableContainer2 = new TableContainer("0&.nKt|HrXl6N;ilYi");
      tableContainer2.getTable("uGV=$x=Xav.\"HN$%i");
      tableContainer2.setOwner(tableContainer0);
      tableContainer0.getSchema();
      TableContainer tableContainer3 = new TableContainer("0&.nKt|HrXl6N;ilYi");
      tableContainer1.getSchema();
      recover0.getLobConnection();
      Class<SimpleResultSet> class0 = SimpleResultSet.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("4U2sm>", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      Random.setNextRandom(12);
      byte[] byteArray0 = new byte[9];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("user", 32);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byteArray0[0] = (byte)7;
      byteArray0[2] = (byte) (-34);
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("Database query failed: ", "Database query failed: ", "Database query failed: ", "Database query failed: ", "@ru^TI", "Database query failed: ");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting Database query failed:  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("\u0001\u00C8", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      InternalTransactionCoordinator.LocalTransactionCoordinator internalTransactionCoordinator_LocalTransactionCoordinator0 = new InternalTransactionCoordinator.LocalTransactionCoordinator((AbstractConnection) null, fBLocalTransaction0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_LocalTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)88;
      byteArray0[6] = (byte)88;
      byteArray0[7] = (byte)88;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      int int0 = DBUtil.executeUpdate((String) null, (Connection) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("9(8{u,3U6{&jtLM.n", level0);
      ProviderList providerList0 = new ProviderList();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--INTERSECT", 121);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)84;
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)46;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      int int0 = DBUtil.executeUpdate("", (Connection) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Driver driver0 = new Driver();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      FBArray fBArray0 = new FBArray();
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      ProviderList providerList0 = new ProviderList();
      formatableHashtable0.putAll(providerList0);
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      generationClauseNode0.getAuxiliaryProviderList();
      fBArray0.getResultSet(2147483650L, 7, (Map) null);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("d8d9/0}3UvpBX3J4", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.query("%xpS,u9DdjBQxm/", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("org.h2.expression.ExpressionList", 32000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      ProviderList providerList0 = new ProviderList();
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-119);
      byteArray0[5] = (byte) (-126);
      byteArray0[6] = (byte)88;
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte)46;
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("=RMN#J}3rv%Rwx(ow=", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("9(8{u,3U6{&jtLM.n", level0);
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.handleError("9(8{u,3U6{&jtLM.n");
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.handleError("9(8{u,3U6{&jtLM.n");
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      ErrorHandler.setDefaultLevel(level0);
      errorHandler0.setLoggingStackTrace(true);
      Level level1 = Level.trace;
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler.setDefaultLevel(level1);
      errorHandler0.handleError("9(8{u,3U6{&jtLM.n");
      errorHandler0.handleError("6MT/?");
      Class<SimpleResultSet> class0 = SimpleResultSet.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("6MT/?", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MockFile mockFile0 = new MockFile("<=", "1{5(");
      mockFile0.deleteOnExit();
      MockFile mockFile1 = new MockFile("1{5(");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockFile mockFile2 = new MockFile("1{5(", "<=");
      MockFile mockFile3 = new MockFile("sytNL$5@0Twu`'PqKwF", "<=");
      Integer integer0 = new Integer(32);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet((SimpleRowSource) null);
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      assertFalse(simpleResultSet0.wasNull());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      Random.setNextRandom(515);
      // Undeclared exception!
      try { 
        DBUtil.connect("Blob position is limited to 2^31 - 1 due to isc_seek_blob limitations.", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Blob position is limited to 2^31 - 1 due to isc_seek_blob limitations..env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      try { 
        DBUtil.connect("org.apache.derby.impl.sql.compile.FromList", ",gU(E;,]mP'", ")", "X*&a", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting org.apache.derby.impl.sql.compile.FromList failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HeapController heapController0 = new HeapController();
      boolean boolean0 = DBUtil.available("donnecting ", "VIFuA", "--org.h2.store.Page", "`tPCo@LE.4j+skH");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      boolean boolean0 = dBPrimaryKeyConstraint0.equals("");
      boolean boolean1 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HeapController heapController0 = new HeapController();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("--e", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("org.firebirdsql.gds.impl.wire.EventHandleImp");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'org.firebirdsql.gds.impl.wire.EventHandleImp.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryString((PreparedStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainer tableContainer1 = new TableContainer((String) null);
      tableContainer1.setOwner(tableContainer0);
      tableContainer0.getSchema();
      TableContainer tableContainer2 = new TableContainer("-8-,KH4L");
      jdbcClob jdbcClob0 = new jdbcClob("x");
      jdbcClob0.getCharacterStream();
      Csv csv0 = Csv.getInstance();
      csv0.setFieldSeparatorRead('T');
      StringReader stringReader0 = new StringReader("G&;wnpYlwn");
      StringReader stringReader1 = new StringReader("G&;wnpYlwn");
      stringReader1.read();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-8-,KH4L";
      csv0.read((Reader) stringReader0, stringArray0);
      String string0 = DBUtil.escape("x");
      assertEquals("x", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      HashMap<FBResultSet, Integer> hashMap0 = new HashMap<FBResultSet, Integer>();
      FBArray fBArray0 = new FBArray();
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
