/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 23:54:34 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1308018983094383
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@)R");
      StringReader stringReader1 = new StringReader("y &w0@)R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[1];
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("y &w0@)R");
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader1.markSupported();
      stringReader2.read();
      stringReader0.markSupported();
      stringReader0.ready();
      stringReader2.markSupported();
      stringReader0.ready();
      stringReader1.ready();
      stringReader1.read(charArray0);
      stringReader0.ready();
      stringReader0.read(charArray0);
      stringReader2.read();
      stringReader2.skip((-2964L));
      stringReader0.reset();
      stringReader0.ready();
      stringReader1.mark(38);
      stringReader1.markSupported();
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      JSPredicateForm jSPredicateForm3 = jSTerm0.clonePF();
      boolean boolean0 = jSPredicateForm0.equals(jSPredicateForm3);
      assertTrue(boolean0);
      
      JSSubstitution jSSubstitution1 = jSPredicateForm2.matches(jSPredicateForm1, jSSubstitution0);
      assertEquals("[y, [y]]", jSPredicateForm2.toString());
      assertNotSame(jSPredicateForm2, jSPredicateForm1);
      assertFalse(jSSubstitution1.fail());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1109599684818052
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@)R");
      StringReader stringReader1 = new StringReader("y &w0@)R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[1];
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("y &w0@)R");
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader1.markSupported();
      stringReader2.read();
      stringReader0.markSupported();
      stringReader0.ready();
      stringReader2.markSupported();
      stringReader0.ready();
      stringReader1.ready();
      stringReader1.read(charArray0);
      stringReader0.ready();
      stringReader0.read(charArray0);
      stringReader2.read();
      stringReader2.skip((-2964L));
      stringReader0.reset();
      stringReader0.ready();
      stringReader1.mark(38);
      stringReader0.reset();
      stringReader0.markSupported();
      stringReader1.markSupported();
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertTrue(boolean0);
      
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      assertNotSame(jSPredicateForm2, jSPredicateForm1);
      
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSPredicateForm0.equals((Object)jSPredicateForm2));
      assertFalse(jSSubstitution1.fail());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NcYJ X");
      StringReader stringReader1 = new StringReader("NcYJ X");
      stringReader1.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader1.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader2 = new StringReader("NcYJ X");
      stringReader2.read();
      stringReader2.ready();
      streamTokenizer0.commentChar(2233);
      stringReader2.reset();
      stringReader1.mark(0);
      stringReader1.reset();
      stringReader1.reset();
      streamTokenizer0.slashStarComments(true);
      jSTerm0.add((Object) null);
      stringReader0.reset();
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.eolIsSignificant(true);
      char[] charArray0 = new char[1];
      stringReader0.skip(1739L);
      streamTokenizer0.slashSlashComments(true);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9330436228738463
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@)R");
      StringReader stringReader1 = new StringReader("y &w0@)R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[1];
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("y &w0@)R");
      stringReader2.read();
      stringReader1.markSupported();
      stringReader2.read();
      stringReader0.markSupported();
      stringReader0.ready();
      stringReader0.ready();
      stringReader1.ready();
      stringReader1.read(charArray0);
      stringReader0.read(charArray0);
      stringReader2.read();
      stringReader2.skip((-2964L));
      stringReader2.read();
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.markSupported();
      stringReader1.markSupported();
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      jSTerm1.call();
      jSTerm0.add((Object) jSTerm1);
      stringReader2.reset();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertTrue(boolean0);
      
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      StringBuffer stringBuffer0 = jSPredicateForm1.toStr();
      assertEquals("(yy )", stringBuffer0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.342066629322488
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Yk)k~~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      long long0 = 503L;
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSPredicateForm0.addAll((Collection) jSTerm0);
      System.setCurrentTimeMillis(503L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("Nc#L X");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = jSSubstitution0.instance(jSTerm0);
      jSTerm1.add((Object) jSSubstitution0);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = function1.compose((Function<? super Object, ?>) unaryOperator0);
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<String, String> function4 = unaryOperator1.compose((Function<? super String, ? extends String>) function2);
      function1.andThen((Function<? super String, ? extends String>) function4);
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function3);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function<Object, String> function5 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function5);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9179590133718845
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine("(Yk)k~~");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(Yk)k~~");
      StringReader stringReader0 = new StringReader("(Yk)k~~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-2022068903), (-2022068903));
      jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2346791997877273
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(Yk)k~~");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("vc");
      SystemInUtil.addInputLine((String) null);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "4/=^$x.fd'|7&nh|9m");
      SystemInUtil.addInputLine("Xe!ALx~~@3v*GbhzdCCK");
      SystemInUtil.addInputLine("]FC*1emXRGM-^g+,");
      SystemInUtil.addInputLine("(miA**IWM}bY");
      SystemInUtil.addInputLine("Z4/k^$x.fd'|7&nm");
      SystemInUtil.addInputLine("Z4/k^$x.fd'|7&nm");
      jSTerm0.add((Object) null);
      SystemInUtil.addInputLine("Xe!ALx~~@3v*GbhzdCCK");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("]YJ|Kan0'X:x");
      SystemInUtil.addInputLine("4/=^$x.fd'|7&nh|9m");
      CharBuffer.allocate(3210);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("]YJ|Kan0'X:x");
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("vc");
      SystemInUtil.addInputLine("vc");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "SJuY2a!wzkmQ");
      jSTerm0.add((Object) jSTerm0);
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("8.0");
      SystemInUtil.addInputLine("qfjPpEC%h`v4+STe+-p");
      SystemInUtil.addInputLine("SJuY2a!wzkmQ");
      SystemInUtil.addInputLine("uy*5aXvta{\"=G<.");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("vc");
      SystemInUtil.addInputLine("!}O`Ms-g-'.W");
      SystemInUtil.addInputLine("Xe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("vc");
      SystemInUtil.addInputLine("ncl");
      SystemInUtil.addInputLine("!}O`Ms-g-'.W");
      jSTerm0.add((Object) "8.0");
      SystemInUtil.addInputLine("vc");
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = 42;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = 42;
      JSJshopVars.lessT = 42;
      JSJshopVars.rightPar = 42;
      JSJshopVars.leftPar = 42;
      Integer integer0 = new Integer(42);
      jSPredicateForm0.add((Object) integer0);
      JSJshopVars.dot = 42;
      JSJshopVars.whiteSpace = 2132;
      JSJshopVars.verticalL = 2132;
      JSJshopVars.whiteSpace = 42;
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemInUtil.addInputLine("-oYZ");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("-oYZ");
      stringReader0.markSupported();
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.coma = (-3);
      JSJshopVars.whiteSpace = (-3);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = (-3);
      JSJshopVars.plus = (-3);
      JSJshopVars.backquote = (-3);
      JSJshopVars.greaterT = (-3);
      Integer integer0 = new Integer((-3));
      jSPredicateForm0.add((Object) integer0);
      jSPredicateForm0.addElement("mXLR'-#XUnm?4+#oZc");
      JSJshopVars.lessT = (-3);
      JSJshopVars.minus = (-3);
      JSJshopVars.rightPar = (-3);
      JSJshopVars.astherisk = (-3);
      JSJshopVars.verticalL = (-3);
      JSJshopVars.exclamation = (-3);
      JSJshopVars.dot = (-3);
      JSJshopVars.whiteSpace = (-3);
      JSJshopVars.dot = (-14);
      JSJshopVars.backquote = (-3);
      JSJshopVars.verticalL = (-3);
      JSJshopVars.whiteSpace = 2;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 2;
      JSJshopVars.exclamation = 2;
      JSJshopVars.rightPar = 2;
      JSJshopVars.whiteSpace = (-3);
      JSJshopVars.dot = (-3);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-5378L));
      System.setCurrentTimeMillis((-1143L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(132L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-4989L));
      System.setCurrentTimeMillis((-2192L));
      System.setCurrentTimeMillis(2687L);
      System.setCurrentTimeMillis((-1004L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1838L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-4066L));
      System.setCurrentTimeMillis(4588L);
      System.setCurrentTimeMillis(904L);
      System.setCurrentTimeMillis((-2192L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1838L));
      System.setCurrentTimeMillis(2522L);
      System.setCurrentTimeMillis(1L);
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@ )R");
      StringReader stringReader1 = new StringReader("y &w0@ )R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.duplicate();
      stringReader0.read(charBuffer0);
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader2 = new StringReader("y &w0@ )R");
      stringReader2.markSupported();
      stringReader2.read();
      stringReader2.markSupported();
      stringReader2.ready();
      stringReader1.markSupported();
      stringReader2.ready();
      stringReader2.read(charArray0);
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader1.skip(5);
      stringReader2.reset();
      stringReader1.mark(121);
      stringReader1.reset();
      stringReader1.reset();
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read(charBuffer0);
      jSTerm0.add((Object) null);
      stringReader0.reset();
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer2 = CharBuffer.wrap(charArray0);
      charBuffer1.mark();
      charBuffer1.put(charBuffer2);
      stringReader0.read(charBuffer1);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@)R");
      StringReader stringReader1 = new StringReader("y &w0@)R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader2 = new StringReader("y &w0@)R");
      stringReader2.markSupported();
      stringReader2.read();
      stringReader2.markSupported();
      stringReader2.ready();
      stringReader1.markSupported();
      stringReader2.ready();
      stringReader2.read();
      stringReader2.read();
      stringReader2.reset();
      stringReader1.mark(121);
      stringReader1.reset();
      stringReader0.markSupported();
      stringReader0.markSupported();
      jSTerm0.add((Object) "y &w0@)R");
      stringReader0.reset();
      jSTerm0.makeConstant();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".AX|YA");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader(".AX|YA");
      stringReader1.reset();
      streamTokenizer0.slashSlashComments(false);
      jSTerm0.call();
      streamTokenizer0.ttype = streamTokenizer0.ttype;
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      SystemInUtil.addInputLine("hcp");
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      function2.apply("hcp");
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function3);
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Integer> function4 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function5 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function4);
      function5.andThen((Function<? super Integer, ? extends String>) function2);
      Function<Object, Integer> function6 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function5);
      unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function6);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      unaryOperator3.andThen((Function<? super Object, ? extends String>) function2);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function<Object, String> function7 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      assertNotSame(function7, function3);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1409958145862924
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@)R");
      StringReader stringReader1 = new StringReader("y &w0@)R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[1];
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("y &w0@)R");
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader1.markSupported();
      stringReader2.read();
      stringReader0.markSupported();
      stringReader0.ready();
      stringReader2.markSupported();
      stringReader0.ready();
      stringReader1.ready();
      stringReader1.read(charArray0);
      stringReader0.ready();
      stringReader0.read(charArray0);
      stringReader2.read();
      stringReader2.skip((-2964L));
      stringReader0.reset();
      stringReader0.ready();
      stringReader1.mark(38);
      stringReader0.reset();
      stringReader0.markSupported();
      stringReader1.markSupported();
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertTrue(boolean0);
      assertEquals("[y, [y]]", jSPredicateForm0.toString());
      
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      assertEquals("[y, [y]]", jSPredicateForm2.toString());
      
      jSPredicateForm1.print();
      assertNotSame(jSPredicateForm1, jSPredicateForm2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(HQML");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.quoteChar((-4));
      streamTokenizer0.lowerCaseMode(false);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashStarComments(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.ordinaryChar((-1));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer2.eolIsSignificant(true);
      streamTokenizer2.whitespaceChars((-4), (-4));
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer2.ordinaryChar((-4));
      streamTokenizer1.wordChars((-4), (-4));
      streamTokenizer1.resetSyntax();
      streamTokenizer2.slashStarComments(true);
      streamTokenizer1.slashSlashComments(true);
      stringReader0.close();
      streamTokenizer0.whitespaceChars(1, (-4));
      streamTokenizer1.resetSyntax();
      streamTokenizer1.slashStarComments(false);
      streamTokenizer0.quoteChar((-4));
      streamTokenizer1.quoteChar((-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer2.ordinaryChar((-4));
      streamTokenizer1.whitespaceChars((-4), (-4));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.234679199787727
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Yk)k~~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SystemInUtil.addInputLine("call ");
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis((-4));
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-309L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis(2L);
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis((-1077L));
      jSPredicateForm0.add((Object) stringReader0);
      System.setCurrentTimeMillis((-1257L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nc#L X");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      Function<String, String> function4 = function3.compose((Function<? super String, ?>) function2);
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, JSTerm> function5 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function6 = unaryOperator1.andThen((Function<? super Object, ? extends JSTerm>) function5);
      unaryOperator0.andThen((Function<? super Object, ? extends JSTerm>) function6);
      Integer integer0 = new Integer(1845);
      function2.apply(function4);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super Object, ?>) function3);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function3);
      UnaryOperator<Integer> unaryOperator3 = UnaryOperator.identity();
      Function<Object, Integer> function7 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function8 = unaryOperator3.compose((Function<? super Object, ? extends Integer>) function7);
      Function<Object, Integer> function9 = unaryOperator2.andThen((Function<? super Object, ? extends Integer>) function8);
      unaryOperator3.compose((Function<? super Object, ? extends Integer>) function9);
      Function<Object, Integer> function10 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function9);
      Function<Object, String> function11 = function2.compose((Function<? super Object, ?>) function1);
      Function<Object, Integer> function12 = unaryOperator2.andThen((Function<? super Object, ? extends Integer>) function8);
      Function.identity();
      unaryOperator3.compose((Function<? super Object, ? extends Integer>) function12);
      Function<Object, String> function13 = function12.andThen((Function<? super Integer, ? extends String>) function11);
      unaryOperator3.compose((Function<? super Object, ? extends Integer>) function9);
      unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function10);
      UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function3);
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator4 = UnaryOperator.identity();
      Function<Object, String> function14 = unaryOperator4.andThen((Function<? super Object, ? extends String>) function1);
      assertFalse(function14.equals((Object)function0));
      assertNotSame(function14, function13);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("4/k^$X.Fd'|7&nH|[M");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "4/k^$X.Fd'|7&nH|[M");
      jSTerm0.trimToSize();
      jSTerm0.ensureCapacity(3174);
      SystemInUtil.addInputLine("iqMj-D");
      jSTerm0.makeVariable();
      char[] charArray0 = new char[7];
      SystemInUtil.addInputLine("2<@pkteZU1=");
      SystemInUtil.addInputLine("q(miVO**IW}jbY");
      charArray0[4] = '\u0012';
      jSTerm0.ensureCapacity(42);
      charArray0[1] = '=';
      jSTerm0.add((Object) null);
      charArray0[4] = 'M';
      CharBuffer charBuffer0 = CharBuffer.allocate('=');
      CharBuffer charBuffer1 = CharBuffer.allocate(3174);
      charBuffer0.read(charBuffer1);
      SystemInUtil.addInputLine("iqMj-D");
      charBuffer0.flip();
      jSTerm0.removeElement("iqMj-D");
      charArray0[5] = ':';
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(88L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2981L);
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2981L);
      System.setCurrentTimeMillis(2981L);
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(HQML");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.wordChars(1180, (-20633121));
      streamTokenizer0.quoteChar((-4));
      streamTokenizer0.lowerCaseMode(false);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashStarComments(false);
      streamTokenizer1.ordinaryChar((-4));
      streamTokenizer0.wordChars((-4), (-4));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.whitespaceChars((-4), (-4));
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.whitespaceChars((-4), (-4));
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer1.ordinaryChar((-4));
      streamTokenizer1.wordChars((-4), (-4));
      streamTokenizer1.resetSyntax();
      streamTokenizer1.slashStarComments(false);
      streamTokenizer0.whitespaceChars((-4), (-4));
      streamTokenizer1.resetSyntax();
      streamTokenizer1.slashStarComments(false);
      streamTokenizer0.quoteChar((-4));
      streamTokenizer1.quoteChar((-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer1.ordinaryChar(1);
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer1.whitespaceChars((-4), (-4));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y &w0@)R");
      StringReader stringReader1 = new StringReader("y &w0@)R");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.duplicate();
      stringReader0.read(charBuffer0);
      stringReader1.ready();
      stringReader1.markSupported();
      stringReader0.markSupported();
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader2 = new StringReader("y &w0@)R");
      stringReader2.markSupported();
      stringReader2.read();
      stringReader2.markSupported();
      stringReader2.ready();
      stringReader1.markSupported();
      stringReader2.ready();
      stringReader2.read(charArray0);
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader1.skip(1);
      stringReader2.read();
      stringReader2.reset();
      stringReader1.mark(121);
      stringReader1.reset();
      stringReader1.reset();
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read(charBuffer0);
      jSTerm0.add((Object) "y &w0@)R");
      stringReader0.reset();
      jSTerm0.makeConstant();
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charBuffer1.mark();
      stringReader0.read(charBuffer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer.wrap(charArray0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = null;
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("Nc#J X");
      StringReader stringReader1 = new StringReader("Nc#J X");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader1.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader2 = new StringReader("Nc#J X");
      stringReader2.reset();
      jSTerm0.add((Object) jSSubstitution0);
      Integer integer0 = new Integer(32);
      stringReader1.reset();
      stringReader0.ready();
      stringReader1.reset();
      streamTokenizer0.slashStarComments(true);
      stringReader0.reset();
      streamTokenizer0.whitespaceChars(32, 32);
      streamTokenizer0.resetSyntax();
      SystemInUtil.addInputLine((String) null);
      streamTokenizer0.slashStarComments(true);
      char[] charArray0 = new char[1];
      charArray0[0] = '\u0081';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      streamTokenizer0.slashSlashComments(true);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.234679199787727
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Yk)k~~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis((-1790L));
      SystemInUtil.addInputLine("4/=^$x.fd'|7&nh|9m");
      System.setCurrentTimeMillis((-4));
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-309L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis(2L);
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1790L));
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "N");
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.toStr();
      SystemInUtil.addInputLine("N");
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(88L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2981L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-3780L));
      System.setCurrentTimeMillis(4515L);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.toStr();
      char[] charArray0 = new char[2];
      charArray0[1] = '=';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.rewind();
      charBuffer0.asReadOnlyBuffer();
      int int0 = (-1571);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1571));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = 42;
      JSJshopVars.interrogation = 42;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = 42;
      JSJshopVars.plus = 42;
      JSJshopVars.backquote = 42;
      JSJshopVars.greaterT = 42;
      JSJshopVars.lessT = 42;
      JSJshopVars.minus = 42;
      JSJshopVars.rightPar = 42;
      JSJshopVars.astherisk = (-44621292);
      JSJshopVars.rightBrac = 1358;
      JSJshopVars.leftPar = 42;
      JSJshopVars.dot = 42;
      JSJshopVars.whiteSpace = 42;
      JSJshopVars.dot = 0;
      JSJshopVars.interrogation = 42;
      JSJshopVars.verticalL = 42;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 42;
      JSJshopVars.exclamation = 42;
      JSJshopVars.rightPar = 42;
      JSJshopVars.whiteSpace = (-44621292);
      jSPredicateForm0.setSize(2561);
      JSJshopVars.dot = (-44621292);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SystemInUtil.addInputLine("vc");
      SystemInUtil.addInputLine((String) null);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "SJuY2a!wzkmQ");
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) null);
      jSTerm0.add((Object) jSTerm1);
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("8.0");
      SystemInUtil.addInputLine("qfjPpEC%h`v4+STe+-p");
      SystemInUtil.addInputLine("SJuY2a!wzkmQ");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("PlanningDomain: error");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("4");
      SystemInUtil.addInputLine("=5QF!>yfXM[H_v3");
      SystemInUtil.addInputLine("g[_IRH_GE;)u-o[mmyn");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      SystemInUtil.addInputLine("OXe!ALx~~@3v*GbhzdCK");
      JSSubstitution jSSubstitution0 = jSTerm1.matches((JSPredicateForm) jSTerm0);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.coma = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = (-21);
      JSJshopVars.plus = (-21);
      JSJshopVars.backquote = (-21);
      JSJshopVars.greaterT = (-21);
      JSJshopVars.minus = (-21);
      JSJshopVars.astherisk = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.exclamation = (-21);
      JSJshopVars.dot = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.dot = (-14);
      JSJshopVars.leftBrac = 41;
      JSJshopVars.backquote = (-21);
      StringReader stringReader0 = new StringReader("expected '('");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm0);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.coma = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.plus = 0;
      JSJshopVars.backquote = 0;
      JSJshopVars.rightPar = (-21);
      JSJshopVars.greaterT = 0;
      JSJshopVars.lessT = 0;
      JSJshopVars.minus = (-21);
      JSJshopVars.rightPar = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.exclamation = (-21);
      JSJshopVars.dot = (-21);
      JSJshopVars.whiteSpace = 0;
      JSJshopVars.dot = (-14);
      JSJshopVars.backquote = 0;
      JSJshopVars.greaterT = 0;
      JSJshopVars.verticalL = 0;
      JSJshopVars.whiteSpace = 2;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 2;
      JSJshopVars.exclamation = 2;
      JSJshopVars.rightPar = 2;
      JSJshopVars.whiteSpace = (-21);
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      stringReader0.read(charBuffer0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) null);
      System.setCurrentTimeMillis(1335L);
      System.setCurrentTimeMillis(1335L);
      System.setCurrentTimeMillis((-281L));
      System.setCurrentTimeMillis(1423L);
      System.setCurrentTimeMillis((-281L));
      System.setCurrentTimeMillis(1590L);
      System.setCurrentTimeMillis((-2656L));
      System.setCurrentTimeMillis(10L);
      System.setCurrentTimeMillis(1590L);
      System.setCurrentTimeMillis(1335L);
      System.setCurrentTimeMillis(1590L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1590L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-2656L));
      System.setCurrentTimeMillis((-2656L));
      System.setCurrentTimeMillis(1423L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1423L);
      System.setCurrentTimeMillis(1423L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(4515L);
      System.setCurrentTimeMillis(1335L);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nm#L ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Integer integer0 = new Integer(32);
      jSTerm0.add((Object) integer0);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.coma = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.plus = 0;
      JSJshopVars.backquote = 0;
      JSJshopVars.rightPar = (-21);
      JSJshopVars.greaterT = 0;
      JSJshopVars.lessT = 0;
      JSJshopVars.minus = (-21);
      JSJshopVars.rightPar = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.exclamation = (-21);
      JSJshopVars.dot = (-21);
      JSJshopVars.whiteSpace = 0;
      JSJshopVars.backquote = 0;
      JSJshopVars.greaterT = 0;
      JSJshopVars.verticalL = 0;
      JSJshopVars.whiteSpace = 2;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 2;
      JSJshopVars.exclamation = 2;
      JSJshopVars.rightPar = 2;
      JSJshopVars.whiteSpace = (-21);
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      stringReader0.read(charBuffer0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SystemInUtil.addInputLine("{}C^3NP'nwCB:X");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.flagLevel = (-1610612734);
      JSJshopVars.coma = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.plus = (-1610612734);
      JSJshopVars.backquote = (-1610612734);
      JSJshopVars.rightPar = (-21);
      JSJshopVars.greaterT = (-1610612734);
      JSJshopVars.lessT = (-1610612734);
      JSJshopVars.minus = (-21);
      JSJshopVars.rightPar = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.exclamation = (-21);
      JSJshopVars.dot = (-21);
      JSJshopVars.whiteSpace = (-1610612734);
      JSJshopVars.dot = (-14);
      JSJshopVars.backquote = (-21);
      JSJshopVars.greaterT = (-21);
      JSJshopVars.verticalL = (-1610612734);
      JSJshopVars.whiteSpace = 2;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 2;
      JSJshopVars.exclamation = 2;
      JSJshopVars.rightPar = 2;
      JSJshopVars.whiteSpace = (-21);
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      CharBuffer.allocate(2);
      jSPredicateForm0.capacity();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.342066629322488
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(Yk)k~~");
      assertEquals("[Yk]", jSPredicateForm0.toString());
      
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm0);
      assertFalse(jSSubstitution0.fail());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis(2516);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis(2516);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1767L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1942L));
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1767L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-213L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1767L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis((-2622L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      System.setCurrentTimeMillis(2516);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-293L));
      System.setCurrentTimeMillis(2516);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1767L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1942L));
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1767L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-213L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1767L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2622L));
      System.setCurrentTimeMillis((-2622L));
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, (JSSubstitution) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.listIterator();
      StringReader stringReader0 = new StringReader("8A|A");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      // Undeclared exception!
      try { 
        unaryOperator0.andThen((Function<? super Object, ? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.coma = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = (-21);
      JSJshopVars.plus = (-21);
      JSJshopVars.backquote = (-21);
      JSJshopVars.rightPar = (-21);
      JSJshopVars.greaterT = (-21);
      JSJshopVars.minus = (-21);
      JSJshopVars.rightPar = (-21);
      JSJshopVars.astherisk = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.leftPar = (-21);
      JSJshopVars.exclamation = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.dot = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSJshopVars.dot = (-21);
      JSJshopVars.leftBrac = (-21);
      JSJshopVars.backquote = (-21);
      JSJshopVars.astherisk = (-21);
      JSJshopVars.greaterT = (-21);
      JSJshopVars.verticalL = (-21);
      JSJshopVars.whiteSpace = (-21);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.clone();
      jSTerm0.spliterator();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SystemInUtil.addInputLine("vc");
      SystemInUtil.addInputLine((String) null);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "4/=^$x.fd'|7&nh|9m");
      SystemInUtil.addInputLine("Xe!ALxs~~@*GbhEdCCK");
      SystemInUtil.addInputLine("]FC*1emXRGM-^g+,");
      char[] charArray0 = new char[20];
      SystemInUtil.addInputLine("(miA**IWM}bY");
      SystemInUtil.addInputLine("Z4/k^$x.fd'|7&nm");
      SystemInUtil.addInputLine("4/=^$x.fd'|7&nh|9m");
      jSTerm0.add((Object) null);
      SystemInUtil.addInputLine("Xe!ALxs~~@*GbhEdCCK");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("]YJ|Kan0'X:x");
      SystemInUtil.addInputLine("4/=^$x.fd'|7&nh|9m");
      CharBuffer.allocate(3210);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("Xe!ALxs~~@*GbhEdCCK");
      charArray0[6] = '\u0000';
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "4/k^$X.Fd'|7&nH|9M");
      jSTerm0.ensureCapacity(3174);
      SystemInUtil.addInputLine("<HU=:;V9LC%pirOP");
      SystemInUtil.addInputLine("]FC*D1e zRGM-^g|,");
      char[] charArray0 = new char[20];
      SystemInUtil.addInputLine("2<@pkteZU=");
      SystemInUtil.addInputLine("q(miAO**IW}bY");
      charArray0[6] = '\u0012';
      jSTerm0.ensureCapacity(42);
      SystemInUtil.addInputLine("4/k^$x.fd'|7&nh|[m");
      SystemInUtil.addInputLine("Line ");
      jSTerm0.add((Object) null);
      SystemInUtil.addInputLine("<HU=:;V9LC%pirOP");
      CharBuffer charBuffer0 = CharBuffer.allocate('=');
      CharBuffer charBuffer1 = charBuffer0.get(charArray0);
      charBuffer1.chars();
      charBuffer0.get();
      CharBuffer charBuffer2 = CharBuffer.allocate(3174);
      charBuffer2.get(charArray0);
      charBuffer0.read(charBuffer2);
      charBuffer0.read(charBuffer2);
      SystemInUtil.addInputLine("<HU=:;V9LC%pirOP");
      jSTerm0.removeElement("<HU=:;V9LC%pirOP");
      charArray0[5] = '\u0000';
      charArray0[6] = '\u0000';
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(HQML");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.quoteChar((-4));
      streamTokenizer0.lowerCaseMode(false);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashStarComments(false);
      streamTokenizer1.ordinaryChar((-1));
      streamTokenizer0.wordChars((-4), (-4));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.whitespaceChars((-4), (-4));
      streamTokenizer1.slashSlashComments(false);
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.whitespaceChars((-4), (-4));
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer1.ordinaryChar((-4));
      streamTokenizer1.wordChars((-4), (-4));
      streamTokenizer1.resetSyntax();
      streamTokenizer1.slashStarComments(false);
      streamTokenizer0.whitespaceChars((-4), (-4));
      streamTokenizer1.resetSyntax();
      streamTokenizer1.slashStarComments(false);
      streamTokenizer0.quoteChar((-4));
      streamTokenizer1.quoteChar((-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer1.whitespaceChars((-4), (-4));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.coma = (-3);
      JSJshopVars.whiteSpace = (-3);
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = (-3);
      JSJshopVars.plus = (-3);
      JSJshopVars.backquote = (-3);
      JSJshopVars.greaterT = (-3);
      jSPredicateForm0.addElement("mXLR'-#XUnm?4+#oZc");
      JSJshopVars.lessT = (-3);
      JSJshopVars.minus = (-3);
      JSJshopVars.rightPar = (-3);
      JSJshopVars.astherisk = (-3);
      JSJshopVars.verticalL = (-3);
      JSJshopVars.exclamation = (-3);
      JSJshopVars.dot = (-3);
      JSJshopVars.whiteSpace = (-3);
      JSJshopVars.dot = (-14);
      JSJshopVars.backquote = (-3);
      JSJshopVars.verticalL = (-3);
      JSJshopVars.whiteSpace = 2;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 2;
      JSJshopVars.exclamation = 2;
      JSJshopVars.rightPar = 2;
      JSJshopVars.whiteSpace = (-3);
      JSJshopVars.dot = (-3);
      jSPredicateForm0.print();
      assertFalse(jSPredicateForm0.isEmpty());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = '6';
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = 44;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.flagLevel = 44;
      JSJshopVars.plus = 44;
      JSJshopVars.backquote = 44;
      JSJshopVars.rightPar = 44;
      JSJshopVars.greaterT = 44;
      JSJshopVars.minus = 44;
      JSJshopVars.rightPar = 44;
      JSJshopVars.astherisk = 44;
      JSJshopVars.verticalL = 44;
      JSJshopVars.greaterT = 44;
      JSJshopVars.leftPar = 44;
      JSJshopVars.minus = 44;
      JSJshopVars.rightPar = (-614);
      JSJshopVars.verticalL = 44;
      JSJshopVars.leftPar = 44;
      JSJshopVars.exclamation = 44;
      JSJshopVars.verticalL = 44;
      JSJshopVars.dot = 44;
      JSJshopVars.whiteSpace = 44;
      JSJshopVars.dot = (-14);
      JSJshopVars.leftBrac = (-614);
      JSJshopVars.leftBrac = 44;
      JSJshopVars.backquote = 44;
      JSJshopVars.astherisk = 44;
      JSJshopVars.greaterT = 44;
      JSJshopVars.verticalL = 44;
      JSJshopVars.whiteSpace = 44;
      JSJshopVars.whiteSpace = JSJshopVars.whiteSpace;
      JSJshopVars.verticalL = 44;
      JSJshopVars.exclamation = 44;
      JSJshopVars.rightPar = 44;
      JSJshopVars.whiteSpace = 44;
      JSJshopVars.dot = 44;
      jSPredicateForm0.print();
      assertTrue(jSPredicateForm0.isEmpty());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.removeElement((Object) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "(wpS";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(wpS");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "E;9d-RXJ55hPO+AY.";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("E;9d-RXJ55hPO+AY.");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(@MmD\"EW?/iJYv8");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
