/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 22:54:11 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.FocusTraversalPolicy;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ComponentListener;
import java.awt.event.WindowFocusListener;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.ByteLookupTable;
import java.awt.image.LookupOp;
import java.awt.image.SinglePixelPackedSampleModel;
import java.awt.image.renderable.ParameterBlock;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JPopupMenu;
import javax.swing.JViewport;
import javax.swing.event.ListDataListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3128868859883003
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.iterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.addElement((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      Integer.min(110, 11);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      stack0.sort(comparator0);
      Integer.getInteger("br!_", 11);
      visualListModel0.moveUpIndex(1);
      visualListModel0.subList(0, 11, true);
      visualListModel0.addElementAt((VisualPageListItem) null, 2346);
      Integer integer1 = new Integer(3542);
      Integer integer2 = new Integer(110);
      assertFalse(integer2.equals((Object)integer0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1145850996688313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer integer4 = new Integer(1);
      Integer integer5 = new Integer(392);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer(1);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer8 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("", 414);
      Integer.getInteger("", integer8);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4837467836283142
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey3;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey4;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey5;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel0.removeElements(0, 1, true);
      Boolean boolean1 = new Boolean(true);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.290664210654739
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R}<");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((int) integerArray0[2]);
      byte[] byteArray0 = new byte[1];
      Integer.min((int) integerArray0[1], 1455);
      byteArray0[0] = (byte) (-1);
      Integer.min((int) integerArray0[2], (-235));
      Integer.divideUnsigned((-3375), 300);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.moveDownIndex((int) integerArray0[3]);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.347135948080881
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger("d", 1533);
      Integer.divideUnsigned(1533, 1533);
      Integer integer4 = new Integer((-2244));
      Integer integer5 = new Integer(1533);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer(1533);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 26;
      visualListModel2.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      visualListModel0.reverseElements(intArray0);
      stack0.remove((Object) visualListModel2);
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.undeleteElements(intArray0);
      try { 
        visualListModel1.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 26
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0035148943012864
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(33);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(33, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = new Boolean(true);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.min(937, 937);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Integer.getInteger("br!_", 1);
      visualListModel0.moveUpIndex(33);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, 1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer integer4 = new Integer(13);
      Integer integer5 = new Integer(392);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer(13);
      int[] intArray0 = new int[1];
      intArray0[0] = 13;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 12
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.139640673586039
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      int int0 = 1;
      Integer integer4 = new Integer(1);
      int int1 = 392;
      Integer integer5 = new Integer(392);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer(1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer8 = IIPResolutionDescriptor.MAX_RESOLUTION;
      int int2 = 414;
      Integer.getInteger("", 414);
      Integer.getInteger("", integer8);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.reverseElements(intArray0);
      vector1.remove((Object) integer3);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      Hashtable<RenderingHints.Key, PdfGraphics2D.HyperLinkKey> hashtable0 = new Hashtable<RenderingHints.Key, PdfGraphics2D.HyperLinkKey>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashtable0.put(sunHints_Key0, pdfGraphics2D_HyperLinkKey0);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock0, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5844317857716814
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "($nR^lv;b");
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel0.removeElements(0, 0, false);
      Boolean boolean1 = new Boolean(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3695150246304464
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger("", 0);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned(751, 1);
      String string0 = "";
      boolean boolean0 = new Boolean(true);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.toUnsignedLong(256);
      int[] intArray0 = new int[1];
      intArray0[0] = (-77);
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -77
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey4;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey5;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      stack0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.getSize();
      int int0 = visualListModel0.getSize();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0473092967465583
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(33);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(33, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = new Boolean(true);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack1.addElement((VisualPageListItem) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stack1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack3 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int int0 = 34;
      visualListModel0.addElementAt((VisualPageListItem) null, 116);
      int[] intArray0 = new int[1];
      intArray0[0] = 34;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 34
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.271958179896748
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = Integer.getInteger("Y0XWkI[(B\"", integerArray0[1]);
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Integer.toUnsignedLong((int) integerArray0[2]);
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("|;mN", (int) integer3);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("", integer6);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.14356224221349
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer integer4 = new Integer(1);
      Integer integer5 = new Integer(392);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer(1);
      int[] intArray0 = new int[1];
      Integer.getInteger("Y0XWkI[(B\"", integer2);
      Integer integer8 = new Integer((-1241));
      visualListModel0.moveUpIndexes(intArray0);
      Integer.toUnsignedLong(615);
      Integer integer9 = JLayeredPane.PALETTE_LAYER;
      Integer integer10 = JLayeredPane.MODAL_LAYER;
      Integer integer11 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("", integer1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte) (-112);
      byteArray0[6] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      CollectionOp collectionOp0 = new CollectionOp("", (ParameterBlock) null, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.502420099185768
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey3;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey4;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey5;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel0.removeElements(0, 0, true);
      stack0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((int) integerArray0[2]);
      integerArray0[5] = integer5;
      Integer.getInteger("%G12i:g", integer1);
      Integer.sum((-101), (-1));
      Integer.toUnsignedString((-398));
      Integer integer6 = new Integer((-1078));
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.getHeight();
      visualListModel0.prependAllElements(stack0);
      jComboBox0.isEditable();
      stack0.remove((Object) integerArray0[4]);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1078);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1077
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1194296749096866
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer4 = new Integer((int) integerArray0[1]);
      int int0 = (-1);
      Integer.getInteger("", (-1));
      Integer integer5 = new Integer((int) integerArray0[2]);
      Integer.getInteger(":2<z2", integerArray0[3]);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      vector0.remove((Object) integer2);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1392921128169875
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R}<");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((int) integerArray0[2]);
      byte[] byteArray0 = new byte[1];
      Integer.min((int) integerArray0[1], 1455);
      byteArray0[0] = (byte) (-1);
      Integer.min((int) integerArray0[2], (-235));
      Integer.divideUnsigned((-3375), 300);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.moveDownIndex((int) integerArray0[3]);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.533847013328795
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.updateElementAt((-1237), (VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, true);
      stack0.add((VisualPageListItem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      visualListModel0.getElements();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-577), "`Z8BG%*UeQjGF~<Hv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      int[] intArray0 = new int[1];
      intArray0[0] = 998;
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 999
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1919747115364854
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = new Integer(1024);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1024;
      visualListModel2.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger(" ", (-1));
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger(" ", integer5);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel3 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel3.addAllElements((Collection<VisualPageListItem>) arrayList0);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      stack0.remove((Object) integer5);
      visualListModel3.moveDownIndexes(intArray0);
      VisualListModel visualListModel5 = new VisualListModel();
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1024
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey3;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey4;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey5;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey4;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      stack0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 26;
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem visualPageListItem1 = null;
      stack0.add((VisualPageListItem) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "lH=bl5", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"lH=bl5\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(341);
      vector0.trimToSize();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements(vector0);
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7343996803791222
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = Integer.getInteger("Y0XWkI[(B\"", integerArray0[1]);
      Integer integer4 = new Integer((int) integerArray0[2]);
      intArray0[0] = (int) integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Integer.toUnsignedLong((int) integerArray0[2]);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("|;mN", (int) integer3);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("", integer6);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 100
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0063211141067643
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.addElement((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      int int0 = 34;
      visualListModel0.addElementAt((VisualPageListItem) null, 34);
      visualListModel0.removeElements(intArray0, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.flush();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6694351084945749
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.addElement((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      int int0 = 34;
      visualListModel0.addElementAt((VisualPageListItem) null, 34);
      visualListModel0.removeElements(intArray0, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 34);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5943081309515277
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey2;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey3;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey4;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey5;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel0.updateElementAt((-1237), (VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, true);
      stack0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[2];
      intArray0[0] = 30;
      intArray0[1] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(30) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.274876229760063
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer1;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer.getInteger("", (int) integerArray0[3]);
      Integer.divideUnsigned((int) integerArray0[1], (int) integerArray0[2]);
      Integer integer4 = new Integer((int) integerArray0[1]);
      Integer integer5 = new Integer((int) integerArray0[3]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer((int) integerArray0[3]);
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      visualListModel0.reverseElements(intArray0);
      vector1.remove((Object) integer6);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = (int) integer5;
      intArray1[1] = (int) integerArray0[1];
      integerArray0[3] = (Integer) 26;
      intArray1[3] = (int) integerArray0[1];
      intArray1[2] = (int) integerArray0[2];
      visualListModel0.undeleteElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform affineTransform0 = new AffineTransform(602.35956F, (-7.148796F), 602.35956F, 602.35956F, 602.35956F, 602.35956F);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (-7.148796F);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 2134.5493F;
      floatArray0[3] = 602.35956F;
      floatArray0[4] = (-7.148796F);
      floatArray0[5] = (-7.148796F);
      floatArray0[6] = 602.35956F;
      affineTransform0.transform(floatArray0, (-462), floatArray0, 605, (-462));
      affineTransform0.setToTranslation((-562.9484), (-7.148796F));
      float[] floatArray1 = new float[7];
      floatArray1[0] = 2134.5493F;
      floatArray1[1] = 602.35956F;
      floatArray1[2] = 602.35956F;
      floatArray1[3] = 2134.5493F;
      floatArray1[4] = 0.0F;
      floatArray1[5] = (-7.148796F);
      floatArray1[6] = (float) 605;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (-462);
      doubleArray0[1] = (double) (-7.148796F);
      doubleArray0[2] = (double) 2134.5493F;
      affineTransform0.transform(floatArray1, 605, doubleArray0, (-462), (-462));
      affineTransform0.rotate((-163.1475554449), 0.0, 2208.103493);
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) (-7.148796F), (double) (-7.148796F));
      affineTransform0.quadrantRotate(2194);
      affineTransform1.quadrantRotate(0, 1306.04769, (-948.9857923313));
      affineTransform0.setToScale(2208.103493, (-562.9484));
      affineTransform0.concatenate(affineTransform1);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 547);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 547
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1094568945406262
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer1;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer.getInteger("", (int) integerArray0[3]);
      Integer.divideUnsigned((int) integerArray0[1], (int) integerArray0[2]);
      Integer integer4 = new Integer((int) integerArray0[1]);
      Integer integer5 = new Integer((int) integerArray0[3]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer((int) integerArray0[3]);
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      visualListModel0.reverseElements(intArray0);
      stack0.remove((Object) integer2);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1194296749096866
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer4 = new Integer((int) integerArray0[1]);
      Integer integer5 = new Integer((int) integerArray0[2]);
      Integer.toUnsignedLong(65535);
      Integer.getInteger(":2<z2", integerArray0[3]);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      stack0.remove((Object) integer2);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      Integer.toUnsignedString((int) integerArray0[2]);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4573980269260938
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "($nR^lv;b");
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.removeElements(0, 0, false);
      Boolean boolean1 = new Boolean(false);
      visualListModel0.clearData();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.removeElementAt(0, true);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-726), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-726)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4246534490791656
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Integer.toUnsignedLong((int) integerArray0[2]);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("|;mN", (int) integerArray0[1]);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("", integer5);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      vector0.remove((Object) locale_Category0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.removeAll(vector0);
      treeSet0.iterator();
      treeSet0.add("^!^+et3");
      vector0.listIterator();
      treeSet0.lower("org.apache.l.g4j.hel'ers.Loader");
      TreeSet<String> treeSet1 = new TreeSet<String>();
      vector0.removeAll(treeSet0);
      visualListModel0.setData(vector0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[0];
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.transferFocusUpCycle();
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, (ComponentListener) null);
      AWTEventMulticaster.add(componentListener1, componentListener1);
      defaultComboBoxModel0.getListDataListeners();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jComboBox1.setVisible(true);
      visualListModel0.removeListDataListener(jComboBox1);
      visualListModel0.subList(0, 0);
      VisualListModel visualListModel1 = new VisualListModel();
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      int int0 = (-2316);
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.492383398790085
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Integer.toUnsignedLong((int) integerArray0[2]);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("|;mN", (int) integerArray0[1]);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("", integer5);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      vector0.remove((Object) locale_Category1);
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) integerArray0[3];
      visualListModel2.rotateAnticlockwiseElements(intArray1);
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 100
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4073250517281037
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integerArray0[1];
      Integer integer3 = Integer.getInteger("Y0XWkI[(B\"", integerArray0[1]);
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer2;
      visualListModel0.moveUpIndexes(intArray0);
      Integer.toUnsignedLong((int) integerArray0[2]);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("|;mN", (int) integer3);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("", integer6);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.633142105687292
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.updateElementAt((-1237), (VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, true);
      stack0.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.Category.values();
      visualListModel0.moveUpIndex(0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel1.elementChanged((VisualPageListItem) null);
      intArray0[0] = 1;
      visualListModel1.removeElements(intArray0, true);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel2.removeElements(1855, (-998), false);
      visualListModel1.addElementAt((VisualPageListItem) null, 0);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 26;
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.replaceAll(unaryOperator0);
      linkedList0.clone();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer.compareUnsigned((int) integerArray0[3], 1812);
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[4] = integer4;
      Integer.toUnsignedString((int) integerArray0[4]);
      Integer integer5 = new Integer((int) integerArray0[2]);
      Integer.toUnsignedString((int) integerArray0[4]);
      integerArray0[5] = integer5;
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer7 = new Integer((-66));
      Integer.compare((int) integerArray0[1], (int) integerArray0[5]);
      Integer integer8 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned((int) integerArray0[5], 1);
      Integer.toUnsignedString((int) integerArray0[4]);
      Integer.max((int) integerArray0[2], (int) integerArray0[1]);
      Integer.getInteger("2147483647", integer8);
      Integer.sum((int) integerArray0[4], 1);
      Integer integer9 = new Integer((int) integerArray0[5]);
      Integer[] integerArray1 = new Integer[2];
      integerArray0[5] = integer7;
      integerArray1[1] = integer3;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.isEditable();
      stack0.remove((Object) integer0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      Stack<Locale.Category> stack0 = new Stack<Locale.Category>();
      Stack<Locale.Category> stack1 = new Stack<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      stack1.add(locale_Category1);
      stack1.add(locale_Category0);
      stack1.pop();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-78);
      byteArray0[2] = (byte) (-76);
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte) (-112);
      JComboBox<Locale.Category> jComboBox0 = new JComboBox<Locale.Category>(stack0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.clearData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      jComboBox0.getComponentPopupMenu();
      jComboBox0.transferFocusUpCycle();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jComboBox0.createVolatileImage(1, 1);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.remove(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>(vector0);
      jComboBox1.addComponentListener((ComponentListener) null);
      jComboBox0.setEditable(true);
      jComboBox0.repaint((long) 1, 4919, 4919, 1042, 2512);
      jComboBox0.getBounds((Rectangle) null);
      visualListModel0.removeListDataListener(jComboBox1);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1, 10000, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JuV]CIg]Tagbk=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-1), 4, false);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex(0);
      visualListModel0.moveDownIndex(0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte)36;
      byteArray0[6] = (byte)36;
      byteArray0[7] = (byte)96;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable((byte)36, byteArray0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints1 = new RenderingHints((RenderingHints.Key) null, sunHints_Key2);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte)114;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Could not instantiate renderer [");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Could not instantiate renderer [");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MUvJU 41f.%km");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JuV]CIg]Tagbk=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-904);
      intArray0[1] = 541;
      intArray0[2] = (-3060);
      intArray0[3] = 0;
      intArray0[4] = 2759;
      intArray0[5] = (-270);
      intArray0[6] = 1;
      intArray0[7] = 116;
      intArray0[8] = 744;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(541, 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      jComboBox0.transferFocusUpCycle();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jComboBox0.setFocusTraversalPolicy((FocusTraversalPolicy) null);
      jComboBox0.createVolatileImage((-726), (-726));
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.remove(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      jComboBox0.addComponentListener((ComponentListener) null);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>();
      jComboBox1.setEditable(false);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.removeAllElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addAllElements((-106), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.506229622995291
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      stack0.removeAllElements();
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet linkedHashSet1 = new LinkedHashSet<RenderingHints.Key>();
      visualListModel0.moveDownIndex(360);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-14));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.1348406386640635
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rv]HdYCZ1_R8\u0005Ok;<");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Could not instantiate renderer [");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Could not instantiate renderer [");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(951);
      assertNull(object0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark((-2789));
      pipedInputStream0.skip((-2789));
      byte byte0 = (byte)18;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2789));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      byte byte0 = (byte)36;
      byte byte1 = (byte)96;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      byteArray0[2] = (byte)36;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)36;
      byteArray0[4] = (byte)36;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_InsertContentAction0);
      boolean boolean0 = false;
      int int0 = 2304;
      // Undeclared exception!
      try { 
        visualListModel0.subList(2304, (-2561));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2304) > toIndex(-2561)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(1582, 1202);
      int[] intArray0 = new int[0];
      ListDataListener[] listDataListenerArray0 = visualListModel0.getListDataListeners();
      assertEquals(0, listDataListenerArray0.length);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_InsertContentAction0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2085), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = new Integer(3177);
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer.toUnsignedString(3177);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max((-2304), 1);
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.max(3177, (-27));
      Integer integer7 = Integer.getInteger("3177", 3177);
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer3;
      Integer.compareUnsigned(245, (int) integerArray0[0]);
      integerArray0[1] = integer7;
      integerArray0[0] = integer6;
      integerArray0[3] = integerArray0[1];
      integerArray0[0] = integer7;
      Integer integer8 = new Integer(629);
      Integer.getInteger("java.lang.String", integer8);
      integerArray0[4] = integer7;
      integerArray0[8] = integer0;
      int int0 = Integer.remainderUnsigned((int) integerArray0[1], 3177);
      int[] intArray0 = new int[0];
      Integer.getInteger("3177");
      Integer.max((int) integerArray0[0], (int) integerArray0[0]);
      Integer integer9 = new Integer((int) integerArray0[3]);
      Integer.toUnsignedString((int) integerArray0[3]);
      Integer.compare((int) integerArray0[8], (int) integerArray0[3]);
      Integer.getInteger("EH,B_?DCJf~PTh=", (int) integerArray0[0]);
      visualListModel0.reverseElements(intArray0);
      Integer integer10 = new Integer((int) integerArray0[1]);
      Integer integer11 = new Integer((int) integerArray0[4]);
      assertFalse(integer11.equals((Object)int0));
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream1.mark((-2789));
      pipedInputStream1.skip((-2789));
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      byte byte0 = (byte)18;
      byte byte1 = (byte)1;
      pipedOutputStream0.flush();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      // Undeclared exception!
      try { 
        pipedOutputStream1.write(byteArray0, (int) (byte)18, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex(4);
      visualListModel1.moveDownIndex(4);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)68;
      byteArray0[0] = (byte)93;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)48;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((byte) (-95), byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      linkedList0.clone();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getListDataListeners();
      int int0 = 2927;
      int int1 = (-1592);
      int[] intArray1 = new int[6];
      intArray1[0] = (-372);
      intArray1[1] = (-1592);
      intArray1[2] = 2927;
      intArray1[3] = (-1592);
      intArray1[4] = 2824;
      intArray1[5] = (-372);
      SinglePixelPackedSampleModel singlePixelPackedSampleModel0 = null;
      try {
        singlePixelPackedSampleModel0 = new SinglePixelPackedSampleModel((-372), 2927, (-1592), intArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (2927) and height (-1592) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform affineTransform0 = new AffineTransform(602.35956F, (-7.148796F), 602.35956F, 602.35956F, 602.35956F, 602.35956F);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (-7.148796F);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 2134.5493F;
      floatArray0[3] = 602.35956F;
      floatArray0[4] = (-7.148796F);
      floatArray0[5] = (-7.148796F);
      floatArray0[6] = 602.35956F;
      affineTransform0.transform(floatArray0, (-462), floatArray0, 605, (-462));
      affineTransform0.setToTranslation((-562.9484), (-7.148796F));
      affineTransform0.rotate((-163.1475554449), 0.0, 2208.103493);
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) (-7.148796F), (double) (-7.148796F));
      affineTransform0.quadrantRotate(2194);
      affineTransform1.quadrantRotate(0, 1306.04769, (-948.9857923313));
      affineTransform0.setToScale(2208.103493, (-562.9484));
      affineTransform0.concatenate(affineTransform1);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 547);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 547
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      jComboBox0.getComponentPopupMenu();
      jComboBox0.transferFocusUpCycle();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jComboBox0.createVolatileImage((-742), Integer.MAX_VALUE);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener2 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener1);
      AWTEventMulticaster.remove(windowFocusListener2, windowFocusListener2);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener2);
      jComboBox0.addComponentListener((ComponentListener) null);
      jComboBox0.setEditable(true);
      jComboBox0.repaint(1107L, Integer.MAX_VALUE, (-1437), (-1437), (-277));
      jComboBox0.getBounds((Rectangle) null);
      visualListModel0.removeListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1975, (-742), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1975) > toIndex(-742)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      jComboBox0.getComponentPopupMenu();
      jComboBox0.transferFocusUpCycle();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jComboBox0.createVolatileImage(1417, 0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.remove(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      jComboBox0.addComponentListener((ComponentListener) null);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>();
      jComboBox0.setEditable(false);
      jComboBox0.repaint((long) 0, 0, 0, 158, 194);
      JComboBox<DefaultTableModel> jComboBox2 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      jComboBox2.getBounds((Rectangle) null);
      visualListModel0.removeListDataListener(jComboBox2);
      // Undeclared exception!
      try { 
        visualListModel0.subList(4, (-1281), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(4) > toIndex(-1281)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JuV]CIg]Tagbk=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 1353, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.listIterator();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements(vector0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      int int0 = (-3033);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      jComboBox0.addComponentListener((ComponentListener) null);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>();
      OutputStream outputStream0 = null;
      String string0 = "";
      // Undeclared exception!
      try { 
        Charset.forName("");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      byte byte0 = (byte)18;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)18;
      byte byte1 = (byte)103;
      byteArray0[4] = (byte)103;
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.flush();
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      jComboBox0.createVolatileImage((-1021), 1537);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      jComboBox0.addComponentListener((ComponentListener) null);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>();
      jComboBox0.setEditable(true);
      jComboBox1.repaint((long) (-316), (-316), (-1021), 65535, 23);
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      jComboBox1.getBounds(rectangle0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-2663), 54, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.getComponentPopupMenu();
      jComboBox0.transferFocusUpCycle();
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, (ComponentListener) null);
      jComboBox0.createVolatileImage((-1437), (-1437));
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener1, componentListener1);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      jComboBox0.addComponentListener(aWTEventMulticaster0);
      JComboBox<DefaultTableModel> jComboBox1 = new JComboBox<DefaultTableModel>();
      jComboBox1.setEditable(false);
      jComboBox1.repaint((long) 0, (-316), (-1437), 0, (-316));
      jComboBox1.getBounds((Rectangle) null);
      visualListModel0.removeListDataListener(jComboBox1);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.appendAllElements(priorityQueue0);
      int[] intArray0 = new int[0];
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_InsertContentAction0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2085), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2085
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JuV]CIg]Tagbk=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2027, 1353, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_eAF#8\".Ha`.5t");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(9999, (-300), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>((SortedSet<? extends VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(4613, (Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 719;
      PipedInputStream pipedInputStream0 = new PipedInputStream(719);
      pipedInputStream0.mark(719);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
