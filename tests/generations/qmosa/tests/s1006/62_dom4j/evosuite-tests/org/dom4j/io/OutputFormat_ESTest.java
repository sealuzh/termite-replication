/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 19:32:07 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.090529997275233
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setPadText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.getEncoding();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(false);
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setXHTML(true);
      outputFormat1.setIndent("  ");
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "  ";
      stringArray0[2] = null;
      stringArray0[3] = "  ";
      stringArray0[4] = null;
      stringArray0[5] = "L";
      outputFormat0.setNewlines(true);
      stringArray0[6] = "";
      stringArray0[7] = "  ";
      stringArray0[8] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5026));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5026
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.519389814544314
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false, "RG$6\"ThL@g$1CP");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("=mF.&qDLU[-]");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("=mF.&qDLU[-]");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "=mF.&qDLU[-]";
      stringArray0[2] = "i";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("=mF.&qDLU[-]", outputFormat0.getLineSeparator());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3644646265930107
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-xhtml-skpreecNtion");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-expandEmpty]Ws~");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setLineSeparator(",U[fwsclc3y^2cxn");
      outputFormat0.setLineSeparator("-trimText");
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "-xhtml-skpreecNtion";
      stringArray0[2] = "-uppressDeclarton";
      stringArray0[3] = "-expandEmpty";
      stringArray0[4] = "lGp%";
      stringArray0[5] = "LWV7rLX9[Z%/";
      stringArray0[6] = "Mm`Md8[q6";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("-expandEmpty");
      assertEquals("-expandEmpty", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "qrdY0~OFIe-";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-nwline";
      stringArray0[1] = "qrdY0~OFIe-";
      stringArray0[2] = "-nwline";
      stringArray0[3] = "-nwline";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      int int0 = 2147483645;
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7670970558919157
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("-encoding");
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1019);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-encoding";
      stringArray1[1] = "-encoding";
      stringArray1[2] = "-encoding";
      stringArray1[3] = "-supresDecNtion";
      stringArray1[4] = "-pdText";
      stringArray1[5] = "-pdText";
      stringArray1[6] = "-encoding";
      stringArray1[7] = "-supresDecNtion";
      outputFormat0.parseOptions(stringArray1, 243);
      outputFormat0.parseOptions(stringArray1, 1);
      String[] stringArray2 = new String[1];
      stringArray2[0] = "-encoding";
      outputFormat0.parseOptions(stringArray2, 1019);
      outputFormat0.parseOptions(stringArray1, 243);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray2, (-1998));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1998
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3022653373287878
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-pdText";
      stringArray0[1] = "/<&6wuv?BH";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-pdText";
      stringArray0[4] = "-pdText";
      stringArray0[5] = "-pdText";
      outputFormat0.parseOptions(stringArray0, 4391);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-trimText";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "-indent";
      stringArray1[3] = "-pdText";
      outputFormat0.parseOptions(stringArray1, 2);
      int int0 = 1;
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray1, 3203);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1846804016));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1846804016
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.561909893572506
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("-pdText", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-indentSize";
      stringArray0[3] = "qrdY0~OFIe-";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "qrdY0~OFIe-";
      stringArray0[4] = "-pdText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.670955110805818
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{@sDvCJq");
      OutputFormat outputFormat1 = new OutputFormat("12HO2{@sDvCJq");
      outputFormat1.setIndentSize(0);
      String[] stringArray0 = new String[2];
      outputFormat0.setLineSeparator((String) null);
      outputFormat1.setLineSeparator((String) null);
      stringArray0[0] = "12HO2{@sDvCJq";
      stringArray0[1] = "12HO2{@sDvCJq";
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "12HO2{@sDvCJq";
      stringArray1[1] = null;
      stringArray1[2] = "12HO2{@sDvCJq";
      stringArray1[0] = "12HO2{@sDvCJq";
      stringArray1[4] = stringArray1[1];
      stringArray1[5] = "12HO2{@sDvCJq";
      stringArray1[6] = null;
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat1.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.parseOptions(stringArray1, 580);
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("", outputFormat1.getIndent());
      
      outputFormat1.setIndent(string0);
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "-expandEmpty";
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-expandEmpty";
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-padText";
      stringArray0[1] = "qrdY0~OFIe-";
      stringArray0[3] = "-padText";
      stringArray0[3] = "-padText";
      OutputFormat outputFormat0 = new OutputFormat("-padText", false, "SkpJr13%P*|2P3|d");
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2090));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2090
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-supreecNtion", true, "-supreecNtion");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-supreecNtion");
      outputFormat0.setNewLineAfterNTags((-3749));
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-supreecNtion";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-supreecNtion");
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.setLineSeparator("-[wuppressDeclarton");
      outputFormat0.getNewLineAfterNTags();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(39, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0115830459761472
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setNewLineAfterNTags((-220));
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("A_I");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("A_I");
      outputFormat1.setNewlines(false);
      outputFormat0.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('.');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (.)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1639470503006444
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags(2);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndentSize(2);
      outputFormat0.setLineSeparator(",-");
      outputFormat0.getIndent();
      outputFormat2.getAttributeQuoteCharacter();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setNewLineAfterDeclaration(true);
      outputFormat3.setIndent(true);
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat4.setIndentSize(29);
      outputFormat4.setLineSeparator("");
      assertEquals("                             ", outputFormat4.getIndent());
      
      OutputFormat outputFormat5 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat5.getIndent());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "favXr)+\"";
      stringArray0[1] = "-indent";
      stringArray0[2] = "favXr)+\"";
      stringArray0[3] = "favXr)+\"";
      stringArray0[4] = "favXr)+\"";
      outputFormat0.setXHTML(true);
      stringArray0[5] = "favXr)+\"";
      stringArray0[6] = "-xhtml12HO2{";
      outputFormat0.parseOptions(stringArray0, 2865);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("favXr)+\"");
      OutputFormat outputFormat1 = new OutputFormat("q", false);
      outputFormat1.setIndent("Z2?L]");
      assertEquals("Z2?L]", outputFormat1.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8745639395489633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-supreecNtion", true, "-supreecNtion");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-newlines");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-supreecNtion");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setLineSeparator("qrdY0~");
      outputFormat0.setLineSeparator("rNTH;-!%b|k@&7I");
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("1\"gUb>_0DtIw");
      assertEquals("1\"gUb>_0DtIw", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9804054941535139
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "-trimText";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      int int0 = 1;
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-trimText";
      outputFormat0.parseOptions(stringArray1, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("H$Fm?&h@)uLhs", false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\u001F');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\u001F)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty-pdText");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("-expandEmpty-pdText", outputFormat0.getIndent());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[4] = "-trimText";
      stringArray0[5] = stringArray0[1];
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("");
      outputFormat0.setIndent("-expandEmpty-pdText");
      outputFormat0.getEncoding();
      assertEquals("-expandEmpty-pdText", outputFormat0.getIndent());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.966442007031004
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("#g>okN+F^k?H83o{E", false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("#g>okN+F^k?H83o{E");
      outputFormat0.setXHTML(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(2);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isXHTML();
      outputFormat0.setPadText(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndent(false);
      outputFormat0.isTrimText();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("");
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-nwline";
      stringArray0[1] = "qrdY0~OFIe-";
      stringArray0[3] = "-nwline";
      stringArray0[3] = "-nwline";
      OutputFormat outputFormat0 = new OutputFormat("-nwline", false, "SkpJr13%P*|2P3|d");
      outputFormat0.parseOptions(stringArray0, 0);
      int int1 = (-2090);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2090));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2090
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.7017630849882761
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-omitE6ncoding";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 628);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", false);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
      assertFalse(boolean0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitE6ncoding");
      outputFormat0.setIndentSize((-5125));
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-omitE6ncoding";
      stringArray0[1] = "-omitE6ncoding";
      stringArray0[3] = "-omitE6ncoding";
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-supreecNtion", true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.getNewLineAfterNTags();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      outputFormat0.getEncoding();
      String string0 = outputFormat0.getEncoding();
      assertNotNull(string0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-supreecNtion", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-expandEmpty-trimTex";
      stringArray0[2] = "-expandEmpty-trimTex";
      stringArray0[3] = "";
      stringArray0[6] = "";
      stringArray0[7] = "FY,'dnM;(og\"4cMT";
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      String string0 = outputFormat0.getEncoding();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-newlines", outputFormat0.getIndent());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[2] = "Z2?L]\n][H+VnbL";
      stringArray0[3] = "-expandEmtytrhmTex`t";
      stringArray0[4] = "Z2?L]\n][H+VnbL";
      stringArray0[5] = "-expandEmtyt";
      stringArray0[6] = "Z2?L]\n][H+VnbL";
      stringArray0[7] = "-expandEmtytrhmTex`t";
      stringArray0[8] = "-triemext";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "Z2?L]\n][H+VnbL";
      stringArray1[1] = "H6=f>zB$H^t1oN[:";
      stringArray1[2] = "-expandEmtytrhmTex`t";
      stringArray1[3] = "-expandEmtyt";
      stringArray1[4] = "-expandEmtyt";
      stringArray1[5] = "-expandEmtyt";
      OutputFormat outputFormat0 = new OutputFormat("-nwlin");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('W');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (W)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4575530066893423
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.isTrimText();
      outputFormat0.getIndent();
      String[] stringArray0 = new String[8];
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setSuppressDeclaration(false);
      stringArray0[0] = null;
      stringArray0[1] = null;
      OutputFormat.createCompactFormat();
      stringArray0[2] = null;
      stringArray0[3] = null;
      outputFormat0.setIndent(false);
      stringArray0[6] = null;
      stringArray0[7] = null;
      outputFormat0.setIndent("M|$w`L-");
      outputFormat0.setIndentSize(1586);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setPadText(true);
      outputFormat0.getLineSeparator();
      outputFormat0.isOmitEncoding();
      outputFormat0.isTrimText();
      outputFormat1.setTrimText(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.isOmitEncoding();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.parseOptions(stringArray0, 1586);
      outputFormat0.setIndent("-omitEncoding");
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      outputFormat0.setNewLineAfterNTags(5);
      outputFormat0.setLineSeparator("qrdY0~OFIe-");
      outputFormat0.setEncoding("cg8rKKG|c'h)gL ns4");
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.isNewlines();
      outputFormat0.setSuppressDeclaration(true);
      assertEquals("qrdY0~OFIe-", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setIndent("-indent");
      assertEquals("-indent", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.574729047527649
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, "T");
      outputFormat0.setIndent("");
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndentSize(879);
      outputFormat0.setIndentSize((-1079));
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator("T");
      outputFormat0.setIndent("T");
      outputFormat0.getEncoding();
      assertEquals("T", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true);
      outputFormat0.setNewLineAfterNTags(0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("-newlines", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, "T");
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("YR.5{j3Mb5^");
      assertEquals("YR.5{j3Mb5^", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("T", false);
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[3];
      OutputFormat outputFormat0 = new OutputFormat("ZDx");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("Dw&o");
      assertEquals("Dw&o", outputFormat0.getIndent());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.093683949571705
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(15);
      outputFormat1.isPadText();
      outputFormat1.setIndentSize(15);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setSuppressDeclaration(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setXHTML(false);
      outputFormat2.setTrimText(false);
      outputFormat2.setIndent("+7f");
      assertEquals("+7f", outputFormat2.getIndent());
      
      outputFormat2.setIndentSize(889);
      outputFormat2.getIndent();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Di");
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat4.isPadText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.isNewlines();
      String[] stringArray0 = new String[4];
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0204142811723194
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-206));
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent("-encoding");
      assertEquals("-encoding", outputFormat0.getIndent());
      
      outputFormat0.setIndent("-pdText");
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8732155480372605
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.isTrimText();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize('c');
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize('c');
      outputFormat0.setIndent(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isPadText();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isXHTML();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Q=TWS";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-expandEmptyzYk?5i8DUclf}lKk";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.363279396743392
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setOmitEncoding(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setEncoding(";{O}C&a?ll5`/NB");
      outputFormat1.setXHTML(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getEncoding();
      outputFormat1.getEncoding();
      outputFormat1.setIndent((String) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2897));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2897
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.953979596562279
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-supresDecNtion", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-supresDecNtion";
      outputFormat0.parseOptions(stringArray0, 975);
      stringArray0[1] = "-supresDecNtion";
      stringArray0[2] = "-xhtml12HO2{@sDvCJq";
      stringArray0[3] = "-xhtml12HO2{@sDvCJq";
      stringArray0[4] = "-supresDecNtion";
      outputFormat0.parseOptions(stringArray0, 975);
      stringArray0[5] = "h";
      outputFormat0.parseOptions(stringArray0, 1242);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 4);
      String[] stringArray1 = new String[1];
      outputFormat0.parseOptions(stringArray1, 975);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray1, 2);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray1, 975);
      outputFormat0.parseOptions(stringArray0, 4);
      outputFormat0.parseOptions(stringArray1, 2);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 4);
      outputFormat0.parseOptions(stringArray1, 975);
      outputFormat0.parseOptions(stringArray0, 975);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1006));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1006
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Y?");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("Y?");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("Y?");
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator("@V7'ty~3%Bl[,}a");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      assertEquals("@V7'ty~3%Bl[,}a", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-nwline", false, "SkpJr13%P*|2P3|d");
      outputFormat0.setEncoding("-xhtml-xhtml2H2{@sDvCJq");
      assertEquals("-xhtml-xhtml2H2{@sDvCJq", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("6[5*35c'H~JDwb{{d9", false, "3");
      String string0 = outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("6[5*35c'H~JDwb{{d9", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("3", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[6];
      OutputFormat outputFormat1 = new OutputFormat(stringArray0[0], true);
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtml-expandEmtyt";
      stringArray0[1] = "Z%&";
      stringArray0[2] = "-expandEmpty-uppressDeclarton";
      stringArray0[3] = "-xhtmlnO]R:TkODR{";
      stringArray0[4] = "-padText";
      stringArray0[5] = "h4:9vS";
      stringArray0[6] = "7q*{<:qzN^8i&?HLQ";
      stringArray0[7] = "gBTu&@MMC~He";
      stringArray0[8] = "-expandEmpty-uppressDeclarton";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9370977693527458
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-supre:DecNtion", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 950);
      stringArray0[1] = "-supre:DecNtion";
      stringArray0[2] = "rM]~:TkODRjU{";
      stringArray0[3] = "_?P</[7SSi";
      stringArray0[4] = "-supre:DecNtion";
      outputFormat0.parseOptions(stringArray0, 950);
      stringArray0[5] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 3378);
      outputFormat0.parseOptions(stringArray0, 950);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1501));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1501
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
