/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 20:49:50 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.NamespaceStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.DTDHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5013436866732794
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      DispatchHandler dispatchHandler1 = new DispatchHandler();
      dispatchHandler0.setDefaultHandler(dispatchHandler1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte) (-37);
      byteArray0[6] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader0.resetHandlers();
      sAXReader0.getDispatchHandler();
      sAXReader0.setEncoding("x=KIEc");
      sAXReader0.removeHandler("x=KIEc");
      File file0 = MockFile.createTempFile("x=KIEc", "x=KIEc");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"X=KIEC\". Nested exception: Invalid encoding name \"X=KIEC\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.248805199377267
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SAXReader sAXReader1 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader1.setEntityResolver(defaultHandler2_0);
      InputSource inputSource0 = new InputSource(pipedInputStream0);
      try { 
        sAXReader1.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.52095227791089
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setEncoding("Z^<+QV8A}\"ogG+[>");
      sAXReader0.setDefaultHandler((ElementHandler) null);
      try { 
        sAXReader0.read((InputStream) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4954797161610096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)92;
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0);
      sAXReader1.removeHandler("PEtuL7BTy?s{'Du. ");
      SAXReader sAXReader2 = new SAXReader(defaultDocumentFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXContentHandler sAXContentHandler0 = sAXReader2.createContentHandler(parserAdapter0);
      sAXReader1.setErrorHandler(sAXContentHandler0);
      StringReader stringReader0 = new StringReader("//tmp/|EfZ}3:_(-F<r[\"C1?;w)1fK");
      try { 
        sAXReader1.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.26935525782757
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      String string0 = "//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest";
      xMLFilterImpl0.getEntityResolver();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      xMLFilterImpl0.setDocumentLocator(locatorImpl0);
      sAXReader0.setMergeAdjacentText(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte) (-28);
      byteArray0[5] = (byte) (-67);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader0.createDefaultEntityResolver("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.isMergeAdjacentText();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      sAXReader0.isStripWhitespaceText();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader1 = new SAXReader(documentFactory0, false);
      StringReader stringReader0 = new StringReader("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest");
      String string1 = ",{c";
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0, ",{c");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "h&zA~oo[P1b2y";
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      sAXReader0.setErrorHandler(sAXContentHandler0);
      sAXReader0.getErrorHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      // Undeclared exception!
      try { 
        xMLFilterImpl0.parse("8($iz>BIcP0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No parent for filter
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      File file0 = MockFile.createTempFile("?;w)1fK", "http://xml.org/sax/properties/declaration-handler");
      MockFile mockFile0 = new MockFile(file0, "http://xml.org/sax/properties/declaration-handler");
      mockFile0.toURI();
      MockFile.createTempFile("http://xml.org/sax/properties/declaration-handler", "?;w)1fK");
      mockFile0.createNewFile();
      mockFile0.toURL();
      mockFile0.renameTo(file0);
      MockFile mockFile1 = new MockFile(mockFile0, "//tmp/e6\"s?e&|05P");
      MockFile.createTempFile("//tmp/home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?0/home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?0/home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?");
      mockFile1.toURI();
      mockFile1.setExecutable(true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, (byte)92);
      try { 
        sAXReader0.setProperty("http://xml.org/sax/properties/declaration-handler", pushbackInputStream0);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // The value specified for property 'http://xml.org/sax/properties/declaration-handler' cannot be casted to org.xml.sax.ext.DeclHandler.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3917728512041743
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      StringReader stringReader0 = new StringReader("Cu' ne0%pD0!mJ");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4543773953841663
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.createXMLReader();
      try { 
        sAXReader0.read((InputStream) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.405936544833819
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("k9R6`=f].JNFQ!>i");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEncoding("k9R6`=f].JNFQ!>i");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      String string0 = "//tmp/home/ubuntu/termite/projects/62_dom4j/ to a Pattern/Exception cannot be its own cause/ to a Pattern0Exception cannot be its own cause0X^[GeCBOm+}_\\Me(";
      QName.get("//tmp/home/ubuntu/termite/projects/62_dom4j/ to a Pattern/Exception cannot be its own cause/ to a Pattern0Exception cannot be its own cause0X^[GeCBOm+}_Me(");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.setEntityResolver(xMLFilterImpl0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      sAXReader0.setXMLReader(parserAdapter0);
      String string1 = "C87RJU";
      try { 
        sAXReader0.read("C87RJU");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Feature: http://xml.org/sax/features/namespace-prefixes Nested exception: Feature: http://xml.org/sax/features/namespace-prefixes
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      String string0 = "|EfZ}3:_(-F<r[\"C";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/X^[GeCBOm+}_\\Me(0?;w)1fK");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = null;
      MockFile mockFile0 = new MockFile((File) null, "X^[GeCBOm+}_Me(");
      String string1 = "org.jaxen.function.RoundFunction";
      MockFile.createTempFile("X^[GeCBOm+}_Me(", "*'{RgS[S0S*,");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9955731408327777
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("|Y>F\"s.sd)x'vH");
      sAXReader_SAXEntityResolver0.resolveEntity("|Y>F\"s.sd)x'vH", "|Y>F\"s.sd)x'vH");
      sAXReader_SAXEntityResolver0.resolveEntity("org.dom4j.dom.DOMProcessingInstruction", "(");
      sAXReader_SAXEntityResolver0.resolveEntity("{(/DK", "");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      defaultDocumentFactory0.createEntity("#Ts`eOUm:z*", "#Ts`eOUm:z*");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C9rBaQ6gcrE%ZL");
      sAXReader0.isValidating();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try { 
        sAXReader0.configureReader(xMLFilterImpl1, defaultHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@54a97bc6 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-66);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2487663399462696
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "|Y>F\"s.sd)x'vH";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("|Y>F\"s.sd)x'vH");
      String string1 = "F{(DK";
      sAXReader_SAXEntityResolver0.resolveEntity("F{(DK", "org.dom4j.dom.DOMProcessingInstruction");
      String string2 = "";
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("F{(DK", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/62_dom4j");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte) (-127);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      byteArray0[2] = (byte) (-127);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SAXReader sAXReader0 = new SAXReader(false);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.278600407264681
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      String string0 = "Almc";
      InputSource inputSource0 = new InputSource();
      StringReader stringReader0 = new StringReader("q>4TT(dbDO");
      inputSource0.setCharacterStream(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createQName("", "");
      defaultDocumentFactory0.createText("");
      defaultDocumentFactory0.createProcessingInstruction("http://xml.org/sax/features/validation", "");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.setFeature("http://xml.org/sax/features/validation", false);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3497427651978415
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      StringReader stringReader0 = new StringReader("(swvYfTTP{ 3");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      try { 
        sAXReader0.read((Reader) stringReader0, "DbzdV");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/DbzdV : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.05477796069814
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0http:/xml.org/sax/features/namespaces");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader_SAXEntityResolver0.resolveEntity("", ":5c?hu~8U/|2|1");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("Rar ableI");
      sAXReader_SAXEntityResolver1.resolveEntity("//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0http:/xml.org/sax/features/namespaces", "~");
      sAXReader_SAXEntityResolver1.resolveEntity("org.dom4j.jaxb.JAXBReader$PruningElementHandler", "}(D^");
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.createXMLReader();
      try { 
        sAXReader0.setXMLReaderClassName("oI>\"`");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class oI>\"` not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      xMLFilterImpl0.getEntityResolver();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      xMLFilterImpl0.setDocumentLocator(locatorImpl0);
      sAXReader0.setMergeAdjacentText(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXReader0.createDefaultEntityResolver("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.isMergeAdjacentText();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      sAXReader0.isStripWhitespaceText();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-6);
      byteArray0[5] = (byte)21;
      byteArray0[6] = (byte)75;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      try { 
        sAXReader0.setXMLReaderClassName("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.369978708581614
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createElement("N6VK=`g M]l`w'[Q!L)", "H[EsmY_");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("N6VK=`g M]l`w'[Q!L)");
      sAXReader_SAXEntityResolver0.resolveEntity("y6>^N/@j0x$FI$,k#D{", "http://xml.org/sax/features/use-locator2");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLReader0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLReader0);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, true);
      try { 
        sAXReader0.setFeature("http://xml.org/sax/features/use-locator2", false);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // Feature 'http://xml.org/sax/features/use-locator2' is read only.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      xMLFilterImpl0.endPrefixMapping("//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0http:/xml.org/sax/features/namespaces");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0http:/xml.org/sax/features/namespaces");
      defaultDocumentFactory0.createProcessingInstruction((String) null, "[lnVfsk Pd!`h");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.isStringInternEnabled();
      sAXReader0.isValidating();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[6] = (byte)92;
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file0.toURI();
      file0.setReadable(false);
      file0.setReadOnly();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file1.deleteOnExit();
      file0.toURI();
      file0.getCanonicalFile();
      file1.setExecutable(true, true);
      file0.renameTo(file1);
      MockFile mockFile0 = new MockFile(file0, "");
      File file2 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file2.toURI();
      StringReader stringReader0 = new StringReader("?;w)1fK");
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.366023184719631
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl1.processingInstruction("+${o$`", "contains");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.setDTDHandler((DTDHandler) null);
      xMLFilterImpl6.getParent();
      xMLFilterImpl5.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl2.setDTDHandler(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      xMLFilterImpl1.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.setContentHandler(xMLFilterImpl13);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl18);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl11);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'n';
      charArray0[2] = '';
      charArray0[3] = '';
      charArray0[4] = '';
      charArray0[5] = 'g';
      charArray0[6] = 'g';
      xMLFilterImpl6.characters(charArray0, 2969, 8417);
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl5);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/?;w)1fK1?;w)1fK");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte)92;
      File file0 = MockFile.createTempFile(" : ", "?;w)1fK");
      file0.toURI();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file1.delete();
      file1.createNewFile();
      file1.toURL();
      file0.renameTo(file1);
      file0.delete();
      MockFile mockFile0 = new MockFile(file0, "?;w)1fK");
      File file2 = MockFile.createTempFile(" : ", "?;w)1fK");
      MockFile.createTempFile("?;w)1fK", "?;w)1fK", (File) mockFile0);
      file2.toURI();
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3087432950398514
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      NamespaceStack namespaceStack0 = new NamespaceStack(defaultDocumentFactory0);
      namespaceStack0.getNamespaceForPrefix("{ybTi]^;`+ksFz");
      QName qName0 = defaultDocumentFactory0.createQName("{ybTi]^;`+ksFz", (Namespace) null);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getErrorHandler();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      try { 
        sAXReader0.read("{ybTi]^;`+ksFz");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: {ybTi]^;`+ksFz Nested exception: no protocol: {ybTi]^;`+ksFz
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      InputSource inputSource0 = new InputSource();
      String string0 = "";
      sAXReader_SAXEntityResolver0.resolveEntity("|Y>F\"s.sd)x'vH", "|Y>F\"s.sd)x'vH");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setStringInternEnabled(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.isIncludeExternalDTDDeclarations();
      try { 
        sAXReader0.setXMLReaderClassName("||y*i82CEY0;a");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class ||y*i82CEY0;a not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/X^[GeCBOm+}_\\Me(0?;w)1fK");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)74;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file0 = MockFile.createTempFile("X^[GeCBOm+}_Me(", "?;w)1fK");
      MockFile mockFile0 = new MockFile(" ~.yR4C\"l:", " [DocumentType: ");
      file0.renameTo(mockFile0);
      file0.toURI();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(false);
      sAXReader1.setIncludeInternalDTDDeclarations(true);
      try { 
        sAXReader0.setXMLReaderClassName("");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[6] = (byte)92;
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file0.toURI();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file0.mkdir();
      file1.createNewFile();
      file1.getCanonicalFile();
      file1.toURL();
      file0.renameTo(file1);
      MockFile mockFile0 = new MockFile(file0, "?;w)1fK");
      File file2 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file2.toURI();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]&kZp6mj");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile1 = new MockFile("?;w)1fK");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.391546504356525
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("|Y>F\"s.sd)x'vH");
      sAXReader_SAXEntityResolver0.resolveEntity("|Y>F\"s.sd)x'vH", "|Y>F\"s.sd)x'vH");
      sAXReader_SAXEntityResolver0.resolveEntity("org.dom4j.dom.DOMProcessingInstruction", "(");
      sAXReader_SAXEntityResolver0.resolveEntity("org.dom4j.dom.DOMProcessingInstruction", "j");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      DefaultDocument defaultDocument0 = new DefaultDocument();
      sAXReader0.getDocumentFactory();
      try { 
        sAXReader0.read("//home/ubuntu/termite/projects/62_dom4j/N6VK=`g M]l`w'[Q!L)/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0d{QD-n[0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //home/ubuntu/termite/projects/62_dom4j/N6VK=`g M]l`w'[Q!L)/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0d{QD-n[0 Nested exception: no protocol: //home/ubuntu/termite/projects/62_dom4j/N6VK=`g M]l`w'[Q!L)/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0d{QD-n[0
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl5.getParent();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl5);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl8.endPrefixMapping("//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = '\'';
      charArray0[2] = 'm';
      charArray0[3] = '!';
      charArray0[4] = 'b';
      charArray0[5] = '>';
      charArray0[6] = 'P';
      charArray0[7] = 'N';
      xMLFilterImpl7.characters(charArray0, (-578), (-578));
      xMLFilterImpl8.getDTDHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      xMLFilterImpl7.startElement("//tmp/X^[GeCBOm+}_Me(1.tmp", "//tmp/X^[GeCBOm+}_Me(1.tmp", "U|*W{(PrmslC.{2", attributes2Impl0);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl7);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, xMLFilterImpl14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      MockURL.getHttpExample();
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      try { 
        MockURL.URL("//tmp/T.[Pp0T.[Pp", "//tmp/qMwN/$|NT1?;w)1fK", (-1), "org.dom4j.tree.AbstractComment");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: //tmp/t.[pp0t.[pp
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setMergeAdjacentText(true);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader((DocumentFactory) null);
      SAXReader sAXReader2 = new SAXReader(defaultDocumentFactory0, false);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      sAXReader2.setEntityResolver(xMLFilterImpl1);
      sAXReader2.getEntityResolver();
      SAXParseException sAXParseException0 = new SAXParseException("L", "/", "", 5, 5);
      SAXReader sAXReader3 = new SAXReader(xMLFilterImpl0, false);
      try { 
        sAXReader3.setProperty((String) null, (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: null
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getEntityResolver();
      sAXReader0.setEntityResolver((EntityResolver) null);
      try { 
        sAXReader0.read((InputStream) null, "org.jaxen.dom4j.Dom4jXPath");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/org.jaxen.dom4j.Dom4jXPath (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/org.jaxen.dom4j.Dom4jXPath (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      InputSource inputSource0 = new InputSource((String) null);
      InputSource inputSource1 = new InputSource();
      sAXReader_SAXEntityResolver0.resolveEntity("{(DK", "");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(47);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      String[] stringArray0 = new String[0];
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack(stringArray0, sAXModifyElementHandler0, 19);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid path of length: 0 it must be greater than 2
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("org.dom4j.dom.DOMProcessingInstruction", "(");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "amp");
      sAXReader_SAXEntityResolver0.resolveEntity("{(/DK", "");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      StringReader stringReader0 = new StringReader("{(/DK");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.setXMLReader(parserAdapter0);
      SAXReader sAXReader1 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      sAXReader1.setErrorHandler(xMLFilterImpl5);
      try { 
        sAXReader0.setXMLReaderClassName("|Y>F\"s.sd)x'vH");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class |Y>F\"s.sd)x'vH not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      String string0 = "@4?P_{x2zg,w$<{lu_";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "@4?P_{x2zg,w$<{lu_");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      String string1 = "?;w)1fK";
      MockFile.createTempFile("X^[GeCBOm+}_Me(", "?;w)1fK");
      String string2 = "";
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("3)yzH}RSxiZWs9");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("file://", "file://");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)74;
      byteArray0[6] = (byte)33;
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file0.toURI();
      file0.setReadable(false);
      file0.setReadOnly();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file0.deleteOnExit();
      file1.setExecutable(true, false);
      file0.renameTo(file1);
      MockFile mockFile0 = new MockFile(file0, "");
      File file2 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file2.toURI();
      try { 
        sAXReader0.read(file2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.333443371183037
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SAXReader sAXReader0 = new SAXReader((String) null);
          URI uRI0 = MockURI.aFTPURI;
          URL uRL0 = MockURI.toURL(uRI0);
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor307.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor307.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl1.processingInstruction("+${o$`", "contains");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.setDTDHandler((DTDHandler) null);
      xMLFilterImpl6.getParent();
      xMLFilterImpl5.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl2.setDTDHandler(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl1.setDTDHandler(xMLFilterImpl13);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      xMLFilterImpl12.getParent();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl10.setContentHandler(defaultHandler2_0);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl17);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl19);
      xMLFilterImpl15.setDTDHandler(xMLFilterImpl2);
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/X^[GeCBOm+}_\\Me(0?;w)1fK");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[7];
      defaultDocumentFactory0.createNamespace("//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK", "org.saxpath.driver");
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file0 = MockFile.createTempFile("X^[GeCBOm+}_Me(", "?;w)1fK");
      file0.setReadable(true);
      MockFile mockFile0 = new MockFile(file0, "");
      File file1 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        sAXReader0.read(file1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl1.processingInstruction("+${o$`", "contains");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl6.getParent();
      xMLFilterImpl5.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      xMLFilterImpl11.setDTDHandler(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl3.getParent();
      xMLFilterImpl8.setContentHandler(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl6);
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(xMLFilterImpl1, defaultHandler2_0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//]ome/ubuntu/ermite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/|EfZ}3:_(5-Fs<r[\"C0;w)1fK");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl2.getParent();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl5.getParent();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      xMLFilterImpl7.getDTDHandler();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader(false);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      char[] charArray0 = new char[0];
      sAXReader0.createDefaultEntityResolver((String) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "|EfZ}3:_(-F<r[\"C");
      byteArray0[4] = (byte)74;
      byteArray0[6] = (byte)92;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/tmp");
      FileSystemHandling.createFolder(evoSuiteFile1);
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file0.setReadable(true);
      file0.setReadOnly();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      boolean boolean0 = true;
      file1.setExecutable(true, true);
      file0.renameTo(file1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      file1.deleteOnExit();
      file1.getCanonicalPath();
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(file1, "?;w)1fK");
      try { 
        sAXReader0.setFeature("//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature '//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.isMergeAdjacentText();
      StringReader stringReader0 = new StringReader("HxKEc");
      stringReader0.ready();
      sAXReader0.getDispatchHandler();
      sAXReader0.getDispatchHandler();
      sAXReader0.setEncoding("HxKEc");
      try { 
        sAXReader0.setXMLReaderClassName("HxKEc");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class HxKEc not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.resetHandlers();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = "//tmp/qMwN/$|NT1?;w)1fK";
      stringArray0[2] = " of document ";
      stringArray0[3] = "//home/ubuntu/termite/projects/62_dom4j/;/S5/\"e8ld0bU8_R]1";
      stringArray0[4] = "In5B{wI*soY";
      stringArray0[5] = "se47AR";
      stringArray0[6] = "vxIE#5v~-&I";
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, pruningDispatchHandler0);
      pruningElementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      sAXReader0.getDispatchHandler();
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(boolean0);
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.471853918106659
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = "//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.removeHandler(stringArray0[3]);
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0);
      pruningElementStack0.getDispatchHandler();
      sAXReader0.addHandler((String) null, (ElementHandler) null);
      try { 
        sAXReader0.read((InputStream) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getErrorHandler();
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      sAXReader0.setValidation(false);
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = '~';
      charArray0[2] = ':';
      charArray0[3] = 'E';
      charArray0[4] = '/';
      charArray0[5] = 'f';
      parserAdapter0.ignorableWhitespace(charArray0, 4592, 3158);
      ParserAdapter parserAdapter1 = (ParserAdapter)sAXReader0.getXMLReader();
      char[] charArray1 = new char[9];
      charArray1[0] = 'm';
      charArray1[1] = '<';
      charArray1[2] = '[';
      charArray1[3] = 'H';
      charArray1[4] = '6';
      charArray1[5] = '5';
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(parserAdapter0);
      parserAdapter0.setErrorHandler(sAXContentHandler0);
      charArray1[6] = '[';
      charArray1[7] = 'I';
      charArray1[8] = 'L';
      parserAdapter1.ignorableWhitespace(charArray1, (-2690), (-2690));
      parserAdapter0.setDTDHandler((DTDHandler) null);
      sAXReader0.setXMLReader(parserAdapter1);
      sAXReader0.createContentHandler(parserAdapter0);
      sAXReader0.createContentHandler(parserAdapter0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "|)9}3)u-+z");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl5.getParent();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl5);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl8.getDTDHandler();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl7);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl1);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(4466);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertNotNull(documentFactory0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      pruningDispatchHandler0.removeHandler("lfk_EkVq?;39");
      pruningDispatchHandler0.setDefaultHandler((ElementHandler) null);
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, false);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.4193645371449484
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createQName((String) null);
      defaultDocumentFactory0.createElement("N6VK=`g M]l`w'[Q!L)", "H[EsmY_");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.jaxen.pattern.AnyNodeTest");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)47;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("N6VK=`g M]l`w'[Q!L)");
      MockFile.createTempFile("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest", "d{QD-n[0", (File) mockFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, false);
      StringReader stringReader0 = new StringReader("(swvYfTTP{ 3");
      sAXReader1.setXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader1.read((Reader) stringReader0, "DbdV");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/DbdV : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createQName((String) null);
      defaultDocumentFactory0.createElement("N6VK=`g M]l`w'[Q!L)", "H[EsmY_");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.jaxen.pattern.AnyNodeTest");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)47;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("N6VK=`g M]l`w'[Q!L)");
      MockFile.createTempFile("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest", "d{QD-n[0", (File) mockFile0);
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, false);
      StringReader stringReader0 = new StringReader("(swvYfTTP{ 3");
      sAXReader1.setXMLFilter(xMLFilterImpl0);
      SAXReader sAXReader2 = null;
      try {
        sAXReader2 = new SAXReader("//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class //home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl5.getParent();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl5);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl8.getDTDHandler();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl7);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class //home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|? not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.resetHandlers();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.getDispatchHandler();
      sAXReader0.removeHandler("name() requires zero or one argument.");
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.getEncoding();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      char[] charArray0 = new char[3];
      charArray0[0] = 'n';
      charArray0[2] = '+';
      xMLFilterImpl4.characters(charArray0, 2969, 2969);
      xMLFilterImpl4.getDTDHandler();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl4);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl4);
      sAXReader0.setXMLReader(xMLFilterImpl7);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1445934548935424
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("|Y>F\"s.sd)x'vH");
      sAXReader_SAXEntityResolver0.resolveEntity("|Y>F\"s.sd)x'vH", "|Y>F\"s.sd)x'vH");
      sAXReader_SAXEntityResolver0.resolveEntity("org.dom4j.dom.DOMProcessingInstruction", "(");
      String string0 = "{(/DK";
      sAXReader_SAXEntityResolver0.resolveEntity("{(/DK", "");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("Warning: missing namespace prefix ignored: ");
      sAXReader_SAXEntityResolver1.uriPrefix = "http://xml.org/sax/features/string-interning";
      sAXReader_SAXEntityResolver1.resolveEntity("http://xml.org/sax/features/string-interning", ">");
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setStripWhitespaceText(true);
      sAXReader0.createXMLReader();
      String string1 = "Miz[_[i~dpFS!";
      try { 
        sAXReader0.setXMLReaderClassName("");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertTrue(sAXReader0.isValidating());
      assertSame(documentFactory0, defaultDocumentFactory0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl2.getParent();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl10.setDTDHandler(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      xMLFilterImpl5.getParent();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl8.getDTDHandler();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl8);
      StringReader stringReader0 = new StringReader("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?");
      try { 
        sAXReader0.read((Reader) stringReader0, "org.dom4j.tree.AbstractProcessingInstruction");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = QName.get((String) null, (Namespace) null, "//tmp/|EfZ}3:_(5-Fs<r[\"C1?;w)1fK");
      BeanElement beanElement0 = new BeanElement(qName0);
      defaultDocumentFactory0.createAttribute((Element) beanElement0, ">~aW3}q3+1a", "//tmp/|EfZ}3:_(5-Fs<r[\"C1?;w)1fK");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      sAXReader0.getDispatchHandler();
      defaultDocumentFactory0.createElement(".j[>*Ah");
      Document document0 = defaultDocumentFactory0.createDocument();
      assertNull(document0.getName());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.2833517168939514
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte byte0 = (byte) (-66);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Enumeration<FilterInputStream> enumeration0 = null;
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("mH");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "//home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest");
      SAXReader sAXReader0 = new SAXReader(false);
      InputSource inputSource0 = new InputSource("/}K9");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: /}K9 Nested exception: no protocol: /}K9
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[6] = (byte)92;
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file0.toURI();
      file0.setReadable(false);
      file0.setReadOnly();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file1.setExecutable(true, true);
      file0.getCanonicalFile();
      file0.renameTo(file1);
      file1.mkdir();
      file1.deleteOnExit();
      file1.getCanonicalPath();
      MockFile mockFile0 = new MockFile(file0, "");
      MockFile mockFile1 = new MockFile(file1, "?;w)1fK");
      mockFile0.toURI();
      MockFile.createTempFile("//tmp/|EfZ}3:_(-F<r[\"C1|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      mockFile0.toURI();
      try { 
        sAXReader0.read("?;w)1fK");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/?;w)1fK : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.skippedEntity("'GgeWIUyF/");
      xMLFilterImpl2.endPrefixMapping("h&zA~oo[P1b2y");
      xMLFilterImpl2.notationDecl("'GgeWIUyF/", "//tmp/tmp/tmp/?;w)1fK0?;w)1fK00/tmp/tmp/?;w)1fK0?;w)1fK0", "java.lang.String");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLReader xMLReader0 = xMLFilterImpl1.getParent();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl2);
      xMLFilterImpl2.skippedEntity("'GgeWIUyF/");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLReader0);
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl4);
      xMLFilterImpl7.getDTDHandler();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl13);
      DefaultDocumentFactory.getInstance();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      try { 
        sAXReader0.read((Reader) null, "Sir");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/Sir (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/Sir (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl5.getParent();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl5);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl8.endPrefixMapping("//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      xMLFilterImpl8.getDTDHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      xMLFilterImpl7.startElement("//tmp/X^[GeCBOm+}_Me(1.tmp", "//tmp/X^[GeCBOm+}_Me(1.tmp", "U|*W{(PrmslC.{2", attributes2Impl0);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl7);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      try { 
        sAXReader0.setProperty("//tmp/X^[GeCBOm+}_Me(1.tmp", xMLFilterImpl14);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '//tmp/X^[GeCBOm+}_Me(1.tmp' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.275805525146526
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      String string0 = "A!)B`IneiZ_";
      InputSource inputSource0 = new InputSource("A!)B`IneiZ_");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: A!)B`IneiZ_ Nested exception: no protocol: A!)B`IneiZ_
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      defaultDocumentFactory0.createElement("N6VK=`g M]l`w'[Q!L)", "N6VK=`g M]l`w'[Q!L)");
      defaultDocumentFactory0.createComment("//tmp/home/ubuntu/termite/projects/62_dom4j/org.jaxen.pattern.AnyNodeTest0http:/xml.org/sax/features/namespaces");
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[6] = (byte)92;
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      URI uRI0 = MockURI.aFileURI;
      file0.setReadable(false);
      file0.setReadOnly();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file1.setExecutable(true, true);
      file0.renameTo(file1);
      file1.mkdir();
      file1.deleteOnExit();
      MockFile mockFile0 = new MockFile(file0, "");
      MockFile mockFile1 = new MockFile(file1, "?;w)1fK");
      mockFile0.toURI();
      MockFile.createTempFile("//tmp/|EfZ}3:_(-F<r[\"C1|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      mockFile0.toURI();
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      String string0 = "N6VK=`g M]l`w'[Q!L)";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N6VK=`g M]l`w'[Q!L)");
      sAXReader0.setIgnoreComments(false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-127);
      MockFile mockFile0 = new MockFile("Qc");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SAXParseException sAXParseException0 = new SAXParseException("PI nodes cannot have children", (String) null, ">H|EsY_", 6, 6);
      try { 
        sAXReader0.setProperty("tZ-<", xMLFilterImpl0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'tZ-<' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.getParent();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl4);
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl7.getDTDHandler();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl6);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?");
      try { 
        sAXReader0.read((Reader) stringReader0, "//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/?;w)1fK1?;w)1fK");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte)92;
      File file0 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      file0.toURI();
      File file1 = MockFile.createTempFile("?;w)1fK", "?;w)1fK");
      file1.delete();
      file1.createNewFile();
      file1.toURL();
      file0.renameTo(file1);
      file0.delete();
      MockFile mockFile0 = new MockFile(file0, "?;w)1fK");
      File file2 = MockFile.createTempFile("|EfZ}3:_(-F<r[\"C", "?;w)1fK");
      MockFile.createTempFile("?;w)1fK", "?;w)1fK", (File) mockFile0);
      file2.toURI();
      mockFile0.setExecutable(true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.setWritable(true, false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        sAXReader0.setProperty("?;w)1fK", mockFile0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '?;w)1fK' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.2631550402832814
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("//home/ubuntu/termite/projects/62_dom4j/m*z^Y'sr|?/m*z^Y'sr|?", "//tmp/|EfZ}3:_(5-Fs<r[\"C0?;w)1fK");
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl2.getParent();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl0);
      xMLFilterImpl5.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl10.setDTDHandler(xMLFilterImpl9);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@288f9dca Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@288f9dca Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
