/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 21:43:12 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5280403553936055
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://c(<:2256");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c(<");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("c(<", 2256);
      services_HTTP_Result0.page_weight = 2256;
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 2256);
      services_HTTP_Result0.page_weight = 2256;
      services_HTTP_Result0.works = false;
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.works = false;
      services_HTTP_Result1.Error = "";
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.toString();
      assertFalse(services_SIMPLE_Result0.works);
      
      services_HTTP_Result1.Error = "UOqXoD;a{CV{/J";
      services_SIMPLE_Result0.works = true;
      services_HTTP_Result1.reset();
      Services.testPOP3("", 2256);
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.Error = "=]g4jQ4O/wwE";
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("=]g4jQ4O/wwE", 2256);
      assertFalse(services_SIMPLE_Result1.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("\n", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("200.42.42.0", 2548);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      Services.testSMTP("gQtv}kq", 0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("gQtv}kq", 2548);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://yQ;za\"5o{miaf-390:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c(<");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("yQ;za\"5o{miaf-390", 0);
      assertEquals(4, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(1L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("200.42.42.0", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("** Temps : ", 3000);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 1);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.Error = null;
      services_HTTP_Result0.page_weight = 1;
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 1 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : null.\n****", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.time = (-1L);
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.time = (-1556L);
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.Error = "";
      services_SIMPLE_Result0.Error = "";
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.reset();
      Services services0 = new Services();
      Services.testHTTPS("1B/.l%Y", 1);
      services_SIMPLE_Result0.toString();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("u^?atmRcR", 0);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP((String) null, (-1367));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-72);
      byteArray0[3] = (byte) (-72);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("** Erreur g\u00E9n\u00E9r\u00E9e : ", (byte) (-72));
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("#b8qwQryoTe^NU", (-2363));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 605);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("iUCzl`ncQa9zNGb", 605);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("QkcKnxEuA;&", (-1035));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }
}
