/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 20:57:01 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[9][8];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(15, 28, (-2822.77));
      double[] doubleArray2 = new double[0];
      Optimization.solveTriangle(matrix0, doubleArray2, true, (boolean[]) null);
      Random.setNextRandom((-884));
      Random.setNextRandom(1924);
      Random.setNextRandom(701);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0000000000000142;
      boolean[] booleanArray0 = new boolean[10];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      double[][] doubleArray1 = new double[6][6];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray1, 863, 639);
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 1.0000000000000142;
      doubleArray2[1] = (double) 639;
      doubleArray2[2] = 1.0000000000000142;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray2, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[9][8];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(28, 28, 28);
      Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      Random.setNextRandom(2112);
      Random.setNextRandom(701);
      Random.setNextRandom(10);
      Random.setNextRandom(2112);
      Random.setNextRandom((-462));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[9][8];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      doubleArray1[8] = doubleArray0;
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Random.setNextRandom(110);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{Io1");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(2);
      Random.setNextRandom((-100));
      Random.setNextRandom((-100));
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(37, 110);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) (-100);
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 110;
      doubleArray0[4] = (-0.5);
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 2;
      doubleArray0[7] = (double) (-100);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {Double.NaN, 0.0, 0.0, Double.NaN, Double.NaN, 0.0, Double.NaN, Double.NEGATIVE_INFINITY}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(1);
      optimization_DynamicIntArray0.addElement(1430);
      optimization_DynamicIntArray0.size();
      optimization_DynamicIntArray0.addElement(0);
      assertEquals(3, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(771);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement((-293));
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement((-293));
      optimization_DynamicIntArray0.elementAt(17);
      assertEquals(2, optimization_DynamicIntArray0.size());
      
      optimization_DynamicIntArray0.removeAllElements();
      assertEquals(0, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.elementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.core.Optimization$DynamicIntArray", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[][] doubleArray0 = new double[9][8];
      doubleArray0[6] = doubleArray0[0];
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.constructWithCopy(doubleArray0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      PrintWriter printWriter0 = mockPrintWriter0.printf(" to bound ", (Object[]) doubleArray0);
      mockPrintWriter0.print((-1));
      matrix0.print(printWriter0, (-1), (-1));
      stringWriter0.flush();
      booleanArray0[2] = true;
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintWriter0.format("", objectArray0);
      printWriter0.println(172L);
      MockPrintStream mockPrintStream0 = new MockPrintStream(" to bound ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintStream0);
      matrix0.print(printWriter0, (-1), (-1));
      PrintWriter printWriter1 = printWriter0.append((CharSequence) "C*15x&hL,AKHg(V&.h");
      matrix0.write(printWriter1);
      booleanArray0[3] = true;
      mockPrintStream0.println((-1));
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 420);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(bufferedOutputStream0, true);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0[1], true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Freund, Y. and Mason, L.");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ZrXfuD2B4]^)v}2CB+");
      double[][] doubleArray1 = new double[9][8];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      doubleArray1[8] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.constructWithCopy(doubleArray1);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[9][8];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      doubleArray1[8] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.constructWithCopy(doubleArray1);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      PrintWriter printWriter0 = mockPrintWriter0.printf(" tQ bWund ", (Object[]) doubleArray1);
      mockPrintWriter0.print((-1));
      matrix0.print(printWriter0, (-1), (-1));
      stringWriter0.flush();
      booleanArray0[2] = false;
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintWriter0.format("", objectArray0);
      printWriter0.println(172L);
      MockPrintStream mockPrintStream0 = new MockPrintStream(" tQ bWund ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintStream0);
      matrix0.print(printWriter0, (-1090), (-1));
      PrintWriter printWriter1 = printWriter0.append((CharSequence) "C*15x&hL,AKHg(V&.h");
      matrix0.write(printWriter1);
      booleanArray0[3] = false;
      mockPrintStream0.println((-1));
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 420);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(bufferedOutputStream0, false);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertEquals(1, doubleArray2.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[9][8];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      doubleArray1[8] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.constructWithCopy(doubleArray1);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      PrintWriter printWriter0 = mockPrintWriter0.printf("Hr1", (Object[]) doubleArray1);
      matrix0.print(printWriter0, (-1), 901);
      booleanArray0[2] = true;
      MockFile mockFile0 = new MockFile("pyM6DiX5(;M'", "pyM6DiX5(;M'");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintStream0);
      PrintWriter printWriter1 = printWriter0.append((CharSequence) "pyM6DiX5(;M'");
      matrix0.write(printWriter1);
      booleanArray0[3] = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 420);
      bufferedOutputStream0.close();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(bufferedOutputStream0, true);
      matrix0.write(mockPrintWriter1);
      Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {0.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0421918905228877
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement((-3661));
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      int int0 = 431;
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(431);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";_Qb#gT");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(48);
      optimization_DynamicIntArray0.addElement(48);
      optimization_DynamicIntArray0.addElement(7);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement((-1617));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}daaRM.A>?l-o>)hR`");
      optimization_DynamicIntArray0.addElement(1766);
      Random.setNextRandom((-1));
      Random.setNextRandom(2);
  }
}
