/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:11:06 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.Socket;
import java.sql.DataTruncation;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.util.ArrayList;
import java.util.Stack;
import messages.Message;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.session.SessionParticipationMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "YyAnGP,ro_(H7Hkc2");
      int int0 = MockThread.NORM_PRIORITY;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("", "Couldn't close input stream");
      int int1 = (-172);
      boolean boolean0 = true;
      DataTruncation dataTruncation0 = new DataTruncation((-172), true, true, 476, (-3234), sQLInvalidAuthorizationSpecException0);
      mockSocket0.getKeepAlive();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException("content-types", "ERROR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(stack0);
      mapListMsg0.toString();
      String string0 = "";
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(boolean0, int1, string0);
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      long long0 = (-545L);
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockSocket mockSocket1 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      MockThrowable.getDefaultStackTrace();
      MockThread.interrupted();
      bomberClient0.connectToSrv();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      arrayList0.add(mapInfo0);
      MapListMsg mapListMsg0 = new MapListMsg(arrayList0);
      mapListMsg0.toString();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "YyAnGP,ro_(H7Hkc2");
      MockThread.interrupted();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("D", "YyAnGP,ro_(H7Hkc2");
      int int0 = (-3234);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException("content-types", "D");
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "CONNECTION LOST";
      String string1 = "";
      String string2 = "+tY-snW";
      String string3 = "Lost connection to server!";
      StackTraceElement stackTraceElement0 = new StackTraceElement(string1, string2, string3, int0);
      MockThread mockThread0 = new MockThread(string0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, string3);
      ThreadGroup threadGroup1 = null;
      String string4 = "";
      long long0 = 30000L;
      MockThread mockThread2 = new MockThread(threadGroup1, mockThread1, string4, long0);
      Thread[] threadArray0 = new Thread[21];
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread2;
      Thread[] threadArray1 = new Thread[7];
      threadArray1[0] = (Thread) mockThread2;
      threadArray1[1] = (Thread) clientMsgReceiver0;
      threadArray1[2] = (Thread) clientMsgReceiver0;
      threadArray1[3] = (Thread) mockThread0;
      threadArray1[4] = (Thread) clientMsgReceiver0;
      threadArray1[5] = (Thread) mockThread0;
      threadArray1[6] = (Thread) mockThread1;
      MockThread.enumerate(threadArray1);
      threadArray0[2] = (Thread) mockThread2;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread2;
      MockThread.enumerate(threadArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      System.setCurrentTimeMillis((-2717L));
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      Message message0 = null;
      clientMsgReceiver0.processMsg(message0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        pipedInputStream0.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.interrupted();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-56);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("D", "YyAnGro_(H7Hkc2");
      sQLInvalidAuthorizationSpecException0.getSuppressed();
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup0, mockThread0, "D");
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread3 = new MockThread(threadGroup1, mockThread2, "");
      MockThread mockThread4 = new MockThread((ThreadGroup) null, "j3[\"TF,Y1e0^GYv`db");
      MockThread mockThread5 = new MockThread((ThreadGroup) null, mockThread4, "YyAnGro_(H7Hkc2", (-172));
      MockThread.getAllStackTraces();
      MockThread mockThread6 = new MockThread((ThreadGroup) null, mockThread4, "D", (-172));
      mockThread6.getContextClassLoader();
      Thread[] threadArray0 = new Thread[3];
      threadArray0[0] = (Thread) mockThread3;
      threadArray0[1] = (Thread) mockThread6;
      threadArray0[2] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      Thread[] threadArray1 = new Thread[5];
      threadArray1[0] = (Thread) mockThread4;
      threadArray1[1] = (Thread) mockThread4;
      MockThread mockThread7 = new MockThread((ThreadGroup) null, mockThread6, "YyAnGro_(H7Hkc2", 3915L);
      threadArray1[2] = (Thread) mockThread7;
      threadArray1[3] = (Thread) mockThread2;
      threadArray1[4] = (Thread) mockThread4;
      MockThread.enumerate(threadArray1);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      String string0 = "YyAnGro_(H7Hkc2";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "D";
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("D", "YyAnGro_(H7Hkc2");
      int int0 = (-172);
      sQLInvalidAuthorizationSpecException0.getSuppressed();
      int int1 = (-3234);
      DataTruncation dataTruncation0 = new DataTruncation((-172), true, true, (-172), (-3234));
      dataTruncation0.addSuppressed(sQLInvalidAuthorizationSpecException0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException("D", "~@+#oMpH/");
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      String string2 = "";
      String string3 = "ERROR";
      int int2 = 403;
      StackTraceElement stackTraceElement0 = new StackTraceElement(string0, string2, string3, int2);
      stackTraceElementArray0[0] = stackTraceElement0;
      String string4 = "#{MmN>";
      StackTraceElement stackTraceElement1 = new StackTraceElement(string1, string4, string0, int0);
      stackTraceElementArray0[1] = stackTraceElement1;
      String string5 = "";
      StackTraceElement stackTraceElement2 = new StackTraceElement(string1, string3, string5, int1);
      sQLInvalidAuthorizationSpecException1.getSuppressed();
      stackTraceElementArray0[2] = stackTraceElement2;
      sQLInvalidAuthorizationSpecException1.setStackTrace(stackTraceElementArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(dataTruncation0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      System.setCurrentTimeMillis(3481L);
      BomberClient bomberClient0 = BomberClient.getInstance();
      Socket socket0 = bomberClient0.server;
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(socket0, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }
}
