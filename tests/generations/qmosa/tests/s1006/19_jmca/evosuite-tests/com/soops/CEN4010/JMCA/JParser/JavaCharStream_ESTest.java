/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 20:52:31 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.191966655489565
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("zFM69y\faZI*>U.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-3), (-3));
      javaCharStream0.backup((-3));
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)99;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\f', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5038471465037029
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pM5?6z8z9'B'<$[_~");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-22), 4096);
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream.hexval('3');
      int int0 = javaCharStream0.getLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-22), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2406927706805115
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?{");
      byte[] byteArray0 = new byte[3];
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+F,]?{");
      javaCharStream0.backup((-3));
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.line = 1;
      javaCharStream0.ReInit((Reader) null, 1178, 1178);
      javaCharStream0.adjustBeginLineColumn(1178, (-15));
      javaCharStream0.bufpos = (-15);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.487826976284582
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+F,]?{");
      javaCharStream0.backup((-3));
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("+F,]?{");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 682, 0);
      javaCharStream0.adjustBeginLineColumn((-3), 682);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1508));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3303466540076667
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      javaCharStream0.bufline = null;
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(11, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.542915333751033
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte)6;
      byteArray1[2] = (byte)6;
      byteArray1[3] = (byte)6;
      byteArray1[4] = (byte)6;
      byteArray1[5] = (byte)6;
      byteArray1[6] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.mark(1165);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (byte)6);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (-1), 874);
      byteArrayInputStream1.mark(2064);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (byte)6, (byte)6, 11);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6893764365838804
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "+F,]?\\";
      StringReader stringReader0 = new StringReader("+F,]?");
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int int0 = 1142;
      javaCharStream0.backup(1142);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 0, (byte)13);
      javaCharStream1.adjustBeginLineColumn((byte)13, 0);
      javaCharStream1.FillBuff();
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.367420033319239
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ZfxpIfdX;5)s4ISo$J/");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-36);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (int) (byte) (-36), (-4219));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("+F,]?");
      StringReader stringReader2 = new StringReader("+F,]?");
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6M)t6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1101, 4092, 1101);
      char[] charArray0 = new char[7];
      charArray0[0] = 'b';
      charArray0[1] = 'h';
      charArray0[2] = '`';
      charArray0[3] = 'g';
      charArray0[4] = 't';
      charArray0[5] = '`';
      charArray0[6] = 'L';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.627323234076236
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.line = 0;
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.894175464056979
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.bufsize = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)58;
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u0000');
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2050, 2050, 2050);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.GetImage();
      stringReader0.reset();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4699);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.093091786390412
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-3446));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark((byte)9);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArrayInputStream0.mark((-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-5075), (byte)67, (byte)9);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3572850199521964
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?{");
      byte[] byteArray0 = new byte[3];
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+F,]?{");
      int int0 = (-3);
      javaCharStream0.backup((-3));
      javaCharStream0.ReadByte();
      javaCharStream0.nextCharInd = (-224);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      char[] charArray0 = new char[5];
      charArray0[0] = '+';
      charArray0[1] = '>';
      charArray0[2] = 'S';
      charArray0[3] = '7';
      charArray0[4] = 'S';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.162147399604542
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.ReInit((Reader) null, 1178, 1178);
      javaCharStream0.adjustBeginLineColumn(1178, (-23));
      javaCharStream0.bufpos = (-23);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5791112001537937
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(79, 9);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      assertEquals(79, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write((-116));
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2013), (-3616));
      javaCharStream0.adjustBeginLineColumn((-2013), 878);
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(878, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9244892306102397
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-3253), (-3253));
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.adjustBeginLineColumn(3654, (-1));
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream1.getBeginColumn();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.323680273019159
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, 1178, 1178);
      javaCharStream0.adjustBeginLineColumn(1178, (-15));
      javaCharStream0.bufpos = (-15);
      javaCharStream0.available = (-15);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-93);
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)59;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.20842455771657
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pM5?6z8z9'B'<$[_~");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-22), 4096);
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.reset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte) (-22), 0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte) (-22), 4069);
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0, (-1507), (byte)12, 1212);
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "OqW0G*${");
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("OqW0G*${");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2013), (-3616));
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1090407622471203
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      javaCharStream0.maxNextCharInd = 2048;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte) (-112);
      byteArray0[5] = (byte) (-9);
      byteArray0[6] = (byte) (-84);
      byteArray0[7] = (byte) (-9);
      byteArray0[5] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)99);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-884), 0, (byte)10);
      javaCharStream0.readChar();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream1.readChar();
      int int0 = javaCharStream1.getEndColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.636905477713466
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 12);
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(12, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.close();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = (-580);
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-580), (-580));
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 271, (-1745), 4);
      javaCharStream1.ReInit((Reader) stringReader0, (-369), 4, 4);
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null, 0, (-1049), 102);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark((byte)0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-3253), (byte)0, (byte)0);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-3253), int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3919010114521955
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)87;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte) (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1503, 1503, 92);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      byteArrayInputStream0.mark((byte) (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), (byte)11, (byte) (-1));
      javaCharStream1.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1000, (-580));
      javaCharStream0.ReInit((Reader) stringReader0, (-580), (-580), 1000);
      javaCharStream0.BeginToken();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-580), (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      StringReader stringReader1 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader2 = new StringReader("]s}~mO0q>;`#dI-");
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = '8';
      charArray0[2] = 'N';
      charArray0[3] = 'N';
      charArray0[4] = '3';
      charArray0[5] = 'N';
      charArray0[6] = '3';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-50);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray1[1] = (byte) (-50);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
      
      StringReader stringReader0 = new StringReader("5G/k}jIej9R-C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-50), 4096);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('5', char0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("p jD$P?aK%y*(Fn");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaCharStream.hexval('A');
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      PipedInputStream pipedInputStream0 = new PipedInputStream(2050);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(2050, 92);
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(92, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oWSU:AlyYY/");
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.120566185975934
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Mx2*{[j51]FVG@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.maxNextCharInd = 2048;
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('j', char0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5708505634534706
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)13;
      StringReader stringReader0 = new StringReader("z@fR4)HUg@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)13, 0, (byte)1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (byte)24, 61);
      javaCharStream1.ReInit((Reader) stringReader0, (int) (byte)13, (int) (byte)13, (int) (byte)1);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, 61, (-2501), (int) (byte)13);
      javaCharStream1.GetSuffix(1074);
      javaCharStream1.ReInit((Reader) stringReader0, (-1561), (int) (byte)13, 967);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.340534377469851
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2050, (-463), 2050);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      stringReader0.reset();
      stringReader0.close();
      javaCharStream0.tokenBegin = 4056;
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)59;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6227437407550014
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KPVLMY;:Cl|%y7%^a");
      javaCharStream0.backup(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(2);
      try { 
        JavaCharStream.hexval('\u0000');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.441004770053873
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(79);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 4091, 13, 4090);
      javaCharStream1.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      assertEquals(4091, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      sequenceInputStream0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'o';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.maxNextCharInd = 861;
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      int int1 = JavaCharStream.hexval('F');
      assertEquals(15, int1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      StringReader stringReader1 = new StringReader("]s}~mO0q>;`#dI-");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4019864501937878
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 8);
      javaCharStream0.maxNextCharInd = 861;
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = 0;
      intArray0[2] = 8;
      javaCharStream1.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn((-1468), 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)13;
      StringReader stringReader0 = new StringReader("z@fR4)HUg@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)13, 0, (byte)1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8207751622034678
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.adjustBeginLineColumn(0, 1557);
      javaCharStream0.AdjustBuffSize();
      int int0 = (-1);
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn((-1), 0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<J4s&7zv9Pr5^#");
      StringReader stringReader1 = new StringReader("`L'~H=b|");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8907847871540873
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("OqW0G*${");
      StringReader stringReader2 = new StringReader("OqW0G*${");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1000, 1000);
      javaCharStream0.ReInit((Reader) stringReader0, 1000, 1000, 1000);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1, 1000);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream2.GetImage();
      javaCharStream1.ReInit((Reader) stringReader0, 76, (-1), 0);
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(1000, javaCharStream0.getBeginLine());
      assertEquals(1000, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("");
      stringReader1.reset();
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '\\';
      charArray0[0] = '\\';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("+F,]?");
      StringReader stringReader2 = new StringReader("/&+HL");
      StringReader stringReader3 = new StringReader("");
      stringReader0.reset();
      CharBuffer charBuffer0 = CharBuffer.allocate(1303);
      stringReader3.read(charBuffer0);
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("OqW0G*${");
      StringReader stringReader2 = new StringReader("`vS?~l41Q'0qvJ-");
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.240402916302753
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.backup(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('Y', char0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8914221372482598
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      javaCharStream0.maxNextCharInd = 2048;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte) (-112);
      byteArray0[5] = (byte) (-9);
      byteArray0[6] = (byte) (-84);
      byteArray0[7] = (byte)6;
      byteArray0[8] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)99);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-884), 0, (byte)10);
      javaCharStream0.readChar();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream1.readChar();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('\n', char0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.174552717965632
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 58, 58);
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.reset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 89, 98, 1);
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-2236), 12);
      char char0 = javaCharStream1.BeginToken();
      assertEquals('\r', char0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader4 = new StringReader("oWSU:AlyYY/");
      stringReader4.ready();
      stringReader4.reset();
      CharBuffer charBuffer0 = CharBuffer.allocate(6140);
      stringReader3.read(charBuffer0);
      StringReader stringReader5 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      charArray0[3] = '\\';
      charArray0[4] = '3';
      charArray0[5] = '.';
      charArray0[6] = 'N';
      charArray0[7] = '8';
      stringReader5.read(charArray0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader2 = new StringReader("");
      char[] charArray0 = new char[4];
      stringReader2.reset();
      CharBuffer charBuffer0 = CharBuffer.allocate(1303);
      stringReader2.read(charBuffer0);
      charArray0[0] = '3';
      charArray0[1] = '8';
      charArray0[2] = '\\';
      charArray0[1] = '8';
      stringReader2.read(charArray0);
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("S/>8;)=F");
      char[] charArray0 = new char[3];
      stringReader3.reset();
      CharBuffer charBuffer0 = CharBuffer.allocate(1303);
      stringReader3.read(charBuffer0);
      charArray0[0] = '3';
      charArray0[1] = '8';
      charArray0[2] = '\\';
      charArray0[1] = '8';
      stringReader3.read(charArray0);
      stringReader3.read(charArray0);
      stringReader2.read(charArray0);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.4858996580846218
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.backup(24);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(24, 1059);
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)13);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("KPVLMY;:Cl|%y7%^a");
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte byte0 = (byte)0;
      byte byte1 = (byte)83;
      StringReader stringReader0 = new StringReader("5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      stringReader0.read();
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.035771632450353
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.backup(2);
      javaCharStream0.backup(543);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte) (-83);
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream0.readChar();
      assertEquals(3556, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('9');
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("+F,]?");
      StringReader stringReader2 = new StringReader("+F,]?");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte byte0 = (byte)1;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-103), (byte)1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 101, (byte)1, (byte) (-103));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("OqW0G*${");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2013), (-3616));
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.adjustBeginLineColumn(0, 13);
      assertEquals(13, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("OqW0G*${");
      StringReader stringReader2 = new StringReader("`vS?~l41Q'0qvJ-");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2831, 4096);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('C');
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      sequenceInputStream0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      javaCharStream0.bufpos = 861;
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      StringReader stringReader1 = new StringReader("+F,]?");
      StringReader stringReader2 = new StringReader("*rs");
      StringReader stringReader3 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader4 = new StringReader("kHnO9u68wR]A'Q");
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = '\\';
      charArray0[2] = 'N';
      charArray0[3] = 'N';
      charArray0[4] = ';';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7414180849434708
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pp(=G");
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 95, 3510);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('p', char0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("OqW0G*${");
      stringReader1.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.602644468974546
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?{");
      byte[] byteArray0 = new byte[3];
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+F,]?{");
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)13;
      byteArray1[1] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.1797413261689855
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("#g{w8hatvH/cR4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.UpdateLineColumn('X');
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)23;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-62);
      byteArray0[7] = (byte)95;
      byteArray0[8] = (byte) (-62);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("oWSU:AlyYY/");
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader(".y39 )9[S*Ym*Vpo+!");
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte) (-31);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OqW0G*${");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1036, 1036, 1036);
      char[] charArray0 = new char[1];
      javaCharStream0.adjustBeginLineColumn(1036, 1036);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) 'g';
      intArray0[1] = (int) 'g';
      intArray0[2] = (-1);
      javaCharStream0.tokenBegin = 1036;
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = 1036;
      intArray0[6] = (-1);
      javaCharStream0.bufline = intArray0;
      charArray0[0] = 'g';
      javaCharStream0.GetImage();
      javaCharStream0.bufpos = (-752);
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-752), 79);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.563022240624786
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(11);
      javaCharStream0.BeginToken();
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(79, 9);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getLine();
      assertEquals(9, javaCharStream0.getBeginColumn());
      assertEquals(79, int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.2090584275903393
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KPVLMY;:Cl|%y7%^a");
      javaCharStream0.backup(1757);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getLine();
      assertEquals(2344, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5695734242452968
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Fk9>{+TjP@/Y|XC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 78, 78);
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)24, 5, 61);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, (-493), (-2501), 1074);
      javaCharStream0.GetSuffix(1074);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 1074, 2162, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1976, (-1607), 100);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(1976);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=b'RR=~(Zxh}\u0001fSP>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1976, (-3185), 1976);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1167));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[2] = (byte)102;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-34);
      byteArray0[3] = (byte) (-34);
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte)58;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 91, 10, 66);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.405529250109035
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 58, 58);
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.reset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\r", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.1993253868658744
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.inBuf = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(11, 11);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.0030686234650688
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 6, 0);
      javaCharStream0.nextCharInd = (-1);
      javaCharStream0.maxNextCharInd = 837;
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.readChar();
      assertEquals(6, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".y39 )9[nS*Ym*Vpo+!");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 11);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '3';
      charArray0[1] = '8';
      charArray0[2] = '\\';
      charArray0[3] = 'N';
      stringReader3.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 431);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("L-+3+");
      StringReader stringReader2 = new StringReader("");
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      StringReader stringReader0 = new StringReader(".y39 )9[S*Ym*Vpo+!");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3275, (-387));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      StringReader stringReader0 = new StringReader(".y39 )9[S*Ym*Vpo+!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3275, (-387));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.4725385010074818
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OqW0G*${");
      stringReader0.ready();
      int int0 = 1035;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1035, 1035, 1035);
      javaCharStream0.adjustBeginLineColumn(1035, 1035);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) 'g';
      intArray0[1] = (int) 'g';
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.Done();
      intArray0[4] = (-1);
      intArray0[5] = 1035;
      stringReader0.mark(2765);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('R');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2492963676256
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte)1;
      sequenceInputStream0.read(byteArray0, 95, (int) (byte) (-12));
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      sequenceInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-3253), 2206);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ReInit((InputStream) sequenceInputStream0, 2206, 0);
      javaCharStream1.adjustBeginLineColumn(13, (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)0;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OqW0G*${");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1035, 1035, 1035);
      char[] charArray0 = new char[1];
      javaCharStream0.adjustBeginLineColumn(1035, 1035);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) 'g';
      intArray0[1] = (int) 'g';
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.Done();
      intArray0[4] = (-1);
      intArray0[5] = 1035;
      intArray0[6] = (-1);
      javaCharStream0.bufline = intArray0;
      charArray0[0] = 'g';
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1), (-1));
      char[] charArray0 = new char[7];
      charArray0[0] = 'M';
      charArray0[1] = 'z';
      charArray0[2] = 'L';
      charArray0[3] = 'r';
      charArray0[4] = 'c';
      charArray0[5] = 't';
      charArray0[6] = 'm';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1015);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 68, 68, 99);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte)85;
      byteArray0[8] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte) (-16);
      byteArray0[2] = (byte) (-74);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)91;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 100, 77, 5);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('U', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.447252552051892
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+F,]?");
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      sequenceInputStream0.mark(1703);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (-1), (byte)13, 92);
      javaCharStream1.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.FillBuff();
      javaCharStream2.ReadByte();
      javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[1];
      stringReader0.ready();
      charArray0[0] = 'i';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      stringReader0.close();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.2200820606877794
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      int int0 = (-3853);
      StringReader stringReader1 = new StringReader("OqW0G*${");
      stringReader1.ready();
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      charArray0[5] = 'V';
      charArray0[6] = 'i';
      stringReader1.read(charArray0);
      int int1 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 2048, 0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      char[] charArray1 = null;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null, (-1454), (-1005));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.4926160162145194
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.backup(4096);
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 101, 0);
      javaCharStream1.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      assertEquals(4, javaCharStream0.bufpos);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)58;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = javaCharStream1.readChar();
      assertEquals('P', char0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      StringReader stringReader1 = new StringReader(".");
      StringReader stringReader2 = new StringReader(".");
      StringReader stringReader3 = new StringReader("oWSU:AlyYY/");
      try { 
        JavaCharStream.hexval('s');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '3';
      charArray0[1] = '8';
      charArray0[2] = '\\';
      charArray0[3] = 'N';
      stringReader3.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 431);
      javaCharStream0.ReInit((Reader) stringReader2, (-904), 431, 12);
      javaCharStream0.ReInit((Reader) stringReader3, 1, 12, 158);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.inputStream = (Reader) stringReader1;
      javaCharStream0.ReInit((Reader) stringReader0, 7, 7);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("");
      char[] charArray0 = new char[4];
      stringReader3.reset();
      CharBuffer charBuffer0 = CharBuffer.allocate(1303);
      stringReader3.read(charBuffer0);
      charArray0[0] = '3';
      charArray0[1] = '8';
      charArray0[2] = '\\';
      charArray0[1] = '8';
      stringReader3.read(charArray0);
      stringReader3.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, (-1), (-716));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)64;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("N #kFk*r#v6uD1s");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      File file0 = MockFile.createTempFile(" column ", "+jUlZ-%<Vy", (File) null);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 72, (-153), 1667);
      char[] charArray0 = new char[8];
      charArray0[0] = '2';
      charArray0[1] = 'b';
      charArray0[2] = 'p';
      charArray0[3] = '%';
      charArray0[4] = 'l';
      charArray0[5] = 'z';
      charArray0[6] = 'Y';
      charArray0[7] = '(';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1858, 2957);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1858, 752, 2957);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("T6.rbUbPUU");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 117, (-2116));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('/');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:lyYY/");
      StringReader stringReader3 = new StringReader("oWSU:lyYY/");
      StringReader stringReader4 = new StringReader("oWSU:lyYY/");
      stringReader4.reset();
      CharBuffer charBuffer0 = CharBuffer.allocate(6140);
      stringReader3.read(charBuffer0);
      StringReader stringReader5 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      charArray0[3] = '\\';
      charArray0[4] = '3';
      charArray0[5] = '.';
      charArray0[6] = 'N';
      charArray0[7] = '8';
      stringReader5.read(charArray0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("oWSU:AlyYY/");
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = '8';
      charArray0[2] = '3';
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      stringReader1.read(charArray0);
      StringReader stringReader4 = new StringReader("Y){0ujlF+)\"r'^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4534), (-4534));
      StringReader stringReader5 = new StringReader("");
      stringReader5.reset();
      stringReader1.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader5);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, 8, 723, (-4534));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '3';
      charArray0[1] = '8';
      charArray0[2] = '\\';
      charArray0[3] = 'N';
      stringReader3.read(charArray0);
      StringReader stringReader4 = new StringReader("KPVLMY;:Cl|%y7%^a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, (-904), (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, (-28), (-28), (-2133));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('I');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte)1);
      assertEquals(4094, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.4649925183734087
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.bufpos = 0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getColumn();
      javaCharStream0.backup(0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 0, 167);
      javaCharStream0.GetImage();
      int int0 = 86;
      javaCharStream0.backup(86);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.2233000900820272
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2050, (-463), 2050);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(115, 115);
      javaCharStream0.GetImage();
      int int0 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.8985525163560553
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " 5$m#8Bq2");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, 1178, 1178);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)98;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)81);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      byteArrayInputStream0.mark(13);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), 80, (byte)12);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-103);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-103);
      byteArray1[1] = (byte) (-12);
      byteArray1[2] = (byte) (-12);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-12), (-3503), 193);
      javaCharStream0.backup((byte) (-12));
      assertEquals(11, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.2482755097038791
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)35;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)35;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("#g{w8hatvH/cR4");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)35, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 117, (byte)35);
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)0);
      javaCharStream0.adjustBeginLineColumn(4906, (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.7154307243762106
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 12);
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader("gDdI9bmw(tw&&7m,I`:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, 1178, 1178);
      javaCharStream0.available = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1685, (-1715));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.bufsize = (-3011);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = '8';
      charArray0[2] = '3';
      stringReader1.mark(4074);
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      stringReader1.read(charArray0);
      StringReader stringReader3 = new StringReader("Y){0ujlF+)\"r'^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4534), (-4534));
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      assertEquals((-4534), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]s}~mO0q>;`#dI-");
      StringReader stringReader1 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)75;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-5977L));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), 0);
      javaCharStream0.maxNextCharInd = (-1);
      javaCharStream0.ReInit((Reader) null, 0, 0);
      bufferedInputStream0.available();
      javaCharStream0.nextCharInd = 613;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-116);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-2881), 0, (-2881));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.1073016318123377
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)35;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      StringReader stringReader0 = new StringReader("#g{w8hatvH/cR4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 2831);
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('g', char0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark(0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("KPVLMY;:Cl|%y7%^a");
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      stringReader0.read(charArray0);
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, (-1618));
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader3, (-1618), (-2133), (-904));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.7536544019628768
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)35;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3446, (byte)0, 4061);
      javaCharStream0.adjustBeginLineColumn(128, 0);
      javaCharStream0.adjustBeginLineColumn(4092, 4061);
      assertEquals(4094, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader1 = new StringReader("KPVLMY;:Cl|%y7%^a");
      StringReader stringReader2 = new StringReader("oWSU:AlyYY/");
      StringReader stringReader3 = new StringReader("oWSU:AlyYY/");
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = '8';
      charArray0[2] = '3';
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      stringReader1.read(charArray0);
      StringReader stringReader4 = new StringReader("Y){0ujlF+)\"r'^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4534), (-4534));
      StringReader stringReader5 = new StringReader("");
      stringReader5.reset();
      stringReader1.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader5);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, (-3), 723, (-4534));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
