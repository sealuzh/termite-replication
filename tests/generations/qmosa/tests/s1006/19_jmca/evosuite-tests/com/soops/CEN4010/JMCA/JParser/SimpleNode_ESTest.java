/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 11:59:04 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R<");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}} (ODs`[0j);");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UnaryOperator.identity();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"/*\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R<");
      simpleNode0.toString();
      simpleNode0.dump("", stringWriter0);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "nR");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7258654461894092
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      SystemInUtil.addInputLine("x");
      StringWriter stringWriter0 = new StringWriter(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*rshft");
      arrayList0.add("<INTEGER_LITERAL>");
      simpleNode0.toString();
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter1 = new StringWriter(18);
      simpleNode0.dump("Name", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n  <identifier><INTEGER_LITERAL></identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      simpleNode0.toString("UnaryExpressionNotPlusMinus");
      String string0 = simpleNode0.toString("UnaryExpressionNotPlusMinusVariableDeclaratorId : >= : <INTEGER_LITERAL> : )");
      assertEquals("UnaryExpressionNotPlusMinusVariableDeclaratorId : >= : <INTEGER_LITERAL> : )VariableDeclaratorId : >= : <INTEGER_LITERAL> : )", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8125445053464693
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("*lt");
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier("&&");
      SimpleNode simpleNode1 = new SimpleNode(3);
      simpleNode0.toString();
      simpleNode1.toString("0000");
      simpleNode0.setIdentifier("HsqhMJ6");
      simpleNode0.toString();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("&", stringWriter1);
      simpleNode0.toString();
      simpleNode1.dump("Modifiers : && : HsqhMJ6", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("*lt", stringWriter1);
      assertEquals("<Modifiers>\n  <identifier>*amp</identifier>\n  <identifier>HsqhMJ6</identifier>\n</Modifiers>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 19;
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.setIdentifier("t");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(19);
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1724800154383195
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)17;
      SimpleNode simpleNode1 = new SimpleNode(538);
      simpleNode1.jjtGetParent();
      simpleNode1.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("\"/*\"");
      simpleNode0.toString();
      simpleNode1.setIdentifier("TypeBound");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetParent();
      simpleNode1.jjtSetParent((Node) null);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("Z1/>U>XQGZ,Cv63aOh|");
      simpleNode1.jjtAddChild(simpleNode0, 28);
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tx[M>Nd^@8/to*&YD");
      simpleNode0.dump("tx[M>Nd^@8/to*&YD", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      node0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode1.toString("CRl\"jk");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 538
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7668382315802122
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rq+oYX7QU");
      arrayList0.add("Name");
      simpleNode0.toString();
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = stringWriter1.append('}');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Name");
      stringWriter2.append((CharSequence) stringBuffer0);
      simpleNode0.dump("MethodDeclarator", stringWriter2);
      assertEquals("}Name<CompilationUnit>\n  <identifier>Name</identifier>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter2.toString());
      
      simpleNode0.toString("O)0GF%");
      String string0 = simpleNode0.toString("O)0GF%");
      assertEquals("O)0GF%CompilationUnit : Name : &", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 47;
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(";");
      SystemInUtil.addInputLine("==");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(" T<&Da26", stringWriter0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E>5X3M&b\f[_H");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UnaryOperator.identity();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E>5X3M&b\f[_H");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%!\"");
      simpleNode0.toString();
      simpleNode0.dump((String) null, stringWriter0);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TryStatement");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2085);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtGetParent();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2085);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2085
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 19;
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.toString();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(19);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      int int1 = 3809;
      PipedInputStream pipedInputStream1 = new PipedInputStream(105);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream2, 121);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode0.id = 18;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) simpleNode1;
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*rshft");
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add("<INTEGER_LITERAL>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append('W');
      stringWriter1.flush();
      simpleNode0.toString();
      simpleNode0.toString("\"*=\"");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.toString();
      simpleNode1.dump("VariableDeclaratorId", stringWriter1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "InstanceOfExpression");
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      assertEquals("W<VariableDeclaratorId>\n  <identifier><INTEGER_LITERAL></identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier><INTEGER_LITERAL></identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 38;
      SystemInUtil.addInputLine("QU`mkz4.1cUv");
      SimpleNode simpleNode0 = new SimpleNode(38);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      SystemInUtil.addInputLine("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      StringReader stringReader0 = new StringReader("{");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("r!3zL-Z6!GGzx|m");
      StringReader stringReader2 = new StringReader("*lt");
      JavaParser javaParser1 = new JavaParser(stringReader2);
      JavaParser javaParser2 = new JavaParser(javaParser1.token_source);
      JavaParser javaParser3 = new JavaParser(stringReader2);
      StringReader stringReader3 = new StringReader("?:");
      StringReader stringReader4 = new StringReader("?:");
      JavaParser javaParser4 = new JavaParser(stringReader2);
      try { 
        javaParser0.InstanceOfExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: {
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681098
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("7q~@Jev?Ssvy");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-42);
      byteArray0[5] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)28;
      byteArray1[1] = (byte) (-106);
      byteArray1[2] = (byte) (-106);
      byteArray1[3] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      simpleNode0.jjtAddChild(simpleNode0, 38);
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("{", stringWriter0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4565375324787042
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.toString();
      simpleNode0.setIdentifier("Literal");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtGetParent();
      JavaParser javaParser0 = new JavaParser("<IDENTIFIER>");
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 0);
      simpleNode2.jjtSetParent((Node) null);
      SimpleNode simpleNode3 = new SimpleNode(javaParser0, 0);
      simpleNode3.jjtSetParent((Node) null);
      simpleNode1.jjtAddChild(simpleNode2, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("  <identifier>", stringWriter0);
      simpleNode2.toString();
      simpleNode3.toString("r5nY>>)2");
      simpleNode0.jjtGetParent();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode3.toString();
      simpleNode3.toString("Literal");
      Node node0 = simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
      
      simpleNode0.jjtGetNumChildren();
      node0.jjtGetParent();
      simpleNode0.jjtGetParent();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      arrayList0.add("x");
      String string0 = "PrimarySuffix";
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("*ge", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(30);
      simpleNode0.dump("<=", stringWriter0);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = new StringWriter();
      String string0 = "U+u";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U+u");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+iuCNu3C~?6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string1 = "DOT8t!yh%Lj6KFInVariableDeclaratorId";
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = 'L';
      charArray0[2] = '-';
      charArray0[3] = '@';
      charArray0[4] = 'P';
      charArray0[5] = '2';
      charArray0[6] = '{';
      // Undeclared exception!
      try { 
        stringWriter1.write(charArray0, 30, (-1103100070));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.19144408195771734
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      String string0 = "==";
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      arrayList0.add("==");
      String string1 = null;
      SystemInUtil.addInputLine((String) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("x", stringWriter0);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      String string0 = "ipPA";
      StringBuffer stringBuffer0 = new StringBuffer("ipPA");
      simpleNode0.jjtGetNumChildren();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1961);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 1962);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtSetParent(simpleNode0);
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '*';
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      arrayList0.add("");
      SystemInUtil.addInputLine("x");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump((String) null, stringWriter0);
      StringReader stringReader0 = new StringReader("Eh1?tcT");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4787515246479541
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 2);
      StringWriter stringWriter0 = new StringWriter(27);
      simpleNode0.dump("TypeParameters", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(27);
      simpleNode1.toString();
      String string0 = ">A`~vZifS";
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode1;
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(113);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = (-341);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-341));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3067);
      simpleNode0.id = 3067;
      simpleNode0.jjtAddChild(simpleNode0, 1884);
      simpleNode0.jjtAddChild(simpleNode0, 3067);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(58);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(3068, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("*lt");
      int int0 = 2649;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 2649);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("*lt", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      String string0 = "yHXN_oGn2Ec";
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.dump("yHXN_oGn2Ec", stringWriter0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("yHXN_oGn2Ec");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add("x");
      arrayList0.add("==");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("x", stringWriter0);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      String string0 = "==";
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("2H");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = null;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("2H", stringWriter0);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("?");
      SystemInUtil.addInputLine("==");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("==", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "U");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.toString();
      simpleNode0.setIdentifier("c-g\"v");
      SystemInUtil.addInputLine("U");
      simpleNode0.setIdentifier("}");
      simpleNode0.toString();
      StringWriter stringWriter3 = new StringWriter(1294);
      StringWriter stringWriter4 = stringWriter1.append((CharSequence) "?");
      simpleNode0.dump("u?", stringWriter4);
      simpleNode0.toString();
      stringWriter4.append('k');
      stringWriter4.close();
      simpleNode0.dump("4Hte3%X`(pSF,X@& }D", stringWriter4);
      assertEquals("<InstanceOfExpression>\n  <identifier>?</identifier>\n</InstanceOfExpression>\nU?<InstanceOfExpression>\n  <identifier>?</identifier>\n  <identifier>c-g\"v</identifier>\n</InstanceOfExpression>\nk<InstanceOfExpression>\n  <identifier>?</identifier>\n  <identifier>c-g\"v</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      simpleNode0.dump("&&", stringWriter2);
      assertEquals("<InstanceOfExpression>\n  <identifier>?</identifier>\n  <identifier>c-g\"v</identifier>\n</InstanceOfExpression>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("R'RhyNqc?");
      SimpleNode simpleNode0 = new SimpleNode((-220));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -220
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = (-844);
      SimpleNode simpleNode0 = new SimpleNode((-844));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-844));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      SimpleNode simpleNode1 = new SimpleNode(33);
      simpleNode0.jjtAddChild(simpleNode1, 33);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1083));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1083
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SystemInUtil.addInputLine(">=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter(591);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ArrayDimsAndInits");
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 591);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 591
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 37;
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("==");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("==", stringWriter0);
      StringReader stringReader0 = new StringReader("==");
      StringReader stringReader1 = new StringReader("==");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      simpleNode0.jjtClose();
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9998704205025659
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("*lt");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      String[] stringArray0 = new String[0];
      JavaParser.main(stringArray0);
      String string0 = "=Za";
      simpleNode0.dump("=Za", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = ">>=";
      StringReader stringReader0 = new StringReader(">>=");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 2, 692, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
