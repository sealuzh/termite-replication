/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:15:01 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("Literal");
      CharBuffer charBuffer0 = CharBuffer.allocate(48);
      CharBuffer charBuffer1 = CharBuffer.allocate(2439);
      CharBuffer charBuffer2 = CharBuffer.allocate(2439);
      CharBuffer charBuffer3 = charBuffer1.duplicate();
      charBuffer3.rewind();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("Literal");
      char[] charArray0 = new char[8];
      charBuffer0.flip();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      CharBuffer.allocate(2439);
      charBuffer2.asReadOnlyBuffer();
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("</identifier>", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>Literal</identifier>\n  <identifier>*lshft</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      CharBuffer.allocate(84);
      CharBuffer.allocate(120);
      simpleNode0.setIdentifier("yX9AS");
      simpleNode0.setIdentifier(">>");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      simpleNode0.dump("$cFf9G", stringWriter0);
      StringReader stringReader0 = new StringReader(" ");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, (-2382));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2382. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "  <identifier>";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "  <identifier>");
      int int0 = 68;
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(84);
      CharBuffer charBuffer1 = CharBuffer.allocate(84);
      charBuffer1.flip();
      CharBuffer charBuffer2 = CharBuffer.allocate(84);
      charBuffer0.limit(84);
      charBuffer2.position(84);
      CharBuffer.allocate(120);
      CharBuffer charBuffer3 = charBuffer0.duplicate();
      CharBuffer charBuffer4 = charBuffer3.asReadOnlyBuffer();
      charBuffer3.rewind();
      charBuffer4.asReadOnlyBuffer();
      charBuffer0.clear();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 't';
      charArray0[2] = 't';
      charArray0[3] = 't';
      charArray0[4] = 't';
      charArray0[5] = 't';
      charArray0[5] = 't';
      charBuffer2.rewind();
      stringWriter0.append('t');
      CharBuffer charBuffer5 = charBuffer3.put(charArray0);
      charBuffer5.asReadOnlyBuffer();
      stringWriter0.close();
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("{", stringWriter0);
      assertEquals("t<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("<");
      CharBuffer charBuffer0 = CharBuffer.allocate(57);
      CharBuffer.allocate(57);
      CharBuffer charBuffer1 = CharBuffer.allocate(57);
      char[] charArray0 = new char[4];
      charArray0[1] = 'r';
      charArray0[2] = '^';
      charArray0[3] = '`';
      charBuffer1.put(charArray0);
      charBuffer0.asReadOnlyBuffer();
      PipedInputStream pipedInputStream0 = new PipedInputStream(57);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("(nw2U0z<W");
      CharBuffer charBuffer2 = CharBuffer.allocate((byte)86);
      char[] charArray1 = new char[3];
      charArray1[0] = 'u';
      charArray1[1] = '^';
      charArray1[2] = '^';
      charBuffer2.put(charArray1);
      stringReader0.read(charBuffer2);
      stringReader0.reset();
      simpleNode0.setIdentifier(";");
      PipedInputStream pipedInputStream2 = new PipedInputStream((byte)86);
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      stringWriter0.append((CharSequence) "&a&");
      simpleNode0.dump("\"<=\"", stringWriter0);
      assertEquals("&a&<CastLookahead>\n</CastLookahead>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      String string0 = ">";
      simpleNode0.setIdentifier(">");
      int int0 = 1;
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.identifiers = null;
      CharBuffer.allocate(1);
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3381514637755787
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("E!cHz1");
      StringWriter stringWriter1 = new StringWriter(14);
      simpleNode0.setIdentifier("E!cHz1");
      stringWriter1.write(" ");
      simpleNode0.dump(" ", stringWriter1);
      StringReader stringReader0 = new StringReader(" ");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter('q');
      simpleNode0.dump("`K", stringWriter3);
      StringWriter stringWriter4 = stringWriter0.append('q');
      char[] charArray0 = new char[1];
      charArray0[0] = 'q';
      stringWriter4.write(charArray0);
      stringWriter1.write(charArray0);
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter5 = stringWriter1.append('q');
      stringWriter4.write("ConditionalOrExpression");
      StringWriter stringWriter6 = stringWriter5.append((CharSequence) " ");
      StringWriter stringWriter7 = new StringWriter();
      stringWriter7.append('F');
      stringWriter1.write(charArray0);
      stringWriter2.append('2');
      stringWriter6.append('f');
      simpleNode0.dump(")", stringWriter5);
      simpleNode0.dump("lw9)xJXW@", stringWriter3);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      SystemInUtil.addInputLine(">");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.dump("y,XQ9-&t]7i]`u|lBF|", stringWriter0);
      StringReader stringReader0 = new StringReader("NameList");
      StringWriter stringWriter1 = new StringWriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0oA7uHaj=9K6gh");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PrimaryExpression");
      simpleNode0.setIdentifier("0oA7uHaj=9K6gh");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y,XQ9-&t]7i]`u|lBF|");
      simpleNode0.dump("0oA7uHaj=9K6gh", stringWriter1);
      assertEquals("<CastLookahead>\n  <identifier>*gt</identifier>\n  <identifier>0oA7uHaj=9K6gh</identifier>\n</CastLookahead>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(936);
      CharBuffer charBuffer0 = CharBuffer.allocate(56);
      CharBuffer.allocate(56);
      CharBuffer.allocate(936);
      charBuffer0.duplicate();
      CharBuffer charBuffer1 = CharBuffer.allocate(111);
      CharBuffer.allocate(111);
      charBuffer1.rewind();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<");
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<CastLookahead>\n  <identifier>*lt</identifier>\n</CastLookahead>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("_yfJi61c3.o4|c<");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<=");
      simpleNode0.toString();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.createFolder(evoSuiteFile0);
      simpleNode0.setIdentifier(">=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ClassOrInterfaceType");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<=");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("_yfJi61c3.o4|c<");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hgb+dFXGQ");
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = ' ';
      charArray0[2] = '_';
      charArray0[3] = 'K';
      charArray0[4] = 'i';
      charArray0[5] = '{';
      charArray0[6] = 'O';
      stringWriter0.write(charArray0);
      simpleNode0.dump("yTslFz-8Uwv", stringWriter0);
      assertEquals("O _Ki{O<ClassOrInterfaceType>\n  <identifier>*ge</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("_yfJi61c3.o4|c<");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<=");
      simpleNode0.toString();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.createFolder(evoSuiteFile0);
      simpleNode0.setIdentifier(">=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<=");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("_yfJi61c3.o4|c<");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hgb+dFXGQ");
      simpleNode0.dump("yTslFz-8Uwv", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>*ge</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(43);
      StringWriter stringWriter0 = new StringWriter(43);
      simpleNode0.setIdentifier("InclusiveOrExpression");
      StringWriter stringWriter1 = new StringWriter();
      String string0 = "hgb+dFXGQ";
      StringBuffer stringBuffer0 = new StringBuffer("hgb+dFXGQ");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "InclusiveOrExpression");
      stringWriter2.write("hgb+dFXGQ");
      stringWriter2.write("InclusiveOrExpression");
      StringWriter stringWriter3 = new StringWriter();
      StringBuffer stringBuffer1 = new StringBuffer("InclusiveOrExpression");
      stringWriter2.append((CharSequence) stringBuffer0);
      CharBuffer charBuffer0 = CharBuffer.allocate(3667);
      simpleNode0.setIdentifier("&&");
      stringWriter1.append((CharSequence) charBuffer0);
      simpleNode0.dump("K*|I$bE!xuLDwU", stringWriter2);
      simpleNode0.setIdentifier("InclusiveOrExpression");
      StringWriter stringWriter4 = null;
      try {
        stringWriter4 = new StringWriter((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6061920506332319
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("Literal");
      CharBuffer charBuffer0 = CharBuffer.allocate(48);
      CharBuffer charBuffer1 = CharBuffer.allocate(2439);
      CharBuffer.allocate(2439);
      charBuffer1.duplicate();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      charArray0[5] = 'r';
      charArray0[6] = 'r';
      charArray0[7] = 'r';
      CharBuffer charBuffer2 = CharBuffer.wrap(charArray0);
      charBuffer2.rewind();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList0.add("&");
      charBuffer0.put(charArray0);
      charBuffer1.asReadOnlyBuffer();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>*amp</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode('R');
      CharBuffer.allocate(88);
      CharBuffer.allocate(0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.toString();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(88);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 0, 0);
      simpleNode0.dump("DoStatement : <=", stringWriter0);
      assertEquals("<DoStatement>\n  <identifier>*le</identifier>\n</DoStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      SimpleNode simpleNode1 = new SimpleNode(55);
      JavaParser javaParser0 = new JavaParser("_yfJi61c3.o4|c<");
      simpleNode0.jjtSetParent(simpleNode1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetParent();
      assertNotNull(simpleNode2);
      
      simpleNode1.toString((String) null);
      simpleNode0.toString("WMlB\"?Hv~M^!K");
      simpleNode0.toString();
      SimpleNode simpleNode3 = new SimpleNode(55);
      simpleNode3.jjtGetParent();
      simpleNode2.jjtGetParent();
      String string0 = simpleNode2.toString("8 $gZO)CU(v7jeI\"&2w");
      assertEquals("8 $gZO)CU(v7jeI\"&2wUnaryExpressionNotPlusMinus", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 105);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node[] nodeArray1 = new Node[4];
      nodeArray1[0] = (Node) simpleNode0;
      nodeArray1[1] = (Node) simpleNode0;
      nodeArray1[2] = (Node) simpleNode0;
      nodeArray1[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray1;
      simpleNode0.jjtGetNumChildren();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.338448149134649
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode1.dump("/5Dqb\"I2,C1", stringWriter0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)126;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zF$LCcMG,8JXKru$m-M");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(74);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PrimaryExpression");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PrimaryExpression");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.dump("", stringWriter0);
      assertEquals("<BlockStatement>\n</BlockStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2843);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-108);
      JavaParser javaParser0 = new JavaParser("=<=");
      Node node0 = javaParser0.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.getBuffer();
      StringWriter stringWriter3 = new StringWriter(36);
      StringWriter stringWriter4 = new StringWriter(36);
      stringWriter2.getBuffer();
      StringWriter stringWriter5 = new StringWriter(36);
      CharBuffer.allocate(36);
      stringWriter0.append((CharSequence) "bl");
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter(25);
      char[] charArray0 = new char[0];
      SimpleNode simpleNode0 = new SimpleNode(457);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("bl");
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(36);
      charBuffer1.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        simpleNode0.dump("}>>", stringWriter4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3910032313883347
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      SystemInUtil.addInputLine("*amp");
      simpleNode0.parser = null;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.toString("<identifier>Literal Value</identifier>\n");
      simpleNode0.toString();
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PackageDeclaration");
      simpleNode0.parent = nodeArray0[0];
      simpleNode0.toString("ZXbLP");
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtAddChild(nodeArray0[0], 1);
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      simpleNode0.toString("<identifier>Literal Value</identifier>\nPackageDeclaration");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(119);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 119
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6204086093677565
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SystemInUtil.addInputLine((String) null);
      JavaParser javaParser0 = new JavaParser("throw");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 1406);
      simpleNode0.jjtGetChild(1232);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1703);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1703
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6893744712390798
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode('[');
      Node[] nodeArray0 = new Node[8];
      SimpleNode simpleNode1 = new SimpleNode(0);
      nodeArray0[1] = (Node) simpleNode1;
      simpleNode0.parent = nodeArray0[1];
      simpleNode1.parent = nodeArray0[1];
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x0");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ArrayInitializer");
      simpleNode0.dump("ArrayInitializer", stringWriter0);
      assertEquals("<SynchronizedStatement></SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(84);
      CharBuffer.allocate(84);
      charBuffer0.flip();
      CharBuffer.allocate(84);
      CharBuffer.allocate(120);
      CharBuffer charBuffer1 = charBuffer0.duplicate();
      CharBuffer charBuffer2 = charBuffer1.asReadOnlyBuffer();
      CharBuffer charBuffer3 = CharBuffer.allocate(120);
      CharBuffer.allocate(84);
      charBuffer2.duplicate();
      char[] charArray0 = new char[6];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      charArray0[5] = 'r';
      CharBuffer.wrap(charArray0);
      charBuffer1.rewind();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      charBuffer3.put(charArray0);
      charBuffer1.asReadOnlyBuffer();
      StringWriter stringWriter0 = new StringWriter(120);
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)126;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zF$LCcMG,8JXKru$m-M");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1152223358406532
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char char0 = '[';
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode1, 4894);
      // Undeclared exception!
      simpleNode1.dump("/5Dqb\"I2,C1", stringWriter0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4118090007716961
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[8];
      StringBuffer stringBuffer0 = new StringBuffer("N=<");
      char[] charArray0 = new char[9];
      charArray0[3] = 'o';
      charArray0[2] = 'E';
      charArray0[3] = '7';
      charArray0[4] = 't';
      charArray0[6] = 't';
      charArray0[7] = '+';
      charArray0[8] = 't';
      StringBuffer stringBuffer1 = new StringBuffer();
      CharBuffer.allocate(8);
      nodeArray0[0] = (Node) simpleNode0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N=<");
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(nodeArray0[2], 38);
      Node node0 = simpleNode0.jjtGetChild(13);
      simpleNode0.jjtAddChild((Node) null, 13);
      simpleNode0.jjtAddChild(node0, 38);
      SimpleNode simpleNode1 = new SimpleNode('E');
      assertEquals(0, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(96);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 38;
      SimpleNode simpleNode0 = new SimpleNode(38);
      simpleNode0.setIdentifier("*le");
      simpleNode0.toString();
      simpleNode0.setIdentifier("}");
      int int1 = 3972;
      StringWriter stringWriter0 = new StringWriter(38);
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'm';
      charArray0[3] = ' ';
      charArray0[4] = ' ';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      MockFile mockFile0 = new MockFile("nS)fY]", "nS)fY]");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(84);
      CharBuffer.allocate(84);
      charBuffer0.flip();
      CharBuffer charBuffer1 = CharBuffer.allocate(84);
      charBuffer0.clear();
      charBuffer1.position(84);
      CharBuffer.allocate(120);
      CharBuffer charBuffer2 = charBuffer0.duplicate();
      charBuffer2.asReadOnlyBuffer();
      charBuffer2.rewind();
      charBuffer2.asReadOnlyBuffer();
      charBuffer2.flip();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charBuffer2.rewind();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("*ge");
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charBuffer3.put(charArray0);
      CharBuffer charBuffer4 = CharBuffer.wrap(charArray0);
      charBuffer4.asReadOnlyBuffer();
      simpleNode0.dump("c", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*ge</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(36);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.getBuffer();
      StringWriter stringWriter3 = new StringWriter(36);
      StringWriter stringWriter4 = new StringWriter(36);
      stringWriter2.getBuffer();
      StringWriter stringWriter5 = new StringWriter(36);
      CharBuffer.allocate(36);
      stringWriter0.append((CharSequence) "bl");
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter(25);
      char[] charArray0 = new char[0];
      stringWriter6.write(charArray0);
      SimpleNode simpleNode0 = new SimpleNode((-1433728624));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1433728624
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2508570947192674
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.dump("/5Dqb\"I2,C1", stringWriter0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zF$LCcMG,8JXKru$m-M");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 2676);
      simpleNode1.dump("/5Dqb\"I2,C1", stringWriter0);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 372, 3682, (-1103827680));
      String string0 = "(Ti%|`1oEN7\\[O";
      StringReader stringReader0 = new StringReader("W6.B(O");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("(Ti%|`1oEN7[O");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser2 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.AllocationExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: W6
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (byte)85);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2004318069));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2004318069));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5084965683569505
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode1.dump("/5Dqb\"I2,C1", stringWriter0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode1.jjtSetParent(simpleNode0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/5Dqb\"I2,C1");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zF$LCcMG,8JXKru$m-M");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-4466), 2503, (-4466));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-430));
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -430
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)64);
      String string0 = simpleNode0.toString("LZjGt\"OUcsG]Q");
      assertEquals("LZjGt\"OUcsG]QBooleanLiteral", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 98);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-119304647));
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      simpleNode0.jjtClose();
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":`btBW8?-Kqen");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2095137609), (-1075307805));
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      charArray0[1] = 'b';
      javaCharStream0.readChar();
      charArray0[2] = 'K';
      charArray0[3] = 'M';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1075307805));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("*le");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader1 = new StringReader("(Ti%|`1oEN7[O");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      try { 
        javaParser0.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 4.  Encountered: %
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }
}
