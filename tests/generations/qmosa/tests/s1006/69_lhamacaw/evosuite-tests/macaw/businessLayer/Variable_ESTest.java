/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 22:22:37 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setCodeBookNumber("f?e{/(us:et");
      rawVariable0.getQuestionNumber();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("f?e{/(us:et", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.763176273492808
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("SQ.lB<J]$5,z>u:p");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      User user0 = new User("macaw.businessLayer.VariableSummary", ";");
      user0.setStatus("variable.isCoded.label");
      rawVariable1.cloneAttributes(derivedVariable2);
      derivedVariable2.createVariableSummary();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      user0.setStatus("variable.columnEnd.label");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable3.getSourceVariables();
      derivedVariable2.addSourceVariables(arrayList0);
      derivedVariable0.getAlternativeVariable();
      assertEquals("SQ.lB<J]$5,z>u:p", derivedVariable0.getLabel());
      
      derivedVariable4.getAlternativeVariable();
      assertFalse(derivedVariable4.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      rawVariable0.setNotes("~SX-rs}}0/$O");
      rawVariable0.setColumnEnd("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      rawVariable0.getAlias();
      rawVariable0.form = "variable.year.label";
      rawVariable0.getColumnStart();
      rawVariable0.getColumnEnd();
      rawVariable0.getAvailability();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      Predicate<Object> predicate1 = null;
      // Undeclared exception!
      try { 
        predicate0.and((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.7254178936302726
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setLabel("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      rawVariable0.setIdentifier(2162);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      User user0 = new User();
      user0.clone();
      user0.setAddressLine1("lQ1w\"fyY");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ontologyTerm0.setIdentifier(2162);
      rawVariable0.getAvailability();
      rawVariable0.getDisplayName();
      user0.setEmail("F?Qg54M3R3=o");
      rawVariable0.setCleaned(false);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis((-1470L));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable1);
      arrayList1.listIterator();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getAlias();
      System.setCurrentTimeMillis(1872L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.747084611161251
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("f?e{/(us:et");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.setLabel("$co6J>Aor[6");
      User user0 = new User((String) null, "@?:]{");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setName((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.077410807419354
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      derivedVariable0.setCoded(true);
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.888368004457531
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("8Nqx7H\"qbcJ");
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm0.setNameSpace(">>AKF\n{[`");
      ontologyTerm5.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm3.setDescription("^xvsh t_N 1h(");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm3.setNameSpace(">>AKF\n{[`");
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm3.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Variable.validateFields(rawVariable0);
      rawVariable1.getNotes();
      rawVariable0.isCleaned();
      assertTrue(rawVariable0.isCleaned());
      
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.747677447426901
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("variable.label.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      User user0 = new User("", "6xvsh t_N 1h(");
      user0.setStatus("variable.label.label");
      rawVariable0.cloneAttributes(rawVariable1);
      derivedVariable1.createVariableSummary();
      derivedVariable1.createVariableSummary();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setColumnStart((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      user0.setStatus("variable.label.label");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.getSourceVariables();
      derivedVariable0.getForm();
      assertEquals("variable.label.label", derivedVariable0.getLabel());
      
      String string0 = derivedVariable3.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode((String) null);
      supportingDocument1.setDescription(")/^0h 7j,N2`");
      supportingDocument0.setFileName("i=4G.`zBg{s2QRw");
      supportingDocument1.setDocumentCode("blank");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "variable.name.label";
      derivedVariable1.removeSupportingDocuments(arrayList0);
      String string0 = derivedVariable1.getFilePath();
      assertEquals("", string0);
      
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(2147483645);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      user0.setIdentifier((-202356767));
      String string0 = "OxCiv7Ww(`M}9z<p;";
      User user1 = new User();
      try { 
        User.checkValidUserIDField("OxCiv7Ww(`M}9z<p;");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"OxCiv7Ww(`M}9z<p;\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.6953011722398377
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getIdentifier();
      rawVariable0.getCleaningStatus();
      rawVariable0.setName("UNABLE_TO_FILTER_SUMMARIES");
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setAffiliation("S!8&1eQ8UlE2?uJd");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningStatus();
      rawVariable0.getDisplayName();
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningDescription();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      rawVariable1.setCoded(false);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getName();
      System.setCurrentTimeMillis(0L);
      rawVariable0.isCoded();
      assertEquals("UNABLE_TO_FILTER_SUMMARIES", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("s3Ojx,[=*");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setIdentifier(125);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1);
      supportingDocument0.setDescription("Eix3B7'2L;`");
      supportingDocument1.setFileName("Z");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument3);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument7);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument6);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1482232081386297
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setLabel(")/^0h 7j,N2`");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("variable.availability.label", "A`+hY'DCbSw|&q");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addSupportingDocuments(arrayList0);
      rawVariable2.setAlias("A`+hY'DCbSw|&q");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      assertEquals("A`+hY'DCbSw|&q", rawVariable2.getAlias());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0213871988776284
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("$co6J>Aor[6", "$co6J>Aor[6");
      rawVariable0.columnStart = "iLi7't/poHkr31|Fz)5";
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("iLi7't/poHkr31|Fz)5", rawVariable0.getColumnStart());
      assertEquals(2, arrayList1.size());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.6634504088569395
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User(" 3Mo@#Mb", " 3Mo@#Mb");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.form = "blank";
      derivedVariable2.removeSourceVariable(derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel(" 3Mo@#Mb");
      assertEquals(" 3Mo@#Mb", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      user1.setStatus("^xvsh t_N 1h(");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      assertFalse(derivedVariable4.isNewRecord());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.96472611285393
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setNotes("<t");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setNameSpace("4N*OVkO&T;UAV]YJ");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm9);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm12);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getNotes();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.769124410949862
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setName("DOQe(MSNTK5APoQ");
      derivedVariable0.setIdentifier(1469);
      derivedVariable0.setColumnEnd("DOQe(MSNTK5APoQ");
      derivedVariable0.getFilePath();
      System.setCurrentTimeMillis((-1920L));
      derivedVariable0.clone();
      derivedVariable0.getValueLabels();
      derivedVariable0.getName();
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("qB-2U");
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      supportingDocument0.setFileName("$co6J>Aor[6");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDocumentCode("s3Ojx,[=*");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      ArrayList<SupportingDocument> arrayList2 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.837855607195868
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription(">0s*4");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.columnEnd = "GytJ-qIyiGw(";
      rawVariable0.setLabel("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.56760972605144
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User(" 3Mo@#Mb", " 3Mo@#Mb");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable2);
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isNewRecord());
      
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName(" 3Mo@#Mb");
      User user2 = new User();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user2, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent1);
      
      User user3 = new User((String) null, " 3Mo@#Mb");
      user1.setLastName(" 3Mo@#Mb");
      user1.setStatus((String) null);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      assertFalse(derivedVariable3.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0762831852240327
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      ontologyTerm4.setNameSpace("u)/s%,r:t");
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setNotes("4N*OVkO&T;UAV]YJ");
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setFilePath(" type=");
      rawVariable2.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm10.setIdentifier((-1947));
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm10);
      Variable.validateFields(rawVariable1);
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      assertEquals("4N*OVkO&T;UAV]YJ", rawVariable0.getNotes());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.692877746599849
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("UNABLE_TO_CREATE_RAW_VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      User user0 = new User("^xvsh t_N 1h(", "DUPLICATE_DOCUMENT_ASSOCIATION");
      user0.setStatus("UNABLE_TO_CREATE_RAW_VARIABLE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.codeBookNumber = "UNABLE_TO_CREATE_RAW_VARIABLE";
      derivedVariable2.createVariableSummary();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.createVariableSummary();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable4, derivedVariable1);
      user0.setStatus("^xvsh t_N 1h(");
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable5.setYear("UNABLE_TO_CREATE_RAW_VARIABLE");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable5, derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_RAW_VARIABLE", derivedVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.8716237051094007
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      User user0 = new User("Ja_w)IP|^R#jK", "Ja_w)IP|^R#jK");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = "N[Ghly";
      rawVariable0.cloneAttributes(derivedVariable1);
      user0.setStatus("6]$|Kjx\b.");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.0959250185828013
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      rawVariable0.setNotes(" 3Mo@#Mb");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm5.setNameSpace((String) null);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm9);
      User user0 = new User((String) null, "Q#I;b'x");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals(" 3Mo@#Mb", rawVariable0.getNotes());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.195641802808069
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("\"fDJy?R0gZV.b");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("\"f.ZJ?R0gZV.b");
      rawVariable1.setCleaningStatus("Unknown");
      ontologyTerm0.setIdentifier(122);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName((String) null);
      ontologyTerm0.setNameSpace((String) null);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes(" type=");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.setCategory((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getCategory();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7905058231471247
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-2694));
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm5.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm3.setDescription("^xvsh t_N 1h(");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm3.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.319904429847949
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setIdentifier((-1));
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm5.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      assertTrue(rawVariable0.isCleaned());
      
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      User user0 = new User("FaBfbl", "UNABLE_TO_CREATE_CLEANING_STATE");
      user0.setFirstName("FaBfbl");
      user0.setLastName("");
      user0.setStatus("FaBfbl");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.102979893314789
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.setCategory("f?e{/(us:et");
      RawVariable rawVariable1 = new RawVariable();
      ontologyTerm0.setNameSpace(" type=");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setNotes(" type=");
      rawVariable2.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.removeOntologyTerm(ontologyTerm1);
      rawVariable3.addOntologyTerm(ontologyTerm0);
      rawVariable3.setCategory("6ZZI0Njr /sJsj");
      assertEquals("6ZZI0Njr /sJsj", rawVariable3.getCategory());
      
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.021198608590028
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "0rs!gXd^", "0rs!gXd^");
      macawChangeEvent0.setChangeMessage("`Q<,M=Gx");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("$co6J>Aor[6", "$co6J>Aor[6");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("Z", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5796288706165487
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsOntologyTerm(ontologyTerm3);
      ontologyTerm3.setNameSpace(">>AKF\n{[`");
      ontologyTerm3.setNewRecord(true);
      rawVariable1.updateOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setDescription(">>AKF\n{[`");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm7.setNameSpace(">%J");
      rawVariable1.removeOntologyTerm(ontologyTerm8);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.662800354685759
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "";
      rawVariable0.setIdentifier((-1));
      User user0 = new User("", "variable.name.label");
      user0.clone();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setForm("");
      rawVariable0.getOntologyTerms();
      rawVariable0.clone();
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.6713209098976862
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setLabel("m+KYBu");
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getLabel();
      assertEquals("m+KYBu", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User(" type=", "");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getCategory();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7960809859517783
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable2);
      rawVariable1.getFilePath();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable2.removeOntologyTerm(ontologyTerm5);
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      
      ontologyTerm5.setIdentifier((-2078209979));
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.044769575831093
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm0.setNameSpace(">>AKF\n{[`");
      ontologyTerm5.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm2.setDescription("aXI2Z3=jB*");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("aXI2Z3=jB*");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm5.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.7181312982147023
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setLabel("`Oy");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable1);
      User user0 = new User("$co6J>Aor[6", "$co6J>Aor[6");
      derivedVariable1.setCleaningStatus("variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("`Oy", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setNameSpace((String) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6858928864840323
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel(" type=");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      derivedVariable3.setCodeBookNumber("^xvsh t_N 1h(");
      User user1 = new User();
      user1.setStatus("^xvsh t_N 1h(");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable4, derivedVariable3);
      assertEquals("^xvsh t_N 1h(", derivedVariable3.getCodeBookNumber());
      
      derivedVariable2.getYear();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.150824630025469
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("OQrW.20");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("lQ1w\"fyY");
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.setNotes("<iJz%Wk+G");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("<iJz%Wk+G");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("lQ1w\"fyY", "<iJz%Wk+G");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("<iJz%Wk+G", rawVariable0.getNotes());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.817780970897432
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("\"f.ZJ?R0gZV.b");
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("\"f.ZJ?R0gZV.b");
      rawVariable0.setCleaningStatus("\"f.ZJ?R0gZV.b");
      rawVariable0.setCleaningStatus("UNABLE_TO_UPDATE_RAW_VARIABLE");
      ontologyTerm0.setIdentifier(1005);
      ontologyTerm0.setOntologyName("\"f.ZJ?R0gZV.b");
      ontologyTerm0.setNameSpace("|Aq");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("|Aq");
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable1.getFilePath();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("|Aq", rawVariable0.getNotes());
      
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(rawVariable2);
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.06586110286402
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("8Nqx7H\"qbcJ");
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm0.setNameSpace(">>AKF\n{[`");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm2.setDescription("T8I2ZYB*");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm2.setDescription("8Nqx7H\"qbcJ");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("T8I2ZYB*");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm8.setOntologyName("T8I2ZYB*");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm8);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      User user0 = new User();
      user0.setEmail("1.o2j4d]R[snW&7*jj-");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.0207727595535117
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningDescription("NON_EXISTENT_VARIABLE");
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      assertEquals("NON_EXISTENT_VARIABLE", derivedVariable1.getCleaningDescription());
      
      derivedVariable2.getValueLabels();
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.6865915443255473
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("m+KYBu");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable2.setQuestionNumber((String) null);
      user0.setStatus("^xvsh t_N 1h(");
      derivedVariable2.createVariableSummary();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.718786438788422
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("lQ1w\"fyY");
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      ontologyTerm7.setIdentifier(1024);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.setNotes("<iJz%Wk+G");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("<iJz%Wk+G");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm11);
      rawVariable1.hasSameDisplayName(rawVariable0);
      assertEquals("<iJz%Wk+G", rawVariable0.getNotes());
      
      rawVariable1.getLabel();
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.884962359528181
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("", "P1%/94hXJpFg!9\"R;S");
      User.detectFieldChanges(user1, user1, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.getSupportingDocuments();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument5);
      assertTrue(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getFilePath();
      User user0 = new User("gU1r_r1Eg%QbV&", "']yX");
      user0.setStatus("");
      derivedVariable1.getYear();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      String string0 = "Unknown";
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument6);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument7);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable3.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.780290121790627
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setLabel("G%=$4I|cVOW_]1sp");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setQuestionNumber(">HvR=]:");
      rawVariable0.setCategory("G%=$4I|cVOW_]1sp");
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.getQuestionNumber();
      assertEquals("G%=$4I|cVOW_]1sp", rawVariable0.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      supportingDocument1.setDocumentCode((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument3);
      assertTrue(boolean0);
      
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      user0.setPostCode("");
      user0.setPostCode("i8rVR`'D)");
      User user1 = new User();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user1, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("$VALUES");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      String string0 = "variable.availability.label";
      supportingDocument2.setFileName("variable.availability.label");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      String string1 = "Gk[";
      supportingDocument0.setDocumentCode("Gk[");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument3);
      derivedVariable0.addSupportingDocument(supportingDocument4);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("i=4G.`zBg{s2QRw");
      supportingDocument1.setDocumentCode("s3Ojx,[=*");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      assertTrue(boolean0);
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.837855607195868
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.columnEnd = "GytJ-qIyi,w(";
      rawVariable0.setLabel("`Oy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("`Oy", "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.6855348485320096
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      User user0 = new User();
      user0.setAffiliation(")^#2yD4R^3ty]s6C.");
      User user1 = new User();
      user1.setAddressLine1("variable.alias.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Unknown");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.clone();
      assertEquals("Unknown", rawVariable0.getName());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.9194888994294277
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.parallelStream();
      rawVariable0.setValueLabels(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNewRecord(true);
      rawVariable0.clone();
      rawVariable0.setYear("");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setOntologyName("variable.columnStart.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setNotes("");
      rawVariable0.getCleaningDescription();
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningDescription();
      rawVariable0.getAvailability();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.7035429024110975
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setAvailability((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.form = "q";
      rawVariable0.setNotes("q");
      rawVariable0.getNotes();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("q", "q");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable1);
      user1.setStatus("F0<)5$w\"8-O`qTT?iC=");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.786694220346919
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      User user1 = new User("MacawProperties", "MacawProperties");
      user0.setPhone("WW-LM~VlwTF7#");
      user1.setUserID("Qw@Wcm,aBO;bX");
      user1.setAffiliation("UNABLE_TO_GET_USERS");
      user1.setStatus("IoI7$9ZT6");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("Eix3B7'2L;`");
      supportingDocument1.setFileName("Z");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      supportingDocument2.setDescription("bkawXV|Rbnom~]");
      supportingDocument2.setDocumentCode("UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument3);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument7);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.683859228591611
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("OQrW.20");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm2.setTerm("T|UB%W");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("lQ1w\"fyY");
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.setNotes("<iJz%Wk+G");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      User user0 = new User("<iJz%Wk+G", "<iJz%Wk+G");
      user0.setAffiliation("T|UB%W");
      User user1 = new User();
      user0.setStatus("p@)9<U+u2k C");
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("<iJz%Wk+G", rawVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.7835056391637987
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User("Ja_w)IP|^R#jK", "Ja_w)IP|^R#jK");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setTerm((String) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("");
      rawVariable1.setLabel("Ja_w)IP|^R#jK");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable2.getFilePath();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable2.updateOntologyTerm(ontologyTerm7);
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm7.getNameSpace());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "f?e{/(us:et", "f?e{/(us:et");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      User user0 = new User("$co6J>Aor[6", "u{;Z%oL/Q}~pF");
      user0.setAffiliation("f?e{/(us:et");
      user0.setStatus("variable.saveChanges.valueChanged");
      assertEquals("", user0.getEmail());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8573144420618495
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaningStatus((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("OQrW.20");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm2.setNameSpace("OQrW.20");
      ontologyTerm2.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ontologyTerm0.setDescription("OQrW.20");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.setNameSpace("OQrW.20");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm4.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setOntologyName("n<8V|S");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCleaned());
      
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ArrayList<String> arrayList3 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals(1, arrayList3.size());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription(")/^0h 7j,N2`");
      supportingDocument0.setFileName("i=4G.`zBg{s2QRw");
      supportingDocument1.setDocumentCode("blank");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable1.getFilePath();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable1.getNotes();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm5.setNameSpace("variable.cleaningStatus.label");
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7542454494884048
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      User user0 = new User();
      user0.setIdentifier((-4051));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.clone();
      derivedVariable0.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setAlias("G.An.P/v/[y>");
      rawVariable0.questionNumber = "";
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.clone();
      derivedVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getIdentifier();
      derivedVariable0.setForm("G.An.P/v/[y>");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("G.An.P/v/[y>", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("Ja_w)IP|^R#jK");
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add(supportingDocument0);
      arrayList0.forEach(consumer0);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      user0.setStatus("WW-LM~VlwTF7#");
      User.detectFieldChanges(user0, user0, user0);
      arrayList0.add(supportingDocument0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Ja_w)IP|^R#jK", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.733857589601352
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      System.setCurrentTimeMillis((-1025L));
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.087247015714612
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User(" 3Mo@#Mb", " 3Mo@#Mb");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable1.addValueLabel((ValueLabel) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode(" 3Mo@#Mb");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      derivedVariable1.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(arrayList2.isEmpty());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.7386540184706605
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      user1.setStatus("Tg<o=>PuSKSj4C`w");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("9AQ<V$Kg6ES1_E{7jw");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable3);
      user0.setStatus("6xvsh t_N 1h(");
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.columnStart = "general.error.blankField";
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("9AQ<V$Kg6ES1_E{7jw", derivedVariable0.getLabel());
      
      user1.setStatus("6xvsh t_N 1h(");
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable4.getSourceVariables();
      derivedVariable5.addSourceVariables(arrayList0);
      derivedVariable2.getAlternativeVariable();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.755330536780532
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("iLi7't/poHkr31|Fz)5", "Au5Z`*U");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("S4F%tB.+");
      rawVariable1.columnStart = "S4F%tB.+";
      user1.setCity(" 3Mo@#Mb");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable1);
      user1.setStatus("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.cloneAttributes(rawVariable0);
      user1.setStatus(" 3Mo@#Mb");
      derivedVariable1.createVariableSummary();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable2);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5786000152695845
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm0.setTerm("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm1.setNameSpace("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.67380880533574
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm5.setNameSpace("`");
      rawVariable0.containsOntologyTerm(ontologyTerm6);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.setNotes("c=;* ");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm10.setNameSpace("VARIABLE");
      rawVariable0.addOntologyTerm(ontologyTerm3);
      assertEquals("c=;* ", rawVariable0.getNotes());
      
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm11);
      rawVariable1.getCodeBookNumber();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.7871859497650022
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User("N[Ghly", "");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.setCategory("N[Ghly");
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("N[Ghly");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      ontologyTerm3.setNameSpace("");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm3);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setNotes("m+KYBu");
      rawVariable3.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable5 = new RawVariable();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.removeOntologyTerm(ontologyTerm2);
      rawVariable0.addOntologyTerm(ontologyTerm2);
      rawVariable4.setCategory("m+KYBu");
      RawVariable rawVariable7 = new RawVariable();
      RawVariable rawVariable8 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "N[Ghly";
      derivedVariable0.cloneAttributes(rawVariable6);
      derivedVariable0.addSourceVariable(rawVariable4);
      assertEquals("m+KYBu", rawVariable4.getCategory());
      assertEquals("m+KYBu", rawVariable4.getNotes());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.7386419619981432
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      user1.setStatus("Tg<o=>PuSKSj4C`w");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable0);
      derivedVariable0.codeBookNumber = "9AQ<V$Kg6ES1_E{7jw";
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("9AQ<V$Kg6ES1_E{7jw");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable3);
      user0.setStatus("6xvsh t_N 1h(");
      rawVariable0.cloneAttributes(derivedVariable0);
      user0.setPassword("9AQ<V$Kg6ES1_E{7jw");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.columnStart = "general.error.blankField";
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable5 = new DerivedVariable();
      String string0 = derivedVariable5.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.8111422360019844
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[2];
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEventArray0[0] = macawChangeEvent0;
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "attPJD", "$co6J>Aor[6");
      macawChangeEvent1.setChangedObjectIdentifier((-1319));
      macawChangeEventArray0[1] = macawChangeEvent1;
      arrayList0.toArray(macawChangeEventArray0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("`Oy", "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "`Oy";
      derivedVariable1.columnStart = "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      Variable.validateFields(derivedVariable1);
      assertEquals("`Oy", derivedVariable1.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("variable.availability.label");
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      derivedVariable1.setColumnStart("eDZ\rT&+\"8u92(Ro2K");
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("eDZ\rT&+\"8u92(Ro2K", derivedVariable1.getColumnStart());
      
      derivedVariable0.getFilePath();
      User user0 = new User("general.fieldValue.unknown", "");
      user0.setStatus("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.7271441979991238
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.cloneAttributes(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel(" type=");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable2);
      derivedVariable4.setCodeBookNumber("^xvsh t_N 1h(");
      User user1 = new User();
      user1.setStatus("^xvsh t_N 1h(");
      DerivedVariable derivedVariable5 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable5, derivedVariable4);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.7147403468910993
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      User user0 = new User("N[Ghly", "N[Ghly");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setForm("N[Ghly");
      user0.setPostCode("variable.alias.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel0, valueLabel0);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertEquals("N[Ghly", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.969962765851586
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "0rs!gXd^", "0rs!gXd^");
      macawChangeEvent0.setChangeMessage("`Q<,M=Gx");
      macawChangeEvent0.setChangedObjectIdentifier((-1319));
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      arrayList0.toArray(macawChangeEventArray0);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setLabel("Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("$co6J>Aor[6", "$co6J>Aor[6");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Z", rawVariable0.getLabel());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.6205903623848696
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setDocumentCode(" =vI)>zIJFT1Rho");
      supportingDocument3.setDocumentCode("-");
      derivedVariable0.setColumnEnd(" =vI)>zIJFT1Rho");
      supportingDocument1.setDocumentCode("mDo:RFd.5MZ!-Z");
      supportingDocument1.setTitle("MJ62H6W>9Z2Md+6r.");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      SupportingDocument supportingDocument6 = new SupportingDocument();
      arrayList0.add(supportingDocument6);
      arrayList0.sort(comparator0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals(" =vI)>zIJFT1Rho", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("iLi7't/poHkr31|Fz)5");
      derivedVariable1.removeSupportingDocuments(arrayList0);
      assertEquals("iLi7't/poHkr31|Fz)5", derivedVariable1.getCodeBookNumber());
      
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.8872385926133708
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User();
      user0.setStatus("W{");
      user0.setAffiliation(")^#2yD4R^3ty]s6C.");
      user0.setAddressLine1(")^#2yD4R^3ty]s6C.");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.996243532876315
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm0.setNameSpace(">>AKF\n{[`");
      ontologyTerm5.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm2.setDescription("T8I2ZYB*");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("T8I2ZYB*");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm8.setOntologyName("T8I2ZYB*");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm8);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCleaningStatus();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      User user0 = new User("Wgo`t^`v:[X1J8e(oVh", "Wgo`t^`v:[X1J8e(oVh");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5914258180806007
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("lQ1w\"fyY");
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.setNotes("<iJz%Wk+G");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("<iJz%Wk+G");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm(ontologyTerm11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ontologyTerm0.setTerm("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      rawVariable0.getColumnEnd();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm(ontologyTerm5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.setCleaningDescription("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      ontologyTerm4.setNameSpace("variable.cleaningDescription.label");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      assertEquals("UNABLE_TO_CREATE_AVAILABILITY_STATE", rawVariable0.getCleaningDescription());
      
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm7);
      boolean boolean0 = rawVariable1.hasSameDisplayName(rawVariable2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription(")/^0h 7j,N2`");
      supportingDocument0.setFileName("i=4G.`zBg{s2QRw");
      supportingDocument1.setDocumentCode("s3Ojx,[=*");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean1 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1 == boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User();
      user0.setStatus("W{");
      user0.setCity(")^#2yD4R^3ty]s6C.");
      user0.setPassword("NEW");
      user0.setAffiliation(")^#2yD4R^3ty]s6C.");
      user0.setAddressLine1(")^#2yD4R^3ty]s6C.");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "W{";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("W{", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "variable.alternativeVariable.label";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("variable.alternativeVariable.label", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.9185474362339128
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.clone();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("8Nqx7H\"qbcJ");
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      ontologyTerm0.setNameSpace(">>AKF\n{[`");
      ontologyTerm5.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm3.setDescription("^xvsh t_N 1h(");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.setName("8Nqx7H\"qbcJ");
      ontologyTerm3.setNameSpace(">>AKF\n{[`");
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm3.setNameSpace("iLi7't/poHkr31|Fz)5");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Variable.validateFields(rawVariable0);
      assertEquals("8Nqx7H\"qbcJ", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable1.setForm("`Oy");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      assertEquals("`Oy", derivedVariable1.getForm());
      
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.789574063030476
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm5.setNameSpace("u)/s%,r:t");
      rawVariable0.containsOntologyTerm(ontologyTerm6);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setNotes("variable.cleaningDescription.label");
      assertEquals("variable.cleaningDescription.label", rawVariable0.getNotes());
      
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.0093944064818436
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("{\"=.$rP1@RWWa");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument3);
      derivedVariable0.getOntologyTerms();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.040609128236604
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setName("Unknown");
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable1.setName("variable.columnEnd.label");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getFilePath();
      User user0 = new User("general.fieldValue.unknown", "");
      user0.setStatus("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8967624021371803
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable2);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      User user1 = new User("MacawProperties", "MacawProperties");
      user1.setLastName("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      user1.setStatus("UNABLE_TO_GET_USERS");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      assertFalse(derivedVariable3.isNewRecord());
      assertFalse(derivedVariable3.isCleaned());
      assertFalse(derivedVariable3.isCoded());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.8747936044560056
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals(1, arrayList1.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.validateFields(derivedVariable0);
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.791517210253016
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm4.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm4.setNameSpace("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_DUPLICATE");
      ontologyTerm4.setDescription("^xvsh t_N 1h(");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm0.setNameSpace("^xvsh t_N 1h(");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setQuestionNumber("^xvsh t_N 1h(");
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      Variable.validateFields(rawVariable2);
      assertEquals("^xvsh t_N 1h(", rawVariable2.getQuestionNumber());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.934330795457399
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User(" type=", " type=");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setTerm("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm3.setOntologyName("ko AtP,Cr*i@Mv)&Fe9");
      rawVariable0.setIdentifier((-280));
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      rawVariable0.getColumnEnd();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("-280", rawVariable0.getDisplayItemIdentifier());
      
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable1);
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.8989037920123204
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.addSourceVariable(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setQuestionNumber("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCoded(false);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnStart();
      Variable.validateFields(rawVariable0);
      derivedVariable0.clone();
      derivedVariable0.isCoded();
      derivedVariable0.getIdentifier();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("-1", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFilePath((String) null);
      supportingDocument2.setDescription("Unknown");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("variable.availability.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("Unknown");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument5);
      derivedVariable0.addSupportingDocument(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals(1, arrayList1.size());
      
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("84{E;7]rJ");
      supportingDocument0.setFileName("[^+,1U)`UX_2O09v{Ka");
      supportingDocument0.setDocumentCode("s3Ojx,[=*");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable1.getFilePath();
      boolean boolean1 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1);
      
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5904483009740513
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("lQ1w\"fyY");
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.setNotes("<iJz%Wk+G");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("<iJz%Wk+G");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm(ontologyTerm13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.7753847948126484
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.spliterator();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("OQrW.20");
      ontologyTerm2.setDescription("OQrW.20");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setNameSpace("lQ1w\"fyY");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      rawVariable0.setNotes("<iJz%Wk+G");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("<iJz%Wk+G");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm11);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.clone();
      assertEquals("<iJz%Wk+G", rawVariable0.getNotes());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.7454069554982037
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Locale locale0 = Locale.JAPAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      arrayList0.retainAll(set0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("is");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.setLabel("`Oy");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("`Oy", "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.53955732456984
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.cloneAttributes(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.columnStart = "iLi7't/poHkr31|Fz)5";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("iLi7't/poHkr31|Fz)5", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("m+KYBu");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getLabel();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("m+KYBu", rawVariable0.getLabel());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.0343946195677223
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }
}
