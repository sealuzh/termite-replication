/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 20:28:20 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.BiConsumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      linkedList1.push(locale0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      linkedList1.add(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale locale1 = Locale.TAIWAN;
      Locale locale2 = Locale.JAPANESE;
      locale0.getScript();
      locale1.getDisplayVariant(locale2);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale locale3 = Locale.CHINESE;
      Locale.setDefault(locale_Category1, locale3);
      locale0.getDisplayLanguage(locale1);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList1.add(locale0);
      UnaryOperator<Locale> unaryOperator0 = UnaryOperator.identity();
      Function<String, Locale> function0 = (Function<String, Locale>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function.identity();
      unaryOperator0.compose((Function<? super String, ? extends Locale>) function0);
      linkedList1.replaceAll(unaryOperator0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      linkedList1.containsAll(list0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale locale5 = Locale.FRANCE;
      Locale.setDefault(locale2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(1);
      assertEquals(6, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAQueueConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[8];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory0;
      xAConnectionFactoryArray0[3] = xAConnectionFactory0;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      XAConnectionFactory[] xAConnectionFactoryArray1 = new XAConnectionFactory[21];
      xAConnectionFactoryArray1[0] = xAConnectionFactory0;
      xAConnectionFactoryArray1[11] = xAConnectionFactory0;
      xAConnectionFactoryArray1[2] = xAConnectionFactory0;
      xAConnectionFactoryArray1[3] = xAConnectionFactory0;
      xAConnectionFactoryArray1[4] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray1);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactory0.setName("_XAQueueConnect'onFactoryEist");
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory(0);
      connectionFactories0.getXATopicConnectionFactory(0);
      assertEquals(21, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("U");
      linkedList3.add(locale_LanguageRange0);
      linkedList3.toArray();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList2.iterator();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>(linkedList5);
      linkedList6.add(locale_LanguageRange0);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      linkedList8.add(locale_LanguageRange0);
      linkedList8.add((Locale.LanguageRange) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-866), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl();
      attributesImpl0.setAttributes(attributesImpl1);
      DefaultHandler defaultHandler1 = new DefaultHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-721), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultHandler defaultHandler0 = new DefaultHandler();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.add((Locale.LanguageRange) null);
      linkedList3.toArray();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      defaultHandler0.endDocument();
      linkedList2.iterator();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap0.forEach(biConsumer0);
      LinkedList<List<String>> linkedList5 = new LinkedList<List<String>>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList6.retainAll(linkedList3);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>(linkedList6);
      linkedList8.add((Locale.LanguageRange) null);
      linkedList8.clone();
      defaultHandler0.error((SAXParseException) null);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      linkedList10.toArray();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRANCE;
      locale0.getDisplayVariant();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(439, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 439, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)6;
      byteArray0[2] = (byte) (-116);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(1247, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1247, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g?D~NmY{tt;kw7<s");
      stringReader0.markSupported();
      char[] charArray0 = new char[4];
      charArray0[0] = '.';
      charArray0[2] = '~';
      charArray0[3] = '/';
      stringReader0.read(charArray0, 1, 1);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.markSupported();
      stringReader0.skip(0L);
      stringReader0.markSupported();
      CharBuffer charBuffer1 = CharBuffer.allocate(115);
      charBuffer1.chars();
      stringReader0.read(charBuffer1);
      stringReader0.skip(0L);
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
