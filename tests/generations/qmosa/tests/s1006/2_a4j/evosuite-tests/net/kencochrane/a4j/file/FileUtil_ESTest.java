/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 21:06:54 GMT 2019
 */

package net.kencochrane.a4j.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import net.kencochrane.a4j.file.FileUtil;
import net.kencochrane.a4j.util.LoadProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      arrayList0.add(object0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/CACHEDIR_NET8KENCOCHRANE.A4J.DSTA.QUERY_Q\\I_J.XML");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      arrayList0.add((Object) "7");
      arrayList0.add(objectArray0[0]);
      byteArray0[2] = (byte)100;
      byteArray0[4] = (byte)61;
      byteArray0[5] = (byte) (-24);
      byteArray0[6] = (byte)2;
      FileSystemHandling.createFolder(evoSuiteFile0);
      objectArray0[2] = (Object) arrayList0;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(comparator0).compare(any() , any());
      arrayList0.sort(comparator0);
      Object object1 = new Object();
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) comparator0;
      arrayList0.add(object0);
      objectArray1[1] = (Object) arrayList0;
      objectArray1[2] = (Object) (byte) (-24);
      objectArray1[3] = object1;
      objectArray1[4] = (Object) "7";
      objectArray1[5] = (Object) "7";
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBNFile("cacheDir", "net8kencochrane.a4j.dSta.Query", "qI_j");
      System.setCurrentTimeMillis((byte)100);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8125233095327788
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      arrayList0.clone();
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_FQ.XML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "7");
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      objectArray1[7] = (Object) comparator0;
      objectArray1[8] = object4;
      arrayList2.toArray(objectArray1);
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/S_FQ.XML");
      FileSystemHandling.createFolder(evoSuiteFile1);
      File file0 = fileUtil0.getSimilarItems("fQ", (String) null);
      assertNotNull(file0);
      assertEquals(1L, file0.length());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      arrayList2.toArray(objectArray1);
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_FQ.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = fileUtil0.getSimilarItems("fQ", "g_");
      assertNotNull(file0);
      assertEquals("/S_FQ.XML", file0.toString());
      assertTrue(file0.isDirectory());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&KeywordSearch=&mode=GAsc*.yZwUE&type=GAsc*.yZwUE&page=jE_n)R:pBplyXt'!z&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "g_");
      fileUtil0.downloadKeywordSearchFile("", "GAsc*.yZwUE", "GAsc*.yZwUE", "jE_n)R:pBplyXt'!z");
      Random.setNextRandom((-1211));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      arrayList0.add(object0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/CACHEDIR_NET8KENCOCHRANE.A4J.DSTA.QUERY_Q\\I_J.XML");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)61;
      byteArray0[5] = (byte) (-24);
      byteArray0[6] = (byte)2;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      objectArray0[2] = (Object) arrayList0;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object1 = new Object();
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) comparator0;
      objectArray1[1] = (Object) arrayList0;
      objectArray1[2] = object0;
      objectArray1[3] = object1;
      objectArray1[4] = (Object) "7";
      objectArray1[5] = (Object) "7";
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("cacheDir", "net8kencochrane.a4j.dSta.Query", "qI_j");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.retainAll(linkedList0);
      Object object2 = new Object();
      arrayList0.add(object2);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      Object object3 = new Object();
      arrayList0.add(object3);
      arrayList0.sort(comparator0);
      Object object4 = new Object();
      arrayList0.trimToSize();
      Object object5 = new Object();
      arrayList0.add(object5);
      arrayList0.add((Object) "&");
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = object6;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = object6;
      objectArray0[3] = object7;
      objectArray0[5] = object0;
      objectArray0[6] = object5;
      objectArray0[7] = object0;
      arrayList0.toArray(objectArray0);
      Object object9 = new Object();
      Random.setNextRandom((-2145265172));
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/&_|4>^JEX)&C~_.XML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      File file0 = fileUtil0.getBrowseNodeFile("&", "|4>^jeX)&C~", "");
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals("/&_|4>^JEX)&C~_.XML", file0.toString());
      assertNotNull(file0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6180379831296117
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=G6T%RA4Ur-=&mode=/W.+smuEBZ%tGO9~jJ&type=lite&page=hh<b@`(&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "all");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadCart("y]vRMT9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/W.+SMUEBZ%TGO9~JJ_G6T%RA4UR-=_HH<B@`(.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "net.kencochrane.a4j.data.Query");
      fileUtil0.downloadBlendedSearchFile("+4tz;U", "+4tz;U");
      fileUtil0.downloadThirdPartySearchFile(">f#]Yz}!;", "all", "G6T%RA4Ur-=", "all");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "cE");
      fileUtil0.getBrowseNodeFile("/W.+smuEBZ%tGO9~jJ", "G6T%RA4Ur-=", "hh<b@`(");
      Random.setNextRandom((-2145321024));
      fileUtil0.downloadGenericSearchFile("+4tz;U", "all", "y]vRMT9", "-:QDT5D!WqNC:", ">f#]Yz}!;", "ZR<J8a6 Lb*G");
      LoadProperties.instance();
      fileUtil0.downloadGenericSearchFile("<D]}B3G_tfRRS?$:]c9", "net.kencochrane.a4j.data.Query", "all", "<D]}B3G_tfRRS?$:]c9", "ShoppingCart=add&f=xml&dev-t=", "AqB]Y 6x");
      Random.setNextRandom((-164));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(1);
      arrayList0.add(integer0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/2D9YO ]-DH8E;EN__<)OJ8 J2(F;3UA57LA_R'DYQ|=H2.XML");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)118;
      Integer integer1 = new Integer((-2145301244));
      arrayList0.add(integer1);
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "2D9yo ]-dH8E;en");
      Integer integer2 = new Integer(811);
      Integer integer3 = new Integer((byte)118);
      Integer integer4 = new Integer((byte) (-4));
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      Integer integer5 = new Integer(811);
      arrayList0.add(integer5);
      FileUtil fileUtil1 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("2D9yo ]-dH8E;en", "<)oj8 j2(F;3Ua57LA", "", "R'dYQ|=h2");
      assertEquals(15, fileInputStream0.available());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/2D9YO ]-DH8E;EN_, __7<(;F~MSU.0^YTF.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      fileUtil0.getASINFile("2D9yo ]-dH8E;en", "", ", ", "7<(;F~Msu.0^YTF");
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Random.setNextRandom(2223);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=2D9yo ]-dH8E;en&type=&offerpage=7<(;F~Msu.0^YTF&offer=, &f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "2D9yo ]-dH8E;en");
      fileUtil0.getASINFile("2D9yo ]-dH8E;en", "", ", ", "7<(;F~Msu.0^YTF");
      Integer integer0 = null;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      int int0 = (-2145329701);
      ArrayList<Integer> arrayList1 = null;
      try {
        arrayList1 = new ArrayList<Integer>((-2145329701));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2145329701
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      arrayList0.add((Object) "7");
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.add((Object) "7");
      arrayList0.add(object1);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(comparator1).compare(any() , any());
      arrayList0.sort(comparator1);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      arrayList2.toArray(objectArray1);
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_FQ.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems("fQ", "24+9?7");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_H-[G8I<$BM~.XML");
      FileUtil fileUtil0 = new FileUtil();
      Integer integer0 = new Integer(1692);
      Integer integer1 = new Integer((-2145338308));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add(integer1);
      Integer integer2 = new Integer(3074);
      Integer integer3 = new Integer(2342);
      Integer integer4 = new Integer(3342);
      arrayList0.add(integer1);
      Integer integer5 = new Integer((-1310));
      arrayList0.add(integer5);
      Integer integer6 = new Integer(3074);
      Integer integer7 = new Integer((-1309));
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "H-[G8i<$Bm~");
      Integer integer8 = new Integer(1692);
      Random.setNextRandom((-2145331859));
      FileInputStream fileInputStream0 = fileUtil0.fetchAccessories("H-[G8i<$Bm~", arrayList0);
      assertEquals(12, fileInputStream0.available());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-2145334013));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer1 = new Integer(100);
      arrayList0.add(integer1);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer((-589));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      arrayList0.removeAll(linkedList0);
      Integer integer4 = new Integer((-2207));
      Integer integer5 = new Integer((-1323));
      Integer integer6 = new Integer(0);
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer7 = new Integer((-1323));
      Integer integer8 = new Integer((-2145334013));
      arrayList1.add(integer8);
      Integer integer9 = new Integer((-2145249012));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+");
      File file0 = fileUtil0.getAccessories("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", arrayList0);
      assertNotNull(file0);
      assertEquals(68L, file0.length());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      arrayList0.add((Object) "7");
      objectArray0[5] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add((Object) "7");
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(comparator0).compare(any() , any());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      arrayList1.iterator();
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      arrayList2.toArray(objectArray1);
      Object object7 = new Object();
      Object object8 = new Object();
      arrayList0.toArray(objectArray1);
      Object object9 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("7");
      boolean boolean0 = fileUtil0.isAgeGood(mockFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SellerSearch=&type=:36j*&page=,p7x+&offerstatus=&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "g_");
      LoadProperties loadProperties0 = LoadProperties.instance();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "g_";
      objectArray0[1] = (Object) loadProperties0;
      objectArray0[3] = (Object) "l3_zH?'";
      arrayList0.toArray(objectArray0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.and(predicate1);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate0.and(predicate2);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeIf(predicate0);
      Object object0 = new Object();
      Object object1 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      fileUtil0.downloadThirdPartySearchFile("", ":36j*", ",p7x+", "");
      Random.setNextRandom((-2145276572));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      arrayList1.toArray(objectArray0);
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileUtil fileUtil0 = new FileUtil();
      // Undeclared exception!
      try { 
        fileUtil0.deleteFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties loadProperties0 = LoadProperties.instance();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      fileUtil0.downloadKeywordSearchFile("", "/.ts%h(,T4V^", "lY9+xY&b", "f=xml");
      LoadProperties loadProperties1 = LoadProperties.instance();
      assertSame(loadProperties1, loadProperties0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LoadProperties.instance();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadBlendedSearchFile("", "U7.^jKT:'Rc)2{2Hb");
      LoadProperties loadProperties0 = LoadProperties.instance();
      LoadProperties loadProperties1 = LoadProperties.instance();
      assertSame(loadProperties1, loadProperties0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=G6T%RA4Ur-=&mode=/W.+smuEBZ%tGO9~jJ&type=lite&page=hh<b@`(&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "all");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&KeywordSearch=&mode=GAsc*.yZwUE&type=GAsc*.yZwUE&page=jE_n)R:pBplyXt'!z&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "_Kqb,_e^X<}[f");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("", "", "", "all", "v;2;KlF{ZZUr{%Ky(", "#[\"@%h|.VSCQ~o7");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&g_=%7CzX4gOB%7CuDB%40NYik%22wW&mode=_&type=&page=_&offer=#[\"@%h|.VSCQ~o7&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "g_");
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("g_", "|zX4gOB|uDB@NYik\"wW", "_", "", "_", "#[\"@%h|.VSCQ~o7");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Random.setNextRandom((-1));
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("Y(iou8p-qqLBM W#F+", "", "", "", "", "cacheDir");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBlendedSearchFile("#r@pAO3[%W'`K", "B}CIc9?9k'");
      LoadProperties.instance();
      Integer integer0 = new Integer((-2145331859));
      Integer integer1 = new Integer((-2145323200));
      Integer integer2 = new Integer((-184));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      int int0 = (-1);
      Integer integer3 = new Integer((-184));
      Integer integer4 = new Integer((-2145323200));
      arrayList0.add(integer4);
      Integer integer5 = new Integer((-184));
      arrayList0.add(integer5);
      arrayList0.add((Integer) null);
      Integer integer6 = new Integer((-1));
      Integer integer7 = new Integer((-31));
      // Undeclared exception!
      try { 
        arrayList0.listIterator(2695);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2695
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBlendedSearchFile("#r@pAO3[%W'`K", "B}CIc9?9k'");
      LoadProperties.instance();
      int int0 = (-2145323200);
      Integer integer0 = new Integer((-2145331883));
      Integer integer1 = new Integer((-2145323200));
      Integer integer2 = new Integer((-184));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      int int1 = (-1);
      Integer integer3 = new Integer((-184));
      Integer integer4 = new Integer((-184));
      arrayList0.add(integer4);
      arrayList0.add((Integer) null);
      Integer integer5 = new Integer((-1));
      Integer integer6 = new Integer((-31));
      // Undeclared exception!
      try { 
        arrayList0.listIterator(2695);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2695
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object3 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object4 = new Object();
      objectArray1[2] = object4;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object5 = new Object();
      objectArray1[6] = object5;
      arrayList1.toArray(objectArray0);
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.deleteFile("");
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.clone();
      Object object0 = new Object();
      Object object1 = new Object();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[15];
      objectArray0[0] = (Object) arrayList1;
      objectArray0[1] = object1;
      Object object5 = new Object();
      objectArray0[2] = object5;
      objectArray0[3] = object1;
      objectArray0[4] = object2;
      objectArray0[5] = objectArray0[0];
      Object object6 = new Object();
      objectArray0[6] = object6;
      objectArray0[7] = (Object) comparator0;
      objectArray0[8] = object4;
      arrayList2.toArray(objectArray0);
      Object object7 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object8 = new Object();
      Object object9 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      Integer integer0 = new Integer((-2145272026));
      Random.setNextRandom((-499));
      boolean boolean0 = fileUtil0.downloadBrowseNodeFile("HiC>0/m", "HiC>0/m", "HiC>0/m", "HiC>0/m");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      objectArray1[7] = (Object) comparator0;
      objectArray1[8] = object4;
      arrayList2.toArray(objectArray1);
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("net8kencochrane.a4j.dSta.Query", "t_", (String) null);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getBrowseNodeFile("", "t_", "SellerSearch=");
      Random.setNextRandom((-2145301244));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      arrayList0.add((Object) "7");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      arrayList0.removeAll(linkedList0);
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.add((Object) "7");
      arrayList0.add(object1);
      arrayList0.trimToSize();
      Object object2 = new Object();
      Object object3 = new Object();
      arrayList0.add(object3);
      arrayList0.add((Object) null);
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.toArray(objectArray0);
      Object object7 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("7");
      fileUtil0.isAgeGood((File) null);
      Random.setNextRandom((-2145296800));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.retainAll(linkedList0);
      Object object2 = new Object();
      arrayList0.add(object2);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      Object object3 = new Object();
      arrayList0.add(object3);
      arrayList0.sort(comparator0);
      Object object4 = new Object();
      arrayList0.trimToSize();
      Object object5 = new Object();
      arrayList0.add(object5);
      arrayList0.add((Object) "&");
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = object6;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = object6;
      objectArray0[3] = object7;
      objectArray0[5] = object0;
      objectArray0[6] = object5;
      objectArray0[7] = object0;
      arrayList0.toArray(objectArray0);
      Object object9 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("&");
      boolean boolean0 = fileUtil0.isAgeGood(mockFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object3 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator1);
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object4 = new Object();
      objectArray1[2] = object4;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object5 = new Object();
      objectArray1[6] = object5;
      arrayList1.add((Object) "6;q-12_X;g;Iy;uN");
      objectArray1[7] = (Object) comparator0;
      objectArray1[8] = object3;
      arrayList1.toArray(objectArray1);
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.deleteFile("7");
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&g_=%7CzX4gOB%7CuDB%40NYik%22wW&mode=_&type=&page=_&offer=#[\"@%h|.VSCQ~o7&f=xml");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, "g_");
      Random.setNextRandom((-1211));
      boolean boolean1 = fileUtil0.downloadSimilaritesFile("?", "GAsc*.yZwUE", "g_");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      arrayList0.add(object2);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object3 = new Object();
      arrayList0.parallelStream();
      arrayList0.trimToSize();
      Object object4 = new Object();
      arrayList0.add(object4);
      arrayList0.add((Object) "&");
      Object object5 = new Object();
      Object object6 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate0.and(predicate3);
      Predicate<Object> predicate4 = Predicate.isEqual((Object) "&");
      predicate2.and(predicate4);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeIf(predicate2);
      Object object7 = new Object();
      Object object8 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadThirdPartySearchFile("#.:KKdcU/z7>zwU", (String) null, "", "86400000");
      Random.setNextRandom((-2145276572));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=all&type=&offerpage=ShoppingCart=remove&f=xml&dev-t=&offer=cacheLife&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "all");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&KeywordSearch=&mode=GAsc*.yZwUE&type=GAsc*.yZwUE&page=jE_n)R:pBplyXt'!z&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "t_");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchThirdPartySearchFile("lite", (String) null, "", "t_");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      Integer integer0 = new Integer(1692);
      Integer integer1 = new Integer(1692);
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add((Integer) null);
      Integer integer2 = new Integer(85);
      Integer integer3 = new Integer(85);
      Integer integer4 = new Integer((-1));
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer5 = new Integer((-1));
      arrayList0.add(integer3);
      Integer integer6 = new Integer((-2145305671));
      Integer integer7 = new Integer((-1));
      Random.setNextRandom(85);
      Random.setNextRandom((-1));
      boolean boolean0 = fileUtil0.downloadAccessoriesFile("", arrayList0, "");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      Integer integer0 = new Integer((-2145331859));
      Integer integer1 = new Integer((-2145323200));
      Integer integer2 = new Integer((-184));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer3 = new Integer((-184));
      Integer integer4 = new Integer((-184));
      arrayList0.add(integer4);
      arrayList0.add((Integer) null);
      Integer integer5 = new Integer((-1));
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer6 = new Integer(0);
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer((-2145327538));
      boolean boolean0 = arrayList0.add(integer6);
      Integer integer9 = new Integer((-1));
      arrayList1.add(integer4);
      Integer integer10 = new Integer((-514));
      Integer integer11 = new Integer((-2145331859));
      Random.setNextRandom((-2145296800));
      boolean boolean1 = fileUtil0.downloadOneASINFile("", "]lB(/2$7 ajgNWP", "SimilaritySearch", "F+J>)8jA-?imR{C6v$2", "SimilaritySearch");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      fileUtil0.fetchKeywordSearchFile("GCSR~[7Mx2/Q#i=$|", "", "GCSR~[7Mx2/Q#i=$|", "");
      System.setCurrentTimeMillis((-1150L));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(1);
      arrayList0.add(integer0);
      byte[] byteArray0 = new byte[4];
      Integer integer1 = new Integer(811);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.add((Integer) null);
      Integer integer2 = new Integer((-3683));
      Integer integer3 = new Integer((-3683));
      arrayList1.add(integer0);
      Integer integer4 = new Integer(1);
      Integer integer5 = new Integer(958);
      // Undeclared exception!
      try { 
        fileUtil0.renameFile("!4egSLe-UF", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=G6T%RA4Ur-=&mode=/W.+smuEBZ%tGO9~jJ&type=lite&page=hh<b@`(&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "all");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&KeywordSearch=&mode=GAsc*.yZwUE&type=GAsc*.yZwUE&page=jE_n)R:pBplyXt'!z&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "_Kqb,_e^X<}[f");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("all", "", "cacheLife", "ShoppingCart=remove&f=xml&dev-t=");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LoadProperties.instance();
      FileUtil fileUtil0 = new FileUtil();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H-[G8i<$Bm~");
      Integer integer0 = new Integer((-2145336163));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add(integer0);
      Integer integer1 = new Integer(85);
      Integer integer2 = new Integer(85);
      Integer integer3 = new Integer((-1));
      fileUtil0.renameFile("", "H-[G8i<$Bm~");
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      Integer integer0 = new Integer(2188);
      Integer integer1 = new Integer(957);
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add(integer1);
      Integer integer2 = new Integer(957);
      Integer integer3 = new Integer(1127);
      Integer integer4 = new Integer(85);
      arrayList0.add(integer4);
      Integer integer5 = new Integer((-2536));
      Integer integer6 = new Integer((-2083));
      arrayList0.add(integer6);
      Integer integer7 = new Integer(810);
      Integer integer8 = new Integer(1436);
      arrayList0.add(integer1);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Integer integer9 = new Integer((-2145274301));
      Integer integer10 = new Integer((-3587));
      arrayList1.add((Object) integer10);
      arrayList1.listIterator();
      Random.setNextRandom(100);
      System.setCurrentTimeMillis(1436);
      File file0 = fileUtil0.getASINFile("&Asin.", (String) null, (String) null, (String) null);
      assertNull(file0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer((-405));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer1 = new Integer(2);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList1.add(integer0);
      Integer integer2 = new Integer((-1121));
      Integer integer3 = new Integer((-2145314471));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      arrayList1.removeAll(linkedList0);
      Integer integer4 = new Integer((-2195));
      Integer integer5 = new Integer(2);
      Integer integer6 = new Integer((-1420));
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer7 = new Integer((-2195));
      Integer integer8 = new Integer((-1));
      Integer integer9 = new Integer((-1323));
      arrayList1.add(integer9);
      Integer integer10 = new Integer((-2145287855));
      File file0 = fileUtil0.getAccessories("-dEo::\"*.&$o*Buz", arrayList2);
      assertNull(file0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer((-2145334013));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer2 = new Integer((-2145334013));
      Integer integer3 = new Integer((-589));
      Integer integer4 = new Integer((-2207));
      arrayList0.add(integer0);
      arrayList0.add(integer4);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchAccessories("new", arrayList0);
      Integer integer5 = new Integer((-589));
      Integer integer6 = new Integer(1418);
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer((-2207));
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer9 = new Integer((-589));
      Integer integer10 = new Integer(2758);
      Integer integer11 = new Integer((-1));
      Integer integer12 = new Integer(1868);
      arrayList1.add(integer12);
      Integer integer13 = new Integer(137);
      Integer integer14 = new Integer(100);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      assertTrue(arrayList2.isEmpty());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems("2D9yo ]-dH8E;en", "new");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.clone();
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      arrayList2.add(0, (Object) arrayList0);
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) arrayList1;
      objectArray0[1] = object1;
      Object object5 = new Object();
      objectArray0[2] = object5;
      objectArray0[3] = object1;
      objectArray0[4] = object2;
      objectArray0[5] = object0;
      Object object6 = new Object();
      objectArray0[6] = object6;
      objectArray0[7] = (Object) comparator0;
      objectArray0[8] = object4;
      arrayList2.toArray(objectArray0);
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("fQ", (String) null);
      assertNull(file0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer((-2145334013));
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer2 = new Integer((-2145334013));
      Integer integer3 = new Integer((-589));
      Integer integer4 = new Integer((-2207));
      arrayList0.add(integer0);
      arrayList0.add(integer4);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchAccessories("new", arrayList0);
      Integer integer5 = new Integer((-589));
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer6 = new Integer(444);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer7 = new Integer((-2145334013));
      Integer integer8 = new Integer((-2207));
      Integer integer9 = new Integer(0);
      Integer integer10 = new Integer(0);
      Integer integer11 = new Integer(0);
      arrayList0.add(integer7);
      Integer integer12 = new Integer(0);
      Integer integer13 = new Integer(0);
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      assertTrue(arrayList3.equals((Object)arrayList1));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      fileUtil0.fetchKeywordSearchFile("GCSR~[7Mx2/Q#i=$|", "", "GCSR~[7Mx2/Q#i=$|", "");
      Random.setNextRandom(524);
      System.setCurrentTimeMillis((-1150L));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "7";
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.add(object1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object2 = new Object();
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Object object4 = new Object();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) arrayList1;
      objectArray1[1] = object1;
      Object object5 = new Object();
      objectArray1[2] = object5;
      objectArray1[3] = object1;
      objectArray1[4] = object2;
      objectArray1[5] = object0;
      Object object6 = new Object();
      objectArray1[6] = object6;
      objectArray1[7] = (Object) comparator0;
      objectArray1[8] = object4;
      arrayList2.toArray(objectArray1);
      Object object7 = new Object();
      Object object8 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchKeywordSearchFile("7", "7", "86400000", "");
      Random.setNextRandom(765);
      Random.setNextRandom(1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SellerSearch=>f#]Yz}!;&type=all&page=G6T%RA4Ur-=&offerstatus=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "all");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.renameFile("all", "all");
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-2145312278));
      arrayList0.add(integer0);
      arrayList0.clone();
      Integer integer1 = new Integer(54);
      arrayList0.add(integer1);
      Integer integer2 = new Integer(54);
      Integer integer3 = new Integer(434);
      Integer integer4 = new Integer((-2145));
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer5 = new Integer((-2145265172));
      Integer integer6 = new Integer((-1391));
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer(0);
      Integer integer9 = new Integer((-1));
      arrayList0.add(integer9);
      Integer integer10 = new Integer((-1));
      Integer integer11 = new Integer((-1391));
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      assertTrue(arrayList2.equals((Object)arrayList1));
  }
}
