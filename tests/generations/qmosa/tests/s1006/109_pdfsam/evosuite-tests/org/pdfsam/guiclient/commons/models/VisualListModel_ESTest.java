/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 21:44:59 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.awt.image.renderable.ParameterBlock;
import java.beans.PropertyChangeListener;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.io.FileNotFoundException;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.time.temporal.ChronoField;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.stream.Stream;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.Action;
import javax.swing.DebugGraphics;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JEditorPane;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextPane;
import javax.swing.JToggleButton;
import javax.swing.border.SoftBevelBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.JTextComponent;
import javax.swing.text.PlainDocument;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.TextAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = null;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.clearData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2487138225718355
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      BiFunction<Object, Object, RenderingHints.Key> biFunction0 = (BiFunction<Object, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      int[] intArray1 = new int[3];
      BiFunction<RenderingHints.Key, RenderingHints.Key, RenderingHints.Key> biFunction1 = (BiFunction<RenderingHints.Key, RenderingHints.Key, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.computeIfPresent(sunHints_Key2, biFunction1);
      intArray1[0] = (-20);
      intArray1[1] = (-20);
      intArray1[2] = (-20);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -20
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0611976639656677
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[17];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.386796151208777
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      stack0.clear();
      visualListModel0.updateElementAt(3076, (VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel2 = new VisualListModel();
      Thread thread0 = MockThread.currentThread();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel2.setData(visualPageListItemArray0);
      MockThread.interrupted();
      MockThread mockThread0 = new MockThread(thread0);
      visualListModel2.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 3076;
      intArray0[1] = 3076;
      intArray0[2] = 3076;
      intArray0[3] = 3076;
      intArray0[4] = 3076;
      intArray0[5] = 3076;
      intArray0[6] = (-998);
      intArray0[7] = 3076;
      intArray0[8] = 3076;
      try { 
        visualListModel2.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 3077
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6593387642402386
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.iterator();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      ChronoField[] chronoFieldArray0 = new ChronoField[3];
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      linkedList0.add((VisualPageListItem) null);
      JComboBox<ChronoField> jComboBox0 = new JComboBox<ChronoField>(chronoFieldArray0);
      linkedList0.add((VisualPageListItem) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(102, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.prependAllElements(priorityQueue0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread();
      GapContent gapContent0 = new GapContent(0);
      PlainDocument plainDocument0 = new PlainDocument(gapContent0);
      plainDocument0.getStartPosition();
      StringContent stringContent0 = new StringContent(102);
      stringContent0.createPosition(840);
      PlainDocument plainDocument1 = new PlainDocument(stringContent0);
      plainDocument1.render(mockThread0);
      plainDocument0.getDocumentProperties();
      PlainDocument plainDocument2 = new PlainDocument();
      plainDocument0.render(mockThread0);
      plainDocument0.getDocumentProperties();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(textListener0, textListener0);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.remove(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      WindowFocusListener windowFocusListener2 = AWTEventMulticaster.add((WindowFocusListener) null, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener1);
      WindowFocusListener windowFocusListener3 = AWTEventMulticaster.remove(windowFocusListener2, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      WindowFocusListener windowFocusListener4 = AWTEventMulticaster.remove(windowFocusListener3, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener4);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2343);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2343
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.iterator();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      ChronoField[] chronoFieldArray0 = new ChronoField[3];
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      linkedList0.add((VisualPageListItem) null);
      JComboBox<ChronoField> jComboBox0 = new JComboBox<ChronoField>(chronoFieldArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(102, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.prependAllElements(priorityQueue0);
      visualListModel0.addAllElements(102, (Collection<VisualPageListItem>) linkedList0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread();
      MockThrowable.getDefaultStackTrace();
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "a.M(5K}eN\u00049W+", 1073741824L);
      MockThread mockThread2 = new MockThread("a.M(5K}eN\u00049W+");
      MockThread mockThread3 = new MockThread(mockThread1, ">Cc[OL");
      ClassLoader classLoader0 = mockThread2.getContextClassLoader();
      mockThread3.setContextClassLoader(classLoader0);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = mockThread3.getUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.059665457673528
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      Integer.getInteger("BI3]!mQ)`", (-1600));
      int[] intArray1 = new int[1];
      intArray1[0] = (-1600);
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1600
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      Integer.valueOf(0);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = Integer.getInteger("~IBz[:[LFm", integer0);
      Integer.toUnsignedString(4234);
      Integer.sum(0, 2819);
      Integer integer2 = new Integer(3076);
      Integer.remainderUnsigned(270, 2440);
      Integer[] integerArray0 = new Integer[2];
      integerArray0[0] = integer0;
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[14];
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte) (-62);
      byteArray0[7] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      BasicInternalFrameUI basicInternalFrameUI0 = new BasicInternalFrameUI(jInternalFrame0);
      JOptionPane.getDesktopPaneForComponent(jInternalFrame0);
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.removeListDataListener(jComboBox0);
      jDesktopPane0.getSelectedFrame();
      jInternalFrame0.getComponents();
      BasicInternalFrameUI basicInternalFrameUI1 = new BasicInternalFrameUI((JInternalFrame) null);
      basicInternalFrameUI0.getEastPane();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.439281443799053
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      Stream<Object> stream0 = arrayDeque0.parallelStream();
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("B:meq9*3m#rKM.o2", (-1));
      Action[] actionArray0 = new Action[2];
      styledEditorKit_FontSizeAction0.putValue("", arrayDeque0);
      arrayDeque0.spliterator();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      actionArray0[0] = (Action) styledEditorKit_ItalicAction0;
      styledEditorKit_ItalicAction0.putValue("B:meq9*3m#rKM.o2", stream0);
      styledEditorKit_FontSizeAction0.getValue("");
      styledEditorKit_FontSizeAction0.addPropertyChangeListener((PropertyChangeListener) null);
      styledEditorKit_ItalicAction0.removePropertyChangeListener((PropertyChangeListener) null);
      styledEditorKit_ItalicAction0.getKeys();
      arrayDeque0.spliterator();
      styledEditorKit_ItalicAction0.isEnabled();
      styledEditorKit_FontSizeAction0.addPropertyChangeListener((PropertyChangeListener) null);
      actionArray0[1] = (Action) styledEditorKit_FontSizeAction0;
      styledEditorKit_FontSizeAction0.getPropertyChangeListeners();
      TextAction.augmentList(actionArray0, actionArray0);
      styledEditorKit_FontSizeAction0.putValue("B:meq9*3m#rKM.o2", arrayDeque0);
      arrayDeque0.offerLast(styledEditorKit_FontSizeAction0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveUpIndex(1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.101387339879761
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.iterator();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      linkedList0.add((VisualPageListItem) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel1.addAllElements(27, (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0611976639656677
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 4;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      BasicInternalFrameUI basicInternalFrameUI0 = new BasicInternalFrameUI(jInternalFrame0);
      JOptionPane.getDesktopPaneForComponent(jInternalFrame0);
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.removeListDataListener(jComboBox0);
      jDesktopPane0.getSelectedFrame();
      jInternalFrame0.getComponents();
      BasicInternalFrameUI basicInternalFrameUI1 = new BasicInternalFrameUI((JInternalFrame) null);
      basicInternalFrameUI0.getEastPane();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0611976639656677
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("43mDXC~u`=", integer3);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer4;
      integerArray0[1] = integer2;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer.min((int) integerArray0[0], (-673));
      Integer.getInteger("Q/KukLi1fx)/11", integer4);
      integerArray0[4] = integer5;
      integerArray0[5] = integer3;
      integerArray0[6] = integer0;
      integerArray0[7] = integer3;
      integerArray0[8] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.removeElementAt((int) integerArray0[6], true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.384725757834036
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      stack0.clear();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      Thread thread0 = MockThread.currentThread();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, thread0, "");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup1, mockThread0);
      mockThread1.setContextClassLoader(classLoader0);
      Thread thread1 = MockThread.currentThread();
      MockThread.interrupted();
      MockThread mockThread2 = new MockThread(thread1);
      visualListModel1.elementChanged(visualPageListItemArray0[0]);
      MockThread mockThread3 = new MockThread("");
      mockThread3.getStackTrace();
      MockThread mockThread4 = new MockThread(mockThread1, "SD,b;9JoX?cm");
      mockThread1.getUncaughtExceptionHandler();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2846858085276462
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      PrintStream printStream0 = DebugGraphics.logStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(printStream0);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      styleContext0.getChangeListeners();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("uZ_]TJ;gbK$%[SQC", styleContext_NamedStyle0);
      styleContext0.addStyle("uZ_]TJ;gbK$%[SQC", styleContext_NamedStyle0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-21);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("uZ_]TJ;gbK$%[SQC", styleContext_NamedStyle0);
      Style style0 = styleContext0.addStyle("J", styleContext_NamedStyle1);
      styleContext0.getStyleNames();
      styleContext0.writeAttributes(objectOutputStream0, styleContext_NamedStyle1);
      styleContext0.writeAttributes(objectOutputStream0, styleContext_NamedStyle0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      GapContent gapContent0 = new GapContent(14);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext1);
      defaultStyledDocument0.getStyle("_kkG");
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext1.new NamedStyle("w", (Style) null);
      assertFalse(styleContext_NamedStyle3.equals((Object)style0));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8375937467988783
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "jpg");
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashMap1.put(sunHints_Key1, sunHints_Key0);
      hashMap0.put(sunHints_Key0, sunHints_Key1);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      visualListModel0.moveUpIndexes(intArray0);
      hashMap0.put(sunHints_Key0, sunHints_Key0);
      RenderingHints.Key renderingHints_Key0 = hashMap0.put(sunHints_Key0, sunHints_Key1);
      hashMap0.clear();
      BiFunction<RenderingHints.Key, RenderingHints.Key, RenderingHints.Key> biFunction0 = (BiFunction<RenderingHints.Key, RenderingHints.Key, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.clear();
      hashMap1.replaceAll(biFunction0);
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      BiFunction<RenderingHints.Key, Object, RenderingHints.Key> biFunction1 = (BiFunction<RenderingHints.Key, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.merge(sunHints_Key1, renderingHints_Key0, biFunction1);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9348066056828754
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ")|e)rg");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)71;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5.C2IQIi$+CG4");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "c&n'BEThKj<}R%V7");
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Thread thread0 = MockThread.currentThread();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, thread0, "");
      mockThread0.getContextClassLoader();
      MockThread mockThread1 = new MockThread(threadGroup0, (Runnable) null);
      Thread[] threadArray0 = new Thread[7];
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[2] = thread0;
      threadArray0[2] = (Thread) mockThread1;
      Integer.remainderUnsigned((-1), (-1));
      Integer.sum((-1), 125);
      Integer.compare(8, 9);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer.remainderUnsigned(789, 2294);
      Boolean boolean0 = new Boolean("Appender \"");
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, (Object) null);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "/mC6R9m>/", parameterBlock0, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"/mC6R9m>/\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.065887923253935
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "C");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      BiFunction<Object, Object, RenderingHints.Key> biFunction0 = (BiFunction<Object, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.replaceAll(biFunction0);
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.06075971812573
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8306007398058715
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Boolean boolean0 = new Boolean("C");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      BiFunction<RenderingHints.Key, Object, RenderingHints.Key> biFunction0 = (BiFunction<RenderingHints.Key, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap2.replaceAll(biFunction0);
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      CollectionOp collectionOp0 = new CollectionOp("4kf??6o.n+@_", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"4kf??6o.n+@_\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0611976639656677
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      TextListener textListener1 = AWTEventMulticaster.add(textListener0, textListener0);
      AWTEventMulticaster.remove(textListener1, textListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(textListener1, textListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster0, textListener1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(textListener1, textListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster1, (TextListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, textListener1);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster0, (TextListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster6, (TextListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) null, (TextListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster7, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster8, (TextListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster10, (TextListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove(textListener1, (TextListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster9, (TextListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster8, (TextListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, textListener1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'FVdq V");
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster5, (TextListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Boolean boolean0 = new Boolean("C");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.removeElements(intArray0, true);
      BiFunction<Object, Object, RenderingHints.Key> biFunction0 = (BiFunction<Object, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.put(sunHints_Key0, sunHints_Key0);
      // Undeclared exception!
      try { 
        hashMap1.replaceAll((BiFunction<? super RenderingHints.Key, ? super RenderingHints.Key, ? extends RenderingHints.Key>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      TextListener textListener1 = AWTEventMulticaster.add(textListener0, textListener0);
      AWTEventMulticaster.remove(textListener1, textListener1);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, textListener1);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      StyledEditorKit.FontFamilyAction styledEditorKit_FontFamilyAction0 = new StyledEditorKit.FontFamilyAction("org.pdfsam.guiclient.commons.models.VisualListModel", (String) null);
      ActionListener actionListener0 = AWTEventMulticaster.add((ActionListener) styledEditorKit_FontFamilyAction0, (ActionListener) styledEditorKit_FontFamilyAction0);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((ActionListener) styledEditorKit_FontFamilyAction0, actionListener0);
      AWTEventMulticaster.add((TextListener) null, textListener1);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8169929397370832
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      String string0 = "C";
      Boolean boolean0 = new Boolean("C");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap0.put(sunHints_Key0, sunHints_Key0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = Integer.getInteger((String) null, 39);
      Integer.remainderUnsigned(110, (-1050));
      Integer.valueOf(110);
      Integer.getInteger("E(La", integer0);
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer.compare(110, (-1532));
      Integer.toUnsignedString(2);
      Integer integer2 = new Integer(415);
      Integer integer3 = new Integer(2819);
      Integer integer4 = new Integer((-1700));
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Thread thread0 = MockThread.currentThread();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, thread0, "");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0);
      Thread[] threadArray0 = new Thread[7];
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[1] = thread0;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = (Thread) mockThread0;
      threadArray0[4] = (Thread) mockThread0;
      Thread thread1 = MockThread.currentThread();
      threadArray0[5] = thread1;
      threadArray0[6] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      mockThread0.setContextClassLoader(classLoader1);
      Thread thread2 = MockThread.currentThread();
      MockThread.interrupted();
      MockThread mockThread2 = new MockThread(mockThread0);
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      MockThread mockThread3 = new MockThread("Appender \"");
      mockThread1.getStackTrace();
      MockThread mockThread4 = new MockThread(thread2, "Appender \"");
      MockThread mockThread5 = new MockThread(mockThread0);
      mockThread5.getUncaughtExceptionHandler();
      visualListModel0.addElementAt((VisualPageListItem) null, 1135);
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2244));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      TextListener textListener1 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(textListener0, textListener1);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster0, (TextListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster1, (TextListener) null);
      AWTEventMulticaster.add((ActionListener) null, (ActionListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster0, (TextListener) null);
      AWTEventMulticaster.remove((ActionListener) null, (ActionListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster3, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clear();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, (-5342));
      linkedHashSet0.add((VisualPageListItem) null);
      stack0.clear();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, 12);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1430));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      ChronoField[] chronoFieldArray0 = new ChronoField[3];
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      chronoFieldArray0[2] = chronoField0;
      JComboBox<ChronoField> jComboBox0 = new JComboBox<ChronoField>(chronoFieldArray0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      MockThread mockThread0 = new MockThread();
      mockThread0.getStackTrace();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "a.M(5K}eN\u00049W+", 1073741824L);
      MockThread mockThread2 = new MockThread("a.M(5K}eN\u00049W+");
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread3 = new MockThread(thread0, ">Cc[OL");
      mockThread2.run();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("a.M(5K}eN\u00049W+", true);
      classLoader0.getParent();
      mockThread1.setContextClassLoader(classLoader0);
      MockThread mockThread4 = new MockThread("");
      mockThread4.getUncaughtExceptionHandler();
      ThreadGroup threadGroup1 = (ThreadGroup)MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(threadGroup1);
      //  // Unstable assertion: assertEquals("Test_Execution_Group", threadGroup1.getName());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      Stream<Object> stream0 = arrayDeque0.parallelStream();
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("B:meq9*3m#rKM.o2", 10);
      Action[] actionArray0 = new Action[2];
      styledEditorKit_FontSizeAction0.putValue("", arrayDeque0);
      arrayDeque0.spliterator();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      actionArray0[0] = (Action) styledEditorKit_ItalicAction0;
      styledEditorKit_ItalicAction0.putValue("B:meq9*3m#rKM.o2", stream0);
      styledEditorKit_FontSizeAction0.addPropertyChangeListener((PropertyChangeListener) null);
      styledEditorKit_ItalicAction0.removePropertyChangeListener((PropertyChangeListener) null);
      styledEditorKit_ItalicAction0.getKeys();
      arrayDeque0.spliterator();
      styledEditorKit_ItalicAction0.isEnabled();
      actionArray0[1] = (Action) styledEditorKit_FontSizeAction0;
      styledEditorKit_FontSizeAction0.getPropertyChangeListeners();
      TextAction.augmentList(actionArray0, actionArray0);
      styledEditorKit_FontSizeAction0.putValue("B:meq9*3m#rKM.o2", arrayDeque0);
      arrayDeque0.offerLast(styledEditorKit_FontSizeAction0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("B:meq9*3m#rKM.o2", true);
      ClassLoader classLoader1 = classLoader0.getParent();
      MockThread mockThread0 = new MockThread("");
      mockThread0.setContextClassLoader(classLoader1);
      ThreadGroup threadGroup0 = (ThreadGroup)mockThread0.getUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(threadGroup0);
      //  // Unstable assertion: assertEquals("Test_Execution_Group", threadGroup0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ChronoField[] chronoFieldArray0 = new ChronoField[4];
      visualListModel0.moveDownIndexes(intArray0);
      ChronoField chronoField0 = ChronoField.MONTH_OF_YEAR;
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      ChronoField chronoField1 = ChronoField.CLOCK_HOUR_OF_DAY;
      chronoFieldArray0[0] = chronoField1;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(0);
      Object object0 = visualListModel0.getElementAt(189);
      assertNull(object0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 13, false);
      visualListModel0.moveDownIndex(0);
      visualListModel0.subList(0, 0, false);
      visualListModel0.moveUpIndex((-1));
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      PlainDocument plainDocument0 = new PlainDocument();
      plainDocument0.getText(0, 0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.insertTextAtIndex((-1), "f2l[wDr1qsrk");
      plainDocument0.removeDocumentListener(jTextComponent_AccessibleJTextComponent0);
      URL uRL0 = MockURL.URL("", "f2l[wDr1qsrk", (-1), "", uRLStreamHandler0);
      JEditorPane jEditorPane0 = null;
      try {
        jEditorPane0 = new JEditorPane(uRL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.reflect.InvocationTargetException
         //
         verifyException("javax.swing.JEditorPane", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.858959751112103
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveDownIndex(847);
      visualListModel0.moveUpIndex(847);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      linkedHashSet0.clear();
      visualListModel0.addElementAt((VisualPageListItem) null, 847);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.subList(0, 0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(3076, (VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1345));
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<ChronoField> vector0 = new Vector<ChronoField>();
      vector0.listIterator();
      JComboBox<ChronoField> jComboBox0 = new JComboBox<ChronoField>();
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      jComboBox0.addKeyListener((KeyListener) null);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1639, 13);
      assertNull(collection0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-1), (-1), false);
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, false, true);
      JInternalFrame jInternalFrame1 = new JInternalFrame((String) null, false);
      jInternalFrame1.isClosable();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext1.getChangeListeners();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("/DKWC*FQC.H*`,.;o", styleContext_NamedStyle0);
      styleContext0.addStyle("DC.3}9$", styleContext_NamedStyle0);
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument();
      Style style0 = defaultStyledDocument1.addStyle("DC.3}9$", (Style) null);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext1.new NamedStyle((String) null, styleContext_NamedStyle0);
      assertFalse(styleContext_NamedStyle2.equals((Object)style0));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[2] = (byte) (-29);
      byteArray0[4] = (byte) (-29);
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)116;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.505443429095587
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-3866);
      intArray1[1] = (-330);
      intArray1[2] = (-818);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      int[] intArray2 = null;
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 1000;
      intArray0[1] = (-639);
      intArray0[2] = 2080;
      intArray0[3] = 255;
      intArray0[4] = 922;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(0, (-1), true);
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true);
      jInternalFrame0.isClosable();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = Integer.getInteger((String) null, 20000);
      Integer.valueOf(2621);
      Integer.getInteger("", integer0);
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AQD/W3I#XUaW$T=B");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(20000, (Collection<VisualPageListItem>) null);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.iterator();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int int0 = (-3121);
      // Undeclared exception!
      try { 
        visualListModel0.subList(10, (-3121), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(10) > toIndex(-3121)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.removeElements(1, 9999, true);
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true);
      jInternalFrame0.isClosable();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext0.getChangeListeners();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle("}", styleContext_NamedStyle0);
      styleContext0.addStyle((String) null, styleContext_NamedStyle1);
      defaultStyledDocument0.addStyle(".", styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext1.new NamedStyle((String) null, styleContext_NamedStyle0);
      assertFalse(styleContext_NamedStyle2.equals((Object)styleContext_NamedStyle0));
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null);
      jInternalFrame0.isClosable();
      StringContent stringContent0 = new StringContent(0);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      MockFile mockFile0 = new MockFile((String) null, "");
      StyleContext.getDefaultStyleContext();
      styleContext0.getChangeListeners();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("uZ_]TJ;gbK$%[SQC", styleContext_NamedStyle0);
      styleContext0.addStyle(".", styleContext_NamedStyle1);
      Style style0 = defaultStyledDocument0.addStyle("\"(x, RgKPa=c0zfd", (Style) null);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("u}NQu4q7P{mB{BQ)", style0);
      assertFalse(styleContext_NamedStyle2.equals((Object)styleContext_NamedStyle0));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.elementsChanged();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      try { 
        Integer.decode("Rendering class: [");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Rendering class: [\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5434454298906781
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 13;
      visualListModel0.subList(0, 13, false);
      visualListModel0.moveDownIndex(0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndex((-1));
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      String string0 = "";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      visualListModel0.subList((-555), 9, true);
      // Undeclared exception!
      try { 
        visualListModel0.subList(586, (-555));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(586) > toIndex(-555)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<ChronoField> jComboBox0 = new JComboBox<ChronoField>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.firePropertyChange("", true, true);
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("-7", vetoableChangeListener0);
      jComboBox0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jComboBox0, (-2343), 1130L, (-209), (-209), (-2543), 445, (-1), 15, false, (-2343), (-209), (-209), 821.4441572222411);
      mouseWheelListener1.mouseWheelMoved(mouseWheelEvent0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      jComboBox0.removeMouseWheelListener((MouseWheelListener) null);
      MouseWheelEvent mouseWheelEvent1 = new MouseWheelEvent(jComboBox0, 13, 13, 1639, 31, (-466), 31, 31, (-466), false, 8, 5, 13, (-7.333369493862686));
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(4431, 5, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      String string0 = "OL";
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("sAwc{!ej'<", "OL");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // OL
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer.getInteger((String) null, 20000);
      Integer.valueOf(2621);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = Integer.getInteger("", integer0);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer.sum((-2256), 2363);
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer3;
      integerArray0[1] = integer4;
      Integer.min((int) integerArray0[1], 2363);
      integerArray0[2] = integer3;
      integerArray0[3] = integer4;
      integerArray0[4] = integer4;
      integerArray0[5] = integer3;
      integerArray0[6] = integer1;
      integerArray0[7] = integer0;
      integerArray0[8] = integer4;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(107, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 107
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)71;
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte)71;
      byteArray0[5] = (byte)71;
      byteArray0[6] = (byte)71;
      byteArray0[7] = (byte)71;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "DEGREES_0");
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-753);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(868, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 868
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndex(0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      PlainDocument plainDocument0 = new PlainDocument();
      String string0 = "f2l[wDr1qsrk";
      plainDocument0.getText(0, 0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("", "f2l[wDr1qsrk", 0, "", uRLStreamHandler0);
      StyleContext styleContext0 = new StyleContext();
      String string1 = "Could not instantiate configurator [";
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = null;
      try {
        jTextPane0 = new JTextPane((StyledDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int[] intArray0 = new int[0];
      ChronoField[] chronoFieldArray0 = new ChronoField[4];
      ChronoField chronoField0 = ChronoField.MONTH_OF_YEAR;
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      ChronoField chronoField1 = ChronoField.NANO_OF_SECOND;
      chronoFieldArray0[0] = chronoField1;
      ChronoField chronoField2 = ChronoField.SECOND_OF_DAY;
      chronoFieldArray0[3] = chronoField2;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("true", integer4);
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Integer integer7 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("<TXo8");
      Integer integer8 = new Integer((-1591));
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      JInternalFrame jInternalFrame0 = new JInternalFrame("p#,", false, true);
      BasicInternalFrameUI basicInternalFrameUI0 = new BasicInternalFrameUI(jInternalFrame0);
      JToggleButton jToggleButton0 = new JToggleButton("p#,");
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(10);
      String string0 = "org.pdfsam.guiclient.commons.models.VisualListModel";
      JInternalFrame jInternalFrame0 = new JInternalFrame("org.pdfsam.guiclient.commons.models.VisualListModel");
      jInternalFrame0.getJMenuBar();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder((-2442));
      StringContent stringContent0 = new StringContent((-236));
      PlainDocument plainDocument0 = new PlainDocument(stringContent0);
      Image image0 = null;
      try {
        image0 = new BufferedImage((-236), 10, (-2442));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2442
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer.getInteger("true", (-1103));
      Integer integer0 = Integer.valueOf(1024);
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("true", integer3);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("()>-I:", (-1));
      Integer.toUnsignedString((-1));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer.remainderUnsigned(2621, 2051);
      Integer.sum(1067, 125);
      int int0 = Integer.compare(1024, 2051);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer7;
      integerArray0[1] = integer4;
      integerArray0[2] = integer2;
      Integer integer10 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer10;
      integerArray0[4] = integer1;
      Integer integer11 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[5] = integer11;
      Integer integer12 = JLayeredPane.DRAG_LAYER;
      integerArray0[6] = integer12;
      integerArray0[7] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      Boolean boolean0 = new Boolean("true");
      int int1 = visualListModel0.getSize();
      assertFalse(int1 == int0);
  }
}
