/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 20:08:00 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.HeadlessException;
import java.awt.event.KeyListener;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.text.DateFormatSymbols;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.FieldPosition;
import java.text.Format;
import java.util.Locale;
import javax.swing.JApplet;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.plaf.basic.BasicTableHeaderUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5905891904530083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "f[@m~^:agb");
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftBrac = 1547;
      jSJshop0.testParser();
      StringBuffer stringBuffer0 = new StringBuffer();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "f[@m~^:agb");
      Integer.divideUnsigned(1472, 1472);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)40;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "f[@m~^:agb");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "FC<%<p9'f}dq");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop1 = new JSJshop();
      jSJshop1.testParser();
      System.setCurrentTimeMillis(1217L);
      System.setCurrentTimeMillis(43);
      System.setCurrentTimeMillis((-3760L));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5747161745799924
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)61;
      byteArray0[3] = (byte)40;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "R4Qo.dylkG7E&\"31LNZ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "R4Qo.dylkG7E&\"31LNZ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.slash = (-3);
      JSJshopVars.rightBrac = (int) (byte)40;
      jSJshop0.testParser();
      System.setCurrentTimeMillis((byte)91);
      System.setCurrentTimeMillis(701);
      System.setCurrentTimeMillis(3095L);
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "o(d0c[";
      SystemInUtil.addInputLine("o(d0c[");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("B|!WWjC*/ expectingj'(' ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "4C2A`Vx'-@N)J");
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("B|!WWjC*", " expectingj'(' ", (JApplet) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      PipedWriter pipedWriter1 = null;
      try {
        pipedWriter1 = new PipedWriter(pipedReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)91;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "WBJ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "xVjKc'");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte)91);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5802384031960384
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "ee|L*H|%4=}-6");
      jSJshop0.testParser();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ee|L*H|%4=}-6");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "+a+)7Wne0Itw:eo");
      BasicTableHeaderUI basicTableHeaderUI0 = new BasicTableHeaderUI();
      JSJshop jSJshop1 = new JSJshop();
      jSJshop1.testParser();
      assertNotSame(jSJshop1, jSJshop0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "O?";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "O?");
      jSJshop0.testParser();
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        pipedWriter0.append('f');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "f[@m~^:agb";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "f[@m~^:agb");
      jSJshop0.testParser();
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      PipedWriter pipedWriter0 = new PipedWriter();
      char char0 = 'g';
      PipedWriter pipedWriter1 = new PipedWriter();
      try { 
        pipedWriter1.append((CharSequence) stringBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5461447460085638
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "L5C[kT$4#:,Y9(D_\"ia";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "L5C[kT$4#:,Y9(D_\"ia");
      jSJshop0.testParser();
      StringBuffer stringBuffer0 = new StringBuffer();
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel();
      SpinnerNumberModel spinnerNumberModel1 = new SpinnerNumberModel();
      double double0 = (-229.12603665933);
      double double1 = 1.0;
      SpinnerNumberModel spinnerNumberModel2 = null;
      try {
        spinnerNumberModel2 = new SpinnerNumberModel((-1413.8492114), 1.0, (-1645.62200029382), 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (minimum <= value <= maximum) is false
         //
         verifyException("javax.swing.SpinnerNumberModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.wordChars(16, (-4));
      streamTokenizer0.ordinaryChar((-2));
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.nextToken();
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "+Ev@0EI";
      stringArray0[2] = "";
      stringArray0[3] = null;
      JSJshop.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader(")&Du}``Sq*9{W##WJ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars((-4), (-4));
      streamTokenizer0.ordinaryChar(42);
      streamTokenizer0.wordChars(42, 42);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.nextToken();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "=4~-N";
      stringArray0[1] = "aJ#IHV\"Ro(aKy)R";
      JSJshop.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "mjth<c0><e*";
      stringArray0[0] = "all";
      stringArray0[2] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("N3NnwZRE52LyQU(){");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "U`#v=n33[&64");
      String string0 = "N3NnwZRE52LyQU(){";
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("N3NnwZRE52LyQU(){");
      JSJshopVars.leftPar = (-3);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "U`kv=n33[&64");
      String string0 = "N3NnwZRE52LyQU(){";
      jSJshop0.parserFile("N3NnwZRE52LyQU(){");
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel();
      SpinnerNumberModel spinnerNumberModel1 = new SpinnerNumberModel();
      double double0 = (-1413.8492114);
      SpinnerNumberModel spinnerNumberModel2 = null;
      try {
        spinnerNumberModel2 = new SpinnerNumberModel((-1413.8492114), 1.0, (-229.12603665933), 957.645038825);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (minimum <= value <= maximum) is false
         //
         verifyException("javax.swing.SpinnerNumberModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("e");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte) (-101);
      byteArray0[7] = (byte) (-99);
      byteArray0[8] = (byte)19;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "e");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("e", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("N3NnwZRE52LyQU(){");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "U`kv=n33[&64");
      String string0 = "N3NnwZRE52LyQU(){";
      jSJshop0.parserFile("N3NnwZRE52LyQU(){");
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel();
      SpinnerNumberModel spinnerNumberModel1 = new SpinnerNumberModel();
      double double0 = (-1413.8492114);
      SpinnerNumberModel spinnerNumberModel2 = null;
      try {
        spinnerNumberModel2 = new SpinnerNumberModel((-1413.8492114), 1.0, (-229.12603665933), 957.645038825);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (minimum <= value <= maximum) is false
         //
         verifyException("javax.swing.SpinnerNumberModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("e");
      String string0 = "37zg";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "37zg");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("e", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "e";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("e");
      String string1 = "37zg";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "37zg");
      PipedReader pipedReader0 = new PipedReader(3248);
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("37zg", (String) null, (JApplet) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        pipedWriter0.append('g');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      SystemInUtil.addInputLine("o(d0c[");
      JApplet jApplet0 = JSJshop.applet;
      JSJshopVars.interrogation = (-2);
      String string0 = null;
      JApplet jApplet1 = JSJshop.applet;
      jSJshop0.getBufferedReader((String) null, "e", (JApplet) null);
      JApplet jApplet2 = null;
      try {
        jApplet2 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      int int0 = (-2734);
      JSJshopVars.astherisk = (-2734);
      JApplet jApplet0 = JSJshop.applet;
      String string0 = "Error reading control parameters: ";
      jSJshop0.getBufferedReader("Error reading control parameters: ", "Y)wNu}`kTBX;9cuSSI>", (JApplet) null);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-2734));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("e");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "J");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.colon = 63;
      JSJshopVars.whiteSpace = 63;
      JSJshopVars.minus = 63;
      JSJshopVars.flagExit = false;
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop1 = new JSJshop("PBXa!<Z7LI1}qP^s{", "s,");
      // Undeclared exception!
      try { 
        jSJshop1.getAppletURL("\"S=#@6", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader(")&Du}``Sq*9{W##WJ");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      char[] charArray0 = new char[6];
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      JApplet jApplet0 = JSJshop.applet;
      JSOperator jSOperator0 = new JSOperator();
      jSOperator0.head();
      // Undeclared exception!
      try { 
        jSJshop0.setFile(" java JSJshop <domainDef-file-name> <problemDef-file-name> [number-of-plans]", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener0, keyListener1);
      AWTEventMulticaster.remove(keyListener2, keyListener2);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener2, (KeyListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener2, (KeyListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) null, keyListener2);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener2, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove(keyListener2, (KeyListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster4, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster1, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, keyListener2);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster3, (KeyListener) null);
      JApplet jApplet0 = JSJshop.applet;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nil";
      JSJshop.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[4] = "x%$C^";
      stringArray0[1] = "~Vt&yWC";
      JSJshop jSJshop0 = new JSJshop();
      System.setCurrentTimeMillis((-1076L));
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader("umd.cs.shop.jsutil");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars(565, 565);
      streamTokenizer0.nval = 0.0;
      streamTokenizer0.nextToken();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "N3NnwZRE52LyQU(){";
      jSJshop0.parserFile("N3NnwZRE52LyQU(){");
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel();
      SpinnerNumberModel spinnerNumberModel1 = new SpinnerNumberModel();
      double double0 = (-1413.8492114);
      SpinnerNumberModel spinnerNumberModel2 = null;
      try {
        spinnerNumberModel2 = new SpinnerNumberModel((-1413.8492114), 1.0, (-229.12603665933), 957.645038825);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (minimum <= value <= maximum) is false
         //
         verifyException("javax.swing.SpinnerNumberModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")&Du}``Sq*9{W##WJ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars((-4), (-4));
      streamTokenizer0.ordinaryChar(42);
      stringReader0.ready();
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.nextToken();
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.add(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener1, keyListener0);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener2, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster.remove(keyListener1, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, keyListener3);
      JApplet jApplet0 = JSJshop.applet;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedReader pipedReader0 = new PipedReader(34);
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      JSPlan jSPlan0 = jSJshop0.sol();
      assertNull(jSPlan0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = ".Gu^)KW{_Ih3y(F(";
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.tree();
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      try { 
        pipedReader0.mark(27);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark() not supported
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "e";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("e");
      String string1 = "37zg";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "37zg");
      PipedReader pipedReader0 = new PipedReader(3248);
      JApplet jApplet0 = JSJshop.applet;
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      pipedWriter0.append('g');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("aJ#IHV\"Ro(aKy)R", "/3va;i,~&\"%e$");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      WindowListener windowListener1 = AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster.remove(windowListener1, windowListener1);
      AWTEventMulticaster.remove((WindowListener) null, windowListener1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      JApplet jApplet0 = JSJshop.applet;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "]";
      stringArray0[1] = " Expected '('";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.wordChars(16, (-4));
      streamTokenizer0.ordinaryChar((-2));
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.nextToken();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("/|cf,&@4G,(iU)", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis((-862L));
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0, "?Z]m?BEAck^ow");
      JSpinner.NumberEditor jSpinner_NumberEditor1 = new JSpinner.NumberEditor(jSpinner0, "?Z]m?BEAck^ow");
      JSpinner jSpinner1 = new JSpinner();
      JSJshop jSJshop0 = new JSJshop();
      JSPlanningProblem jSPlanningProblem0 = jSJshop0.prob();
      assertNull(jSPlanningProblem0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("N3NnwZRE52LyQU(){");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "'O-S;");
      jSJshop0.getDeleteList();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      KeyListener keyListener2 = null;
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener1, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, keyListener3);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      KeyListener keyListener4 = null;
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      jSJshop0.getDeleteList();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener1, keyListener0);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener2, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster.remove(keyListener1, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, keyListener3);
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop1 = new JSJshop();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop1.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader("umd.cs.shop.jsutil");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars(565, 565);
      streamTokenizer0.nextToken();
      JSJshopNode jSJshopNode0 = jSJshop0.getTree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")&Du}``Sq*9{W##WJ");
      jSJshop0.testParser();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat(")&Du}``Sq*9{W##WJ", decimalFormatSymbols0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      Locale locale0 = Locale.ITALIAN;
      DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols(locale0);
      String string0 = null;
      MockSimpleDateFormat mockSimpleDateFormat0 = null;
      try {
        mockSimpleDateFormat0 = new MockSimpleDateFormat((String) null, dateFormatSymbols0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`JIe7rDB";
      stringArray0[1] = "lVVV{Pd{A.m{ru";
      stringArray0[2] = " parsing list of tasks: unexpected atom";
      stringArray0[3] = " parsing list of tasks: unexpected atom";
      stringArray0[4] = "";
      stringArray0[5] = "T'vE@";
      stringArray0[6] = "- ";
      JSJshop.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
