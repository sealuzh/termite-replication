/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 20:13:36 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7385251899293523
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq?p4Dm");
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0717326460121224
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("=", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("pG", token3.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("6vH05^");
      xPathLexer1.setXPath("fL/-@Z68^Y");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":=pG%=$4I");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("6vH05^");
      Token token6 = xPathLexer3.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token9 = xPathLexer5.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals("/", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals("=", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer6.nextToken();
      assertEquals((-1), token12.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0351234608522706
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("*", token1.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("iKm\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Cd!*PiKm\"");
      XPathLexer xPathLexer2 = new XPathLexer("Cd!*PiKm\"");
      Token token4 = xPathLexer2.colon();
      assertEquals("C", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals("C", token6.getTokenText());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer3.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals("d!", token10.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("*", token11.getTokenText());
      
      Token token12 = xPathLexer0.pipe();
      assertEquals("K", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.144404913301052
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mEL/,Otu");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("mEL", token0.getTokenText());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("hDVr.F");
      xPathLexer1.slashes();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("Ot", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals("D", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("u", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals("V", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      Token token11 = xPathLexer1.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals(".", token11.getTokenText());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      assertEquals("F", token12.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2188660888111147
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("co", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("m", token6.getTokenText());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals("r", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token10 = xPathLexer0.dots();
      assertEquals("n.", token10.getTokenText());
      assertEquals(14, token10.getTokenType());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      Token token12 = xPathLexer0.not();
      assertEquals("x", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals("p", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token14 = xPathLexer0.star();
      assertEquals("a", token14.getTokenText());
      assertEquals(20, token14.getTokenType());
      
      Token token15 = xPathLexer1.doubleColon();
      assertEquals(19, token15.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token16 = xPathLexer1.equals();
      assertEquals(21, token16.getTokenType());
      
      Token token17 = xPathLexer1.at();
      assertEquals(16, token17.getTokenType());
      
      Token token18 = xPathLexer0.minus();
      assertEquals(6, token18.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.44544954031106
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("a6adKFc6k`&J");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("a", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("6", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("a6adKFc6k`&J");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("d", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("KF", token4.getTokenText());
      
      xPathLexer1.leftParen();
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("a6adKFc6k`&J");
      Token token6 = xPathLexer3.plus();
      assertEquals("a", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("6", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("6", token10.getTokenText());
      
      Token token11 = xPathLexer4.at();
      assertEquals("w", token11.getTokenText());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      Token token12 = xPathLexer4.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer2.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer4.notEquals();
      assertEquals("0p", token14.getTokenText());
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer3.dots();
      assertEquals(13, token15.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token16 = xPathLexer6.doubleColon();
      assertEquals(19, token16.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.834517273904376
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("6vH05^");
      Token token3 = xPathLexer2.rightParen();
      assertEquals("6", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals("v", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.plus();
      assertEquals("H", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("PJ1TwGBbXL~RIN,~");
      Token token10 = xPathLexer0.colon();
      assertEquals("$", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer3.at();
      assertEquals("P", token12.getTokenText());
      
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer1.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.856581651818047
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wX0p~4\"`Q|ZUKvucy-");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("w", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("X0p", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("wX0p~4\"`Q|ZUKvucy-");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.literal();
      assertNull(token2);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer1.star();
      assertEquals("w", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer2.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer2.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("~", token7.getTokenText());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.941842601955427
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("gu", token1.getTokenText());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath("ROhuR2VbHm@M'6usj2K");
      xPathLexer0.setXPath("ROhuR2VbHm@M'6usj2K");
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("ROhuR2VbHm@M'6usj2K");
      Token token7 = xPathLexer2.colon();
      assertEquals("R", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("ROhuR2VbHm@M'6usj2K");
      Token token8 = xPathLexer0.pipe();
      assertEquals("@", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.dots();
      assertEquals("R", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      xPathLexer1.dollar();
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals("O", token11.getTokenText());
      
      Token token12 = xPathLexer0.equals();
      assertEquals("M", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
      
      xPathLexer1.colon();
      xPathLexer0.relationalOperator();
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
      
      xPathLexer2.operatorName();
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.950757765964412
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")W,p4R|");
      Token token1 = xPathLexer1.nextToken();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("om", token2.getTokenText());
      
      xPathLexer1.setPreviousToken(token1);
      assertEquals(")", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(">(5Z=\"<=(q#m!nmXu");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("W,p4R|", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer1.colon();
      assertEquals(",", token5.getTokenText());
      
      Token token6 = xPathLexer1.identifier();
      assertEquals("p4R", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals("|", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dollar();
      Token token8 = xPathLexer0.dollar();
      assertEquals(".", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("?)xa}a!z=BX1pcb");
      xPathLexer6.div();
      xPathLexer6.operatorName();
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("'WlVDwxblZlF`");
      Token token11 = xPathLexer5.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer3.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9502068806758617
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      char char0 = xPathLexer0.LA(117);
      assertEquals('\uFFFF', char0);
      
      XPathLexer xPathLexer1 = new XPathLexer("qQ}Ha-,M>As]%");
      Token token0 = xPathLexer1.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.slashes();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer1.slashes();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("Ha", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer1.star();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer1.slashes();
      assertEquals(",", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("M", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.851374675892647
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq?p4Dm");
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-1172));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.897670527104983
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      Token token0 = xPathLexer1.rightBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("h>", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("N", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer("U6xYQJOf8VCgedCJ_s");
      xPathLexer0.and();
      Token token3 = xPathLexer2.nextToken();
      assertEquals("U6xYQJOf8VCgedCJ_s", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("b", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals("q", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.dots();
      assertEquals("H", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      Token token7 = xPathLexer5.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("N", token7.getTokenText());
      
      xPathLexer5.at();
      Token token8 = xPathLexer5.star();
      assertEquals(">", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer5.slashes();
      assertEquals("q", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer4.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer4.colon();
      assertEquals(18, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer6.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer0.rightParen();
      assertEquals(2, token14.getTokenType());
      
      Token token15 = xPathLexer3.minus();
      assertEquals(6, token15.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1615276554990945
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      xPathLexer0.setXPath("r,CR{}*t$2u`p");
      xPathLexer0.setXPath("<CFB#X{&-q36J");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("C", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("#", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("X{", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("fL/-@Z68^Y");
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token8 = xPathLexer0.pipe();
      assertEquals("&", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("-", token9.getTokenText());
      
      xPathLexer1.dollar();
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("w", token10.getTokenText());
      
      xPathLexer0.at();
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("3", token11.getTokenText());
      
      Token token12 = xPathLexer0.colon();
      assertEquals("6", token12.getTokenText());
      assertEquals(18, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.at();
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("-", token13.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6328475786074321
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("/jU|q)wLIZ|dUR+$.");
      Token token1 = xPathLexer1.plus();
      assertEquals("/", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.equals();
      assertEquals("j", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("U", token4.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8345679254054224
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("/Zfp}'>]cr");
      XPathLexer xPathLexer2 = new XPathLexer("C$$");
      xPathLexer2.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer1.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer3.plus();
      xPathLexer0.rightParen();
      xPathLexer3.slashes();
      xPathLexer1.nextToken();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      xPathLexer1.star();
      xPathLexer4.at();
      xPathLexer2.not();
      xPathLexer4.colon();
      XPathLexer xPathLexer6 = new XPathLexer("j7B!@%OdXG)zA");
      xPathLexer6.relationalOperator();
      Token token0 = xPathLexer2.at();
      xPathLexer1.at();
      xPathLexer5.star();
      xPathLexer0.notEquals();
      xPathLexer2.minus();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.03331265456857
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      Token token0 = xPathLexer0.comma();
      assertEquals("C", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.setXPath("Cd!*PiKm\"");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.at();
      assertEquals("C", token2.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("s");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("s", token3.getTokenText());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Cd!*PiKm\"");
      Token token5 = xPathLexer3.identifier();
      assertEquals("Cd", token5.getTokenText());
      
      xPathLexer3.slashes();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer3.dollar();
      assertEquals("*", token7.getTokenText());
      
      Token token8 = xPathLexer3.plus();
      assertEquals("P", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals("i", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer1.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer2.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9353039843143685
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("5F80=Ka{]Fm(71m\"");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer1.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer("R_;VSy1 ");
      xPathLexer3.setXPath("");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.rightParen();
      xPathLexer4.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      xPathLexer1.colon();
      xPathLexer6.star();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0527433550572276
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("m", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.LA((-2));
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      char char0 = xPathLexer0.LA((-2));
      assertEquals('o', char0);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("w", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9921354867201921
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^wPDz.#oXX/ibp!y");
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.star();
      assertEquals("/", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("ib", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("p!", token7.getTokenText());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("y", token8.getTokenText());
      
      char char0 = xPathLexer0.LA(20);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9342520263405456
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("18Org8DdH");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer1.nextToken();
      xPathLexer2.doubleColon();
      xPathLexer1.or();
      xPathLexer1.isIdentifierChar('\"');
      xPathLexer2.or();
      xPathLexer0.dollar();
      xPathLexer2.minus();
      xPathLexer1.and();
      xPathLexer2.relationalOperator();
      xPathLexer1.plus();
      xPathLexer1.setXPath("18Org8DdH");
      xPathLexer2.number();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer2.star();
      xPathLexer1.doubleColon();
      xPathLexer0.at();
      xPathLexer1.at();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.18363883311558
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("18Org8DdH");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("S[");
      xPathLexer3.setXPath(")");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer3.rightParen();
      assertEquals(")", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("U;Z^#luwNG\"'cbj\"AhN");
      xPathLexer0.colon();
      XPathLexer xPathLexer7 = new XPathLexer("U;Z^#luwNG\"'cbj\"AhN");
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer1.and();
      XPathLexer xPathLexer8 = new XPathLexer("U;Z^#luwNG\"'cbj\"AhN");
      Token token8 = xPathLexer8.dollar();
      assertEquals("U", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      xPathLexer2.at();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals(">", token9.getTokenText());
      
      Token token10 = xPathLexer4.colon();
      assertEquals("c", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token11 = xPathLexer8.at();
      assertEquals(16, token11.getTokenType());
      assertEquals(";", token11.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7745613261275217
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("P&m\"aH@.`v52Yk&_Y");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer1.number();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("P", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("P&m\"aH@.`v52Yk&_Y");
      Token token3 = xPathLexer2.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("&", token7.getTokenText());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals("m", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer2.equals();
      assertEquals("\"", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer3.not();
      assertEquals("c", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.rightParen();
      assertEquals(2, token12.getTokenType());
      assertEquals("o", token12.getTokenText());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9398880257194953
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.and();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer1.colon();
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer1.colon();
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7535114408553705
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("){#**Ax");
      Token token2 = xPathLexer1.dots();
      assertEquals(")", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer("){#**Ax");
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("(N/");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer1.dots();
      assertEquals("#", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer3.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.plus();
      assertEquals("*", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer5.at();
      assertEquals("(", token8.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer("(N/");
      Token token9 = xPathLexer8.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("T;");
      xPathLexer10.relationalOperator();
      xPathLexer9.or();
      Token token10 = xPathLexer5.slashes();
      assertEquals("N/", token10.getTokenText());
      assertEquals(12, token10.getTokenType());
      
      Token token11 = xPathLexer3.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer6.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.rightParen();
      assertEquals(2, token13.getTokenType());
      
      Token token14 = xPathLexer3.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0177551358504595
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("6vH05^");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals("vH05^", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token4 = xPathLexer5.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer4.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer6.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer6.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7760901016517503
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      Token token0 = xPathLexer1.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.plus();
      assertEquals(">", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("a4D");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("a4D", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("bq", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer0.colon();
      assertEquals("%", token5.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer4 = new XPathLexer("pp5USJ&s!081");
      xPathLexer2.and();
      Token token6 = xPathLexer4.slashes();
      assertEquals("p", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.or();
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer2.dollar();
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer3.div();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer4.leftBracket();
      assertEquals("p", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.986866330016745
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      Token token0 = xPathLexer1.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.doubleColon();
      assertEquals("h>", token1.getTokenText());
      
      xPathLexer0.setXPath("Nh>bqHm%gGs7Ds^;q7P");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("bqHm", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Ex%");
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer2.slashes();
      assertEquals("E", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Nh>bqHm%gGs7Ds^;q7P", token5.getTokenText());
      
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("S[");
      xPathLexer3.colon();
      XPathLexer xPathLexer4 = new XPathLexer("S[");
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("g", token7.getTokenText());
      
      xPathLexer3.and();
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals("G", token9.getTokenText());
      
      Token token10 = xPathLexer1.equals();
      assertEquals("s", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer4.colon();
      assertEquals("S", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5129216981971376
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#**Ax", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[#UH");
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("){#**Ax");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer2.not();
      assertEquals(")", token5.getTokenText());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer2.star();
      assertEquals("{", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer5 = new XPathLexer("){#**Ax");
      Token token7 = xPathLexer5.at();
      assertEquals(16, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
      
      Token token8 = xPathLexer5.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftParen();
      assertEquals("#", token9.getTokenText());
      
      Token token10 = xPathLexer4.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer5.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("#", token11.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.077262348422003
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.not();
      xPathLexer1.colon();
      xPathLexer0.relationalOperator();
      xPathLexer1.at();
      xPathLexer1.at();
      xPathLexer1.star();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3859819329439445
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("BI)^O16u%@8Y+u4");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("BI", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token1 = xPathLexer0.plus();
      assertEquals("E", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0531380634780887
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" ??o.");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) ( ?)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?o.", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.plus();
      assertEquals("?", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.342495383122977
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f]u JqW_8cIfRF2,J");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("f]u JqW_8cIfRF2,J");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("f]u JqW_8cIfRF2,J");
      xPathLexer0.mod();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer3.star();
      assertEquals("f", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer3.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.slashes();
      assertEquals("u", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      Token token6 = xPathLexer3.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("u", token6.getTokenText());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals("f", token7.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.07075486277651
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      XPathLexer xPathLexer1 = new XPathLexer("gH>x?p\"_p");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("g", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.rightParen();
      Token token1 = xPathLexer0.comma();
      assertEquals("~", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("4", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals("?", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("p\"_p", token6.getTokenText());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals("p\"", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("PPdwCbS5:L( `");
      xPathLexer0.colon();
      Token token8 = xPathLexer1.star();
      assertEquals("_", token8.getTokenText());
      
      xPathLexer0.at();
      Token token9 = xPathLexer1.not();
      assertEquals("p", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer2.colon();
      assertEquals("P", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer1.at();
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      xPathLexer1.star();
      Token token12 = xPathLexer1.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer1.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6113523301349248
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      Token token0 = xPathLexer0.dots();
      assertEquals(")", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("{", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("){#**Ax");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.setXPath("@NNNV79*n+_6D");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(16, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer1.mod();
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals("V", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5973023461132803
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1073518014056054
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("1Z&Bofe dgq@^C[k");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.007083097355422
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("){#**Ax");
      Token token0 = xPathLexer1.at();
      assertEquals(")", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer1.setXPath("MY8<Qh");
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("MY8", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer2.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("{", token9.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer3.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer3.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer4.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer0.not();
      assertEquals("#", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4399896786566595
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("^qTJc:");
      XPathLexer xPathLexer4 = new XPathLexer(":=pG%=$4I");
      Token token1 = xPathLexer3.nextToken();
      assertEquals("^qTJc:", token1.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("S[");
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer(":=pG%=$4I");
      Token token2 = xPathLexer7.leftBracket();
      assertEquals(":", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer7.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token3 = xPathLexer8.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.dollar();
      Token token4 = xPathLexer4.dollar();
      assertEquals(":", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer1.div();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("pG", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7797427147574854
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" bpn");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("bpn", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9974900996870761
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("18Org8DdH");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("18", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("rg8DdH", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.or();
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.dollar();
      Token token6 = xPathLexer0.at();
      assertEquals("r", token6.getTokenText());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer4.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9589170938237352
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.doubleColon();
      xPathLexer1.setXPath(") (");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("!");
      xPathLexer1.whitespace();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer("&tsUK|je>pu}l`y>Uzp");
      xPathLexer5.pipe();
      xPathLexer5.comma();
      xPathLexer4.star();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer5.relationalOperator();
      xPathLexer3.slashes();
      xPathLexer0.equals();
      xPathLexer1.not();
      xPathLexer4.nextToken();
      Token token0 = xPathLexer4.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4434641622486728
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u JqW_8cIfRF2,J");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("_kh9J4cJmu");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.whitespace();
      xPathLexer2.setXPath(".WT4$^AVK;F@D+");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.805130700293017
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O2)by");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.setXPath("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer1.leftParen();
      xPathLexer2.setXPath(")");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("b", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("O2)by");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer5.dollar();
      assertEquals("O", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer4.plus();
      assertEquals(5, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer7.slashes();
      assertEquals(11, token12.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("MY/0");
      xPathLexer8.colon();
      Token token13 = xPathLexer8.colon();
      assertEquals("Y", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer7.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9246717608414534
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      XPathLexer xPathLexer1 = new XPathLexer("gH>x?p\"_p");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer0.comma();
      Token token2 = xPathLexer1.minus();
      assertEquals(">", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.setXPath("`xKEM");
      Token token3 = xPathLexer1.nextToken();
      assertEquals("`xKEM", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("4", token4.getTokenText());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals("`", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer1.comma();
      assertEquals("x", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer2.and();
      Token token8 = xPathLexer2.dollar();
      assertEquals("w", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals("K", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8252133549022154
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer0.setXPath(") (");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer(";4\"JkRhA+/VY3Vkuk");
      xPathLexer1.operatorName();
      xPathLexer2.number();
      xPathLexer0.setXPath("Ex%");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.literal();
      xPathLexer1.mod();
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      XPathLexer xPathLexer6 = new XPathLexer("!");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("Ex%");
      xPathLexer1.slashes();
      Token token0 = xPathLexer4.div();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7043261534271243
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.number();
      token0.toString();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer1.notEquals();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("WZTm~jn5B^N|l)bP9l");
      Token token4 = xPathLexer0.colon();
      assertEquals("p", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("~", token5.getTokenText());
      
      xPathLexer2.at();
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("W", token6.getTokenText());
      
      Token token7 = xPathLexer3.leftParen();
      assertEquals("Z", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (30) ()");
      Token token8 = xPathLexer2.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("D<x.");
      Token token9 = xPathLexer5.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("D", token9.getTokenText());
      
      Token token10 = xPathLexer5.nextToken();
      assertEquals(7, token10.getTokenType());
      
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("[ ", token11.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.18217861466018
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dollar();
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":=pG%=$4I");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("pG", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.setXPath("MY8<Qh");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("MY8<Qh", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer2.identifier();
      Token token6 = xPathLexer0.slashes();
      assertEquals("M", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("Y8", token7.getTokenText());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.colon();
      Token token11 = xPathLexer1.colon();
      assertEquals(":", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("h", token12.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7890969978296063
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.setXPath("(`#78<=N&<v8+1`!");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("aFA0");
      xPathLexer1.dots();
      xPathLexer1.consume((-682));
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.122178724566615
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.not();
      xPathLexer1.colon();
      xPathLexer0.relationalOperator();
      xPathLexer1.at();
      xPathLexer1.at();
      xPathLexer1.star();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.099702972289076
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("'BJ/RLF21`");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6277104863726697
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("S[");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("S[");
      XPathLexer xPathLexer5 = new XPathLexer("+8|Kd5`>*&z|");
      xPathLexer0.slashes();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer3.mod();
      XPathLexer xPathLexer7 = new XPathLexer("eawY;)>p;dP{Tm9p7G=");
      xPathLexer2.notEquals();
      xPathLexer7.star();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9141073000378006
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      xPathLexer0.leftBracket();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7619814158279263
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.number();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("-", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("~4\"`p|ZUKvucy-", token4.getTokenText());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("4\"", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("fL/-@Z68^Y");
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token6 = xPathLexer1.pipe();
      assertEquals("f", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("p", token7.getTokenText());
      
      xPathLexer1.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token8 = xPathLexer3.dollar();
      assertEquals("w", token8.getTokenText());
      
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer("]WvJ|Uu!SR0nzfWb?~");
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer3.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("-", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer0.at();
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("-", token11.getTokenText());
      
      Token token12 = xPathLexer2.star();
      assertEquals("w", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer3.notEquals();
      assertEquals(22, token13.getTokenType());
      assertEquals("0p", token13.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.055159944853676
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("j2eLObD'4-8|%<");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.dots();
      xPathLexer1.slashes();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.339118139100516
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      String string0 = token1.toString();
      assertEquals("[ (5) (o)", string0);
      
      xPathLexer0.setXPath("|-Mt!|I*Ua](;p2I!lt");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("-M", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("|-Mt!|I*Ua](;p2I!lt");
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token5);
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer3.leftBracket();
      assertEquals("|", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5150153600707483
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":=pG%=$4I");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("p", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("MY8<Qh");
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer3.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer2.at();
      assertEquals("M", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("lZJ;C$%pLL");
      Token token6 = xPathLexer4.slashes();
      assertEquals("l", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      xPathLexer3.equals();
      Token token7 = xPathLexer4.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("Y", token8.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.1770814215249494
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("Dk/");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("){#**Ax");
      xPathLexer1.colon();
      xPathLexer1.comma();
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9934652622280622
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.setXPath("1A,3");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("1A,3");
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer2.identifier();
      xPathLexer2.operatorName();
      xPathLexer2.colon();
      xPathLexer2.relationalOperator();
      xPathLexer2.mod();
      xPathLexer2.or();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9346800827272845
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      XPathLexer xPathLexer1 = new XPathLexer("5gugL/H&Vub~");
      XPathLexer xPathLexer2 = new XPathLexer("5gugL/H&Vub~");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("5gugL/H&Vub~");
      Token token1 = xPathLexer3.rightParen();
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer1.comma();
      assertEquals("5", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer3.nextToken();
      xPathLexer3.nextToken();
      Token token3 = xPathLexer3.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer3.slashes();
      assertEquals("&", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer3.nextToken();
      assertEquals("Vub", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("gu", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer2.colon();
      xPathLexer2.star();
      xPathLexer2.at();
      Token token7 = xPathLexer1.not();
      assertEquals("g", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals("u", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer3.at();
      assertEquals("~", token9.getTokenText());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("gH>x?p\"_p");
      Token token11 = xPathLexer5.star();
      assertEquals("g", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer4.notEquals();
      assertEquals("5g", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer3.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0355002822473947
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.setXPath("dPS'");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("dPS", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("S[");
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer2.and();
      xPathLexer0.dollar();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer2.at();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9998035447557687
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("er", token6.getTokenText());
      
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("fL/-@Z68^Y");
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer("fL/-@Z68^Y");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.pipe();
      Token token8 = xPathLexer3.plus();
      assertEquals("f", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.colon();
      Token token11 = xPathLexer0.colon();
      assertEquals("k", token11.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token12 = xPathLexer0.not();
      assertEquals("e", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer8.colon();
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token14 = xPathLexer2.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token15 = xPathLexer1.equals();
      assertEquals(21, token15.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8988236364130162
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("<CFB#X{&-q36J");
      xPathLexer1.doubleColon();
      xPathLexer0.not();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer("iOgc4y<#");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dots();
      xPathLexer2.plus();
      xPathLexer2.at();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("r,CR{}*t$2u`p");
      xPathLexer5.slashes();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer0.colon();
      xPathLexer3.not();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.colon();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer2.equals();
      Token token0 = xPathLexer10.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7181543812958906
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("gH>x?p\"_p");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer1.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("yyfPwsMfMj+f(v6_UVD");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("H", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("By?r5WWHNC&lg 7`H");
      Token token4 = xPathLexer2.slashes();
      assertEquals("B", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer1.mod();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("f(", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("v", token6.getTokenText());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("x", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("mEL/,Otu");
      xPathLexer0.colon();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("U", token9.getTokenText());
      
      xPathLexer3.at();
      Token token10 = xPathLexer1.at();
      assertEquals("?", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.colon();
      assertEquals("y", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.201931450020794
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("0", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("~", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6820087008919185
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifier();
      xPathLexer1.slashes();
      xPathLexer1.doubleColon();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-3486));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6504842320591266
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.at();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("6vH05^");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer("iOgc4y<#");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("vH", token2.getTokenText());
      
      Token token3 = xPathLexer4.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer3.pipe();
      assertEquals("i", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("6vH05^");
      Token token6 = xPathLexer5.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(")");
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer1.at();
      Token token8 = xPathLexer6.at();
      assertEquals("6", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals("0", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.408474953100661
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.at();
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("#", token2.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      Token token3 = xPathLexer0.slashes();
      assertEquals("*", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("Ax", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.at();
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer3.at();
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.2968194101044404
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer1.not();
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("r", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.colon();
      Token token6 = xPathLexer1.colon();
      assertEquals("m", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer3.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("en", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer3.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.0606295615520374
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      XPathLexer xPathLexer1 = new XPathLexer("gH>x?p\"_p");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      xPathLexer1.star();
      xPathLexer1.rightParen();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("-", token3.getTokenText());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals("p\"", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.colon();
      Token token6 = xPathLexer1.star();
      assertEquals("_", token6.getTokenText());
      
      xPathLexer0.at();
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("p", token7.getTokenText());
      
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer1.at();
      xPathLexer1.at();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5042980818665366
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8921564719608859
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(">b", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("T");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("qHm%gGs7Ds^;q7P", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      Token token3 = xPathLexer2.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer4.star();
      assertEquals("N", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer3.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer3.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("T");
      Token token8 = xPathLexer6.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.168854790696105
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("pG", token2.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("6vH05^");
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("fL/-@Z68^Y");
      XPathLexer xPathLexer4 = new XPathLexer("5;");
      Token token3 = xPathLexer4.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("5;", token3.getTokenText());
      
      Token token4 = xPathLexer4.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("%", token5.getTokenText());
      
      Token token6 = xPathLexer4.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("@");
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("=", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer0.colon();
      assertEquals("$", token8.getTokenText());
      
      xPathLexer6.colon();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token9 = xPathLexer7.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer6.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer8.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer8.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token13 = xPathLexer4.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer8.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.0125717752097763
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("i", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Km", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("\"", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer3.identifier();
      Token token6 = xPathLexer3.slashes();
      assertEquals("!", token6.getTokenText());
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer2.star();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer1.rightParen();
      assertEquals(2, token14.getTokenType());
      
      Token token15 = xPathLexer2.minus();
      assertEquals(6, token15.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9388773410080045
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      XPathLexer xPathLexer1 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.rightParen();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.9974900996870761
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("18Org8DdH");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("18", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.equals();
      assertEquals("O", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.or();
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.dollar();
      Token token6 = xPathLexer0.at();
      assertEquals("g", token6.getTokenText());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer4.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.0381945598480735
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals("{", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      String string0 = token2.toString();
      assertEquals("[ (3) (#)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("**", token4.getTokenText());
      
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("Ax", token6.getTokenText());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.781538351330556
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.or();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("gu", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("g", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.79895654429897
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      Token token0 = xPathLexer0.comma();
      assertEquals("o", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("=noF{G[ %o");
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("erken.saxpath.XPatjLeyer", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("=noF{G[ %o");
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.at();
      assertEquals("o", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer5.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.847388056172665
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      XPathLexer xPathLexer1 = new XPathLexer("gH>x?p\"_p");
      Token token0 = xPathLexer1.dots();
      assertEquals("g", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("H", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.relationalOperator();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Yx5wK]");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("Yx5wK]");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer4.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("com.werken.saxpath.Token", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer0.rightParen();
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("-0p", token5.getTokenText());
      
      xPathLexer5.slashes();
      Token token6 = xPathLexer5.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals("~", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer6.colon();
      Token token10 = xPathLexer2.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.216185924908926
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.isIdentifierChar('P');
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("nk-iY{f");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("nk-iY", token3.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("Y(0;!D?kJ;V");
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.0207612625912232
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w-0p", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals("\"", token5.getTokenText());
      
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer1.at();
      Token token8 = xPathLexer4.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer4.dollar();
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.053347699384881
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",9K~)g0l7i6+`z_5");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token0 = xPathLexer0.colon();
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer1.at();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.comma();
      assertEquals("~", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(")", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("g0l7i6+`z_5", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("g", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer2.at();
      xPathLexer2.not();
      xPathLexer2.colon();
      xPathLexer2.relationalOperator();
      xPathLexer3.at();
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals("0", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.4423199911786313
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("T");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0462848288307334
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.colon();
      assertEquals("=", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("p", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('D');
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      boolean boolean1 = xPathLexer0.hasMoreChars();
      assertTrue(boolean1 == boolean0);
      
      char char0 = xPathLexer1.LA(3);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.6858241785100394
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      XPathLexer xPathLexer1 = new XPathLexer("gH>x?p\"_p");
      Token token0 = xPathLexer1.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer1.relationalOperator();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Yx5wK]");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("Yx5wK]");
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("w-0p", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("gH>x?p\"_p");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("0qF.! {rr");
      Token token4 = xPathLexer6.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      Token token5 = xPathLexer5.equals();
      assertEquals("g", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("?", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals("]", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer6.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7100777377470355
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){#**Ax");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("r");
      XPathLexer xPathLexer3 = new XPathLexer("jBc,(kEG-ccywe>|t");
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer2.at();
      assertEquals("r", token3.getTokenText());
      
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer3.leftParen();
      assertEquals("j", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("ye");
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("*", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("r");
      Token token7 = xPathLexer4.nextToken();
      assertEquals("ye", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer4.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.705793161043728
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.getPreviousToken();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.not();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.7381232836840153
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ex", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("%", token1.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("Ex%");
      Token token2 = xPathLexer1.slashes();
      assertEquals("E", token2.getTokenText());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("x%", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.6930791800434584
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer1.number();
      xPathLexer0.setXPath("(`#78<=N&<v8+1`!");
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("]|F");
      xPathLexer0.dots();
      xPathLexer0.consume((-682));
      xPathLexer2.slashes();
      xPathLexer1.mod();
      xPathLexer1.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.consume((-4186));
      Token token0 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8866126156984024
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.or();
      assertNull(token2);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.818431867045634
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u JqW_8cIfRF2,J");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("JqW_8cIfRF2", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("_kh9J4cJmu");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("_kh9J4cJmu", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("J", token4.getTokenText());
      
      xPathLexer1.nextToken();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_kh9J4cJmu");
      Token token7 = xPathLexer3.at();
      assertEquals("_", token7.getTokenText());
      
      xPathLexer1.not();
      xPathLexer0.colon();
      xPathLexer3.relationalOperator();
      xPathLexer2.at();
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer4.not();
      assertEquals("c", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.0908273508286084
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-2120));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.5718413263476867
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ")";
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.consume((-1341));
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5867721948310423
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Y');
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('>');
      assertFalse(boolean1 == boolean0);
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.not();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5447390072117657
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.pipe();
      xPathLexer2.and();
      xPathLexer2.dollar();
      xPathLexer2.dollar();
      xPathLexer0.at();
      xPathLexer2.equals();
      xPathLexer1.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.982122242357265
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.setXPath("tlFSbaTFAnj-)qN%}");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.at();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.6243774049576098
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Nh>bqHm%gGs7Ds^;q7P");
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("S[");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("S[");
      XPathLexer xPathLexer5 = new XPathLexer("+98|Kd5`>*&|");
      xPathLexer5.minus();
      xPathLexer5.plus();
      XPathLexer xPathLexer6 = new XPathLexer(">g+;|pQ| GE");
      xPathLexer5.or();
      XPathLexer xPathLexer7 = new XPathLexer(">g+;|pQ| GE");
      xPathLexer7.comma();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("3N$tA_(|:p/");
      xPathLexer5.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer6.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0249187243473301
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer0.doubleColon();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer2.setXPath("s,CR{*t$2u`p");
      String string0 = null;
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.662638119937535
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.equals();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.consume(2105);
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.colon();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.literal();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.5755515135602822
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume(1452);
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.consume(0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token5);
      assertEquals(15, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.9355156647281895
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HKwepXdx_j2u");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("HKwepXdx_j2u", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.079010519572117
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd!*PiKm\"");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.not();
      xPathLexer1.colon();
      xPathLexer0.relationalOperator();
      xPathLexer1.at();
      xPathLexer1.at();
      xPathLexer1.equals();
      xPathLexer1.colon();
      Token token1 = xPathLexer1.not();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7355744847555163
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" ??o.");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3893621641822782
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("u JqW_8cIfRF2,J");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer3.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("#i0V IZ2,p16_h_nr");
      Token token4 = xPathLexer4.slashes();
      assertEquals("#", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer4.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("i", token5.getTokenText());
      
      Token token6 = xPathLexer4.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("0", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4047402974321563
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("~~u^<<0hHX+)p");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer3.colon();
      Token token4 = xPathLexer2.colon();
      assertEquals("~", token4.getTokenText());
      
      Token token5 = xPathLexer2.not();
      assertEquals("~", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer3.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer3.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.31085710053299
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" ??o.");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) ( ?)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("0,2qSxRG!<A");
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(",", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("2q", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("S", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("x", token6.getTokenText());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("R", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3184979024692978
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('A');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.0824052912466424
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u JqW_8cIfRF2,J");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("u", token0.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("u JqW_8cIfRF2,J");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("JqW_8cIfRF2,J", token4.getTokenText());
      
      Token token5 = xPathLexer1.colon();
      assertEquals("J", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("u JqW_8cIfRF2,J");
      Token token7 = xPathLexer3.at();
      assertEquals("u", token7.getTokenText());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer2.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.1202862539706353
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NUl$~ ,HP''F");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer3.relationalOperator();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer3.at();
      assertEquals(")", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("]%\"!'(c");
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token2 = xPathLexer3.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer6.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("U", token4.getTokenText());
      
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.9120659168821539
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      XPathLexer xPathLexer1 = new XPathLexer("5gugL/H&Vub~");
      XPathLexer xPathLexer2 = new XPathLexer("5gugL/H&Vub~");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer3.rightParen();
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      xPathLexer3.nextToken();
      xPathLexer3.nextToken();
      Token token2 = xPathLexer3.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("&", token3.getTokenText());
      
      xPathLexer3.nextToken();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("gu", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("5gugL/H&Vub~");
      Token token5 = xPathLexer2.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      xPathLexer2.star();
      xPathLexer2.at();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("g", token6.getTokenText());
      
      xPathLexer0.at();
      Token token7 = xPathLexer3.at();
      assertEquals("~", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("5", token8.getTokenText());
      
      Token token9 = xPathLexer3.getPreviousToken();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.3119369527637375
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.pipe();
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.dots();
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token3 = xPathLexer5.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.colon();
      xPathLexer5.colon();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer4.colon();
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer7.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer8.equals();
      assertEquals(21, token7.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.142018005851
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("-", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("p", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("~", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("4\"", token5.getTokenText());
      
      xPathLexer0.dollar();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("p", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("|", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.consume(1777);
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer1.colon();
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("K", token12.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6532185661664855
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer("om.werken.saxpath.XPatjLeyer");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.rightParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer2.identifier();
      xPathLexer7.slashes();
      xPathLexer5.doubleColon();
      xPathLexer3.dollar();
      xPathLexer6.plus();
      xPathLexer7.pipe();
      XPathLexer xPathLexer8 = new XPathLexer("PJ1TwGBbXL~RIN,~");
      Token token0 = xPathLexer2.colon();
      xPathLexer6.star();
      xPathLexer2.at();
      xPathLexer6.at();
      xPathLexer5.not();
      xPathLexer6.getPreviousToken();
      xPathLexer5.currentPosition();
      Token token1 = xPathLexer7.identifierOrOperatorName();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.3930475378117984
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" ??o.");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5290264732191288
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      Token token1 = xPathLexer1.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(110);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.939629374583593
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNotNull(token1);
      assertEquals("m.werken.saxpath.T", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.star();
      assertEquals("k", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("n", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.7195138154786442
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u JqW_8cIfRF2,J");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("_kh9J4cJmu");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.star();
      xPathLexer1.at();
      xPathLexer1.relationalOperator();
      xPathLexer4.slashes();
      xPathLexer2.equals();
      xPathLexer1.not();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.5292716563802164
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_Z48'K<.>@d");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.161595300560473
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.12882874229864
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.number();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.not();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("~", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
      
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer1.plus();
      Token token5 = xPathLexer1.plus();
      assertEquals("-", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals("`", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer1.or();
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      assertEquals("p", token10.getTokenText());
      
      Token token11 = xPathLexer1.not();
      assertEquals("~", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer2.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer1.minus();
      assertEquals(6, token13.getTokenType());
      assertEquals("4", token13.getTokenText());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.193423863880811
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" ??o.");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.and();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) ( ?)");
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.relationalOperator();
      xPathLexer1.slashes();
      xPathLexer1.div();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.1198935195572823
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("EA@VFsME.");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("EA@VFsME.");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer3.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer2.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("A", token3.getTokenText());
      
      Token token4 = xPathLexer2.equals();
      assertEquals("@", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer2.not();
      assertEquals("V", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
  }
}
