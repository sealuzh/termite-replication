/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 21:25:00 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ")?\"M*'";
      StackTraceElement stackTraceElement0 = new StackTraceElement(")?\"M*'", "1", "deleteNode", 1182);
      StackTraceElement stackTraceElement1 = new StackTraceElement("ce=Bine+weF}J", "{u3=e?'=", "deleteNode", 3);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      stackTraceElementArray0[0] = stackTraceElement0;
      Integer integer0 = new Integer(3);
      Object object0 = new Object();
      MessageFormatter.buildList(stackTraceElementArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string1 = null;
      MockThrowable mockThrowable0 = new MockThrowable("hi there");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError((String) null, mockThrowable0);
      linkedList0.add((Object) messageFormatter_LoadBundleError0);
      messageFormatter0.createLoadException(linkedList0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      messageFormatter0.listResources("critical.question.saveFailedUnknown", classLoader0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8937277100473913
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("/Edit");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (-4612));
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream((InputStream) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      messageFormatter1.createLoadException(linkedList0);
      MessageFormatter messageFormatter2 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage("/", messageFormatter2.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[13];
      Object object0 = new Object();
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[0] = object5;
      Object[] objectArray1 = new Object[7];
      objectArray1[0] = object3;
      objectArray1[1] = object1;
      objectArray1[2] = object3;
      objectArray1[3] = object5;
      objectArray1[4] = object2;
      objectArray0[12] = object3;
      objectArray1[6] = object5;
      String string0 = "java.class";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java.class");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "+W+QCq|T)OW";
      String string1 = "resources.messages.standard";
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "resources.messages.standard";
      objectArray0[1] = (Object) "resources.messages.standard";
      objectArray0[2] = (Object) "+W+QCq|T)OW";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("+W+QCq|T)OW", objectArray0[1], objectArray0[0], (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "+W+QCq|T)OW";
      String string1 = "resources.messages.s#andard";
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "resources.messages.s#andard";
      objectArray0[1] = (Object) "resources.messages.s#andard";
      objectArray0[2] = (Object) "+W+QCq|T)OW";
      objectArray0[2] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.s#andard");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "+W+QCq|T)OW";
      String string1 = "resources.messages.s#andard";
      ApplicationException applicationException0 = new ApplicationException("+W+QCq|T)OW", "+W+QCq|T)OW");
      messageFormatter0.myLastException = (Throwable) applicationException0;
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "+W+QCq|T)OW";
      String string1 = "resources.messages.standard";
      Object[] objectArray0 = new Object[4];
      objectArray0[1] = (Object) "resources.messages.standard";
      objectArray0[2] = (Object) "+W+QCq|T)OW";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "resources.messages.standard");
      objectArray0[2] = (Object) null;
      Object object0 = new Object();
      Locale locale0 = new Locale("SP}", "+W+QCq|T)OW", "resources.messages.standard");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("+W+QCq|T)OW", object0, (Object) locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6981176467513301
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("/Edit");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream((InputStream) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      messageFormatter0.formatMessage("/Edit", messageFormatter1.DEFAULT_BUNDLE_PATH);
      try { 
        messageFormatter0.getMessage("^2", (Object[]) messageFormatter1.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Integer[] integerArray0 = new Integer[1];
      Integer[] integerArray1 = linkedList0.toArray(integerArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, integerArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Object object0 = new Object();
      Object[] objectArray0 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("9/=Z?", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      LinkedList<PropertyResourceBundle> linkedList0 = new LinkedList<PropertyResourceBundle>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(true);
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.clearAssertionStatus();
      ClassLoader.getSystemClassLoader();
      classLoader1.setPackageAssertionStatus((String) null, false);
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader2.getParent();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader2.getParent();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      linkedList1.add((Object) sequenceInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.SequenceInputStream cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte)3;
      byteArray0[2] = (byte) (-125);
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, (String) null, mockThrowable0, "; and resource path: ", (Object) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      messageFormatter0.myLastException = (Throwable) applicationException0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus("resources.messages.standard", false);
      classLoader0.setClassAssertionStatus((String) null, true);
      classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertSame(throwable0, applicationException0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2048));
      Integer integer1 = new Integer((-2048));
      Integer integer2 = new Integer((-2048));
      Integer integer3 = new Integer((-2048));
      Integer integer4 = new Integer((-25));
      Integer integer5 = new Integer((-2048));
      Integer integer6 = new Integer((-2040109463));
      Integer[] integerArray0 = new Integer[8];
      integerArray0[1] = integer3;
      integerArray0[2] = integer4;
      integerArray0[1] = integer0;
      integerArray0[6] = integer0;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "|n1\"VLCH=qo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader1.getParent();
      classLoader0.setPackageAssertionStatus("", false);
      classLoader0.setPackageAssertionStatus("\"", false);
      classLoader1.setClassAssertionStatus("\"", false);
      classLoader1.setDefaultAssertionStatus(false);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader classLoader3 = classLoader2.getParent();
      classLoader3.clearAssertionStatus();
      classLoader3.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("\"", false);
      classLoader3.clearAssertionStatus();
      classLoader3.setDefaultAssertionStatus(false);
      classLoader2.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader1.getParent();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader2.getParent();
      classLoader0.setPackageAssertionStatus("\"", false);
      classLoader2.setPackageAssertionStatus("\"", false);
      classLoader0.setDefaultAssertionStatus(false);
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";.8Yt,5bW[YEttt");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Integer integer0 = new Integer((-2048));
      Integer integer1 = new Integer((-2048));
      Integer integer2 = new Integer((-2048));
      Integer integer3 = new Integer(14);
      Integer integer4 = new Integer(179);
      Integer integer5 = new Integer((-11));
      Integer integer6 = new Integer((-11));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) linkedList2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e-H^");
      Integer integer0 = new Integer((-2048));
      Integer integer1 = new Integer((-2048));
      Integer integer2 = new Integer((-2048));
      Integer integer3 = new Integer((-2048));
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList2.add((Object) null);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hi there");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hi there");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter1.tryLoad("", "odJ[xq`zOtS;$Ghn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[] objectArray0 = new Object[13];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object0;
      Object object2 = new Object();
      Object object3 = new Object();
      objectArray0[11] = object3;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      Object[] objectArray0 = new Object[6];
      Object object1 = new Object();
      objectArray0[0] = object1;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "0z/Zfp}'>]";
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) list0;
      objectArray0[5] = (Object) list0;
      messageFormatter0.formatMessage("resources.messages.standard", objectArray0, (ResourceBundle) propertyResourceBundle0);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.GERMAN;
      List<String> list1 = ResourceBundle.Control.FORMAT_CLASS;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      Object[] objectArray0 = new Object[0];
      messageFormatter0.formatMessage("l/|BnbTvG|!3[l", objectArray0, (ResourceBundle) propertyResourceBundle0);
      Locale locale0 = null;
      try {
        locale0 = new Locale((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[3];
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("2d)bt0bDH", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = new LinkedList<String>();
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("o>OBB;b(m|");
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable1 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable2 = new MockThrowable("o>OBB;b(m|", mockThrowable0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      char[] charArray0 = new char[8];
      charArray0[1] = '6';
      charArray0[2] = '\"';
      charArray0[3] = '\u001A';
      charArray0[4] = ';';
      charArray0[5] = 't';
      charArray0[6] = '\u0000';
      charArray0[7] = ']';
      mockPrintStream0.println(charArray0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(bufferedOutputStream0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      MockThrowable.replacement_printStackTrace((Throwable) null, (PrintWriter) mockPrintWriter0);
      mockPrintWriter1.print('-');
      mockThrowable2.printStackTrace((PrintWriter) mockPrintWriter1);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.PRC;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list0, (List<String>) null, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("K");
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable1 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable2 = new MockThrowable("K", mockThrowable0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, "");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "resources.messages.standard");
      ApplicationException applicationException1 = new ApplicationException("D'");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("<undefined>", applicationException1);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "V]iQuan;_X*", messageFormatter_LoadBundleError0, applicationException1);
      applicationException1.getLocalizedMessage();
      applicationException2.getSuppressed();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("D'", "<undefined>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      StackTraceElement stackTraceElement0 = new StackTraceElement("hg%Z=", "As)", "B/BX=", 3);
      StackTraceElement stackTraceElement1 = new StackTraceElement("B/BX=", "1", "deleteNode", 1156);
      StackTraceElement stackTraceElement2 = new StackTraceElement("ce=TineweF}J", "hg%Z=", "deleteNode", 1);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[27];
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.getLastException();
      MockThrowable mockThrowable0 = new MockThrowable(".z=`f%G", (Throwable) null);
      StackTraceElement stackTraceElement3 = new StackTraceElement(".%UtQ~A'", "", "hg%Z=", (-1526));
      // Undeclared exception!
      try { 
        mockThrowable0.setStackTrace(stackTraceElementArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // stackTrace[0]
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockThrowable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-43);
      byteArray0[3] = (byte) (-123);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream1);
      sequenceInputStream1.read(byteArray0);
      sequenceInputStream2.read(byteArray0);
      sequenceInputStream1.read(byteArray0);
      Object object0 = new Object();
      sequenceInputStream2.skip(0L);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) null, (Object) null, (Object) sequenceInputStream2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "ws)");
      applicationException0.getCause();
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      Locale locale0 = Locale.ROOT;
      Throwable[] throwableArray0 = applicationException0.getSuppressed();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List list0 = MessageFormatter.buildList(throwableArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("B", (Object) pipedInputStream0, (Object) pipedInputStream2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader1.getParent();
      classLoader0.setPackageAssertionStatus("hi there", false);
      classLoader0.setPackageAssertionStatus("/", false);
      classLoader1.setClassAssertionStatus("/", false);
      classLoader1.setDefaultAssertionStatus(false);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader classLoader3 = classLoader2.getParent();
      classLoader3.clearAssertionStatus();
      classLoader3.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("/", false);
      classLoader3.clearAssertionStatus();
      classLoader3.setDefaultAssertionStatus(false);
      classLoader2.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader1.getParent();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader2.getParent();
      classLoader0.setPackageAssertionStatus("/", false);
      classLoader2.setPackageAssertionStatus("/", false);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader2.setClassAssertionStatus("Ta", true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("K");
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable1 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable2 = new MockThrowable("K", mockThrowable0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, true);
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable0, (PrintStream) mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(bufferedOutputStream0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      mockPrintWriter1.print('m');
      mockThrowable1.printStackTrace((PrintWriter) mockPrintWriter0);
      Integer integer0 = new Integer(2906);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus((String) null, false);
      classLoader1.getParent();
      classLoader0.setPackageAssertionStatus("", false);
      classLoader0.setPackageAssertionStatus("\"", false);
      classLoader1.setClassAssertionStatus("\"", false);
      classLoader1.setDefaultAssertionStatus(false);
      classLoader0.setClassAssertionStatus("UST7|1gf6y", false);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      classLoader3.clearAssertionStatus();
      classLoader3.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("\"", false);
      classLoader3.clearAssertionStatus();
      classLoader3.setDefaultAssertionStatus(false);
      classLoader2.clearAssertionStatus();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader2.setDefaultAssertionStatus(true);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus((String) null, true);
      classLoader2.getParent();
      classLoader0.setPackageAssertionStatus("\"", false);
      classLoader2.setPackageAssertionStatus("\"", false);
      classLoader0.setDefaultAssertionStatus(false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.622827904722017
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode2);
      Locale locale0 = Locale.CHINESE;
      locale0.hasExtensions();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list2, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("K");
      ApplicationException applicationException1 = new ApplicationException("K");
      applicationException1.toString();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement("K", "K", "org.evosuite.runtime.mock.java.lang.MockThrowable: K", (-2013265917));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("eo+<y", "eo+<y", "cm#G6o.Iwc^h{vP", (-2013265917));
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("eo+<y", "org.evosuite.runtime.mock.java.lang.MockThrowable: K", "K", (-2013265917));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("eo+<y", "eo+<y", "K", (-2013265917));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("com.lts.appliction.prompt.startup.continueDespitcCommandLineError", "&G$d|Q\"&$", "QeN5S1wfZ+g9)ty6", (-2013265917));
      stackTraceElementArray0[5] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("(5Zk&:8%aOS#%,", "cm#G6o.Iwc^h{vP", "H2(T<+'0<kbJvm7Nu", (-2013265917));
      stackTraceElementArray0[5] = stackTraceElement2;
      stackTraceElementArray0[6] = stackTraceElement0;
      StackTraceElement stackTraceElement6 = new StackTraceElement(".6@R", ".6@R", (String) null, (-2013265917));
      stackTraceElementArray0[7] = stackTraceElement6;
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.310106597280475
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Integer integer0 = new Integer((-2048));
      Integer integer1 = new Integer((-2048));
      Integer integer2 = new Integer((-2048));
      Integer integer3 = new Integer((-2048));
      Integer integer4 = new Integer((-25));
      Integer integer5 = new Integer((-501));
      Integer integer6 = new Integer((-2040109463));
      Integer[] integerArray0 = new Integer[9];
      integerArray0[1] = integer2;
      Integer integer7 = new Integer((int) integerArray0[1]);
      integerArray0[2] = integer7;
      integerArray0[2] = integer0;
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("P", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable1 = new MockThrowable((Throwable) null);
      MockThrowable mockThrowable2 = new MockThrowable("o>OBB;Ob(m|", mockThrowable0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2906);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, true);
      MockPrintStream mockPrintStream1 = new MockPrintStream(byteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream1);
      MockPrintStream mockPrintStream2 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintStream0);
      byteArrayOutputStream0.close();
      Integer integer0 = new Integer((-2090970917));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%g");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Vt6vA#c[NA|?uU?,");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Vt6vA#c[NA|?uU?,");
      messageFormatter0.temp();
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Integer integer0 = new Integer((-2048));
      Integer integer1 = new Integer((-2048));
      Integer integer2 = new Integer((-2048));
      Integer integer3 = new Integer((-2048));
      Integer integer4 = new Integer((-25));
      Integer integer5 = new Integer((-501));
      Integer integer6 = new Integer((-2040109463));
      Integer[] integerArray0 = new Integer[9];
      integerArray0[1] = integer2;
      Integer integer7 = new Integer((int) integerArray0[1]);
      integerArray0[2] = integer7;
      integerArray0[2] = integer0;
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("{?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("Va");
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getNoFallbackControl(list1);
      List<String> list2 = resourceBundle_Control1.getFormats(".");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) list2, (Object) resourceBundle_Control1, (Object) resourceBundle_Control1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2906);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(bufferedOutputStream0);
      byteArrayOutputStream0.close();
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '|';
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1);
      mockPrintWriter0.print(charArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }
}
